digraph  {
n17 [label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", span=""];
n0 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="Entry QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="44-44"];
n1 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="_universeSettings = universeSettings", span="47-47"];
n2 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="_selector = selector", span="48-48"];
n3 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="Exit QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="44-44"];
n4 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="Entry QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="58-58"];
n5 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="_universeSettings = universeSettings", span="61-61"];
n6 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="_selector = selector", span="62-62"];
n7 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", label="Exit QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="58-58"];
n8 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", label="Entry QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="71-71"];
n9 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", label="return _selector(data.Data.OfType<CoarseFundamental>());", span="73-73"];
n10 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", label="Exit QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="71-71"];
n11 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n12 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n13 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", label="Entry QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="81-81"];
n14 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", label="return new SubscriptionDataConfig(typeof (CoarseFundamental),\r\n                symbol: symbol,\r\n                resolution: Resolution.Daily,\r\n                dataTimeZone: TimeZones.NewYork,\r\n                exchangeTimeZone: TimeZones.NewYork,\r\n                fillForward: false,\r\n                extendedHours: false,\r\n                isInternalFeed: true,\r\n                isCustom: false,\r\n                tickType: null,\r\n                isFilteredSubscription: false\r\n                );", span="83-94"];
n15 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", label="Exit QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="81-81"];
n16 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
d5 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", color=green, community=0, label="0: TestHelper.TestIndicator(new HeikinAshi(), TestFileName, ''HA_Open'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Open.Current.Value, 1e-3))", span="42-42"];
d60 [label="QuantConnect.Tests.Indicators.HeikinAshiTests", span=""];
d4 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="Entry QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", span="40-40"];
d6 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="TestHelper.TestIndicator(new HeikinAshi(), TestFileName, ''HA_High'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).High.Current.Value, 1e-3))", span="43-43"];
d3 [cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi()", label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi()", span="80-80"];
d11 [cluster="Unk.TestIndicator", label="Entry Unk.TestIndicator", span=""];
d12 [cluster="lambda expression", label="Entry lambda expression", span="42-42"];
d13 [cluster="lambda expression", color=green, community=0, label="1: Assert.AreEqual(expected, (double)((HeikinAshi)ind).Open.Current.Value, 1e-3)", span="42-42"];
d14 [cluster="lambda expression", label="Exit lambda expression", span="42-42"];
d15 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d34 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", color=green, community=0, label="0: TestHelper.TestIndicator(indicator, TestFileName, ''HA_High'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).High.Current.Value, 1e-3))", span="57-57"];
d29 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="var indicator = new HeikinAshi()", span="52-52"];
d33 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="indicator.Reset()", span="56-56"];
d35 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="indicator.Reset()", span="58-58"];
d48 [cluster="lambda expression", label="Entry lambda expression", span="57-57"];
d49 [cluster="lambda expression", color=green, community=0, label="0: Assert.AreEqual(expected, (double)((HeikinAshi)ind).High.Current.Value, 1e-3)", span="57-57"];
d50 [cluster="lambda expression", label="Exit lambda expression", span="57-57"];
d7 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="TestHelper.TestIndicator(new HeikinAshi(), TestFileName, ''HA_Low'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Low.Current.Value, 1e-3))", span="44-44"];
d8 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="TestHelper.TestIndicator(new HeikinAshi(), TestFileName, ''HA_Close'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Close.Current.Value, 1e-3))", span="45-45"];
d9 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="TestHelper.TestIndicator(new HeikinAshi(), TestFileName, ''Volume'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Volume.Current.Value, 1e-3))", span="46-46"];
d32 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="TestHelper.TestIndicator(indicator, TestFileName, ''HA_Open'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Open.Current.Value, 1e-3))", span="55-55"];
d36 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="TestHelper.TestIndicator(indicator, TestFileName, ''HA_Low'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Low.Current.Value, 1e-3))", span="59-59"];
d38 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="TestHelper.TestIndicator(indicator, TestFileName, ''HA_Close'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Close.Current.Value, 1e-3))", span="61-61"];
d40 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="TestHelper.TestIndicator(indicator, TestFileName, ''Volume'', (ind, expected) => Assert.AreEqual(expected, (double)((HeikinAshi)ind).Volume.Current.Value, 1e-3))", span="63-63"];
d10 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", label="Exit QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalData()", span="40-40"];
d16 [cluster="lambda expression", label="Entry lambda expression", span="43-43"];
d1 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.CreateIndicator()", label="return new HeikinAshi();", span="26-26"];
d17 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).High.Current.Value, 1e-3)", span="43-43"];
d20 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Low.Current.Value, 1e-3)", span="44-44"];
d23 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Close.Current.Value, 1e-3)", span="45-45"];
d26 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Volume.Current.Value, 1e-3)", span="46-46"];
d46 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Open.Current.Value, 1e-3)", span="55-55"];
d52 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Low.Current.Value, 1e-3)", span="59-59"];
d55 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Close.Current.Value, 1e-3)", span="61-61"];
d58 [cluster="lambda expression", label="Assert.AreEqual(expected, (double)((HeikinAshi)ind).Volume.Current.Value, 1e-3)", span="63-63"];
d28 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="Entry QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", span="50-50"];
d30 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="var i = 1", span="53-53"];
d37 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="indicator.Reset()", span="60-60"];
d39 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="indicator.Reset()", span="62-62"];
d41 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="indicator.Reset()", span="64-64"];
d44 [cluster="QuantConnect.Indicators.HeikinAshi.Reset()", label="Entry QuantConnect.Indicators.HeikinAshi.Reset()", span="123-123"];
d19 [cluster="lambda expression", label="Entry lambda expression", span="44-44"];
d22 [cluster="lambda expression", label="Entry lambda expression", span="45-45"];
d25 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
d31 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="i <= 2", span="53-53"];
d45 [cluster="lambda expression", label="Entry lambda expression", span="55-55"];
d51 [cluster="lambda expression", label="Entry lambda expression", span="59-59"];
d54 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
d57 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
d18 [cluster="lambda expression", label="Exit lambda expression", span="43-43"];
d0 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.CreateIndicator()", label="Entry QuantConnect.Tests.Indicators.HeikinAshiTests.CreateIndicator()", span="24-24"];
d2 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.CreateIndicator()", label="Exit QuantConnect.Tests.Indicators.HeikinAshiTests.CreateIndicator()", span="24-24"];
d21 [cluster="lambda expression", label="Exit lambda expression", span="44-44"];
d24 [cluster="lambda expression", label="Exit lambda expression", span="45-45"];
d27 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
d47 [cluster="lambda expression", label="Exit lambda expression", span="55-55"];
d53 [cluster="lambda expression", label="Exit lambda expression", span="59-59"];
d56 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
d59 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
d43 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="Exit QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", span="50-50"];
d42 [cluster="QuantConnect.Tests.Indicators.HeikinAshiTests.ComparesAgainstExternalDataAfterReset()", label="i++", span="53-53"];
m1_419 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="LeanData.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m1_317 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m1_318 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="491-491"];
m1_319 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="492-492"];
m1_320 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="493-493"];
m1_322 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="496-496"];
m1_323 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="497-497"];
m1_327 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.AAPL].Holdings.Quantity)", span="503-503"];
m1_321 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="494-494"];
m1_325 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="500-500"];
m1_326 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="502-502"];
m1_324 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="499-499"];
m1_328 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m1_505 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="735-735"];
m1_506 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="737-737"];
m1_507 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="738-738"];
m1_511 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="743-743"];
m1_512 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="744-744"];
m1_508 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="739-739"];
m1_510 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="741-741"];
m1_515 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="750-750"];
m1_516 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="751-751"];
m1_517 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="752-752"];
m1_518 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="753-753"];
m1_519 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="755-755"];
m1_520 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="756-756"];
m1_522 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="758-758"];
m1_526 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="768-768"];
m1_530 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="774-774"];
m1_509 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="740-740"];
m1_513 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="745-745"];
m1_521 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="757-757"];
m1_514 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolio.SetCash(192 * 100)", span="748-748"];
m1_525 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="764-764"];
m1_527 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="769-769"];
m1_523 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="760-760"];
m1_524 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label=fills, span="762-762"];
m1_528 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="770-770"];
m1_529 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="771-771"];
m1_531 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="735-735"];
m1_420 [cluster="System.TimeSpan.FromHours(double)", file="LeanData.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="LeanData.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="96-96"];
m1_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="58-58"];
m1_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="string fillsFile = ''TestData\\test_cash_fills.xml''", span="63-63"];
m1_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="string equityFile = ''TestData\\test_cash_equity.xml''", span="64-64"];
m1_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell\r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy\r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)\r\n                ).ToList()", span="66-77"];
m1_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="79-81"];
m1_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="83-83"];
m1_15 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="i < fills.Count", span="95-95"];
m1_16 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var fill = fills[i]", span="98-98"];
m1_13 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="portfolio.SetCash(equity[0])", span="93-93"];
m1_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="Assert.AreEqual(equity[i + 1], portfolio.TotalPortfolioValue, ''Failed on '' + i)", span="106-106"];
m1_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="86-86"];
m1_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="87-87"];
m1_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var security = new Security(SecurityExchangeHours, subscriptions.Add(CASH, Resolution.Daily, TimeZones.NewYork, TimeZones.NewYork), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="88-88"];
m1_10 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="securities.Add(CASH, security)", span="90-90"];
m1_11 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="91-91"];
m1_12 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="92-92"];
m1_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", color=red, community=0, file="LeanData.cs", label="1: security.SetLeverage(10m)", span="89-89"];
m1_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="security.SetMarketPrice(new IndicatorDataPoint(CASH, time, i + 1))", span="103-103"];
m1_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="105-105"];
m1_14 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="int i = 0", span="95-95"];
m1_17 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="var time = DateTime.Today.AddDays(i)", span="99-99"];
m1_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="i++", span="95-95"];
m1_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="TimeKeeper.SetUtcDateTime(time.ConvertToUtc(TimeZones.NewYork))", span="100-100"];
m1_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="58-58"];
m1_259 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m1_260 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="407-407"];
m1_261 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="408-408"];
m1_262 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="409-409"];
m1_264 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="412-412"];
m1_268 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="418-418"];
m1_272 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="424-424"];
m1_263 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="410-410"];
m1_266 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="portfolio.ProcessFill(fillBuy)", span="415-415"];
m1_267 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="417-417"];
m1_270 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="portfolio.ProcessFill(fillSell)", span="421-421"];
m1_271 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="423-423"];
m1_265 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="414-414"];
m1_269 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="420-420"];
m1_273 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m1_115 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanData.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m1_465 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="678-678"];
m1_466 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="decimal leverage = 2m", span="680-680"];
m1_467 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="int amount = 1000", span="681-681"];
m1_468 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="int quantity = (int)(amount * leverage)", span="682-682"];
m1_478 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="security.SetLeverage(leverage)", span="693-693"];
m1_474 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="688-688"];
m1_469 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="683-683"];
m1_482 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var order = new MarketOrder(Symbols.AAPL, -quantity, time) { Price = sellPrice }", span="699-699"];
m1_483 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = sellPrice, FillQuantity = -quantity }", span="700-700"];
m1_492 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = sellPrice }", span="714-714"];
m1_498 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = highPrice }", span="724-724"];
m1_501 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity + 1, time.AddSeconds(1)) { Price = highPrice }", span="729-729"];
m1_470 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="684-684"];
m1_473 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="687-687"];
m1_476 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="691-691"];
m1_477 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var security = securities[Symbols.AAPL]", span="692-692"];
m1_471 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="685-685"];
m1_472 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="686-686"];
m1_490 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="710-710"];
m1_493 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="715-715"];
m1_499 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="725-725"];
m1_502 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="730-730"];
m1_484 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="701-701"];
m1_487 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="704-704"];
m1_488 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="706-706"];
m1_475 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="690-690"];
m1_481 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, sellPrice, sellPrice, sellPrice, sellPrice, 1))", span="697-697"];
m1_485 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="702-702"];
m1_497 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="721-721"];
m1_479 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var time = DateTime.Now", span="695-695"];
m1_480 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="decimal sellPrice = 1m", span="696-696"];
m1_489 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, -1, time.AddSeconds(1)) { Price = sellPrice }", span="709-709"];
m1_495 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="time = time.AddDays(1)", span="719-719"];
m1_496 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="decimal highPrice = sellPrice * 2", span="720-720"];
m1_486 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="request.SetOrderId(0)", span="703-703"];
m1_491 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="711-711"];
m1_494 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="716-716"];
m1_500 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="726-726"];
m1_503 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="731-731"];
m1_504 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="678-678"];
m1_118 [cluster="System.Console.WriteLine(string)", file="LeanData.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_36 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m1_213 [cluster="Unk.IsTrue", file="LeanData.cs", label="Entry Unk.IsTrue", span=""];
m1_27 [cluster="Unk.ToList", file="LeanData.cs", label="Entry Unk.ToList", span=""];
m1_535 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51"];
m1_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="1533-1533"];
m1_699 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="993-993"];
m1_700 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="995-995"];
m1_701 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="996-996"];
m1_705 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1001-1001"];
m1_706 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1002-1002"];
m1_702 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="997-997"];
m1_704 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="999-999"];
m1_709 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1008-1008"];
m1_710 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1009-1009"];
m1_711 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1010-1010"];
m1_712 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1012-1012"];
m1_713 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1013-1013"];
m1_715 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1015-1015"];
m1_720 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1028-1028"];
m1_724 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1034-1034"];
m1_703 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="998-998"];
m1_707 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1003-1003"];
m1_714 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1014-1014"];
m1_708 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolio.SetCash(192 * 100)", span="1006-1006"];
m1_719 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1023-1023"];
m1_721 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1029-1029"];
m1_716 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1017-1017"];
m1_717 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1020-1020"];
m1_718 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label=fills, span="1021-1021"];
m1_722 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1030-1030"];
m1_723 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1031-1031"];
m1_725 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="993-993"];
m1_541 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="307-307"];
m1_205 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="LeanData.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m1_421 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LeanData.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m1_35 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m1_216 [cluster="Unk.GreaterOrEqual", file="LeanData.cs", label="Entry Unk.GreaterOrEqual", span=""];
m1_274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="474-474"];
m1_542 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_111 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m1_211 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="318-318"];
m1_1102 [cluster="Unk.Where", file="LeanData.cs", label="Entry Unk.Where", span=""];
m1_113 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="LeanData.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m1_206 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="LeanData.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118"];
m1_940 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1330-1330"];
m1_941 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1332-1332"];
m1_942 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1333-1333"];
m1_946 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1338-1338"];
m1_947 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1339-1339"];
m1_943 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1334-1334"];
m1_945 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1336-1336"];
m1_950 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1345-1345"];
m1_951 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1346-1346"];
m1_952 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1347-1347"];
m1_953 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1348-1348"];
m1_954 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1350-1350"];
m1_955 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1351-1351"];
m1_957 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1353-1353"];
m1_963 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1366-1366"];
m1_965 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1368-1368"];
m1_966 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1371-1371"];
m1_944 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1335-1335"];
m1_948 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1340-1340"];
m1_956 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1352-1352"];
m1_949 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="portfolio.SetCash((195 - 192) * 100)", span="1343-1343"];
m1_962 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1362-1362"];
m1_964 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1367-1367"];
m1_958 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1354-1354"];
m1_959 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1356-1356"];
m1_960 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1359-1359"];
m1_961 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label=fills, span="1360-1360"];
m1_967 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1330-1330"];
m1_1114 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1573-1573"];
m1_46 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="66-76"];
m1_51 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="80-80"];
m1_47 [cluster="lambda expression", file="LeanData.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell\r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy\r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)", span="66-76"];
m1_48 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="66-76"];
m1_52 [cluster="lambda expression", file="LeanData.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="80-80"];
m1_53 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="80-80"];
m1_119 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="121-131"];
m1_122 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="135-135"];
m1_125 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="139-139"];
m1_128 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="143-143"];
m1_120 [cluster="lambda expression", file="LeanData.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell\r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy\r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="121-131"];
m1_121 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="121-131"];
m1_123 [cluster="lambda expression", file="LeanData.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="135-135"];
m1_124 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="135-135"];
m1_126 [cluster="lambda expression", file="LeanData.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="139-139"];
m1_127 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="139-139"];
m1_129 [cluster="lambda expression", file="LeanData.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="143-143"];
m1_130 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="143-143"];
m1_544 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="757-757"];
m1_545 [cluster="lambda expression", file="LeanData.cs", label=true, span="757-757"];
m1_546 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="757-757"];
m1_574 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="799-799"];
m1_575 [cluster="lambda expression", file="LeanData.cs", label=true, span="799-799"];
m1_576 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="799-799"];
m1_605 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="840-840"];
m1_606 [cluster="lambda expression", file="LeanData.cs", label=true, span="840-840"];
m1_607 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="840-840"];
m1_634 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="881-881"];
m1_635 [cluster="lambda expression", file="LeanData.cs", label=true, span="881-881"];
m1_636 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="881-881"];
m1_664 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="925-925"];
m1_665 [cluster="lambda expression", file="LeanData.cs", label=true, span="925-925"];
m1_666 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="925-925"];
m1_696 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="966-966"];
m1_697 [cluster="lambda expression", file="LeanData.cs", label=true, span="966-966"];
m1_698 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="966-966"];
m1_726 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1014-1014"];
m1_727 [cluster="lambda expression", file="LeanData.cs", label=true, span="1014-1014"];
m1_728 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1014-1014"];
m1_756 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1059-1059"];
m1_757 [cluster="lambda expression", file="LeanData.cs", label=true, span="1059-1059"];
m1_758 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1059-1059"];
m1_785 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1105-1105"];
m1_786 [cluster="lambda expression", file="LeanData.cs", label=true, span="1105-1105"];
m1_787 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1105-1105"];
m1_814 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1146-1146"];
m1_815 [cluster="lambda expression", file="LeanData.cs", label=true, span="1146-1146"];
m1_816 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1146-1146"];
m1_843 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1186-1186"];
m1_844 [cluster="lambda expression", file="LeanData.cs", label=true, span="1186-1186"];
m1_845 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1186-1186"];
m1_937 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1310-1310"];
m1_938 [cluster="lambda expression", file="LeanData.cs", label=true, span="1310-1310"];
m1_939 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1310-1310"];
m1_968 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1352-1352"];
m1_969 [cluster="lambda expression", file="LeanData.cs", label=true, span="1352-1352"];
m1_970 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1352-1352"];
m1_999 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1396-1396"];
m1_1000 [cluster="lambda expression", file="LeanData.cs", label=true, span="1396-1396"];
m1_1001 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1396-1396"];
m1_1030 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1442-1442"];
m1_1031 [cluster="lambda expression", file="LeanData.cs", label=true, span="1442-1442"];
m1_1032 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1442-1442"];
m1_1061 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1488-1488"];
m1_1062 [cluster="lambda expression", file="LeanData.cs", label=true, span="1488-1488"];
m1_1063 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1488-1488"];
m1_1096 [cluster="lambda expression", file="LeanData.cs", label="x.BrokerId.Contains(brokerageId)", span="1556-1556"];
m1_1095 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1556-1556"];
m1_1097 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1556-1556"];
m1_1103 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="1561-1561"];
m1_1104 [cluster="lambda expression", file="LeanData.cs", label=true, span="1561-1561"];
m1_1105 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1561-1561"];
m1_1115 [cluster="lambda expression", file="LeanData.cs", label=true, span="1573-1573"];
m1_1116 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="1573-1573"];
m1_42 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m1_44 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
m1_329 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m1_330 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="509-509"];
m1_331 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="510-510"];
m1_332 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="511-511"];
m1_334 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="514-514"];
m1_335 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, -100)", span="515-515"];
m1_337 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="518-518"];
m1_340 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(-200, securities[Symbols.AAPL].Holdings.Quantity)", span="522-522"];
m1_333 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="512-512"];
m1_338 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="519-519"];
m1_339 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="521-521"];
m1_336 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue,  OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="517-517"];
m1_341 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m1_608 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="862-862"];
m1_609 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="864-864"];
m1_610 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="865-865"];
m1_614 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="870-870"];
m1_615 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="871-871"];
m1_611 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="866-866"];
m1_613 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="868-868"];
m1_618 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="875-875"];
m1_619 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="876-876"];
m1_620 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="877-877"];
m1_621 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="879-879"];
m1_622 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="880-880"];
m1_624 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="882-882"];
m1_628 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="893-893"];
m1_632 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="899-899"];
m1_612 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="867-867"];
m1_616 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="872-872"];
m1_623 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="881-881"];
m1_617 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="873-873"];
m1_627 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="888-888"];
m1_629 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="894-894"];
m1_625 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="884-884"];
m1_626 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label=fills, span="886-886"];
m1_630 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="895-895"];
m1_631 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="896-896"];
m1_633 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="862-862"];
m1_1106 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1564-1564"];
m1_1107 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="LeanData.cs", label="OrderTicket ticket", span="1566-1566"];
m1_1108 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="LeanData.cs", label="_tickets.TryGetValue(orderId, out ticket)", span="1567-1567"];
m1_1109 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="LeanData.cs", label="return ticket;", span="1568-1568"];
m1_1110 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1564-1564"];
m1_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m1_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="116-116"];
m1_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="string equityFile = ''TestData\\test_forex_equity.xml''", span="117-117"];
m1_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell\r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy\r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)\r\n                ).ToList()", span="121-132"];
m1_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="string mchQuantityFile = ''TestData\\test_forex_fills_mch_quantity.xml''", span="118-118"];
m1_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="134-136"];
m1_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="string jwbQuantityFile = ''TestData\\test_forex_fills_jwb_quantity.xml''", span="119-119"];
m1_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var mchQuantity = XDocument.Load(mchQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="138-140"];
m1_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var jwbQuantity = XDocument.Load(jwbQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="142-144"];
m1_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="146-146"];
m1_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="i < fills.Count", span="179-179"];
m1_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var fill = fills[i]", span="182-182"];
m1_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="portfolio.SetCash(equity[0])", span="153-153"];
m1_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="154-154"];
m1_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Amount)", span="223-223"];
m1_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="155-155"];
m1_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Amount)", span="224-224"];
m1_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="149-149"];
m1_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="150-150"];
m1_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(jwbCash.Symbol))", span="161-161"];
m1_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, subscriptions.Add(MCHUSD, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(usdCash.Symbol))", span="163-163"];
m1_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, mchCash, subscriptions.Add(USDJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(mchCash.Symbol))", span="165-165"];
m1_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions, MarketHoursDatabase.FromDataFolder(), SymbolPropertiesDatabase.FromDataFolder(), DefaultBrokerageModel.DefaultMarketMap)", span="177-177"];
m1_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="151-151"];
m1_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="152-152"];
m1_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="securities.Add(mchJwbSecurity)", span="173-173"];
m1_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="securities.Add(usdJwbSecurity)", span="174-174"];
m1_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="securities.Add(mchUsdSecurity)", span="175-175"];
m1_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var jwbCash = portfolio.CashBook[''JWB'']", span="157-157"];
m1_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var mchCash = portfolio.CashBook[''MCH'']", span="158-158"];
m1_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="159-159"];
m1_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="210-210"];
m1_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="221-221"];
m1_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="jwbCash.Update(new IndicatorDataPoint(MCHJWB, time, mchJwb))", span="194-194"];
m1_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="mchCash.Update(new IndicatorDataPoint(JWBUSD, time, usdJwb))", span="196-196"];
m1_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="usdCash.Update(new IndicatorDataPoint(MCHUSD, time, mchUsd))", span="195-195"];
m1_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="mchJwbSecurity.SetLeverage(10m)", span="162-162"];
m1_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="mchJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="169-169"];
m1_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var updateData = new Dictionary<Security, BaseData>\r\n                {\r\n                    {mchJwbSecurity, new IndicatorDataPoint(MCHJWB, time, mchJwb)},\r\n                    {mchUsdSecurity, new IndicatorDataPoint(MCHUSD, time, mchUsd)},\r\n                    {usdJwbSecurity, new IndicatorDataPoint(JWBUSD, time, usdJwb)}\r\n                }", span="198-203"];
m1_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="mchUsdSecurity.SetLeverage(10m)", span="164-164"];
m1_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="mchUsdSecurity.TransactionModel = new SecurityTransactionModel()", span="170-170"];
m1_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="usdJwbSecurity.SetLeverage(10m)", span="166-166"];
m1_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="usdJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="171-171"];
m1_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="int i = 0", span="179-179"];
m1_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="var time = DateTime.Today.AddDays(i)", span="183-183"];
m1_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="decimal mchJwb = i + 1", span="187-187"];
m1_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="decimal mchUsd = (i + 1)/(i + 2m)", span="188-188"];
m1_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="decimal usdJwb = i + 2", span="189-189"];
m1_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="i++", span="179-179"];
m1_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="190-190"];
m1_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label=updateData, span="205-205"];
m1_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="kvp.Key.SetMarketPrice(kvp.Value)", span="207-207"];
m1_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m1_108 [cluster="Unk.Add", file="LeanData.cs", label="Entry Unk.Add", span=""];
m1_695 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LeanData.cs", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m1_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="531-531"];
m1_1076 [cluster="System.Enum.ToString()", file="LeanData.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_31 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m1_533 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25"];
m1_817 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1166-1166"];
m1_818 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1168-1168"];
m1_819 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1169-1169"];
m1_823 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1174-1174"];
m1_824 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1175-1175"];
m1_820 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1170-1170"];
m1_822 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1172-1172"];
m1_827 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1179-1179"];
m1_828 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1180-1180"];
m1_829 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1181-1181"];
m1_830 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1182-1182"];
m1_831 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1184-1184"];
m1_832 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1185-1185"];
m1_834 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1187-1187"];
m1_840 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1199-1199"];
m1_841 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1202-1202"];
m1_821 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1171-1171"];
m1_825 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1176-1176"];
m1_833 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1186-1186"];
m1_826 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="1177-1177"];
m1_838 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="1194-1194"];
m1_839 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="Assert.AreEqual((192 - 189) * 100, portfolio.Cash)", span="1198-1198"];
m1_835 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1188-1188"];
m1_836 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1190-1190"];
m1_837 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label=fills, span="1192-1192"];
m1_842 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1166-1166"];
m1_54 [cluster="decimal.Parse(string, System.IFormatProvider)", file="LeanData.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m1_41 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m1_45 [cluster="Unk.ProcessFill", file="LeanData.cs", label="Entry Unk.ProcessFill", span=""];
m1_361 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", span="549-549"];
m1_362 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="551-551"];
m1_363 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="552-552"];
m1_364 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="553-553"];
m1_367 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="securities.Add(Symbols.BTCUSD, new QuantConnect.Securities.Crypto.Crypto(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Crypto,\r\n                Symbols.BTCUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="557-558"];
m1_368 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var security = securities[Symbols.BTCUSD]", span="559-559"];
m1_365 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="portfolio.SetCash(10000)", span="554-554"];
m1_366 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="portfolio.CashBook.Add(''BTC'', 0, 4000.01m)", span="555-555"];
m1_370 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(10000, portfolio.Cash)", span="561-561"];
m1_373 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="565-565"];
m1_375 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(10000, portfolio.Cash)", span="567-567"];
m1_376 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(2, portfolio.CashBook[''BTC''].Amount)", span="568-568"];
m1_377 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(1999.98, portfolio.CashBook[''USD''].Amount)", span="569-569"];
m1_369 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="560-560"];
m1_371 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.BTCUSD, 2, DateTime.MinValue))", span="563-563"];
m1_374 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(2, security.Holdings.Quantity)", span="566-566"];
m1_372 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.BTCUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 4000.01m, 2, orderFee)", span="564-564"];
m1_378 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", span="549-549"];
m1_33 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m1_207 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="LeanData.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200"];
m1_26 [cluster="Unk.Select", file="LeanData.cs", label="Entry Unk.Select", span=""];
m1_40 [cluster="System.DateTime.AddDays(double)", file="LeanData.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_201 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m1_788 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1125-1125"];
m1_789 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1127-1127"];
m1_790 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1128-1128"];
m1_794 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1133-1133"];
m1_795 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1134-1134"];
m1_791 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1129-1129"];
m1_793 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1131-1131"];
m1_798 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1139-1139"];
m1_799 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1140-1140"];
m1_800 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 190 })", span="1141-1141"];
m1_801 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="1142-1142"];
m1_802 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="1144-1144"];
m1_803 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1145-1145"];
m1_805 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1147-1147"];
m1_811 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1159-1159"];
m1_812 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1162-1162"];
m1_792 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1130-1130"];
m1_796 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1135-1135"];
m1_804 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1146-1146"];
m1_797 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="1137-1137"];
m1_809 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="1154-1154"];
m1_810 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1158-1158"];
m1_806 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1148-1148"];
m1_807 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1150-1150"];
m1_808 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label=fills, span="1152-1152"];
m1_813 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1125-1125"];
m1_1002 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1420-1420"];
m1_1003 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1422-1422"];
m1_1004 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1423-1423"];
m1_1008 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1428-1428"];
m1_1009 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1429-1429"];
m1_1005 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1424-1424"];
m1_1007 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1426-1426"];
m1_1012 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1435-1435"];
m1_1013 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1436-1436"];
m1_1014 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1437-1437"];
m1_1015 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1438-1438"];
m1_1016 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1440-1440"];
m1_1017 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1441-1441"];
m1_1019 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1443-1443"];
m1_1025 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1457-1457"];
m1_1027 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1459-1459"];
m1_1028 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1462-1462"];
m1_1006 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1425-1425"];
m1_1010 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1430-1430"];
m1_1018 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1442-1442"];
m1_1011 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="portfolio.SetCash((192 - 189) * 100)", span="1433-1433"];
m1_1024 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1453-1453"];
m1_1026 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1458-1458"];
m1_1020 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1444-1444"];
m1_1021 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1446-1446"];
m1_1022 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1449-1449"];
m1_1023 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label=fills, span="1451-1451"];
m1_1029 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1420-1420"];
m1_911 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1290-1290"];
m1_912 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1292-1292"];
m1_913 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1293-1293"];
m1_917 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1298-1298"];
m1_918 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1299-1299"];
m1_914 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1294-1294"];
m1_916 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1296-1296"];
m1_921 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1303-1303"];
m1_922 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1304-1304"];
m1_923 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1305-1305"];
m1_924 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="1306-1306"];
m1_925 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1308-1308"];
m1_926 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1309-1309"];
m1_928 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1311-1311"];
m1_934 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1323-1323"];
m1_935 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1326-1326"];
m1_915 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1295-1295"];
m1_919 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1300-1300"];
m1_927 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1310-1310"];
m1_920 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="1301-1301"];
m1_932 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="1318-1318"];
m1_933 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1322-1322"];
m1_929 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1312-1312"];
m1_930 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1314-1314"];
m1_931 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label=fills, span="1316-1316"];
m1_936 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1290-1290"];
m1_667 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="946-946"];
m1_668 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="948-948"];
m1_669 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="949-949"];
m1_673 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="954-954"];
m1_674 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="955-955"];
m1_670 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="950-950"];
m1_672 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="952-952"];
m1_677 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="959-959"];
m1_678 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="960-960"];
m1_679 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="961-961"];
m1_680 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="962-962"];
m1_681 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="964-964"];
m1_682 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="965-965"];
m1_684 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="967-967"];
m1_689 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="983-983"];
m1_693 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="989-989"];
m1_671 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="951-951"];
m1_675 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="956-956"];
m1_683 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="966-966"];
m1_676 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="957-957"];
m1_688 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="976-976"];
m1_690 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="984-984"];
m1_685 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="969-969"];
m1_686 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="972-972"];
m1_687 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label=fills, span="974-974"];
m1_691 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="985-985"];
m1_692 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="986-986"];
m1_694 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="946-946"];
m1_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.SecurityManager)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.SecurityManager)", span="51-51"];
m1_112 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="LeanData.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m1_208 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1542-1542"];
m1_1083 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="LeanData.cs", label="_tickets[ticket.OrderId] = ticket", span="1544-1544"];
m1_1084 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1542-1542"];
m1_1075 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LeanData.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m1_577 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="819-819"];
m1_578 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="821-821"];
m1_579 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="822-822"];
m1_583 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="algorithm.Securities = securities", span="827-827"];
m1_584 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="828-828"];
m1_580 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="823-823"];
m1_582 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="825-825"];
m1_587 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="833-833"];
m1_588 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="834-834"];
m1_589 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="835-835"];
m1_590 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 2000 })", span="836-836"];
m1_591 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="838-838"];
m1_592 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="839-839"];
m1_594 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="841-841"];
m1_599 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="852-852"];
m1_603 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="858-858"];
m1_581 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="824-824"];
m1_585 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="829-829"];
m1_593 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="840-840"];
m1_586 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="portfolio.SetCash(0)", span="831-831"];
m1_598 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="848-848"];
m1_600 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="853-853"];
m1_595 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="842-842"];
m1_596 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="844-844"];
m1_597 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label=fills, span="846-846"];
m1_601 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="854-854"];
m1_602 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="855-855"];
m1_604 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="819-819"];
m1_1091 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1554-1554"];
m1_1092 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="LeanData.cs", label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="1556-1556"];
m1_1093 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1554-1554"];
m1_276 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m1_277 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="430-430"];
m1_278 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="431-431"];
m1_279 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="432-432"];
m1_281 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="435-435"];
m1_285 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="441-441"];
m1_289 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="447-447"];
m1_280 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="portfolio.SetCash(0)", span="433-433"];
m1_283 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="portfolio.ProcessFill(fillBuy)", span="438-438"];
m1_284 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="440-440"];
m1_287 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="portfolio.ProcessFill(fillSell)", span="444-444"];
m1_288 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Assert.AreEqual(-100 * 50, portfolio.Cash)", span="446-446"];
m1_282 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="437-437"];
m1_286 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 99, -100, 0)", span="443-443"];
m1_290 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m1_214 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="543-543"];
m1_1120 [cluster="System.NotImplementedException.NotImplementedException()", file="LeanData.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m1_536 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36"];
m1_1117 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="1576-1576"];
m1_1118 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="LeanData.cs", label="throw new NotImplementedException();", span="1578-1578"];
m1_1119 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="1576-1576"];
m1_1080 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="LeanData.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m1_109 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m1_39 [cluster="Unk.SetCash", file="LeanData.cs", label="Entry Unk.SetCash", span=""];
m1_28 [cluster="Unk.AreEqual", file="LeanData.cs", label="Entry Unk.AreEqual", span=""];
m1_1094 [cluster="Unk.FirstOrDefault", file="LeanData.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_198 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="389-389"];
m1_202 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="LeanData.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m1_637 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="903-903"];
m1_638 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="905-905"];
m1_639 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="906-906"];
m1_643 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="911-911"];
m1_644 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="912-912"];
m1_640 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="907-907"];
m1_642 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="909-909"];
m1_647 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="918-918"];
m1_648 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="919-919"];
m1_649 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="920-920"];
m1_650 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="921-921"];
m1_651 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="923-923"];
m1_652 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="924-924"];
m1_654 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="926-926"];
m1_658 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="936-936"];
m1_662 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="942-942"];
m1_641 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="908-908"];
m1_645 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="913-913"];
m1_653 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="925-925"];
m1_646 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolio.SetCash(192 * 100)", span="916-916"];
m1_657 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="932-932"];
m1_659 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="937-937"];
m1_655 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="928-928"];
m1_656 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label=fills, span="930-930"];
m1_660 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="938-938"];
m1_661 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="939-939"];
m1_663 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="903-903"];
m1_1098 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m1_417 [cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258"];
m1_543 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="LeanData.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m1_1099 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1559-1559"];
m1_1100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="LeanData.cs", label="return _tickets.Values.Where(filter ?? (x => true));", span="1561-1561"];
m1_1101 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1559-1559"];
m1_759 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1084-1084"];
m1_760 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1086-1086"];
m1_761 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1087-1087"];
m1_765 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1092-1092"];
m1_766 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1093-1093"];
m1_762 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1088-1088"];
m1_764 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1090-1090"];
m1_769 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1098-1098"];
m1_770 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1099-1099"];
m1_771 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1100-1100"];
m1_772 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1101-1101"];
m1_773 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1103-1103"];
m1_774 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1104-1104"];
m1_776 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1106-1106"];
m1_782 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1118-1118"];
m1_783 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1121-1121"];
m1_763 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1089-1089"];
m1_767 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1094-1094"];
m1_775 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1105-1105"];
m1_768 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="1096-1096"];
m1_780 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="1113-1113"];
m1_781 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1117-1117"];
m1_777 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1107-1107"];
m1_778 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1109-1109"];
m1_779 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label=fills, span="1111-1111"];
m1_784 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1084-1084"];
m1_34 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="LeanData.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m1_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m1_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="decimal leverage = 1m", span="234-234"];
m1_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="int quantity = (int) (1000*leverage)", span="235-235"];
m1_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetLeverage(leverage)", span="246-246"];
m1_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetLeverage(leverage * 2)", span="304-304"];
m1_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="236-236"];
m1_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="241-241"];
m1_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="252-252"];
m1_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="253-253"];
m1_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="263-263"];
m1_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="264-264"];
m1_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="277-277"];
m1_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="278-278"];
m1_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="279-279"];
m1_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="292-292"];
m1_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="293-293"];
m1_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="294-294"];
m1_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="318-318"];
m1_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="319-319"];
m1_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="237-237"];
m1_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="240-240"];
m1_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="244-244"];
m1_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var security = securities[Symbols.AAPL]", span="245-245"];
m1_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="238-238"];
m1_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="239-239"];
m1_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="268-268"];
m1_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="283-283"];
m1_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="254-254"];
m1_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="257-257"];
m1_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="258-258"];
m1_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="260-260"];
m1_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="262-262"];
m1_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="299-299"];
m1_183 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="311-311"];
m1_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="321-321"];
m1_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="323-323"];
m1_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="325-325"];
m1_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, security.Price * marginCallOrders[0].Quantity)", span="329-329"];
m1_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="243-243"];
m1_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="250-250"];
m1_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="255-255"];
m1_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="275-275"];
m1_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="290-290"];
m1_182 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, newPrice, newPrice, newPrice, newPrice, 1))", span="308-308"];
m1_186 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="316-316"];
m1_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="328-328"];
m1_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var time = DateTime.Now", span="248-248"];
m1_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="decimal buyPrice = 1m", span="249-249"];
m1_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="267-267"];
m1_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="time = time.AddDays(1)", span="273-273"];
m1_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="decimal highPrice = buyPrice * 2", span="274-274"];
m1_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="decimal lowPrice = buyPrice/2", span="289-289"];
m1_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="request.SetOrderId(0)", span="256-256"];
m1_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="269-269"];
m1_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="282-282"];
m1_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="time = time.AddDays(1)", span="288-288"];
m1_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="284-284"];
m1_181 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="decimal newPrice = lowPrice + 0.01m", span="307-307"];
m1_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="bool issueMarginCallWarning", span="298-298"];
m1_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.IsFalse(issueMarginCallWarning)", span="300-300"];
m1_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="301-301"];
m1_184 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="312-312"];
m1_185 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="313-313"];
m1_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="326-326"];
m1_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="327-327"];
m1_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m1_1079 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m1_24 [cluster="Unk.Load", file="LeanData.cs", label="Entry Unk.Load", span=""];
m1_200 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1510-1510"];
m1_1064 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="type == SecurityType.Equity", span="1512-1512"];
m1_1065 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1513-1513"];
m1_1066 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="type == SecurityType.Forex", span="1514-1514"];
m1_1067 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1515-1515"];
m1_1068 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="type == SecurityType.Future", span="1516-1516"];
m1_1069 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1517-1517"];
m1_1070 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="type == SecurityType.Crypto", span="1518-1518"];
m1_1071 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1519-1519"];
m1_1072 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="throw new NotImplementedException(type.ToString());", span="1520-1520"];
m1_1073 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1510-1510"];
m1_291 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m1_537 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49"];
m1_425 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="621-621"];
m1_426 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="decimal leverage = 2m", span="623-623"];
m1_427 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="int amount = 1000", span="624-624"];
m1_428 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="int quantity = (int)(amount * leverage)", span="625-625"];
m1_438 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="security.SetLeverage(leverage)", span="636-636"];
m1_434 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="631-631"];
m1_429 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="626-626"];
m1_442 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="642-642"];
m1_443 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="643-643"];
m1_452 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = buyPrice }", span="657-657"];
m1_458 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = lowPrice }", span="667-667"];
m1_461 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity - 1, time.AddSeconds(1)) { Price = lowPrice }", span="672-672"];
m1_430 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="627-627"];
m1_433 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="630-630"];
m1_436 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="634-634"];
m1_437 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var security = securities[Symbols.AAPL]", span="635-635"];
m1_431 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="628-628"];
m1_432 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="629-629"];
m1_450 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="653-653"];
m1_453 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="658-658"];
m1_459 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="668-668"];
m1_462 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="673-673"];
m1_444 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="644-644"];
m1_447 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="647-647"];
m1_448 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="649-649"];
m1_435 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", color=red, community=0, file="LeanData.cs", label="0: var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="633-633"];
m1_441 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="640-640"];
m1_445 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="645-645"];
m1_457 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="664-664"];
m1_439 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var time = DateTime.Now", span="638-638"];
m1_440 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="decimal buyPrice = 1m", span="639-639"];
m1_449 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = buyPrice }", span="652-652"];
m1_455 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="time = time.AddDays(1)", span="662-662"];
m1_456 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="decimal lowPrice = buyPrice / 2", span="663-663"];
m1_446 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="request.SetOrderId(0)", span="646-646"];
m1_451 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="654-654"];
m1_454 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="659-659"];
m1_460 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="669-669"];
m1_463 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="674-674"];
m1_464 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="621-621"];
m1_258 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="LeanData.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m1_539 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m1_538 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1523-1523"];
m1_1077 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="LeanData.cs", label="return new OptionSymbolProperties(SymbolPropertiesDatabase.FromDataFolder().GetSymbolProperties(symbol.ID.Market, symbol, symbol.SecurityType, CashBook.AccountCurrency));", span="1525-1525"];
m1_1078 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1523-1523"];
m1_1033 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1466-1466"];
m1_1034 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1468-1468"];
m1_1035 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1469-1469"];
m1_1039 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="algorithm.Securities = securities", span="1474-1474"];
m1_1040 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1475-1475"];
m1_1036 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1470-1470"];
m1_1038 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1472-1472"];
m1_1043 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1481-1481"];
m1_1044 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1482-1482"];
m1_1045 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1483-1483"];
m1_1046 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1484-1484"];
m1_1047 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1486-1486"];
m1_1048 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1487-1487"];
m1_1050 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1489-1489"];
m1_1056 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1502-1502"];
m1_1058 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1504-1504"];
m1_1059 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1507-1507"];
m1_1037 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1471-1471"];
m1_1041 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1476-1476"];
m1_1049 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1488-1488"];
m1_1042 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="portfolio.SetCash((192 - 189) * 100)", span="1479-1479"];
m1_1055 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1498-1498"];
m1_1057 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1503-1503"];
m1_1051 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1490-1490"];
m1_1052 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1492-1492"];
m1_1053 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1495-1495"];
m1_1054 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label=fills, span="1496-1496"];
m1_1060 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1466-1466"];
m1_203 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="LeanData.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m1_380 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="573-573"];
m1_381 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="575-575"];
m1_382 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="576-576"];
m1_386 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="580-580"];
m1_410 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var marketOpen = securityExchangeHours.MarketHours[timeUtc.DayOfWeek].GetMarketOpen(TimeSpan.Zero, false)", span="612-612"];
m1_412 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="timeUtc = timeUtc.AddDays(1).Date.Add(marketOpen.Value).ConvertToUtc(securityExchangeHours.TimeZone)", span="614-614"];
m1_383 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="577-577"];
m1_384 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="578-578"];
m1_387 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var security = securities[Symbols.AAPL]", span="581-581"];
m1_385 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="portfolio.SetCash(1000)", span="579-579"];
m1_390 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="584-584"];
m1_391 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="585-585"];
m1_395 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="591-591"];
m1_397 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(-1, portfolio.Cash)", span="593-593"];
m1_398 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="594-594"];
m1_402 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="600-600"];
m1_404 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="602-602"];
m1_405 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="603-603"];
m1_407 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="607-607"];
m1_408 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="608-608"];
m1_409 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="609-609"];
m1_413 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="615-615"];
m1_414 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="616-616"];
m1_415 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="617-617"];
m1_388 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="582-582"];
m1_389 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="583-583"];
m1_393 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="589-589"];
m1_396 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(10, security.Holdings.Quantity)", span="592-592"];
m1_400 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="598-598"];
m1_403 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="601-601"];
m1_392 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="588-588"];
m1_394 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="590-590"];
m1_399 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="timeUtc = timeUtc.AddDays(1)", span="597-597"];
m1_401 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="599-599"];
m1_406 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="timeUtc = timeUtc.AddDays(2)", span="606-606"];
m1_411 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Assert.IsTrue(marketOpen.HasValue)", span="613-613"];
m1_416 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="573-573"];
m1_117 [cluster="decimal.ToString(string)", file="LeanData.cs", label="Entry decimal.ToString(string)", span="0-0"];
m1_256 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m1_293 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m1_294 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="453-453"];
m1_295 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="454-454"];
m1_296 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="455-455"];
m1_298 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="458-458"];
m1_301 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="Assert.AreEqual(100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="463-463"];
m1_304 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="Assert.AreEqual(2 * 100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="468-468"];
m1_297 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="portfolio.SetCash(0)", span="456-456"];
m1_300 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="portfolio.ProcessFill(fillBuy)", span="461-461"];
m1_303 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="portfolio.ProcessFill(fillSell)", span="466-466"];
m1_299 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="460-460"];
m1_302 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="465-465"];
m1_305 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m1_1111 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1571-1571"];
m1_1112 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="LeanData.cs", label="return _orders.Values.Where(filter ?? (x => true));", span="1573-1573"];
m1_1113 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1571-1571"];
m1_306 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m1_307 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="474-474"];
m1_308 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="475-475"];
m1_309 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="476-476"];
m1_311 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="479-479"];
m1_315 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="485-485"];
m1_310 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="portfolio.SetCash(0)", span="477-477"];
m1_313 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="482-482"];
m1_314 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="484-484"];
m1_312 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="481-481"];
m1_316 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m1_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="LeanData.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m1_49 [cluster="OrderEvent.cstr", file="LeanData.cs", label="Entry OrderEvent.cstr", span=""];
m1_212 [cluster="Unk.IsFalse", file="LeanData.cs", label="Entry Unk.IsFalse", span=""];
m1_275 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", file="LeanData.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", span="113-113"];
m1_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m1_424 [cluster="System.DateTime.Add(System.TimeSpan)", file="LeanData.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m1_25 [cluster="Unk.Descendants", file="LeanData.cs", label="Entry Unk.Descendants", span=""];
m1_878 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="LeanData.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="43-43"];
m1_30 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m1_50 [cluster="Unk.>", file="LeanData.cs", label="Entry Unk.>", span=""];
m1_1090 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanData.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_199 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m1_292 [cluster="string.ToUpper()", file="LeanData.cs", label="Entry string.ToUpper()", span="0-0"];
m1_1085 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1547-1547"];
m1_1086 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="LeanData.cs", label="Order order", span="1549-1549"];
m1_1087 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="LeanData.cs", label="_orders.TryGetValue(orderId, out order)", span="1550-1550"];
m1_1088 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="LeanData.cs", label="return order;", span="1551-1551"];
m1_1089 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1547-1547"];
m1_534 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="LeanData.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m1_43 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="LeanData.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m1_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1537-1537"];
m1_1081 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="LeanData.cs", label="_orders[order.Id] = order", span="1539-1539"];
m1_1082 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1537-1537"];
m1_29 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="LeanData.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m1_422 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="830-830"];
m1_547 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="778-778"];
m1_548 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="780-780"];
m1_549 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="781-781"];
m1_553 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="algorithm.Securities = securities", span="786-786"];
m1_554 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="787-787"];
m1_550 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="782-782"];
m1_552 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="784-784"];
m1_557 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="792-792"];
m1_558 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="793-793"];
m1_559 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="794-794"];
m1_560 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 20 })", span="795-795"];
m1_561 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="797-797"];
m1_562 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="798-798"];
m1_564 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="800-800"];
m1_568 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="809-809"];
m1_572 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="815-815"];
m1_551 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="783-783"];
m1_555 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="788-788"];
m1_563 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="799-799"];
m1_556 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="portfolio.SetCash(0)", span="790-790"];
m1_567 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="portfolio.ProcessFill(fill)", span="806-806"];
m1_569 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="810-810"];
m1_565 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="802-802"];
m1_566 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label=fills, span="804-804"];
m1_570 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="811-811"];
m1_571 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="812-812"];
m1_573 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="778-778"];
m1_114 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="LeanData.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m1_110 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37"];
m1_379 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m1_217 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m1_218 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="335-335"];
m1_219 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="336-336"];
m1_222 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="339-339"];
m1_231 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities.Add(new Security(SecurityExchangeHours, config1, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="350-350"];
m1_232 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.AAPL].SetLeverage(2m)", span="351-351"];
m1_233 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="352-352"];
m1_234 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="353-353"];
m1_236 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="360-360"];
m1_237 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURUSD].SetLeverage(100m)", span="361-361"];
m1_238 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="362-362"];
m1_239 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="363-363"];
m1_241 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, SymbolProperties.GetDefault(gbpCash.Symbol)))", span="370-370"];
m1_242 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURGBP].SetLeverage(100m)", span="371-371"];
m1_243 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="372-372"];
m1_244 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="373-373"];
m1_220 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="337-337"];
m1_221 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="338-338"];
m1_250 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="396-396"];
m1_253 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="400-400"];
m1_246 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="orderProcessor.AddOrder(acceptedOrder)", span="392-392"];
m1_249 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="395-395"];
m1_223 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="portfolio.CashBook[''USD''].SetAmount(1000)", span="340-340"];
m1_224 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="341-341"];
m1_225 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="342-342"];
m1_226 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var eurCash = portfolio.CashBook[''EUR'']", span="344-344"];
m1_227 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var gbpCash = portfolio.CashBook[''GBP'']", span="345-345"];
m1_228 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="346-346"];
m1_229 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var time = DateTime.Now", span="348-348"];
m1_230 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="349-349"];
m1_235 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="359-359"];
m1_240 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="369-369"];
m1_245 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="391-391"];
m1_247 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="393-393"];
m1_248 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="request.SetOrderId(0)", span="394-394"];
m1_251 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="397-397"];
m1_252 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="399-399"];
m1_254 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="401-401"];
m1_255 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m1_342 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m1_343 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="528-528"];
m1_344 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="529-529"];
m1_345 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="530-530"];
m1_348 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="534-534"];
m1_349 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var security = securities[Symbols.EURUSD]", span="535-535"];
m1_346 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="portfolio.SetCash(1000)", span="531-531"];
m1_347 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="532-532"];
m1_351 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="537-537"];
m1_354 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", color=red, community=0, file="LeanData.cs", label="0: portfolio.ProcessFill(fill)", span="541-541"];
m1_356 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="543-543"];
m1_357 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="544-544"];
m1_358 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="545-545"];
m1_350 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="536-536"];
m1_352 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="539-539"];
m1_355 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="542-542"];
m1_353 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="540-540"];
m1_359 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m1_360 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="LeanData.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m1_210 [cluster="System.DateTime.AddSeconds(double)", file="LeanData.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m1_540 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
m1_116 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_879 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1248-1248"];
m1_880 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1250-1250"];
m1_881 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1251-1251"];
m1_886 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="algorithm.Securities = securities", span="1257-1257"];
m1_882 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1252-1252"];
m1_884 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1254-1254"];
m1_889 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1262-1262"];
m1_890 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1263-1263"];
m1_891 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1264-1264"];
m1_892 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -10)", span="1265-1265"];
m1_893 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1267-1267"];
m1_894 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1268-1268"];
m1_902 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1278-1278"];
m1_883 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="1253-1253"];
m1_887 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1258-1258"];
m1_900 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1275-1275"];
m1_908 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1285-1285"];
m1_896 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="1271-1271"];
m1_899 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1274-1274"];
m1_904 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="1281-1281"];
m1_907 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1284-1284"];
m1_885 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var time = DateTime.Now", span="1256-1256"];
m1_888 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="portfolio.SetCash(1000)", span="1260-1260"];
m1_895 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1270-1270"];
m1_903 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1280-1280"];
m1_897 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1272-1272"];
m1_905 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1282-1282"];
m1_898 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="request.SetOrderId(0)", span="1273-1273"];
m1_901 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="1276-1276"];
m1_906 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="request.SetOrderId(0)", span="1283-1283"];
m1_909 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="1286-1286"];
m1_910 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1248-1248"];
m1_215 [cluster="Unk.AreNotEqual", file="LeanData.cs", label="Entry Unk.AreNotEqual", span=""];
m1_257 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m1_423 [cluster="QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", file="LeanData.cs", label="Entry QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", span="172-172"];
m1_846 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1206-1206"];
m1_847 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1208-1208"];
m1_848 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1209-1209"];
m1_853 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="algorithm.Securities = securities", span="1215-1215"];
m1_849 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1210-1210"];
m1_851 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1212-1212"];
m1_856 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1220-1220"];
m1_857 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1221-1221"];
m1_858 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1222-1222"];
m1_859 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 10)", span="1223-1223"];
m1_860 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1225-1225"];
m1_861 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1226-1226"];
m1_869 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1236-1236"];
m1_850 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var orderProcessor = new OrderProcessor()", span="1211-1211"];
m1_854 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1216-1216"];
m1_867 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1233-1233"];
m1_875 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1243-1243"];
m1_863 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="1229-1229"];
m1_866 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1232-1232"];
m1_871 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="orderProcessor.AddOrder(order)", span="1239-1239"];
m1_874 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1242-1242"];
m1_852 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var time = DateTime.Now", span="1214-1214"];
m1_855 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="portfolio.SetCash(1000)", span="1218-1218"];
m1_862 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1228-1228"];
m1_870 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1238-1238"];
m1_864 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1230-1230"];
m1_872 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1240-1240"];
m1_865 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="request.SetOrderId(0)", span="1231-1231"];
m1_868 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="Assert.IsFalse(sufficientCapital)", span="1234-1234"];
m1_873 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="request.SetOrderId(0)", span="1241-1241"];
m1_876 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="Assert.IsTrue(sufficientCapital)", span="1244-1244"];
m1_877 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1206-1206"];
m1_971 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1375-1375"];
m1_972 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1377-1377"];
m1_973 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1378-1378"];
m1_977 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="algorithm.Securities = securities", span="1383-1383"];
m1_978 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1384-1384"];
m1_974 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1379-1379"];
m1_976 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1381-1381"];
m1_981 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1389-1389"];
m1_982 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1390-1390"];
m1_983 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 10 })", span="1391-1391"];
m1_984 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -100)", span="1392-1392"];
m1_985 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -100, 0, 0, securities.UtcTime, ''''))", span="1394-1394"];
m1_986 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1395-1395"];
m1_988 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1397-1397"];
m1_994 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1411-1411"];
m1_996 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1413-1413"];
m1_997 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1416-1416"];
m1_975 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1380-1380"];
m1_979 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1385-1385"];
m1_987 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1396-1396"];
m1_980 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="portfolio.SetCash(0)", span="1387-1387"];
m1_993 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1407-1407"];
m1_995 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1412-1412"];
m1_989 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1398-1398"];
m1_990 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1400-1400"];
m1_991 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1403-1403"];
m1_992 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label=fills, span="1405-1405"];
m1_998 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1375-1375"];
m1_729 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1038-1038"];
m1_730 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var algorithm = new QCAlgorithm()", span="1040-1040"];
m1_731 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1041-1041"];
m1_735 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="algorithm.Securities = securities", span="1046-1046"];
m1_736 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1047-1047"];
m1_732 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="1042-1042"];
m1_734 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1044-1044"];
m1_739 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1053-1053"];
m1_740 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1054-1054"];
m1_741 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1055-1055"];
m1_742 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1057-1057"];
m1_743 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1058-1058"];
m1_745 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="option.Underlying = securities[Symbols.SPY]", span="1060-1060"];
m1_750 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1074-1074"];
m1_754 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1080-1080"];
m1_733 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1043-1043"];
m1_737 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1048-1048"];
m1_744 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1059-1059"];
m1_738 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="portfolio.SetCash(192 * 100)", span="1051-1051"];
m1_749 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1069-1069"];
m1_751 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1075-1075"];
m1_746 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1062-1062"];
m1_747 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1065-1065"];
m1_748 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label=fills, span="1067-1067"];
m1_752 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1076-1076"];
m1_753 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1077-1077"];
m1_755 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="LeanData.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1038-1038"];
m1_418 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m1_1121 [file="LeanData.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span=""];
m1_1122 [file="LeanData.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span=""];
m1_1123 [file="LeanData.cs", label=string, span=""];
m2_20 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m2_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m2_11 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m2_12 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var relativePath = LeanData.GenerateRelativeZipFilePath(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="49-49"];
m2_13 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedRelativeZipFilePath, relativePath)", span="50-50"];
m2_14 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m2_80 [cluster="string.LastIndexOf(string, System.StringComparison)", file="LeanDataTests.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m2_142 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m2_143 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="DateTime date", span="220-220"];
m2_144 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Symbol symbol", span="221-221"];
m2_145 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Resolution resolution", span="222-222"];
m2_146 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224"];
m2_147 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225"];
m2_148 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226"];
m2_149 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227"];
m2_150 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228"];
m2_151 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229"];
m2_152 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230"];
m2_153 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232"];
m2_154 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233"];
m2_155 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234"];
m2_156 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235"];
m2_157 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236"];
m2_158 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237"];
m2_159 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238"];
m2_160 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240"];
m2_161 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241"];
m2_162 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242"];
m2_163 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243"];
m2_164 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244"];
m2_165 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245"];
m2_166 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246"];
m2_167 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248"];
m2_168 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249"];
m2_169 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250"];
m2_170 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251"];
m2_171 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252"];
m2_172 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253"];
m2_173 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254"];
m2_174 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256"];
m2_175 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257"];
m2_176 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258"];
m2_177 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259"];
m2_178 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260"];
m2_179 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261"];
m2_180 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262"];
m2_181 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264"];
m2_182 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265"];
m2_183 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266"];
m2_184 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267"];
m2_185 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268"];
m2_186 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269"];
m2_187 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270"];
m2_188 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272"];
m2_189 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273"];
m2_190 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274"];
m2_191 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275"];
m2_192 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276"];
m2_193 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277"];
m2_194 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278"];
m2_195 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m2_66 [cluster="Unk.IsInstanceOf", file="LeanDataTests.cs", label="Entry Unk.IsInstanceOf", span=""];
m2_213 [cluster="System.Collections.Generic.List<T>.List()", file="LeanDataTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_30 [cluster="string.Split(params char[])", file="LeanDataTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_63 [cluster="object.GetType()", file="LeanDataTests.cs", label="Entry object.GetType()", span="0-0"];
m2_104 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m2_119 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m2_216 [cluster="Unk.ToArray", file="LeanDataTests.cs", label="Entry Unk.ToArray", span=""];
m2_64 [cluster="System.Activator.CreateInstance(System.Type)", file="LeanDataTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m2_4 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m2_227 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m2_256 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Data = data", span="468-468"];
m2_257 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="SecurityType = securityType", span="469-469"];
m2_258 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Resolution = resolution", span="470-470"];
m2_259 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="ExpectedLine = expectedLine", span="471-471"];
m2_260 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is Tick", span="472-472"];
m2_261 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="var tick = (Tick) data", span="474-474"];
m2_263 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is TradeBar", span="477-477"];
m2_265 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is QuoteBar", span="481-481"];
m2_268 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="491-491"];
m2_271 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name = SecurityType + ''_'' + data.GetType().Name", span="498-498"];
m2_272 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="500-500"];
m2_274 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is Tick", span="505-505"];
m2_275 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name += ''_'' + ((Tick) data).TickType", span="507-507"];
m2_262 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = tick.TickType", span="475-475"];
m2_264 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Trade", span="479-479"];
m2_266 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Quote", span="483-483"];
m2_267 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="throw new NotImplementedException();", span="487-487"];
m2_269 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Quote", span="493-493"];
m2_270 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="496-496"];
m2_273 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name += ''_'' + Resolution", span="502-502"];
m2_276 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m2_243 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="ExpectedZipEntryName = expectedZipEntryName", span="441-441"];
m2_214 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m2_238 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Symbol = symbol", span="436-436"];
m2_239 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Date = date", span="437-437"];
m2_240 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Resolution = resolution", span="438-438"];
m2_241 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="TickType = tickType", span="439-439"];
m2_242 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="ExpectedZipFileName = expectedZipFileName", span="440-440"];
m2_244 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="442-442"];
m2_246 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Name = SecurityType + ''_'' + resolution", span="445-445"];
m2_247 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="447-447"];
m2_248 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="448-448"];
m2_250 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="452-452"];
m2_245 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="443-443"];
m2_249 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="BaseDataType = typeof(QuoteBar)", span="450-450"];
m2_251 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m2_81 [cluster="string.Substring(int, int)", file="LeanDataTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_235 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="416-416"];
m2_217 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="349-349"];
m2_218 [cluster="lambda expression", file="LeanDataTests.cs", label="new TestCaseData(x).SetName(x.Name)", span="349-349"];
m2_219 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="349-349"];
m2_236 [cluster="lambda expression", file="LeanDataTests.cs", label="new TestCaseData(x).SetName(x.Name)", span="416-416"];
m2_237 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="416-416"];
m2_87 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="expected += ''#'' + parameters.ExpectedZipEntryName", span="143-143"];
m2_82 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m2_83 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var factory = (BaseData)Activator.CreateInstance(parameters.BaseDataType)", span="138-138"];
m2_84 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var source = factory.GetSource(parameters.Config, parameters.Date, false)", span="139-139"];
m2_85 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var expected = parameters.ExpectedZipFilePath", span="140-140"];
m2_86 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="parameters.SecurityType == SecurityType.Option", span="141-141"];
m2_88 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected, source.Source)", span="145-145"];
m2_89 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m2_114 [cluster="Unk.IsFalse", file="LeanDataTests.cs", label="Entry Unk.IsFalse", span=""];
m2_233 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m2_234 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m2_230 [cluster="System.TimeSpan.FromMinutes(double)", file="LeanDataTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m2_253 [cluster="char.ToString()", file="LeanDataTests.cs", label="Entry char.ToString()", span="0-0"];
m2_197 [cluster="System.DateTime.Parse(string)", file="LeanDataTests.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m2_31 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m2_32 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var factory = (BaseData) Activator.CreateInstance(parameters.Data.GetType())", span="81-81"];
m2_33 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var parsed = factory.Reader(parameters.Config, parameters.ExpectedLine, parameters.Data.Time.Date, false)", span="82-82"];
m2_34 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.IsInstanceOf(parameters.Config.Type, parsed)", span="84-84"];
m2_35 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.Data.Time, parsed.Time)", span="85-85"];
m2_36 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.Data.EndTime, parsed.EndTime)", span="86-86"];
m2_37 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.Data.Symbol, parsed.Symbol)", span="87-87"];
m2_38 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.Data.Value, parsed.Value)", span="88-88"];
m2_40 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var expected = (Tick) parameters.Data", span="91-91"];
m2_51 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var expected = (TradeBar) parameters.Data", span="104-104"];
m2_56 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var expected = (QuoteBar) parameters.Data", span="111-111"];
m2_39 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parsed is Tick", span="89-89"];
m2_41 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var actual = (Tick) parsed", span="92-92"];
m2_50 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parsed is TradeBar", span="102-102"];
m2_52 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var actual = (TradeBar) parsed", span="105-105"];
m2_55 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parsed is QuoteBar", span="109-109"];
m2_57 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var actual = (QuoteBar) parsed", span="112-112"];
m2_42 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="93-93"];
m2_43 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.BidPrice, actual.BidPrice)", span="94-94"];
m2_44 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.AskPrice, actual.AskPrice)", span="95-95"];
m2_45 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.BidSize, actual.BidSize)", span="96-96"];
m2_46 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.AskSize, actual.AskSize)", span="97-97"];
m2_47 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Exchange, actual.Exchange)", span="98-98"];
m2_48 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.SaleCondition, actual.SaleCondition)", span="99-99"];
m2_49 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Suspicious, actual.Suspicious)", span="100-100"];
m2_53 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="AssertBarsAreEqual(expected, actual)", span="106-106"];
m2_54 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Volume, actual.Volume)", span="107-107"];
m2_58 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="113-113"];
m2_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="114-114"];
m2_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="115-115"];
m2_61 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.LastAskSize, actual.LastAskSize)", span="116-116"];
m2_62 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m2_141 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m2_212 [cluster="System.DateTime.DateTime(int, int, int)", file="LeanDataTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m2_232 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m2_113 [cluster="Unk.IsTrue", file="LeanDataTests.cs", label="Entry Unk.IsTrue", span=""];
m2_115 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m2_116 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181"];
m2_117 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182"];
m2_118 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m2_277 [cluster="System.NotImplementedException.NotImplementedException()", file="LeanDataTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m2_220 [cluster="TestCaseData.cstr", file="LeanDataTests.cs", label="Entry TestCaseData.cstr", span=""];
m2_120 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m2_121 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="DateTime date", span="188-188"];
m2_122 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Symbol symbol", span="189-189"];
m2_123 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Resolution resolution", span="190-190"];
m2_124 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192"];
m2_125 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193"];
m2_126 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195"];
m2_127 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196"];
m2_128 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198"];
m2_129 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199"];
m2_130 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var  emptyPath = ''''", span="201-201"];
m2_131 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202"];
m2_132 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="string nullPath = null", span="204-204"];
m2_133 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205"];
m2_134 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207"];
m2_135 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208"];
m2_136 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210"];
m2_137 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211"];
m2_138 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213"];
m2_139 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214"];
m2_140 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m2_196 [cluster="string.ToLower()", file="LeanDataTests.cs", label="Entry string.ToLower()", span="0-0"];
m2_21 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m2_22 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var line = LeanData.GenerateLine(parameters.Data, parameters.SecurityType, parameters.Resolution)", span="63-63"];
m2_23 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedLine, line)", span="64-64"];
m2_24 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parameters.Config.Type == typeof(QuoteBar)", span="66-66"];
m2_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parameters.Config.Type == typeof(TradeBar)", span="71-71"];
m2_25 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(line.Split(',').Length, 11)", span="68-68"];
m2_27 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(line.Split(',').Length, 6)", span="73-73"];
m2_28 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m2_68 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m2_69 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="123-123"];
m2_71 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125"];
m2_70 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var normalizedSourcePath = new FileInfo(source.Source).FullName", span="124-124"];
m2_73 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127"];
m2_75 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="normalizedSourcePath = normalizedSourcePath.Substring(0, indexOfHash)", span="130-130"];
m2_76 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(normalizeZipFilePath, normalizedSourcePath)", span="132-132"];
m2_72 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126"];
m2_74 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="indexOfHash > 0", span="128-128"];
m2_77 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m2_0 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m2_1 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var zip = LeanData.GenerateZipFileName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="35-35"];
m2_2 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedZipFileName, zip)", span="36-36"];
m2_3 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m2_5 [cluster="Unk.AreEqual", file="LeanDataTests.cs", label="Entry Unk.AreEqual", span=""];
m2_231 [cluster="System.TimeSpan.FromDays(double)", file="LeanDataTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m2_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m2_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var path = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="56-56"];
m2_18 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedZipFilePath, path)", span="57-57"];
m2_19 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m2_207 [cluster="Unk.Fail", file="LeanDataTests.cs", label="Entry Unk.Fail", span=""];
m2_254 [cluster="string.Replace(string, string)", file="LeanDataTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_90 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m2_91 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var tickType = typeof(Tick)", span="151-151"];
m2_92 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var openInterestType = typeof(OpenInterest)", span="152-152"];
m2_95 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tickType)", span="156-156"];
m2_96 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157"];
m2_93 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var quoteBarType = typeof(QuoteBar)", span="153-153"];
m2_97 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159"];
m2_98 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160"];
m2_94 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var tradeBarType = typeof(TradeBar)", span="154-154"];
m2_99 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162"];
m2_100 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163"];
m2_101 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165"];
m2_102 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166"];
m2_103 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m2_222 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m2_223 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs", label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="354-354"];
m2_224 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", color=red, community=0, file="LeanDataTests.cs", label="1: return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // crypto - trades\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,,,,,0,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.BTCUSD, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''gdax'', Suspicious = false, Quantity = 5}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.BTCUSD, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''gdax'', Suspicious = false}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="355-416"];
m2_225 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m2_9 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m2_6 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m2_7 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var entry = LeanData.GenerateZipEntryName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="42-42"];
m2_8 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedZipEntryName, entry)", span="43-43"];
m2_78 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m2_252 [cluster="System.IO.Path.Combine(string, string)", file="LeanDataTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m2_112 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m2_226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LeanDataTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m2_79 [cluster="System.IO.FileInfo.FileInfo(string)", file="LeanDataTests.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m2_15 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m2_105 [cluster="Unk.AreNotEqual", file="LeanDataTests.cs", label="Entry Unk.AreNotEqual", span=""];
m2_10 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m2_65 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m2_215 [cluster="Unk.Select", file="LeanDataTests.cs", label="Entry Unk.Select", span=""];
m2_221 [cluster="Unk.SetName", file="LeanDataTests.cs", label="Entry Unk.SetName", span=""];
m2_67 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m2_198 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="expected == null && actual == null", span="283-283"];
m2_200 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="expected == null && actual != null", span="287-287"];
m2_202 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291"];
m2_203 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.High, actual.High)", span="292-292"];
m2_204 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293"];
m2_205 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294"];
m2_199 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="return;", span="285-285"];
m2_201 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.Fail(''Expected null bar'')", span="289-289"];
m2_206 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m2_208 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m2_209 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="var date = new DateTime(2016, 02, 17)", span="299-299"];
m2_210 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n                // Crypto - trades\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_tick_trade.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_second_trade.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_minute_trade.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/daily''),\r\n\r\n                // Crypto -quotes\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_tick_quote.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_second_quote.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_minute_quote.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-349"];
m2_211 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m2_228 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m2_106 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m2_107 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172"];
m2_108 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173"];
m2_109 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174"];
m2_110 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.IsCommonLeanDataType(typeof(Bitcoin)))", span="175-175"];
m2_111 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m2_229 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m2_278 [file="LeanDataTests.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span=""];
m2_279 [file="LeanDataTests.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span=""];
m3_20 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Second", span="83-83"];
m3_67 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m3_74 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var rows = new SortedDictionary<DateTime, string>()", span="181-181"];
m3_75 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var zip = ZipFile.Read(fileName)", span="183-183"];
m3_84 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="return rows;", span="202-202"];
m3_83 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="rows[time] = line", span="196-196"];
m3_76 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var stream = new MemoryStream()", span="185-185"];
m3_77 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="zip[0].Extract(stream)", span="187-187"];
m3_81 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="(line = reader.ReadLine()) != null", span="193-193"];
m3_82 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var time = DateTime.ParseExact(line.Substring(0, DateFormat.TwelveCharacter.Length), DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="195-195"];
m3_78 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="stream.Seek(0, SeekOrigin.Begin)", span="188-188"];
m3_79 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var reader = new StreamReader(stream)", span="190-190"];
m3_80 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="string line", span="192-192"];
m3_85 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m3_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m3_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="LeanDataWriter.cs", label="unit.CachedOrderIDs.TryAdd(1, order)", span="28-28"];
m3_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="LeanDataWriter.cs", label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="29-29"];
m3_18 [cluster="System.Collections.Generic.List<T>.List()", file="LeanDataWriter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_22 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="LeanDataWriter.cs", label="MessageReceivedEventArgs args = new MessageReceivedEventArgs(json)", span="34-34"];
m3_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="LeanDataWriter.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25"];
m3_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="LeanDataWriter.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m3_17 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m3_21 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m3_23 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="LeanDataWriter.cs", label="return args;", span="36-36"];
m3_0 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m3_1 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_securityType = symbol.ID.SecurityType", span="50-50"];
m3_2 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataDirectory = dataDirectory", span="51-51"];
m3_44 [cluster="System.Text.StringBuilder.ToString()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_45 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m3_101 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226"];
m3_95 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="var tempFilePath = filePath + ''.tmp''", span="213-213"];
m3_96 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="data = data.TrimEnd()", span="215-215"];
m3_100 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223"];
m3_102 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Move(tempFilePath, filePath)", span="229-229"];
m3_97 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Exists(filePath)", span="216-216"];
m3_98 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Delete(filePath)", span="218-218"];
m3_99 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219"];
m3_103 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231"];
m3_104 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m3_71 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m3_72 [cluster="lambda expression", file="LeanDataWriter.cs", label="LeanData.GenerateLine(x, _securityType, _resolution)", span="144-144"];
m3_68 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m3_73 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m3_69 [cluster="lambda expression", file="LeanDataWriter.cs", label="x.Time", span="144-144"];
m3_70 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m3_111 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m3_93 [cluster="string.Substring(int, int)", file="LeanDataWriter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_92 [cluster="System.IO.StreamReader.ReadLine()", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m3_64 [cluster="SortedDictionary<DateTime, string>.cstr", file="LeanDataWriter.cs", label="Entry SortedDictionary<DateTime, string>.cstr", span=""];
m3_12 [cluster="string.ToLower()", file="LeanDataWriter.cs", label="Entry string.ToLower()", span="0-0"];
m3_13 [cluster="System.Exception.Exception(string)", file="LeanDataWriter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_25 [cluster="MessageReceivedEventArgs.cstr", file="LeanDataWriter.cs", label="Entry MessageReceivedEventArgs.cstr", span=""];
m3_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="111-111"];
m3_33 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="112-112"];
m3_36 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="119-119"];
m3_38 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="125-125"];
m3_39 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="126-126"];
m3_27 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="98-98"];
m3_31 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="108-108"];
m3_26 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var sb = new StringBuilder()", span="97-97"];
m3_34 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Clear()", span="113-113"];
m3_28 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=source, span="102-102"];
m3_35 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime = data.Time", span="116-116"];
m3_37 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="123-123"];
m3_29 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="data.Time < lastTime", span="105-105"];
m3_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="105-105"];
m3_40 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m3_112 [cluster="System.IO.File.Move(string, string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Move(string, string)", span="0-0"];
m3_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m3_11 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m3_109 [cluster="System.IO.Directory.CreateDirectory(string)", file="LeanDataWriter.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m3_105 [cluster="string.TrimEnd(params char[])", file="LeanDataWriter.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m3_115 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m3_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LeanDataWriter.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m3_4 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="LeanDataWriter.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m3_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="LeanDataWriter.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m3_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataWriter.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m3_7 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="LeanDataWriter.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m3_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="LeanDataWriter.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", span="21-22"];
m3_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="LeanDataWriter.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m3_10 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="throw new Exception(''Sorry this security type is not yet supported by the LEAN data writer: '' + _securityType);", span="65-65"];
m3_94 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataWriter.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m3_24 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m3_106 [cluster="System.IO.File.Delete(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m3_51 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="141-141"];
m3_52 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144"];
m3_62 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172"];
m3_50 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="138-138"];
m3_54 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="File.Exists(outputFile)", span="147-147"];
m3_55 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150"];
m3_53 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="SortedDictionary<DateTime, string> rows", span="145-145"];
m3_56 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=newRows, span="151-151"];
m3_58 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = newRows", span="159-159"];
m3_49 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var sb = new StringBuilder()", span="137-137"];
m3_61 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="170-170"];
m3_60 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166"];
m3_57 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows[kvp.Key] = kvp.Value", span="153-153"];
m3_59 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=rows, span="163-163"];
m3_63 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m3_46 [cluster="System.Text.StringBuilder.Clear()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Clear()", span="0-0"];
m3_43 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m3_113 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", color=green, community=0, file="LeanDataWriter.cs", label="1: return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242"];
m3_114 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m3_66 [cluster="System.IO.File.Exists(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m3_48 [cluster="System.Text.StringBuilder.Append(string)", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_108 [cluster="System.IO.Path.GetDirectoryName(string)", file="LeanDataWriter.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m3_87 [cluster="Unk.Read", file="LeanDataWriter.cs", label="Entry Unk.Read", span=""];
m3_90 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m3_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_91 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m3_86 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="LeanDataWriter.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m3_107 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanDataWriter.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m3_89 [cluster="Unk.Extract", file="LeanDataWriter.cs", label="Entry Unk.Extract", span=""];
m3_42 [cluster="System.DateTime.DateTime()", file="LeanDataWriter.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m3_65 [cluster="Unk.ToDictionary", file="LeanDataWriter.cs", label="Entry Unk.ToDictionary", span=""];
m3_88 [cluster="System.IO.MemoryStream.MemoryStream()", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m3_116 [file="LeanDataWriter.cs", label="QuantConnect.ToolBox.LeanDataWriter", span=""];
m4_25 [cluster="Unk.Where", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Where", span=""];
m4_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m4_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="ScheduledEvent scheduledEvent", span="182-182"];
m4_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="183-183"];
m4_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m4_88 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m4_28 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="74-78"];
m4_29 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date)", span="77-77"];
m4_31 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="84-84"];
m4_30 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="74-78"];
m4_32 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="!x.IsInternalFeed()", span="84-84"];
m4_33 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="84-84"];
m4_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m4_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m4_26 [cluster="Unk.EverySecurityEndOfDay", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.EverySecurityEndOfDay", span=""];
m4_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m4_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource.Cancel()", span="211-211"];
m4_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m4_54 [cluster="System.Convert.ToInt32(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m4_59 [cluster="System.Exception.Exception(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_53 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m4_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m4_61 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="date = date.Date", span="149-149"];
m4_62 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values", span="152-152"];
m4_63 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var marketHours = _api.MarketToday(date, security.Symbol)", span="154-154"];
m4_64 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="155-155"];
m4_65 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="156-156"];
m4_66 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="157-158"];
m4_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m4_68 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m4_56 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m4_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m4_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m4_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="1: _isActive = true", span="105-105"];
m4_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="108-108"];
m4_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var time = DateTime.UtcNow", span="111-111"];
m4_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="1: _isActive = false", span="140-140"];
m4_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="114-114"];
m4_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="115-115"];
m4_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.Scan(time)", span="123-123"];
m4_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="116-116"];
m4_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="119-119"];
m4_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=ScheduledEventException, span="125-125"];
m4_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="127-127"];
m4_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Error(errorMessage)", span="129-129"];
m4_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_resultHandler.RuntimeError(errorMessage)", span="131-131"];
m4_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="135-135"];
m4_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="141-141"];
m4_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m4_69 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m4_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m4_27 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m4_55 [cluster="System.Threading.Thread.Sleep(int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m4_21 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m4_34 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m4_20 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m4_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m4_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m4_22 [cluster="ScheduledEvent.cstr", file="LiveTradingRealTimeHandler.cs", label="Entry ScheduledEvent.cstr", span=""];
m4_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m4_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_api = api", span="59-59"];
m4_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_algorithm = algorithm", span="60-60"];
m4_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_resultHandler = resultHandler", span="61-61"];
m4_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="93-93"];
m4_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m4_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m4_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m4_7 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="70-72"];
m4_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.AlgorithmEndOfDayDelta, DateTime.UtcNow))", span="81-81"];
m4_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", span="87-87"];
m4_8 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", span="74-78"];
m4_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed())", span="84-84"];
m4_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="90-90"];
m4_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="95-95"];
m4_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m4_70 [cluster="Unk.Format", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Format", span=""];
m4_23 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m4_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_algorithm != null", span="168-168"];
m4_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="170-170"];
m4_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="173-173"];
m4_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m4_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m4_19 [cluster="System.DateTime.AddDays(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_24 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m4_52 [cluster="System.TimeSpan.FromSeconds(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_58 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m4_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m4_89 [file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m5_334 [cluster="QuantConnect.Holding.Holding()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m5_122 [cluster="Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", span="30-30"];
m5_116 [cluster="Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", span="1979-1979"];
m5_136 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m5_137 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession != null", span="303-303"];
m5_138 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession.DataReceived -= OnPricingDataReceived", span="305-305"];
m5_139 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession.StopSession()", span="306-306"];
m5_140 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m5_8 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="OandaRestApiV20.cs", label="throw new ArgumentNullException(''transactions'');", span="153-153"];
m5_7 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="OandaRestApiV20.cs", label="transactions == null", span="151-151"];
m5_215 [cluster="Oanda.RestV20.Api.DefaultApi.GetBasePath()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetBasePath()", span="1911-1911"];
m5_44 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="221-221"];
m5_195 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_161 [cluster="Unk.ToString", file="OandaRestApiV20.cs", label="Entry Unk.ToString", span=""];
m5_274 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m5_257 [cluster="System.DateTime.ToString(string)", file="OandaRestApiV20.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_30 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192"];
m5_31 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OandaRestApiV20.cs", label="var setupHandlerTypeName = Config.Get(''setup-handler'', ''ConsoleSetupHandler'')", span="194-194"];
m5_33 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", color=green, community=0, file="OandaRestApiV20.cs", label="0: var realTimeHandlerTypeName = Config.Get(''real-time-handler'', ''BacktestingRealTimeHandler'')", span="196-196"];
m5_32 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OandaRestApiV20.cs", label="var transactionHandlerTypeName = Config.Get(''transaction-handler'', ''BacktestingTransactionHandler'')", span="195-195"];
m5_34 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OandaRestApiV20.cs", label="var dataFeedHandlerTypeName = Config.Get(''data-feed-handler'', ''FileSystemDataFeed'')", span="197-197"];
m5_15 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="OandaRestApiV20.cs", label="factorFileProvider == null", span="167-167"];
m5_40 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m5_35 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", span="3406-3406"];
m5_36 [cluster="System.Collections.Generic.List<T>.List()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m5_38 [cluster="string.ToDecimal()", file="OandaRestApiV20.cs", label="Entry string.ToDecimal()", span="248-248"];
m5_39 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", span="466-466"];
m5_41 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetPrices(Authorization, AccountId, instruments)", span="138-138"];
m5_191 [cluster="Unk.GetTickDateTimeFromString", file="OandaRestApiV20.cs", label="Entry Unk.GetTickDateTimeFromString", span=""];
m5_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_189 [cluster="Unk.GetBrokerageSecurityType", file="OandaRestApiV20.cs", label="Entry Unk.GetBrokerageSecurityType", span=""];
m5_220 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="OandaRestApiV20.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m5_78 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_372 [cluster="Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m5_315 [cluster="NotSupportedException.cstr", file="OandaRestApiV20.cs", label="Entry NotSupportedException.cstr", span=""];
m5_77 [cluster="Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", span="96-96"];
m5_24 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="OandaRestApiV20.cs", label="_commandQueue = commandQueue", span="180-180"];
m5_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_79 [cluster="System.Convert.ToDecimal(string)", file="OandaRestApiV20.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m5_106 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m5_112 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="_apiRest.CancelOrder(Authorization, AccountId, orderId)", span="259-259"];
m5_113 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Oanda Cancel Order Event'') { Status = OrderStatus.Canceled })", span="260-260"];
m5_111 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId", span="257-257"];
m5_107 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): '' + order)", span="249-249"];
m5_108 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="!order.BrokerId.Any()", span="251-251"];
m5_114 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="263-263"];
m5_110 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return false;", span="254-254"];
m5_109 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="253-253"];
m5_115 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m5_141 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m5_142 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="return OandaBrokerage.GetDateTimeFromString(time.Remove(25, 3));", span="317-317"];
m5_143 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m5_135 [cluster="Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", span="34-34"];
m5_374 [cluster="System.NotSupportedException.NotSupportedException(string)", file="OandaRestApiV20.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m5_223 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m5_224 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/transactions/stream''", span="446-446"];
m5_227 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="450-450"];
m5_228 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Headers[OandaAgentKey] = Agent", span="451-451"];
m5_225 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var request = WebRequest.CreateHttp(requestString)", span="448-448"];
m5_226 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Method = ''GET''", span="449-449"];
m5_229 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="return request.GetResponse();", span="455-455"];
m5_232 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="throw;", span="461-461"];
m5_235 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="throw new Exception(reader.ReadToEnd());", span="467-467"];
m5_231 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="ex.Response == null", span="459-459"];
m5_234 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var reader = new StreamReader(stream)", span="465-465"];
m5_230 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label=WebException, span="457-457"];
m5_233 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var stream = GetResponseStream(ex.Response)", span="464-464"];
m5_236 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m5_84 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m5_222 [cluster="System.IO.StreamReader.ReadToEnd()", file="OandaRestApiV20.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m5_312 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m5_80 [cluster="System.Convert.ToInt32(string)", file="OandaRestApiV20.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m5_0 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m5_1 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", color=green, community=0, file="OandaRestApiV20.cs", label="0: var basePathRest = environment == Environment.Trade ? \r\n                ''https://api-fxtrade.oanda.com/v3'' : \r\n                ''https://api-fxpractice.oanda.com/v3''", span="66-68"];
m5_3 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiRest = new DefaultApi(basePathRest)", span="74-74"];
m5_5 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiStreaming = new DefaultApi(basePathStreaming)", span="77-77"];
m5_9 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m5_11 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="return response.Instruments.Select(x => x.Name).ToList();", span="87-87"];
m5_13 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", span="3245-3245"];
m5_17 [cluster="lambda expression", file="OandaRestApiV20.cs", label="x.Name", span="87-87"];
m5_19 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="95-95"];
m5_20 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="var json = _apiRest.ListPendingOrdersAsJson(Authorization, AccountId)", span="97-97"];
m5_21 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="var response = (JObject)JsonConvert.DeserializeObject(json)", span="99-99"];
m5_22 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="return response[''orders''].Select(ConvertOrder).ToList();", span="101-101"];
m5_23 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="95-95"];
m5_25 [cluster="Unk.DeserializeObject", file="OandaRestApiV20.cs", label="Entry Unk.DeserializeObject", span=""];
m5_26 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m5_27 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="var response = _apiRest.ListOpenPositions(Authorization, AccountId)", span="110-110"];
m5_2 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", color=green, community=0, file="OandaRestApiV20.cs", label="0: var basePathStreaming = environment == Environment.Trade ? \r\n                ''https://stream-fxtrade.oanda.com/v3'' : \r\n                ''https://stream-fxpractice.oanda.com/v3''", span="70-72"];
m5_4 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiRest.Configuration.AddDefaultHeader(OandaAgentKey, Agent)", span="75-75"];
m5_6 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m5_10 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="var response = _apiRest.GetAccountInstruments(Authorization, AccountId)", span="85-85"];
m5_12 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m5_14 [cluster="Unk.Select", file="OandaRestApiV20.cs", label="Entry Unk.Select", span=""];
m5_16 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Entry lambda expression", span="87-87"];
m5_18 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="87-87"];
m5_28 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="return response.Positions.Select(ConvertHolding).ToList();", span="112-112"];
m5_46 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="OandaRestApiV20.cs", label="CommandQueue.Dispose()", span="224-224"];
m5_50 [cluster="lambda expression", file="OandaRestApiV20.cs", label="new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }", span="143-143"];
m5_85 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Entry lambda expression", span="180-180"];
m5_86 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Convert.ToInt32(trade.Units)", span="180-180"];
m5_49 [cluster="lambda expression", file="OandaRestApiV20.cs", label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", span=""];
m5_51 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="143-143"];
m5_87 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="180-180"];
m5_47 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="221-221"];
m5_48 [cluster="System.IDisposable.Dispose()", file="OandaRestApiV20.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_260 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m5_335 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="CandlestickGranularity interval", span="684-684"];
m5_336 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label=resolution, span="686-686"];
m5_345 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="throw new ArgumentException(''Unsupported resolution: '' + resolution);", span="705-705"];
m5_346 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="return interval;", span="708-708"];
m5_337 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Second", span="688-688"];
m5_339 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Minute", span="692-692"];
m5_341 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Hour", span="696-696"];
m5_343 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Daily", span="700-700"];
m5_338 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.S5", span="689-689"];
m5_340 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.M1", span="693-693"];
m5_342 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.H1", span="697-697"];
m5_344 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.D", span="701-701"];
m5_347 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m5_275 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m5_146 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m5_159 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", color=green, community=0, file="OandaRestApiV20.cs", label="0: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                        {\r\n                            Status = OrderStatus.Filled,\r\n                            FillPrice = transaction.Price.ToDecimal(),\r\n                            FillQuantity = Convert.ToInt32(transaction.Units)\r\n                        })", span="347-352"];
m5_154 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var transaction = obj.ToObject<OrderFillTransaction>()", span="339-339"];
m5_155 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var order = OrderProvider.GetOrderByBrokerageId(transaction.OrderID)", span="341-341"];
m5_158 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="346-346"];
m5_151 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label=LockerConnectionMonitor, span="332-332"];
m5_152 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="334-334"];
m5_157 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="344-344"];
m5_147 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="326-326"];
m5_153 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="''ORDER_FILL''", span="338-338"];
m5_156 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="order != null", span="342-342"];
m5_150 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="''HEARTBEAT''", span="331-331"];
m5_148 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var type = obj[''type''].ToString()", span="327-327"];
m5_149 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label=type, span="329-329"];
m5_160 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m5_129 [cluster="Oanda.RestV20.Session.StreamSession.StopSession()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.StreamSession.StopSession()", span="73-73"];
m5_54 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m5_70 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="1: order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="186-186"];
m5_69 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="185-185"];
m5_71 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="1: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="187-187"];
m5_72 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="1: order.Type == OrderType.Market", span="189-189"];
m5_73 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="1: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = marketOrderFillPrice,\r\n                    FillQuantity = marketOrderFillQuantity\r\n                })", span="192-197"];
m5_74 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="200-200"];
m5_59 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderFillPrice = 0m", span="161-161"];
m5_62 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillPrice = Convert.ToDecimal(fill.Price)", span="166-166"];
m5_64 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeOpened.Units)", span="170-170"];
m5_66 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeReduced.Units)", span="175-175"];
m5_68 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity += fill.TradesClosed.Sum(trade => Convert.ToInt32(trade.Units))", span="180-180"];
m5_60 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderFillQuantity = 0", span="162-162"];
m5_55 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var request = GenerateOrderRequest(order)", span="154-154"];
m5_56 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var response = _apiRest.CreateOrder(Authorization, AccountId, request)", span="155-155"];
m5_57 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId.Add(response.Data.OrderCreateTransaction.Id)", span="157-157"];
m5_61 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.Type == OrderType.Market", span="164-164"];
m5_67 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradesClosed != null && fill.TradesClosed.Count > 0", span="178-178"];
m5_58 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var fill = response.Data.OrderFillTransaction", span="160-160"];
m5_63 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradeOpened != null && fill.TradeOpened.TradeID.Length > 0", span="168-168"];
m5_65 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradeReduced != null && fill.TradeReduced.TradeID.Length > 0", span="173-173"];
m5_75 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m5_314 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m5_316 [cluster="Unk.Add", file="OandaRestApiV20.cs", label="Entry Unk.Add", span=""];
m5_42 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m5_43 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m5_219 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m5_237 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="var stream = response.GetResponseStream()", span="474-474"];
m5_238 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="response.Headers[''Content-Encoding''] == ''gzip''", span="475-475"];
m5_241 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="return stream;", span="480-480"];
m5_239 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="stream != null", span="478-478"];
m5_240 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="stream = new GZipStream(stream, CompressionMode.Decompress)", span="478-478"];
m5_242 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m5_261 [cluster="System.Enum.ToString()", file="OandaRestApiV20.cs", label="Entry System.Enum.ToString()", span="0-0"];
m5_197 [cluster="Unk.Last", file="OandaRestApiV20.cs", label="Entry Unk.Last", span=""];
m5_165 [cluster="Unk.ToInt32", file="OandaRestApiV20.cs", label="Entry Unk.ToInt32", span=""];
m5_198 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m5_373 [cluster="Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m5_144 [cluster="string.Remove(int, int)", file="OandaRestApiV20.cs", label="Entry string.Remove(int, int)", span="0-0"];
m5_124 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m5_125 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession != null", span="281-281"];
m5_126 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.DataReceived -= OnTransactionDataReceived", span="283-283"];
m5_127 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.StopSession()", span="284-284"];
m5_128 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m5_102 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m5_332 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", span="936-936"];
m5_45 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="OandaRestApiV20.cs", label="Setup.Dispose()", span="223-223"];
m5_263 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m5_196 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="OandaRestApiV20.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m5_262 [cluster="Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", span="3732-3732"];
m5_192 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_145 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", span="256-256"];
m5_193 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m5_163 [cluster="Unk.GetOrderByBrokerageId", file="OandaRestApiV20.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m5_105 [cluster="Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", span="167-167"];
m5_221 [cluster="System.Exception.Exception(string)", file="OandaRestApiV20.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m5_264 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m5_265 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="531-531"];
m5_268 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''BA'', ToGranularity(resolution).ToString(), OandaBrokerage.MaxBarsPerRequest, startUtc)", span="537-537"];
m5_272 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="yield return new QuoteBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    new Bar(\r\n                        candle.Bid.O.ToDecimal(),\r\n                        candle.Bid.H.ToDecimal(),\r\n                        candle.Bid.L.ToDecimal(),\r\n                        candle.Bid.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    new Bar(\r\n                        candle.Ask.O.ToDecimal(),\r\n                        candle.Ask.H.ToDecimal(),\r\n                        candle.Ask.L.ToDecimal(),\r\n                        candle.Ask.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    period);", span="544-561"];
m5_266 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="532-532"];
m5_267 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="535-535"];
m5_269 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="response.Candles", span="538-538"];
m5_271 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="time > endTimeUtc", span="541-541"];
m5_270 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="540-540"];
m5_273 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m5_333 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="914-914"];
m5_348 [cluster="System.ArgumentException.ArgumentException(string)", file="OandaRestApiV20.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_367 [cluster="Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="192-192"];
m5_371 [cluster="decimal.ToString(System.IFormatProvider)", file="OandaRestApiV20.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m5_245 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m5_246 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="494-494"];
m5_250 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''M'', ToGranularity(resolution).ToString(), null, startUtc, endUtc)", span="501-501"];
m5_254 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="yield return new TradeBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    candle.Bid.O.ToDecimal(),\r\n                    candle.Bid.H.ToDecimal(),\r\n                    candle.Bid.L.ToDecimal(),\r\n                    candle.Bid.C.ToDecimal(),\r\n                    0,\r\n                    period);", span="508-516"];
m5_247 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="495-495"];
m5_248 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var endUtc = endTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="496-496"];
m5_249 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="499-499"];
m5_251 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="response.Candles", span="502-502"];
m5_253 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="time > endTimeUtc", span="505-505"];
m5_252 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="504-504"];
m5_255 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m5_194 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m5_76 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m5_349 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var instrument = SymbolMapper.GetBrokerageSymbol(order.Symbol)", span="718-718"];
m5_350 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="string request", span="720-720"];
m5_353 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderRequest = new MarketOrderRequest\r\n                    {\r\n                        Type = MarketOrderRequest.TypeEnum.MARKET,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString()\r\n                    }", span="724-729"];
m5_356 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var limitOrderRequest = new LimitOrderRequest\r\n                    {\r\n                        Type = LimitOrderRequest.TypeEnum.LIMIT,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((LimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="734-740"];
m5_359 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketIfTouchedOrderRequest = new MarketIfTouchedOrderRequest\r\n                    {\r\n                        Type = MarketIfTouchedOrderRequest.TypeEnum.MARKETIFTOUCHED,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopMarketOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="745-751"];
m5_362 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var stopOrderRequest = new StopOrderRequest\r\n                    {\r\n                        Type = StopOrderRequest.TypeEnum.STOP,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopLimitOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture),\r\n                        PriceBound = ((StopLimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="756-763"];
m5_351 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.Type", span="721-721"];
m5_364 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="throw new NotSupportedException(''The order type '' + order.Type + '' is not supported.'');", span="768-768"];
m5_352 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.Market", span="723-723"];
m5_354 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = marketOrderRequest })", span="730-730"];
m5_355 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.Limit", span="733-733"];
m5_357 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = limitOrderRequest })", span="741-741"];
m5_358 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.StopMarket", span="744-744"];
m5_360 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = marketIfTouchedOrderRequest })", span="752-752"];
m5_361 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.StopLimit", span="755-755"];
m5_363 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = stopOrderRequest })", span="764-764"];
m5_365 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return request;", span="771-771"];
m5_366 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m5_244 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", file="OandaRestApiV20.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", span="0-0"];
m5_317 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m5_318 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(position.Instrument)", span="647-647"];
m5_319 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var symbol = SymbolMapper.GetLeanSymbol(position.Instrument, securityType, Market.Oanda)", span="648-648"];
m5_325 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="averagePrice = position._Long.AveragePrice.ToDecimal()", span="657-657"];
m5_328 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="averagePrice = position._Short.AveragePrice.ToDecimal()", span="662-662"];
m5_322 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="decimal averagePrice = 0", span="653-653"];
m5_323 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var quantity = 0", span="654-654"];
m5_320 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var longUnits = Convert.ToInt32(position._Long.Units)", span="650-650"];
m5_321 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var shortUnits = Convert.ToInt32(position._Short.Units)", span="651-651"];
m5_330 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = securityType,\r\n                AveragePrice = averagePrice,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                Quantity = quantity\r\n            };", span="666-674"];
m5_324 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="longUnits > 0", span="655-655"];
m5_326 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="quantity = longUnits", span="658-658"];
m5_327 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="shortUnits < 0", span="660-660"];
m5_329 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="quantity = shortUnits", span="663-663"];
m5_331 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m5_52 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m5_259 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m5_166 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m5_171 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=LockerConnectionMonitor, span="370-370"];
m5_172 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="372-372"];
m5_175 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(data.Instrument)", span="379-379"];
m5_176 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var symbol = SymbolMapper.GetLeanSymbol(data.Instrument, securityType, Market.Oanda)", span="380-380"];
m5_177 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(data.Time)", span="381-381"];
m5_179 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="385-385"];
m5_181 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="388-388"];
m5_186 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=Ticks, span="396-396"];
m5_187 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Ticks.Add(tick)", span="398-398"];
m5_183 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var bidPrice = Convert.ToDecimal(data.Bids.Last().Price)", span="392-392"];
m5_184 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var askPrice = Convert.ToDecimal(data.Asks.Last().Price)", span="393-393"];
m5_170 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="''HEARTBEAT''", span="369-369"];
m5_174 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var data = obj.ToObject<Price>()", span="377-377"];
m5_180 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.Oanda, symbol, securityType).TimeZone", span="387-387"];
m5_185 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var tick = new Tick(time, symbol, bidPrice, askPrice)", span="394-394"];
m5_178 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="DateTimeZone exchangeTimeZone", span="384-384"];
m5_182 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="time = time.ConvertFromUtc(exchangeTimeZone)", span="390-390"];
m5_169 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=type, span="367-367"];
m5_167 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="364-364"];
m5_173 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="''PRICE''", span="376-376"];
m5_168 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var type = obj[''type''].ToString()", span="365-365"];
m5_188 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m5_88 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m5_99 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="0: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = response.Data.OrderFillTransaction.Price.ToDecimal(),\r\n                    FillQuantity = Convert.ToInt32(response.Data.OrderFillTransaction.Units)\r\n                })", span="231-236"];
m5_95 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var response = _apiRest.ReplaceOrder(Authorization, AccountId, orderId, request)", span="222-222"];
m5_98 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="230-230"];
m5_100 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="239-239"];
m5_93 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var request = GenerateOrderRequest(order)", span="219-219"];
m5_89 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): '' + order)", span="210-210"];
m5_90 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="!order.BrokerId.Any()", span="212-212"];
m5_94 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var orderId = order.BrokerId.First()", span="221-221"];
m5_96 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId[0] = response.Data.OrderCreateTransaction.Id", span="225-225"];
m5_92 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return false;", span="216-216"];
m5_97 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="response.Data.OrderFillTransaction != null", span="228-228"];
m5_91 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="215-215"];
m5_101 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m5_258 [cluster="System.TimeSpan.FromSeconds(double)", file="OandaRestApiV20.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_83 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m5_217 [cluster="System.Net.WebRequest.CreateHttp(string)", file="OandaRestApiV20.cs", label="Entry System.Net.WebRequest.CreateHttp(string)", span="0-0"];
m5_82 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m5_214 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="OandaRestApiV20.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m5_369 [cluster="Unk.SerializeObject", file="OandaRestApiV20.cs", label="Entry Unk.SerializeObject", span=""];
m5_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m5_29 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OandaRestApiV20.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_243 [cluster="System.Net.WebResponse.GetResponseStream()", file="OandaRestApiV20.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m5_276 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m5_296 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(instrument)", span="619-619"];
m5_297 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Symbol = SymbolMapper.GetLeanSymbol(instrument, securityType, Market.Oanda)", span="620-620"];
m5_298 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Time = GetTickDateTimeFromString(createTime)", span="621-621"];
m5_302 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var orderByBrokerageId = OrderProvider.GetOrderByBrokerageId(id)", span="626-626"];
m5_308 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.DurationValue = GetTickDateTimeFromString(gtdTime.ToString())", span="636-636"];
m5_282 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new StopMarketOrder\r\n                    {\r\n                        StopPrice = stopOrder.Price.ToDecimal()\r\n                    }", span="582-585"];
m5_285 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new LimitOrder\r\n                    {\r\n                        LimitPrice = limitOrder.Price.ToDecimal()\r\n                    }", span="590-593"];
m5_288 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new StopLimitOrder\r\n                    {\r\n                        Price = Convert.ToDecimal(stopLimitOrder.Price),\r\n                        LimitPrice = Convert.ToDecimal(stopLimitOrder.PriceBound)\r\n                    }", span="598-602"];
m5_294 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var units = Convert.ToInt32(order[''units''])", span="616-616"];
m5_292 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var instrument = order[''instrument''].ToString()", span="614-614"];
m5_295 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var createTime = order[''createTime''].ToString()", span="617-617"];
m5_290 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new MarketOrder()", span="606-606"];
m5_299 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Quantity = units", span="622-622"];
m5_293 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var id = order[''id''].ToString()", span="615-615"];
m5_301 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.BrokerId.Add(id)", span="624-624"];
m5_303 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="orderByBrokerageId != null", span="627-627"];
m5_304 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="629-629"];
m5_305 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var gtdTime = order[''gtdTime'']", span="632-632"];
m5_307 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Duration = OrderDuration.Custom", span="635-635"];
m5_309 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="return qcOrder;", span="639-639"];
m5_281 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var stopOrder = order.ToObject<MarketIfTouchedOrder>()", span="581-581"];
m5_284 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var limitOrder = order.ToObject<OandaLimitOrder>()", span="589-589"];
m5_287 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var stopLimitOrder = order.ToObject<StopOrder>()", span="597-597"];
m5_289 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''MARKET''", span="605-605"];
m5_300 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Status = OrderStatus.None", span="623-623"];
m5_306 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="gtdTime != null", span="633-633"];
m5_277 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var type = order[''type''].ToString()", span="575-575"];
m5_280 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''MARKET_IF_TOUCHED''", span="580-580"];
m5_283 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''LIMIT''", span="588-588"];
m5_286 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''STOP''", span="596-596"];
m5_278 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Order qcOrder", span="577-577"];
m5_279 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label=type, span="578-578"];
m5_291 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="throw new NotSupportedException(\r\n                        ''An existing '' + type + '' working order was found and is currently unsupported. Please manually cancel the order before restarting the algorithm.'');", span="610-611"];
m5_310 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m5_117 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m5_118 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession = new TransactionStreamSession(this)", span="271-271"];
m5_119 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.DataReceived += OnTransactionDataReceived", span="272-272"];
m5_120 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.StartSession()", span="273-273"];
m5_121 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m5_164 [cluster="Unk.ToDecimal", file="OandaRestApiV20.cs", label="Entry Unk.ToDecimal", span=""];
m5_218 [cluster="System.Net.HttpWebRequest.GetResponse()", file="OandaRestApiV20.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m5_370 [cluster="Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="245-245"];
m5_162 [cluster="Unk.>", file="OandaRestApiV20.cs", label="Entry Unk.>", span=""];
m5_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m5_123 [cluster="Oanda.RestV20.Session.StreamSession.StartSession()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.StreamSession.StartSession()", span="49-49"];
m5_313 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m5_199 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m5_201 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/pricing/stream'' +\r\n                ''?instruments='' + Uri.EscapeDataString(instrumentList)", span="413-414"];
m5_204 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="418-418"];
m5_205 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Headers[OandaAgentKey] = Agent", span="419-419"];
m5_200 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var instrumentList = string.Join('','', instruments)", span="411-411"];
m5_202 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var request = WebRequest.CreateHttp(requestString)", span="416-416"];
m5_203 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Method = ''GET''", span="417-417"];
m5_206 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="return request.GetResponse();", span="423-423"];
m5_209 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="throw;", span="429-429"];
m5_212 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="throw new Exception(reader.ReadToEnd());", span="435-435"];
m5_208 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="ex.Response == null", span="427-427"];
m5_211 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var reader = new StreamReader(stream)", span="433-433"];
m5_207 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label=WebException, span="425-425"];
m5_210 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var stream = GetResponseStream(ex.Response)", span="432-432"];
m5_213 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m5_216 [cluster="System.Uri.EscapeDataString(string)", file="OandaRestApiV20.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m5_190 [cluster="Unk.GetLeanSymbol", file="OandaRestApiV20.cs", label="Entry Unk.GetLeanSymbol", span=""];
m5_311 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m5_130 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m5_131 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession = new PricingStreamSession(this, instruments)", span="293-293"];
m5_132 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession.DataReceived += OnPricingDataReceived", span="294-294"];
m5_133 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession.StartSession()", span="295-295"];
m5_134 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m5_368 [cluster="decimal.ToString()", file="OandaRestApiV20.cs", label="Entry decimal.ToString()", span="0-0"];
m5_256 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="888-888"];
m5_375 [file="OandaRestApiV20.cs", label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", span=""];
m6_80 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m6_22 [cluster="System.TimeSpan.FromHours(double)", file="OrderJsonConverter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_9 [cluster="System.Collections.Generic.List<T>.List()", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_79 [cluster="object.GetType()", file="OrderJsonConverter.cs", label="Entry object.GetType()", span="0-0"];
m6_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="491-491"];
m6_83 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="291-291"];
m6_33 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="106-106"];
m6_34 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverter.cs", label="factory = new BacktestingBrokerageFactory()", span="108-108"];
m6_36 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverter.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="111-111"];
m6_35 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverter.cs", label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="109-109"];
m6_37 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="106-106"];
m6_28 [cluster="Unk.SingleOrDefault", file="OrderJsonConverter.cs", label="Entry Unk.SingleOrDefault", span=""];
m6_29 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="93-93"];
m6_26 [cluster="lambda expression", file="OrderJsonConverter.cs", label="names.SingleOrDefault(name => MatchTypeName(name, algorithmName))", span="93-93"];
m6_30 [cluster="lambda expression", file="OrderJsonConverter.cs", label="MatchTypeName(name, algorithmName)", span="93-93"];
m6_25 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="93-93"];
m6_27 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="93-93"];
m6_31 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="93-93"];
m6_97 [cluster="string.LastIndexOf(char)", file="OrderJsonConverter.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m6_74 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="514-514"];
m6_24 [cluster="System.Exception.Exception(string)", file="OrderJsonConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_7 [cluster="System.DateTime.DateTime(int, int, int)", file="OrderJsonConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="305-305"];
m6_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="368-368"];
m6_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="508-508"];
m6_91 [cluster="Unk.>", file="OrderJsonConverter.cs", label="Entry Unk.>", span=""];
m6_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="70-70"];
m6_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="422-422"];
m6_8 [cluster="System.TimeSpan.FromDays(double)", file="OrderJsonConverter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_82 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="372-372"];
m6_98 [cluster="string.Substring(int)", file="OrderJsonConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m6_41 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="124-124"];
m6_42 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="var initializeComplete = false", span="126-126"];
m6_43 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="baseJob.Type == PacketType.BacktestNode", span="132-132"];
m6_44 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="var backtestJob = baseJob as BacktestNodePacket", span="134-134"];
m6_45 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.SetMaximumOrders(int.MaxValue)", span="135-135"];
m6_46 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.SetParameters(baseJob.Parameters)", span="137-137"];
m6_47 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.SetLiveMode(false)", span="138-138"];
m6_48 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="139-139"];
m6_49 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="141-141"];
m6_50 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.Initialize()", span="143-143"];
m6_51 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="145-145"];
m6_52 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.PeriodStart = algorithm.StartDate", span="148-148"];
m6_53 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.PeriodFinish = algorithm.EndDate", span="149-149"];
m6_54 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.BacktestId = algorithm.GetType().Name", span="150-150"];
m6_56 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.UserId = baseJob.UserId", span="152-152"];
m6_57 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.Channel = baseJob.Channel", span="153-153"];
m6_59 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="157-157"];
m6_66 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="175-175"];
m6_67 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="algorithm.PostInitialize()", span="176-176"];
m6_68 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="return initializeComplete;", span="178-178"];
m6_60 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="161-161"];
m6_55 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="backtestJob.Type = PacketType.BacktestNode", span="151-151"];
m6_58 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="StartingDate = backtestJob.PeriodStart", span="156-156"];
m6_61 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label=Exception, span="164-164"];
m6_64 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="Errors.Count == 0", span="170-170"];
m6_62 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="Log.Error(err)", span="166-166"];
m6_63 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="167-167"];
m6_65 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="initializeComplete = true", span="172-172"];
m6_69 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="124-124"];
m6_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69"];
m6_10 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="85-85"];
m6_11 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="string error", span="87-87"];
m6_14 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="var loader = new Loader(language, TimeSpan.FromHours(1), names => names.SingleOrDefault(name => MatchTypeName(name, algorithmName)))", span="93-93"];
m6_15 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="94-94"];
m6_12 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="IAlgorithm algorithm", span="88-88"];
m6_13 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="var algorithmName = Config.Get(''algorithm-type-name'')", span="89-89"];
m6_16 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="!complete", span="95-95"];
m6_17 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="throw new Exception(error + '': try re-building algorithm.'');", span="95-95"];
m6_18 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="return algorithm;", span="97-97"];
m6_19 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="85-85"];
m6_77 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="OrderJsonConverter.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="558-558"];
m6_32 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="205-205"];
m6_92 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="OrderJsonConverter.cs", label="string.IsNullOrEmpty(expectedTypeName)", span="207-207"];
m6_94 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="OrderJsonConverter.cs", label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="211-212"];
m6_93 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="OrderJsonConverter.cs", label="return true;", span="209-209"];
m6_95 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="205-205"];
m6_21 [cluster="Loader.cstr", file="OrderJsonConverter.cs", label="Entry Loader.cstr", span=""];
m6_90 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_81 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_73 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="185-185"];
m6_84 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="187-187"];
m6_85 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="189-189"];
m6_86 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="dataFeedsConfigString != string.Empty", span="190-190"];
m6_87 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="192-192"];
m6_88 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="return dataFeeds;", span="195-195"];
m6_89 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="185-185"];
m6_75 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m6_99 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="219-219"];
m6_100 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="219-219"];
m6_96 [cluster="string.IsNullOrEmpty(string)", file="OrderJsonConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_39 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34"];
m6_0 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m6_1 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="MaxOrders = int.MaxValue", span="71-71"];
m6_2 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="StartingPortfolioValue = 0", span="72-72"];
m6_3 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="73-73"];
m6_4 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="74-74"];
m6_5 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="Errors = new List<string>()", span="75-75"];
m6_6 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m6_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m6_76 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="285-285"];
m6_101 [file="OrderJsonConverter.cs", label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span=""];
m6_102 [file="OrderJsonConverter.cs", label=algorithmName, span=""];
m7_13 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m7_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m7_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OrderJsonConverterTests.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, 0, ''Brokerage does not support update. You must cancel and re-create instead.'')", span="80-80"];
m7_11 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OrderJsonConverterTests.cs", label="return false;", span="81-81"];
m7_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m7_2 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m7_3 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="return 3m;", span="57-57"];
m7_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m7_8 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="26-26"];
m7_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m7_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="return new GDAXFeeModel();", span="67-67"];
m7_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m7_0 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m7_1 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m8_8 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="69-69"];
m8_9 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, file="PandasConverter.cs", label="0: Holdings = new CryptoHolding(this)", span="86-86"];
m8_10 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="89-89"];
m8_12 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="91-91"];
m8_11 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="90-90"];
m8_13 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Exit QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="69-69"];
m8_6 [cluster="QuantConnect.Securities.Crypto.CryptoHolding.CryptoHolding(QuantConnect.Securities.Crypto.Crypto)", file="PandasConverter.cs", label="Entry QuantConnect.Securities.Crypto.CryptoHolding.CryptoHolding(QuantConnect.Securities.Crypto.Crypto)", span="27-27"];
m8_0 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m8_1 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Holdings = new CryptoHolding(this)", span="54-54"];
m8_4 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="59-59"];
m8_2 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="57-57"];
m8_3 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Forex.Forex.DecomposeCurrencyPair(config.Symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="58-58"];
m8_5 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="PandasConverter.cs", label="Exit QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m8_7 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="PandasConverter.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m8_14 [file="PandasConverter.cs", label="QuantConnect.Securities.Crypto.Crypto", span=""];
m11_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m11_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="171-171"];
m11_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m11_261 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m11_50 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m11_192 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m11_0 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m11_1 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Holdings = new ForexHolding(this)", span="53-53"];
m11_2 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="56-56"];
m11_3 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="DecomposeCurrencyPair(config.Symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="57-57"];
m11_194 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="108-108"];
m11_267 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m11_197 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_11 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="DecomposeCurrencyPair(symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="89-89"];
m11_12 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="90-90"];
m11_13 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m11_190 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m11_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m11_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="return History(new[] {request}).Memoize();", span="414-414"];
m11_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m11_33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m11_193 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m11_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m11_187 [cluster="QuantConnect.Symbol.IsCanonical()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m11_196 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m11_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupTimeSpan.HasValue", span="109-109"];
m11_269 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="598-598"];
m11_55 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="189-189"];
m11_60 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="194-194"];
m11_61 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="195-195"];
m11_76 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="215-215"];
m11_80 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="219-219"];
m11_228 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="538-538"];
m11_230 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="541-541"];
m11_247 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="562-562"];
m11_249 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="564-564"];
m11_250 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="565-565"];
m11_251 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));", span="567-568"];
m11_254 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="568-568"];
m11_54 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="187-196"];
m11_56 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="190-190"];
m11_59 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="193-193"];
m11_62 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="187-196"];
m11_69 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="198-198"];
m11_75 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="213-220"];
m11_77 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="216-216"];
m11_78 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="217-217"];
m11_81 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="213-220"];
m11_82 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="222-222"];
m11_223 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="534-534"];
m11_226 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="534-552"];
m11_227 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var requests = new List<HistoryRequest>()", span="536-536"];
m11_229 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="GetMatchingSubscriptions(security, typeof(BaseData))", span="539-539"];
m11_231 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="544-544"];
m11_233 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="545-545"];
m11_235 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="546-546"];
m11_236 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="requests.Add(request)", span="548-548"];
m11_243 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="560-560"];
m11_246 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="560-569"];
m11_248 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="563-563"];
m11_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="560-569"];
m11_253 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="568-568"];
m11_255 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="568-568"];
m11_232 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="fillForward.HasValue", span="545-545"];
m11_234 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="extendedMarket.HasValue", span="546-546"];
m11_130 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="305-305"];
m11_57 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="191-191"];
m11_58 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="191-191"];
m11_71 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="198-198"];
m11_70 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="198-198"];
m11_79 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="217-217"];
m11_84 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="222-222"];
m11_83 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="222-222"];
m11_116 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="280-280"];
m11_224 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="534-534"];
m11_244 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="560-560"];
m11_225 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="534-534"];
m11_238 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="534-552"];
m11_237 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return requests;", span="551-551"];
m11_245 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="560-560"];
m11_132 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="305-305"];
m11_131 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="305-305"];
m11_118 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="280-280"];
m11_117 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="280-280"];
m11_270 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="598-598"];
m11_271 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="598-598"];
m11_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="589-589"];
m11_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="592-592"];
m11_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="589-589"];
m11_51 [cluster="Unk.History", file="QCAlgorithm.History.cs", label="Entry Unk.History", span=""];
m11_195 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="640-640"];
m11_115 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m11_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m11_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m11_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="96-96"];
m11_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m11_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m11_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, file="QCAlgorithm.History.cs", label="1: _warmupBarCount.HasValue", span="105-105"];
m11_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m11_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="399-399"];
m11_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="403-403"];
m11_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="404-404"];
m11_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="400-400"];
m11_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="402-402"];
m11_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m11_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m11_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="274-274"];
m11_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="284-284"];
m11_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="285-285"];
m11_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="273-273"];
m11_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="276-276"];
m11_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="277-277"];
m11_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="280-280"];
m11_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="278-278"];
m11_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="281-281"];
m11_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="273-273"];
m11_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m11_188 [cluster="System.Math.Max(int, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m11_8 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m11_9 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Holdings = new ForexHolding(this)", span="85-85"];
m11_10 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="88-88"];
m11_98 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m11_67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m11_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="492-492"];
m11_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="499-499"];
m11_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="500-500"];
m11_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="497-497"];
m11_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="494-494"];
m11_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="492-492"];
m11_114 [cluster="ArgumentException.cstr", file="QCAlgorithm.History.cs", label="Entry ArgumentException.cstr", span=""];
m11_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m11_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="63-63"];
m11_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m11_52 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m11_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m11_111 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m11_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", span="107-107"];
m11_268 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m11_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="361-361"];
m11_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m11_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m11_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="595-595"];
m11_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                where type.IsAssignableFrom(sub.Type)\r\n                select sub;", span="598-600"];
m11_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="595-595"];
m11_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m11_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="187-196"];
m11_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="198-198"];
m11_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m11_129 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m11_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m11_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="129-129"];
m11_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m11_113 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m11_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m11_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="249-249"];
m11_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250"];
m11_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or Crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="255-255"];
m11_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="258-258"];
m11_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="252-252"];
m11_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="253-253"];
m11_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m11_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m11_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="325-325"];
m11_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="328-328"];
m11_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="323-323"];
m11_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="322-322"];
m11_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m11_198 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="111-111"];
m11_162 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m11_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m11_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or cyrpto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="344-344"];
m11_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="347-347"];
m11_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="342-342"];
m11_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="341-341"];
m11_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m11_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m11_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156"];
m11_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m11_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m11_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236"];
m11_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m11_28 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="QCAlgorithm.History.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m11_199 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m11_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m11_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="391-391"];
m11_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m11_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="QuantConnect.Securities.Forex.Forex", span=""];
m11_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return Enumerable.Empty<HistoryRequest>();", span="116-116"];
m11_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m11_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="532-532"];
m11_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                var security = Securities[x];\r\n                foreach (var config in GetMatchingSubscriptions(security, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    Resolution? res = resolution ?? security.Resolution;\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="534-552"];
m11_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="532-532"];
m11_219 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m11_65 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m11_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m11_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="return History(requests, TimeZone).Memoize();", span="424-424"];
m11_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m11_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m11_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="376-376"];
m11_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="375-375"];
m11_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="375-375"];
m11_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m11_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m11_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="435-435"];
m11_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="443-443"];
m11_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="444-444"];
m11_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="463-476"];
m11_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="478-478"];
m11_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="437-437"];
m11_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="441-441"];
m11_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = typeof(BaseData)", span="447-447"];
m11_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, dataType)", span="454-454"];
m11_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="460-460"];
m11_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="457-457"];
m11_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="480-480"];
m11_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="482-482"];
m11_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="448-448"];
m11_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="450-450"];
m11_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="459-459"];
m11_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="485-485"];
m11_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m11_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="503-503"];
m11_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc > UtcTime", span="510-510"];
m11_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc = UtcTime", span="512-512"];
m11_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Debug(''Request for future history modified to end now.'')", span="520-520"];
m11_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="526-526"];
m11_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label=reqs, span="507-507"];
m11_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="513-513"];
m11_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="sentMessage = true", span="519-519"];
m11_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var reqs = requests.ToList()", span="506-506"];
m11_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var sentMessage = false", span="505-505"];
m11_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="!sentMessage", span="517-517"];
m11_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="515-515"];
m11_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="503-503"];
m11_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="558-558"];
m11_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="560-569"];
m11_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="558-558"];
m11_240 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_53 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m11_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m11_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.History.cs", label="0: var request = CreateHistoryRequest(security, config, start, end, resolution)", span="309-309"];
m11_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="299-299"];
m11_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="302-302"];
m11_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="303-303"];
m11_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="310-310"];
m11_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="306-306"];
m11_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="301-301"];
m11_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="305-305"];
m11_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m11_222 [cluster="Unk.SelectMany", file="QCAlgorithm.History.cs", label="Entry Unk.SelectMany", span=""];
m11_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m11_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="213-220"];
m11_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="222-222"];
m11_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m11_191 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m11_49 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m11_161 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m11_66 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m11_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="572-572"];
m11_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="579-584"];
m11_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? security.Resolution", span="574-574"];
m11_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="577-577"];
m11_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="586-586"];
m11_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="572-572"];
m11_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m11_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="142-142"];
m11_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m11_200 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m11_112 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m11_26 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m11_272 [file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m11_273 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m11_274 [file="QCAlgorithm.History.cs", label=int, span=""];
m11_275 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m11_276 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m11_277 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m11_278 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m11_279 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m11_280 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m11_284 [file="QCAlgorithm.History.cs", label=int, span=""];
m11_283 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m11_285 [file="QCAlgorithm.History.cs", label=security, span=""];
m11_286 [file="QCAlgorithm.History.cs", label=start, span=""];
m11_287 [file="QCAlgorithm.History.cs", label=end, span=""];
m11_281 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m11_282 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m12_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m12_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="420-420"];
m12_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m12_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m12_323 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m12_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="426-426"];
m12_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="428-428"];
m12_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="429-429"];
m12_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="426-426"];
m12_183 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m12_314 [cluster="object.GetType()", file="QCAlgorithm.Python.cs", label="Entry object.GetType()", span="0-0"];
m12_161 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m12_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="486-486"];
m12_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="488-488"];
m12_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="489-489"];
m12_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="490-490"];
m12_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="492-492"];
m12_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="491-491"];
m12_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="493-493"];
m12_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="486-486"];
m12_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="286-286"];
m12_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="288-288"];
m12_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="286-286"];
m12_322 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m12_33 [cluster="Unk.AddUniverse", file="QCAlgorithm.Python.cs", label="Entry Unk.AddUniverse", span=""];
m12_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m12_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m12_300 [cluster="Unk.Count", file="QCAlgorithm.Python.cs", label="Entry Unk.Count", span=""];
m12_325 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m12_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900"];
m12_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Python.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_286 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m12_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="536-536"];
m12_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="538-538"];
m12_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="541-541"];
m12_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="539-539"];
m12_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="539-539"];
m12_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="536-536"];
m12_324 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m12_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m12_160 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m12_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m12_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="326-326"];
m12_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m12_284 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_78 [cluster="Unk.selector", file="QCAlgorithm.Python.cs", label="Entry Unk.selector", span=""];
m12_267 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m12_285 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m12_311 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="660-660"];
m12_37 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="108-108"];
m12_36 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="108-108"];
m12_38 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="108-108"];
m12_41 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="108-108"];
m12_42 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="108-108"];
m12_43 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="108-108"];
m12_50 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="126-126"];
m12_56 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="fine(f).Select(x => (Symbol)x)", span="126-126"];
m12_49 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m12_55 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m12_51 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m12_52 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m12_53 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="126-126"];
m12_54 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m12_57 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m12_58 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m12_59 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="126-126"];
m12_60 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m12_66 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="139-139"];
m12_65 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="139-139"];
m12_67 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="139-139"];
m12_68 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="139-139"];
m12_69 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="139-139"];
m12_70 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="139-139"];
m12_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="151-151"];
m12_75 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="151-151"];
m12_77 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="151-151"];
m12_79 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="151-151"];
m12_80 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="151-151"];
m12_81 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="151-151"];
m12_87 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="166-166"];
m12_86 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="166-166"];
m12_88 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="166-166"];
m12_89 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="166-166"];
m12_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="166-166"];
m12_91 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="166-166"];
m12_124 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="275-276"];
m12_127 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="276-276"];
m12_123 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="275-276"];
m12_125 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="275-276"];
m12_126 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="276-276"];
m12_128 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="276-276"];
m12_163 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="392-392"];
m12_164 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="392-392"];
m12_165 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="392-392"];
m12_169 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="406-406"];
m12_170 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="406-406"];
m12_171 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="406-406"];
m12_175 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="420-420"];
m12_176 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="420-420"];
m12_177 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="420-420"];
m12_302 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="652-658"];
m12_308 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="660-660"];
m12_303 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: x == null", span="654-654"];
m12_305 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="655-655"];
m12_306 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return (dynamic)x.AsManagedObject(type);", span="656-656"];
m12_304 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return null;", span="654-654"];
m12_307 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="652-658"];
m12_309 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: x != null", span="660-660"];
m12_310 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="660-660"];
m12_312 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: GetIndicatorBaseType(x.GetType())", span="660-660"];
m12_313 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="660-660"];
m12_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m12_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="208-208"];
m12_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m12_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="148-148"];
m12_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="150-150"];
m12_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="151-151"];
m12_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="148-148"];
m12_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="568-568"];
m12_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="570-570"];
m12_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="568-568"];
m12_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m12_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="378-378"];
m12_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m12_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m12_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="352-352"];
m12_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m12_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m12_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m)", span="56-56"];
m12_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m12_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m12_32 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m12_327 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m12_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="311-311"];
m12_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="313-313"];
m12_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="311-311"];
m12_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m12_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="365-365"];
m12_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m12_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992"];
m12_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m12_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m12_211 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Python.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m12_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982"];
m12_35 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Python.cs", label="Entry Unk.AsManagedObject", span=""];
m12_162 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m12_40 [cluster="Unk.Select", file="QCAlgorithm.Python.cs", label="Entry Unk.Select", span=""];
m12_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584"];
m12_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="601-601"];
m12_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: Py.GIL()", span="603-603"];
m12_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: !PyList.IsListType(pyObject)", span="606-606"];
m12_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: tmp.Append(pyObject)", span="609-609"];
m12_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: pyObject", span="614-614"];
m12_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var tmp = new PyList()", span="608-608"];
m12_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var symbols = new List<Symbol>()", span="613-613"];
m12_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: pyObject = tmp", span="610-610"];
m12_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: symbols.Add(symbol)", span="623-623"];
m12_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return symbols.Count == 0 ? null : symbols;", span="625-625"];
m12_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="616-616"];
m12_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: string.IsNullOrWhiteSpace(symbol.Value)", span="618-618"];
m12_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="601-601"];
m12_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="92-93"];
m12_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m12_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="85-85"];
m12_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="88-88"];
m12_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="89-89"];
m12_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="95-95"];
m12_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m12_121 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Python.cs", label="Entry FuncUniverse.cstr", span=""];
m12_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="504-504"];
m12_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="506-506"];
m12_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="509-509"];
m12_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="507-507"];
m12_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="507-507"];
m12_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="504-504"];
m12_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m12_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="105-105"];
m12_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var type = (Type)pycoarse.GetPythonType().AsManagedObject(typeof(Type))", span="112-112"];
m12_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse((dynamic)pycoarse.AsManagedObject(type))", span="113-113"];
m12_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="coarse != null", span="106-106"];
m12_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="108-108"];
m12_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="109-109"];
m12_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m12_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="634-634"];
m12_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: type.BaseType == typeof(object)", span="636-636"];
m12_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return type;", span="638-638"];
m12_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return GetIndicatorBaseType(type.BaseType);", span="640-640"];
m12_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="634-634"];
m12_301 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Python.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m12_263 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m12_282 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m12_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m12_329 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m12_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m12_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m12_202 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m12_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="136-136"];
m12_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="138-138"];
m12_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="139-139"];
m12_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="136-136"];
m12_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="269-269"];
m12_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m12_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="267-267"];
m12_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="270-270"];
m12_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="271-271"];
m12_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="273-273"];
m12_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="275-276"];
m12_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="268-268"];
m12_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m12_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m12_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="193-193"];
m12_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m12_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m12_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="300-300"];
m12_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m12_283 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m12_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m12_281 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m12_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m12_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="676-676"];
m12_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="678-678"];
m12_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="680-680"];
m12_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="683-692"];
m12_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="681-681"];
m12_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="682-682"];
m12_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="676-676"];
m12_221 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m12_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m12_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m12_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="549-549"];
m12_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: Py.GIL()", span="551-551"];
m12_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="553-553"];
m12_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="559-559"];
m12_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: pyBenchmark != null", span="554-554"];
m12_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: SetBenchmark(pyBenchmark)", span="556-556"];
m12_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return;", span="557-557"];
m12_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="549-549"];
m12_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573"];
m12_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="520-520"];
m12_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="522-522"];
m12_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="525-525"];
m12_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="523-523"];
m12_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="523-523"];
m12_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="520-520"];
m12_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m12_250 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m12_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="577-577"];
m12_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="579-579"];
m12_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="586-586"];
m12_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="593-593"];
m12_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: securityInitializer1 != null", span="580-580"];
m12_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetSecurityInitializer(securityInitializer1)", span="582-582"];
m12_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return;", span="583-583"];
m12_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: securityInitializer2 != null", span="587-587"];
m12_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetSecurityInitializer(securityInitializer2)", span="589-589"];
m12_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return;", span="590-590"];
m12_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="577-577"];
m12_326 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m12_265 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m12_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m12_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="339-339"];
m12_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m12_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="647-647"];
m12_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: Py.GIL()", span="649-649"];
m12_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="651-658"];
m12_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="660-660"];
m12_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return array;", span="667-667"];
m12_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: types.Count() > 1", span="662-662"];
m12_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="664-664"];
m12_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="647-647"];
m12_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m12_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m12_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="222-222"];
m12_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m12_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="122-122"];
m12_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="124-124"];
m12_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="125-125"];
m12_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="126-126"];
m12_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="122-122"];
m12_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m12_119 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m12_321 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m12_299 [cluster="Unk.Distinct", file="QCAlgorithm.Python.cs", label="Entry Unk.Distinct", span=""];
m12_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="466-466"];
m12_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="468-468"];
m12_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="469-469"];
m12_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="470-470"];
m12_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="472-472"];
m12_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="471-471"];
m12_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="473-473"];
m12_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="466-466"];
m12_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m12_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="406-406"];
m12_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m12_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593"];
m12_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m12_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="165-165"];
m12_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="166-166"];
m12_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m12_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m12_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="_converter = new PandasConverter()", span="43-43"];
m12_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m12_328 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m12_34 [cluster="Unk.GetPythonType", file="QCAlgorithm.Python.cs", label="Entry Unk.GetPythonType", span=""];
m12_244 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m12_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m12_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="252-252"];
m12_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m12_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="435-435"];
m12_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="437-437"];
m12_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="438-438"];
m12_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="435-435"];
m12_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m12_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="237-237"];
m12_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m12_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m12_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="179-179"];
m12_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m12_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m12_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="71-71"];
m12_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m12_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="450-450"];
m12_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var resolution = GetSubscription(symbol).Resolution", span="452-452"];
m12_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="453-453"];
m12_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="450-450"];
m12_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m12_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="392-392"];
m12_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m12_330 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m12_331 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m12_332 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m12_333 [file="QCAlgorithm.Python.cs", label=fine, span=""];
m12_334 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m12_335 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m12_336 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m12_337 [file="QCAlgorithm.Python.cs", label="QuantConnect.SecurityType", span=""];
m12_338 [file="QCAlgorithm.Python.cs", label=string, span=""];
m12_339 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m13_14 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="Symbol.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ToString()", span="86-86"];
m13_15 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="Symbol.cs", label="return string.Format(''{0} order for {1} unit{2} of {3} at stop {4}'', Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol, StopPrice.SmartRounding());", span="88-88"];
m13_16 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="Symbol.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ToString()", span="86-86"];
m13_18 [cluster="string.Format(string, params object[])", file="Symbol.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m13_13 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="190-190"];
m13_8 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="70-70"];
m13_9 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="base.ApplyUpdateOrderRequest(request)", span="72-72"];
m13_10 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="request.StopPrice.HasValue", span="73-73"];
m13_11 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="StopPrice = request.StopPrice.Value", span="75-75"];
m13_12 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Symbol.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="70-70"];
m13_0 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="Symbol.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m13_1 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="Symbol.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m13_7 [cluster="decimal.ToString(string)", file="Symbol.cs", label="Entry decimal.ToString(string)", span="0-0"];
m13_2 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="Symbol.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m13_3 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="Symbol.cs", label="StopPrice = stopPrice", span="57-57"];
m13_4 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="Symbol.cs", label="tag == ''''", span="59-59"];
m13_5 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="Symbol.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="62-62"];
m13_6 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="Symbol.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m13_17 [cluster="decimal.SmartRounding()", file="Symbol.cs", label="Entry decimal.SmartRounding()", span="144-144"];
m13_19 [file="Symbol.cs", label="QuantConnect.Orders.StopMarketOrder", span=""];
m15_10 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="Time.cs", label="leverage < 1", span="57-57"];
m15_11 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="Time.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="59-59"];
m15_12 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="Time.cs", label="InitialMarginRequirement = 1/leverage", span="62-62"];
m15_13 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="Time.cs", label="MaintenanceMarginRequirement = 1/leverage", span="63-63"];
m15_14 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55"];
m15_16 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="Time.cs", label="return 1/MaintenanceMarginRequirement;", span="73-73"];
m15_15 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71"];
m15_17 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71"];
m15_68 [cluster="System.Math.Min(int, int)", file="Time.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m15_28 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Time.cs", label="return order.GetValue(price)*InitialMarginRequirement + orderFees;", span="109-109"];
m15_29 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="102-102"];
m15_30 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Time.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="87-87"];
m15_18 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m15_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", file="Time.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", span="103-103"];
m15_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Dispose()", file="Time.cs", label="_enumerator.Dispose()", span="179-179"];
m15_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Dispose()", file="Time.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Subscription.Dispose()", span="176-176"];
m15_27 [cluster="System.IDisposable.Dispose()", file="Time.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m15_31 [cluster="Unk.GetValue", file="Time.cs", label="Entry Unk.GetValue", span=""];
m15_23 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="MaintenanceMarginRequirement = margin", span="93-93"];
m15_24 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m15_22 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="InitialMarginRequirement = margin", span="92-92"];
m15_54 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="173-173"];
m15_57 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="return null;", span="180-180"];
m15_56 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="178-178"];
m15_55 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="decimal marginBuffer = 0.10m", span="176-176"];
m15_58 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="!security.Holdings.Invested", span="183-183"];
m15_60 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="decimal delta = totalMargin - netLiquidationValue", span="189-189"];
m15_61 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="int quantity = (int) (Math.Round(delta/security.Price, MidpointRounding.AwayFromZero) / MaintenanceMarginRequirement)", span="192-192"];
m15_62 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="195-195"];
m15_63 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="security.Holdings.IsLong", span="196-196"];
m15_65 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="return new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, quantity, 0, 0, security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), ''Margin Call'');", span="202-202"];
m15_59 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="return null;", span="185-185"];
m15_64 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="quantity *= -1", span="199-199"];
m15_66 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="173-173"];
m15_0 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m15_1 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="initialMarginRequirement < 0 || initialMarginRequirement > 1", span="37-37"];
m15_2 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="39-39"];
m15_3 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="42-42"];
m15_4 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="throw new ArgumentException(''Maintenance margin requirement must be between 0 and 1'');", span="44-44"];
m15_5 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="InitialMarginRequirement = initialMarginRequirement", span="47-47"];
m15_6 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="MaintenanceMarginRequirement = maintenanceMarginRequirement", span="48-48"];
m15_7 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m15_8 [cluster="System.ArgumentException.ArgumentException(string)", file="Time.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m15_70 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, string, int, decimal, decimal, System.DateTime, string)", file="Time.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, string, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m15_19 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="leverage < 1", span="86-86"];
m15_20 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="88-88"];
m15_21 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Time.cs", label="decimal margin = 1/leverage", span="91-91"];
m15_71 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Time.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="351-351"];
m15_35 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="129-129"];
m15_42 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: return portfolio.MarginRemaining;", span="145-145"];
m15_41 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: OrderDirection.Buy", span="144-144"];
m15_44 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: return security.MarginModel.GetMaintenanceMargin(security)*2 + portfolio.MarginRemaining;", span="147-147"];
m15_43 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: OrderDirection.Sell", span="146-146"];
m15_49 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: OrderDirection.Sell", span="156-156"];
m15_46 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: direction", span="152-152"];
m15_45 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: holdings.IsShort", span="150-150"];
m15_47 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: OrderDirection.Buy", span="154-154"];
m15_48 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: return security.MarginModel.GetMaintenanceMargin(security)*2 + portfolio.MarginRemaining;", span="155-155"];
m15_50 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: return portfolio.MarginRemaining;", span="157-157"];
m15_51 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="Time.cs", label="0: return portfolio.MarginRemaining;", span="162-162"];
m15_36 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="var holdings = security.Holdings", span="131-131"];
m15_39 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="holdings.IsLong", span="140-140"];
m15_40 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label=direction, span="142-142"];
m15_37 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="direction == OrderDirection.Hold", span="133-133"];
m15_38 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="return portfolio.MarginRemaining;", span="135-135"];
m15_52 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="129-129"];
m15_32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="Time.cs", label="QuantConnect.Lean.Engine.DataFeeds.Subscription", span=""];
m15_33 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="Time.cs", label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="119-119"];
m15_34 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="Time.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="117-117"];
m15_67 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="Time.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m15_69 [cluster="System.Math.Max(int, int)", file="Time.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m15_53 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="Time.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m15_72 [file="Time.cs", label="QuantConnect.Securities.SecurityMarginModel", span=""];
n17 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", style=dashed];
n17 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", style=dashed];
n17 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", style=dashed];
n17 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", style=dashed];
n17 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n4  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n9 -> n12  [key=2, style=dotted];
n10 -> n8  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=2, style=dotted];
n15 -> n13  [color=blue, key=0, style=bold];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d3  [color=green, key=2, style=dotted];
d5 -> d11  [color=green, key=2, style=dotted];
d5 -> d12  [color=green, key=1, label="lambda expression", style=dashed];
d60 -> d5  [color=green, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d34  [color=green, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d60 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.HeikinAshiTests", style=dashed];
d4 -> d5  [color=green, key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d6 -> d3  [key=2, style=dotted];
d6 -> d11  [key=2, style=dotted];
d6 -> d16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d12 -> d13  [color=green, key=0, style=solid];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d15  [color=green, key=2, style=dotted];
d14 -> d12  [color=blue, key=0, style=bold];
d34 -> d35  [color=green, key=0, style=solid];
d34 -> d11  [color=green, key=2, style=dotted];
d34 -> d48  [color=green, key=1, label="lambda expression", style=dashed];
d29 -> d34  [color=green, key=1, label=indicator, style=dashed];
d29 -> d3  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d32  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d33  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d35  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d36  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d37  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d38  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d39  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d40  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d29 -> d41  [color=darkseagreen4, key=1, label=indicator, style=dashed];
d33 -> d34  [color=green, key=0, style=solid];
d33 -> d44  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d44  [key=2, style=dotted];
d48 -> d49  [color=green, key=0, style=solid];
d49 -> d50  [color=green, key=0, style=solid];
d49 -> d15  [color=green, key=2, style=dotted];
d50 -> d48  [color=blue, key=0, style=bold];
d7 -> d3  [key=2, style=dotted];
d7 -> d11  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d8 -> d3  [key=2, style=dotted];
d8 -> d11  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> d22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d9 -> d3  [key=2, style=dotted];
d9 -> d11  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d32 -> d11  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d36 -> d11  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d38 -> d11  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d40 -> d11  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d10 -> d4  [color=blue, key=0, style=bold];
d16 -> d17  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d17 -> d15  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d20 -> d15  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d23 -> d15  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d26 -> d15  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d46 -> d15  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d52 -> d15  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d55 -> d15  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d58 -> d15  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d30 -> d30  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d30 -> d31  [key=0, style=solid];
d30 -> d42  [color=darkseagreen4, key=1, label=i, style=dashed];
d37 -> d38  [key=0, style=solid];
d37 -> d44  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d44  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d44  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d43  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d18 -> d16  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d21 -> d19  [color=blue, key=0, style=bold];
d24 -> d22  [color=blue, key=0, style=bold];
d27 -> d25  [color=blue, key=0, style=bold];
d47 -> d45  [color=blue, key=0, style=bold];
d53 -> d51  [color=blue, key=0, style=bold];
d56 -> d54  [color=blue, key=0, style=bold];
d59 -> d57  [color=blue, key=0, style=bold];
d43 -> d28  [color=blue, key=0, style=bold];
d42 -> d31  [key=0, style=solid];
d42 -> d42  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_317 -> m1_318  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_30  [key=2, style=dotted];
m1_318 -> m1_320  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_318 -> m1_322  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_318 -> m1_323  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_318 -> m1_327  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_37  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_38  [key=2, style=dotted];
m1_320 -> m1_325  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_320 -> m1_326  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_31  [key=2, style=dotted];
m1_322 -> m1_200  [key=2, style=dotted];
m1_322 -> m1_33  [key=2, style=dotted];
m1_322 -> m1_34  [key=2, style=dotted];
m1_322 -> m1_36  [key=2, style=dotted];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_257  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_28  [key=2, style=dotted];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_274  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_209  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_28  [key=2, style=dotted];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_275  [key=2, style=dotted];
m1_328 -> m1_317  [color=blue, key=0, style=bold];
m1_505 -> m1_506  [key=0, style=solid];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_532  [key=2, style=dotted];
m1_506 -> m1_511  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_506 -> m1_512  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_507 -> m1_508  [key=0, style=solid];
m1_507 -> m1_30  [key=2, style=dotted];
m1_507 -> m1_510  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_511  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_515  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_516  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_517  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_518  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_519  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_520  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_522  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_526  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_507 -> m1_530  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_511 -> m1_512  [key=0, style=solid];
m1_512 -> m1_513  [key=0, style=solid];
m1_512 -> m1_534  [key=2, style=dotted];
m1_512 -> m1_535  [key=2, style=dotted];
m1_512 -> m1_536  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_37  [key=2, style=dotted];
m1_508 -> m1_510  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_508 -> m1_513  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_508 -> m1_519  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_508 -> m1_521  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_38  [key=2, style=dotted];
m1_510 -> m1_514  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_510 -> m1_525  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_510 -> m1_527  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_515 -> m1_516  [key=0, style=solid];
m1_515 -> m1_31  [key=2, style=dotted];
m1_515 -> m1_200  [key=2, style=dotted];
m1_515 -> m1_33  [key=2, style=dotted];
m1_515 -> m1_34  [key=2, style=dotted];
m1_515 -> m1_36  [key=2, style=dotted];
m1_516 -> m1_517  [key=0, style=solid];
m1_516 -> m1_537  [key=2, style=dotted];
m1_516 -> m1_200  [key=2, style=dotted];
m1_516 -> m1_33  [key=2, style=dotted];
m1_516 -> m1_538  [key=2, style=dotted];
m1_516 -> m1_36  [key=2, style=dotted];
m1_517 -> m1_518  [key=0, style=solid];
m1_517 -> m1_257  [key=2, style=dotted];
m1_518 -> m1_519  [key=0, style=solid];
m1_518 -> m1_539  [key=2, style=dotted];
m1_518 -> m1_44  [key=2, style=dotted];
m1_519 -> m1_520  [key=0, style=solid];
m1_519 -> m1_205  [key=2, style=dotted];
m1_519 -> m1_540  [key=2, style=dotted];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_522  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_520 -> m1_523  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_522 -> m1_523  [key=0, style=solid];
m1_526 -> m1_527  [key=0, style=solid];
m1_526 -> m1_528  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_526 -> m1_529  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_28  [key=2, style=dotted];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_533  [key=2, style=dotted];
m1_509 -> m1_512  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_509 -> m1_513  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_513 -> m1_514  [key=0, style=solid];
m1_513 -> m1_198  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_521 -> m1_541  [key=2, style=dotted];
m1_521 -> m1_542  [key=2, style=dotted];
m1_521 -> m1_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_521 -> m1_523  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_514 -> m1_515  [key=0, style=solid];
m1_514 -> m1_274  [key=2, style=dotted];
m1_525 -> m1_524  [key=0, style=solid];
m1_525 -> m1_209  [key=2, style=dotted];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_28  [key=2, style=dotted];
m1_523 -> m1_524  [key=0, style=solid];
m1_523 -> m1_543  [key=2, style=dotted];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_526  [key=0, style=solid];
m1_528 -> m1_529  [key=0, style=solid];
m1_528 -> m1_28  [key=2, style=dotted];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_28  [key=2, style=dotted];
m1_531 -> m1_505  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_24  [key=2, style=dotted];
m1_3 -> m1_25  [key=2, style=dotted];
m1_3 -> m1_26  [key=2, style=dotted];
m1_3 -> m1_27  [key=2, style=dotted];
m1_3 -> m1_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_3 -> m1_15  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_3 -> m1_16  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_24  [key=2, style=dotted];
m1_4 -> m1_25  [key=2, style=dotted];
m1_4 -> m1_26  [key=2, style=dotted];
m1_4 -> m1_27  [key=2, style=dotted];
m1_4 -> m1_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_13  [color=darkseagreen4, key=1, label=equity, style=dashed];
m1_4 -> m1_21  [color=darkseagreen4, key=1, label=equity, style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_28  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_23  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_20  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_28  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_29  [key=2, style=dotted];
m1_6 -> m1_8  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_30  [key=2, style=dotted];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_7 -> m1_12  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_8 -> m1_9  [color=red, key=0, style=solid];
m1_8 -> m1_31  [key=2, style=dotted];
m1_8 -> m1_32  [key=2, style=dotted];
m1_8 -> m1_33  [key=2, style=dotted];
m1_8 -> m1_34  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_8 -> m1_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_36  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_37  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_38  [key=2, style=dotted];
m1_12 -> m1_20  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_12 -> m1_21  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_9 -> m1_35  [color=red, key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_43  [key=2, style=dotted];
m1_19 -> m1_44  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_45  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_40  [key=2, style=dotted];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_22 -> m1_15  [key=0, style=solid];
m1_22 -> m1_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_41  [key=2, style=dotted];
m1_18 -> m1_42  [key=2, style=dotted];
m1_23 -> m1_0  [color=blue, key=0, style=bold];
m1_259 -> m1_260  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_30  [key=2, style=dotted];
m1_260 -> m1_262  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_260 -> m1_264  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_260 -> m1_268  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_260 -> m1_272  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_37  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_38  [key=2, style=dotted];
m1_262 -> m1_266  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_262 -> m1_267  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_262 -> m1_270  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_262 -> m1_271  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_31  [key=2, style=dotted];
m1_264 -> m1_200  [key=2, style=dotted];
m1_264 -> m1_33  [key=2, style=dotted];
m1_264 -> m1_34  [key=2, style=dotted];
m1_264 -> m1_36  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_28  [key=2, style=dotted];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_28  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_274  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_209  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_28  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_209  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_28  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_275  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_275  [key=2, style=dotted];
m1_273 -> m1_259  [color=blue, key=0, style=bold];
m1_465 -> m1_466  [key=0, style=solid];
m1_466 -> m1_467  [key=0, style=solid];
m1_466 -> m1_468  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_466 -> m1_478  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_474  [color=darkseagreen4, key=1, label=amount, style=dashed];
m1_468 -> m1_469  [key=0, style=solid];
m1_468 -> m1_482  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_468 -> m1_483  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_468 -> m1_492  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_468 -> m1_498  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_468 -> m1_501  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_478 -> m1_479  [key=0, style=solid];
m1_478 -> m1_35  [key=2, style=dotted];
m1_474 -> m1_475  [key=0, style=solid];
m1_474 -> m1_199  [key=2, style=dotted];
m1_469 -> m1_470  [key=0, style=solid];
m1_469 -> m1_30  [key=2, style=dotted];
m1_469 -> m1_473  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_469 -> m1_476  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_469 -> m1_477  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_202  [key=2, style=dotted];
m1_482 -> m1_484  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_482 -> m1_485  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_483 -> m1_484  [key=0, style=solid];
m1_483 -> m1_203  [key=2, style=dotted];
m1_483 -> m1_488  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_492 -> m1_493  [key=0, style=solid];
m1_492 -> m1_202  [key=2, style=dotted];
m1_492 -> m1_210  [key=2, style=dotted];
m1_498 -> m1_499  [key=0, style=solid];
m1_498 -> m1_202  [key=2, style=dotted];
m1_498 -> m1_210  [key=2, style=dotted];
m1_501 -> m1_502  [key=0, style=solid];
m1_501 -> m1_202  [key=2, style=dotted];
m1_501 -> m1_210  [key=2, style=dotted];
m1_470 -> m1_471  [key=0, style=solid];
m1_470 -> m1_37  [key=2, style=dotted];
m1_470 -> m1_472  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_470 -> m1_473  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_470 -> m1_490  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_470 -> m1_493  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_470 -> m1_499  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_470 -> m1_502  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_473 -> m1_474  [key=0, style=solid];
m1_473 -> m1_38  [key=2, style=dotted];
m1_473 -> m1_488  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_473 -> m1_490  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_473 -> m1_493  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_473 -> m1_499  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_473 -> m1_502  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_476 -> m1_477  [key=0, style=solid];
m1_476 -> m1_31  [key=2, style=dotted];
m1_476 -> m1_33  [key=2, style=dotted];
m1_476 -> m1_34  [key=2, style=dotted];
m1_476 -> m1_111  [key=2, style=dotted];
m1_477 -> m1_478  [key=0, style=solid];
m1_477 -> m1_481  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_477 -> m1_485  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_477 -> m1_497  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_471 -> m1_472  [key=0, style=solid];
m1_471 -> m1_197  [key=2, style=dotted];
m1_471 -> m1_484  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_471 -> m1_487  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_472 -> m1_473  [key=0, style=solid];
m1_472 -> m1_198  [key=2, style=dotted];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_211  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_211  [key=2, style=dotted];
m1_499 -> m1_500  [key=0, style=solid];
m1_499 -> m1_211  [key=2, style=dotted];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_211  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_204  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_487 -> m1_207  [key=2, style=dotted];
m1_487 -> m1_208  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_209  [key=2, style=dotted];
m1_475 -> m1_476  [key=0, style=solid];
m1_475 -> m1_200  [key=2, style=dotted];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_201  [key=2, style=dotted];
m1_481 -> m1_44  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_205  [key=2, style=dotted];
m1_485 -> m1_487  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_201  [key=2, style=dotted];
m1_497 -> m1_44  [key=2, style=dotted];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_481  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_479 -> m1_482  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_479 -> m1_489  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_479 -> m1_492  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_479 -> m1_495  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_482  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m1_480 -> m1_483  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m1_480 -> m1_489  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m1_480 -> m1_492  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m1_480 -> m1_496  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m1_489 -> m1_490  [key=0, style=solid];
m1_489 -> m1_202  [key=2, style=dotted];
m1_489 -> m1_210  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_40  [key=2, style=dotted];
m1_495 -> m1_495  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_495 -> m1_497  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_495 -> m1_498  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_495 -> m1_501  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_498  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m1_496 -> m1_501  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_206  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_212  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_213  [key=2, style=dotted];
m1_500 -> m1_501  [key=0, style=solid];
m1_500 -> m1_213  [key=2, style=dotted];
m1_503 -> m1_504  [key=0, style=solid];
m1_503 -> m1_212  [key=2, style=dotted];
m1_504 -> m1_465  [color=blue, key=0, style=bold];
m1_699 -> m1_700  [key=0, style=solid];
m1_700 -> m1_701  [key=0, style=solid];
m1_700 -> m1_532  [key=2, style=dotted];
m1_700 -> m1_705  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_700 -> m1_706  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_701 -> m1_702  [key=0, style=solid];
m1_701 -> m1_30  [key=2, style=dotted];
m1_701 -> m1_704  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_705  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_709  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_710  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_711  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_712  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_713  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_715  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_720  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_701 -> m1_724  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_705 -> m1_706  [key=0, style=solid];
m1_706 -> m1_707  [key=0, style=solid];
m1_706 -> m1_534  [key=2, style=dotted];
m1_706 -> m1_535  [key=2, style=dotted];
m1_706 -> m1_536  [key=2, style=dotted];
m1_702 -> m1_703  [key=0, style=solid];
m1_702 -> m1_37  [key=2, style=dotted];
m1_702 -> m1_704  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_702 -> m1_707  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_702 -> m1_712  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_702 -> m1_714  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_704 -> m1_705  [key=0, style=solid];
m1_704 -> m1_38  [key=2, style=dotted];
m1_704 -> m1_708  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_704 -> m1_719  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_704 -> m1_721  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_709 -> m1_710  [key=0, style=solid];
m1_709 -> m1_31  [key=2, style=dotted];
m1_709 -> m1_200  [key=2, style=dotted];
m1_709 -> m1_33  [key=2, style=dotted];
m1_709 -> m1_34  [key=2, style=dotted];
m1_709 -> m1_36  [key=2, style=dotted];
m1_710 -> m1_711  [key=0, style=solid];
m1_710 -> m1_537  [key=2, style=dotted];
m1_710 -> m1_200  [key=2, style=dotted];
m1_710 -> m1_33  [key=2, style=dotted];
m1_710 -> m1_538  [key=2, style=dotted];
m1_710 -> m1_36  [key=2, style=dotted];
m1_711 -> m1_712  [key=0, style=solid];
m1_711 -> m1_257  [key=2, style=dotted];
m1_712 -> m1_713  [key=0, style=solid];
m1_712 -> m1_205  [key=2, style=dotted];
m1_712 -> m1_540  [key=2, style=dotted];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_715  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_713 -> m1_716  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_713 -> m1_717  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_713 -> m1_719  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_715 -> m1_716  [key=0, style=solid];
m1_720 -> m1_721  [key=0, style=solid];
m1_720 -> m1_722  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_720 -> m1_723  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_724 -> m1_725  [key=0, style=solid];
m1_724 -> m1_28  [key=2, style=dotted];
m1_703 -> m1_704  [key=0, style=solid];
m1_703 -> m1_533  [key=2, style=dotted];
m1_703 -> m1_706  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_703 -> m1_707  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_707 -> m1_708  [key=0, style=solid];
m1_707 -> m1_198  [key=2, style=dotted];
m1_714 -> m1_715  [key=0, style=solid];
m1_714 -> m1_541  [key=2, style=dotted];
m1_714 -> m1_542  [key=2, style=dotted];
m1_714 -> m1_726  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_714 -> m1_716  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_708 -> m1_709  [key=0, style=solid];
m1_708 -> m1_274  [key=2, style=dotted];
m1_719 -> m1_718  [key=0, style=solid];
m1_719 -> m1_695  [key=2, style=dotted];
m1_721 -> m1_722  [key=0, style=solid];
m1_721 -> m1_28  [key=2, style=dotted];
m1_716 -> m1_717  [key=0, style=solid];
m1_716 -> m1_543  [key=2, style=dotted];
m1_716 -> m1_718  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_717 -> m1_718  [key=0, style=solid];
m1_717 -> m1_719  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_718 -> m1_719  [key=0, style=solid];
m1_718 -> m1_720  [key=0, style=solid];
m1_722 -> m1_723  [key=0, style=solid];
m1_722 -> m1_28  [key=2, style=dotted];
m1_723 -> m1_724  [key=0, style=solid];
m1_723 -> m1_28  [key=2, style=dotted];
m1_725 -> m1_699  [color=blue, key=0, style=bold];
m1_940 -> m1_941  [key=0, style=solid];
m1_941 -> m1_942  [key=0, style=solid];
m1_941 -> m1_532  [key=2, style=dotted];
m1_941 -> m1_946  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_941 -> m1_947  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_942 -> m1_943  [key=0, style=solid];
m1_942 -> m1_30  [key=2, style=dotted];
m1_942 -> m1_945  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_946  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_950  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_951  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_952  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_953  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_954  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_955  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_957  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_963  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_965  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_942 -> m1_966  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_946 -> m1_947  [key=0, style=solid];
m1_947 -> m1_948  [key=0, style=solid];
m1_947 -> m1_534  [key=2, style=dotted];
m1_947 -> m1_535  [key=2, style=dotted];
m1_947 -> m1_536  [key=2, style=dotted];
m1_943 -> m1_944  [key=0, style=solid];
m1_943 -> m1_37  [key=2, style=dotted];
m1_943 -> m1_945  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_943 -> m1_948  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_943 -> m1_954  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_943 -> m1_956  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_945 -> m1_946  [key=0, style=solid];
m1_945 -> m1_38  [key=2, style=dotted];
m1_945 -> m1_949  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_945 -> m1_962  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_945 -> m1_964  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_950 -> m1_951  [key=0, style=solid];
m1_950 -> m1_31  [key=2, style=dotted];
m1_950 -> m1_200  [key=2, style=dotted];
m1_950 -> m1_33  [key=2, style=dotted];
m1_950 -> m1_34  [key=2, style=dotted];
m1_950 -> m1_36  [key=2, style=dotted];
m1_951 -> m1_952  [key=0, style=solid];
m1_951 -> m1_537  [key=2, style=dotted];
m1_951 -> m1_200  [key=2, style=dotted];
m1_951 -> m1_33  [key=2, style=dotted];
m1_951 -> m1_538  [key=2, style=dotted];
m1_951 -> m1_36  [key=2, style=dotted];
m1_952 -> m1_953  [key=0, style=solid];
m1_952 -> m1_258  [key=2, style=dotted];
m1_952 -> m1_44  [key=2, style=dotted];
m1_953 -> m1_954  [key=0, style=solid];
m1_953 -> m1_257  [key=2, style=dotted];
m1_954 -> m1_955  [key=0, style=solid];
m1_954 -> m1_205  [key=2, style=dotted];
m1_954 -> m1_540  [key=2, style=dotted];
m1_955 -> m1_956  [key=0, style=solid];
m1_955 -> m1_957  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_955 -> m1_958  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_955 -> m1_959  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_955 -> m1_960  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_955 -> m1_962  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_957 -> m1_958  [key=0, style=solid];
m1_963 -> m1_964  [key=0, style=solid];
m1_965 -> m1_966  [key=0, style=solid];
m1_965 -> m1_28  [key=2, style=dotted];
m1_966 -> m1_967  [key=0, style=solid];
m1_966 -> m1_28  [key=2, style=dotted];
m1_944 -> m1_945  [key=0, style=solid];
m1_944 -> m1_533  [key=2, style=dotted];
m1_944 -> m1_947  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_944 -> m1_948  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_948 -> m1_949  [key=0, style=solid];
m1_948 -> m1_198  [key=2, style=dotted];
m1_956 -> m1_957  [key=0, style=solid];
m1_956 -> m1_541  [key=2, style=dotted];
m1_956 -> m1_542  [key=2, style=dotted];
m1_956 -> m1_968  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_956 -> m1_959  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_949 -> m1_950  [key=0, style=solid];
m1_949 -> m1_274  [key=2, style=dotted];
m1_962 -> m1_961  [key=0, style=solid];
m1_962 -> m1_695  [key=2, style=dotted];
m1_964 -> m1_965  [key=0, style=solid];
m1_964 -> m1_28  [key=2, style=dotted];
m1_958 -> m1_959  [key=0, style=solid];
m1_959 -> m1_960  [key=0, style=solid];
m1_959 -> m1_543  [key=2, style=dotted];
m1_959 -> m1_961  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_960 -> m1_961  [key=0, style=solid];
m1_960 -> m1_962  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_961 -> m1_962  [key=0, style=solid];
m1_961 -> m1_963  [key=0, style=solid];
m1_967 -> m1_940  [color=blue, key=0, style=bold];
m1_1114 -> m1_1115  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=2, style=dotted];
m1_47 -> m1_50  [key=2, style=dotted];
m1_48 -> m1_46  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=2, style=dotted];
m1_53 -> m1_51  [color=blue, key=0, style=bold];
m1_119 -> m1_120  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_49  [key=2, style=dotted];
m1_120 -> m1_50  [key=2, style=dotted];
m1_121 -> m1_119  [color=blue, key=0, style=bold];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_54  [key=2, style=dotted];
m1_124 -> m1_122  [color=blue, key=0, style=bold];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_54  [key=2, style=dotted];
m1_127 -> m1_125  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_54  [key=2, style=dotted];
m1_130 -> m1_128  [color=blue, key=0, style=bold];
m1_544 -> m1_545  [key=0, style=solid];
m1_545 -> m1_546  [key=0, style=solid];
m1_546 -> m1_544  [color=blue, key=0, style=bold];
m1_574 -> m1_575  [key=0, style=solid];
m1_575 -> m1_576  [key=0, style=solid];
m1_576 -> m1_574  [color=blue, key=0, style=bold];
m1_605 -> m1_606  [key=0, style=solid];
m1_606 -> m1_607  [key=0, style=solid];
m1_607 -> m1_605  [color=blue, key=0, style=bold];
m1_634 -> m1_635  [key=0, style=solid];
m1_635 -> m1_636  [key=0, style=solid];
m1_636 -> m1_634  [color=blue, key=0, style=bold];
m1_664 -> m1_665  [key=0, style=solid];
m1_665 -> m1_666  [key=0, style=solid];
m1_666 -> m1_664  [color=blue, key=0, style=bold];
m1_696 -> m1_697  [key=0, style=solid];
m1_697 -> m1_698  [key=0, style=solid];
m1_698 -> m1_696  [color=blue, key=0, style=bold];
m1_726 -> m1_727  [key=0, style=solid];
m1_727 -> m1_728  [key=0, style=solid];
m1_728 -> m1_726  [color=blue, key=0, style=bold];
m1_756 -> m1_757  [key=0, style=solid];
m1_757 -> m1_758  [key=0, style=solid];
m1_758 -> m1_756  [color=blue, key=0, style=bold];
m1_785 -> m1_786  [key=0, style=solid];
m1_786 -> m1_787  [key=0, style=solid];
m1_787 -> m1_785  [color=blue, key=0, style=bold];
m1_814 -> m1_815  [key=0, style=solid];
m1_815 -> m1_816  [key=0, style=solid];
m1_816 -> m1_814  [color=blue, key=0, style=bold];
m1_843 -> m1_844  [key=0, style=solid];
m1_844 -> m1_845  [key=0, style=solid];
m1_845 -> m1_843  [color=blue, key=0, style=bold];
m1_937 -> m1_938  [key=0, style=solid];
m1_938 -> m1_939  [key=0, style=solid];
m1_939 -> m1_937  [color=blue, key=0, style=bold];
m1_968 -> m1_969  [key=0, style=solid];
m1_969 -> m1_970  [key=0, style=solid];
m1_970 -> m1_968  [color=blue, key=0, style=bold];
m1_999 -> m1_1000  [key=0, style=solid];
m1_1000 -> m1_1001  [key=0, style=solid];
m1_1001 -> m1_999  [color=blue, key=0, style=bold];
m1_1030 -> m1_1031  [key=0, style=solid];
m1_1031 -> m1_1032  [key=0, style=solid];
m1_1032 -> m1_1030  [color=blue, key=0, style=bold];
m1_1061 -> m1_1062  [key=0, style=solid];
m1_1062 -> m1_1063  [key=0, style=solid];
m1_1063 -> m1_1061  [color=blue, key=0, style=bold];
m1_1096 -> m1_1097  [key=0, style=solid];
m1_1096 -> m1_1098  [key=2, style=dotted];
m1_1095 -> m1_1096  [key=0, style=solid];
m1_1097 -> m1_1095  [color=blue, key=0, style=bold];
m1_1103 -> m1_1104  [key=0, style=solid];
m1_1104 -> m1_1105  [key=0, style=solid];
m1_1105 -> m1_1103  [color=blue, key=0, style=bold];
m1_1115 -> m1_1116  [key=0, style=solid];
m1_1116 -> m1_1114  [color=blue, key=0, style=bold];
m1_329 -> m1_330  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_30  [key=2, style=dotted];
m1_330 -> m1_332  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_330 -> m1_334  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_330 -> m1_335  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_330 -> m1_337  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_330 -> m1_340  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_37  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_38  [key=2, style=dotted];
m1_332 -> m1_338  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_332 -> m1_339  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_31  [key=2, style=dotted];
m1_334 -> m1_200  [key=2, style=dotted];
m1_334 -> m1_33  [key=2, style=dotted];
m1_334 -> m1_34  [key=2, style=dotted];
m1_334 -> m1_36  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_257  [key=2, style=dotted];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_28  [key=2, style=dotted];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_28  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_274  [key=2, style=dotted];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_209  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_28  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_275  [key=2, style=dotted];
m1_336 -> m1_338  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_341 -> m1_329  [color=blue, key=0, style=bold];
m1_608 -> m1_609  [key=0, style=solid];
m1_609 -> m1_610  [key=0, style=solid];
m1_609 -> m1_532  [key=2, style=dotted];
m1_609 -> m1_614  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_609 -> m1_615  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_610 -> m1_611  [key=0, style=solid];
m1_610 -> m1_30  [key=2, style=dotted];
m1_610 -> m1_613  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_614  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_618  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_619  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_620  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_621  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_622  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_624  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_628  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_610 -> m1_632  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_614 -> m1_615  [key=0, style=solid];
m1_615 -> m1_616  [key=0, style=solid];
m1_615 -> m1_534  [key=2, style=dotted];
m1_615 -> m1_535  [key=2, style=dotted];
m1_615 -> m1_536  [key=2, style=dotted];
m1_611 -> m1_612  [key=0, style=solid];
m1_611 -> m1_37  [key=2, style=dotted];
m1_611 -> m1_613  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_611 -> m1_616  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_611 -> m1_621  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_611 -> m1_623  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_613 -> m1_614  [key=0, style=solid];
m1_613 -> m1_38  [key=2, style=dotted];
m1_613 -> m1_617  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_613 -> m1_627  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_613 -> m1_629  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_618 -> m1_619  [key=0, style=solid];
m1_618 -> m1_31  [key=2, style=dotted];
m1_618 -> m1_200  [key=2, style=dotted];
m1_618 -> m1_33  [key=2, style=dotted];
m1_618 -> m1_34  [key=2, style=dotted];
m1_618 -> m1_36  [key=2, style=dotted];
m1_619 -> m1_620  [key=0, style=solid];
m1_619 -> m1_537  [key=2, style=dotted];
m1_619 -> m1_200  [key=2, style=dotted];
m1_619 -> m1_33  [key=2, style=dotted];
m1_619 -> m1_538  [key=2, style=dotted];
m1_619 -> m1_36  [key=2, style=dotted];
m1_620 -> m1_621  [key=0, style=solid];
m1_620 -> m1_257  [key=2, style=dotted];
m1_621 -> m1_622  [key=0, style=solid];
m1_621 -> m1_205  [key=2, style=dotted];
m1_621 -> m1_540  [key=2, style=dotted];
m1_622 -> m1_623  [key=0, style=solid];
m1_622 -> m1_624  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_622 -> m1_625  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_624 -> m1_625  [key=0, style=solid];
m1_628 -> m1_629  [key=0, style=solid];
m1_628 -> m1_630  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_628 -> m1_631  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_632 -> m1_633  [key=0, style=solid];
m1_632 -> m1_28  [key=2, style=dotted];
m1_612 -> m1_613  [key=0, style=solid];
m1_612 -> m1_533  [key=2, style=dotted];
m1_612 -> m1_615  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_612 -> m1_616  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_616 -> m1_617  [key=0, style=solid];
m1_616 -> m1_198  [key=2, style=dotted];
m1_623 -> m1_624  [key=0, style=solid];
m1_623 -> m1_541  [key=2, style=dotted];
m1_623 -> m1_542  [key=2, style=dotted];
m1_623 -> m1_634  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_623 -> m1_625  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_617 -> m1_618  [key=0, style=solid];
m1_617 -> m1_274  [key=2, style=dotted];
m1_627 -> m1_626  [key=0, style=solid];
m1_627 -> m1_209  [key=2, style=dotted];
m1_629 -> m1_630  [key=0, style=solid];
m1_629 -> m1_28  [key=2, style=dotted];
m1_625 -> m1_626  [key=0, style=solid];
m1_625 -> m1_543  [key=2, style=dotted];
m1_626 -> m1_627  [key=0, style=solid];
m1_626 -> m1_628  [key=0, style=solid];
m1_630 -> m1_631  [key=0, style=solid];
m1_630 -> m1_28  [key=2, style=dotted];
m1_631 -> m1_632  [key=0, style=solid];
m1_631 -> m1_28  [key=2, style=dotted];
m1_633 -> m1_608  [color=blue, key=0, style=bold];
m1_1106 -> m1_1107  [key=0, style=solid];
m1_1106 -> m1_1108  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1107 -> m1_1108  [key=0, style=solid];
m1_1108 -> m1_1109  [key=0, style=solid];
m1_1108 -> m1_1090  [key=2, style=dotted];
m1_1109 -> m1_1110  [key=0, style=solid];
m1_1110 -> m1_1106  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_60  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_24  [key=2, style=dotted];
m1_60 -> m1_25  [key=2, style=dotted];
m1_60 -> m1_26  [key=2, style=dotted];
m1_60 -> m1_27  [key=2, style=dotted];
m1_60 -> m1_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_60 -> m1_64  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_60 -> m1_89  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_60 -> m1_90  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_62  [color=darkseagreen4, key=1, label=mchQuantityFile, style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_24  [key=2, style=dotted];
m1_61 -> m1_25  [key=2, style=dotted];
m1_61 -> m1_26  [key=2, style=dotted];
m1_61 -> m1_27  [key=2, style=dotted];
m1_61 -> m1_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_61 -> m1_64  [color=darkseagreen4, key=1, label=equity, style=dashed];
m1_61 -> m1_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_63  [color=darkseagreen4, key=1, label=jwbQuantityFile, style=dashed];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_24  [key=2, style=dotted];
m1_62 -> m1_25  [key=2, style=dotted];
m1_62 -> m1_26  [key=2, style=dotted];
m1_62 -> m1_27  [key=2, style=dotted];
m1_62 -> m1_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_62 -> m1_70  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m1_62 -> m1_104  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_24  [key=2, style=dotted];
m1_63 -> m1_25  [key=2, style=dotted];
m1_63 -> m1_26  [key=2, style=dotted];
m1_63 -> m1_27  [key=2, style=dotted];
m1_63 -> m1_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_63 -> m1_71  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m1_63 -> m1_105  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_28  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_107  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_102  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_39  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_108  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_28  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_108  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_28  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_29  [key=2, style=dotted];
m1_65 -> m1_75  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_65 -> m1_77  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_65 -> m1_79  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_65 -> m1_87  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_30  [key=2, style=dotted];
m1_66 -> m1_68  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_66 -> m1_84  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_66 -> m1_85  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_66 -> m1_86  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_66 -> m1_87  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_109  [key=2, style=dotted];
m1_75 -> m1_32  [key=2, style=dotted];
m1_75 -> m1_34  [key=2, style=dotted];
m1_75 -> m1_81  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m1_75 -> m1_84  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m1_75 -> m1_99  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_109  [key=2, style=dotted];
m1_77 -> m1_32  [key=2, style=dotted];
m1_77 -> m1_34  [key=2, style=dotted];
m1_77 -> m1_82  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m1_77 -> m1_86  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m1_77 -> m1_99  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_109  [key=2, style=dotted];
m1_79 -> m1_32  [key=2, style=dotted];
m1_79 -> m1_34  [key=2, style=dotted];
m1_79 -> m1_83  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m1_79 -> m1_85  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m1_79 -> m1_99  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_112  [key=2, style=dotted];
m1_87 -> m1_113  [key=2, style=dotted];
m1_87 -> m1_114  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_37  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_38  [key=2, style=dotted];
m1_68 -> m1_70  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_71  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_72  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_73  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_74  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_87  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_102  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_103  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_104  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_68 -> m1_105  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_111  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_111  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_111  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_75  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m1_72 -> m1_96  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m1_73 -> m1_98  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m1_74 -> m1_97  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_45  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_117  [key=2, style=dotted];
m1_103 -> m1_118  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_43  [key=2, style=dotted];
m1_96 -> m1_115  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_43  [key=2, style=dotted];
m1_98 -> m1_115  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_43  [key=2, style=dotted];
m1_97 -> m1_115  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_35  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_110  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_116  [key=2, style=dotted];
m1_99 -> m1_43  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_35  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_110  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_35  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_110  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_40  [key=2, style=dotted];
m1_91 -> m1_96  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_91 -> m1_97  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_91 -> m1_98  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_91 -> m1_99  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m1_92 -> m1_96  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m1_92 -> m1_99  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_95  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m1_93 -> m1_97  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m1_93 -> m1_99  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m1_106 -> m1_89  [key=0, style=solid];
m1_106 -> m1_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_28  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_101 -> m1_100  [key=0, style=solid];
m1_101 -> m1_44  [key=2, style=dotted];
m1_101 -> m1_101  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m1_107 -> m1_55  [color=blue, key=0, style=bold];
m1_817 -> m1_818  [key=0, style=solid];
m1_818 -> m1_819  [key=0, style=solid];
m1_818 -> m1_532  [key=2, style=dotted];
m1_818 -> m1_823  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_818 -> m1_824  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_819 -> m1_820  [key=0, style=solid];
m1_819 -> m1_30  [key=2, style=dotted];
m1_819 -> m1_822  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_823  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_827  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_828  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_829  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_830  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_831  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_832  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_834  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_840  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_819 -> m1_841  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_823 -> m1_824  [key=0, style=solid];
m1_824 -> m1_825  [key=0, style=solid];
m1_824 -> m1_534  [key=2, style=dotted];
m1_824 -> m1_535  [key=2, style=dotted];
m1_824 -> m1_536  [key=2, style=dotted];
m1_820 -> m1_821  [key=0, style=solid];
m1_820 -> m1_37  [key=2, style=dotted];
m1_820 -> m1_822  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_820 -> m1_825  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_820 -> m1_831  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_820 -> m1_833  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_38  [key=2, style=dotted];
m1_822 -> m1_826  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_822 -> m1_838  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_822 -> m1_839  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_31  [key=2, style=dotted];
m1_827 -> m1_200  [key=2, style=dotted];
m1_827 -> m1_33  [key=2, style=dotted];
m1_827 -> m1_34  [key=2, style=dotted];
m1_827 -> m1_36  [key=2, style=dotted];
m1_828 -> m1_829  [key=0, style=solid];
m1_828 -> m1_537  [key=2, style=dotted];
m1_828 -> m1_200  [key=2, style=dotted];
m1_828 -> m1_33  [key=2, style=dotted];
m1_828 -> m1_538  [key=2, style=dotted];
m1_828 -> m1_36  [key=2, style=dotted];
m1_829 -> m1_830  [key=0, style=solid];
m1_829 -> m1_258  [key=2, style=dotted];
m1_829 -> m1_44  [key=2, style=dotted];
m1_830 -> m1_831  [key=0, style=solid];
m1_830 -> m1_257  [key=2, style=dotted];
m1_831 -> m1_832  [key=0, style=solid];
m1_831 -> m1_205  [key=2, style=dotted];
m1_831 -> m1_540  [key=2, style=dotted];
m1_832 -> m1_833  [key=0, style=solid];
m1_832 -> m1_834  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_832 -> m1_835  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_832 -> m1_836  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_834 -> m1_835  [key=0, style=solid];
m1_840 -> m1_841  [key=0, style=solid];
m1_840 -> m1_28  [key=2, style=dotted];
m1_841 -> m1_842  [key=0, style=solid];
m1_841 -> m1_28  [key=2, style=dotted];
m1_821 -> m1_822  [key=0, style=solid];
m1_821 -> m1_533  [key=2, style=dotted];
m1_821 -> m1_824  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_821 -> m1_825  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_825 -> m1_826  [key=0, style=solid];
m1_825 -> m1_198  [key=2, style=dotted];
m1_833 -> m1_834  [key=0, style=solid];
m1_833 -> m1_541  [key=2, style=dotted];
m1_833 -> m1_542  [key=2, style=dotted];
m1_833 -> m1_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_833 -> m1_836  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_826 -> m1_827  [key=0, style=solid];
m1_826 -> m1_274  [key=2, style=dotted];
m1_838 -> m1_837  [key=0, style=solid];
m1_838 -> m1_209  [key=2, style=dotted];
m1_839 -> m1_840  [key=0, style=solid];
m1_839 -> m1_28  [key=2, style=dotted];
m1_835 -> m1_836  [key=0, style=solid];
m1_836 -> m1_837  [key=0, style=solid];
m1_836 -> m1_543  [key=2, style=dotted];
m1_837 -> m1_838  [key=0, style=solid];
m1_837 -> m1_839  [key=0, style=solid];
m1_842 -> m1_817  [color=blue, key=0, style=bold];
m1_361 -> m1_362  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_30  [key=2, style=dotted];
m1_362 -> m1_364  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_362 -> m1_367  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_362 -> m1_368  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_37  [key=2, style=dotted];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_38  [key=2, style=dotted];
m1_364 -> m1_366  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_367  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_370  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_373  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_375  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_376  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_364 -> m1_377  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_379  [key=2, style=dotted];
m1_367 -> m1_200  [key=2, style=dotted];
m1_367 -> m1_34  [key=2, style=dotted];
m1_367 -> m1_36  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_371  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_368 -> m1_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_274  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_256  [key=2, style=dotted];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_28  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_209  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_28  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_28  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_28  [key=2, style=dotted];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_28  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_202  [key=2, style=dotted];
m1_371 -> m1_360  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_28  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_275  [key=2, style=dotted];
m1_378 -> m1_361  [color=blue, key=0, style=bold];
m1_788 -> m1_789  [key=0, style=solid];
m1_789 -> m1_790  [key=0, style=solid];
m1_789 -> m1_532  [key=2, style=dotted];
m1_789 -> m1_794  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_789 -> m1_795  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_790 -> m1_791  [key=0, style=solid];
m1_790 -> m1_30  [key=2, style=dotted];
m1_790 -> m1_793  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_794  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_798  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_799  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_800  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_801  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_802  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_803  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_805  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_811  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_790 -> m1_812  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_794 -> m1_795  [key=0, style=solid];
m1_795 -> m1_796  [key=0, style=solid];
m1_795 -> m1_534  [key=2, style=dotted];
m1_795 -> m1_535  [key=2, style=dotted];
m1_795 -> m1_536  [key=2, style=dotted];
m1_791 -> m1_792  [key=0, style=solid];
m1_791 -> m1_37  [key=2, style=dotted];
m1_791 -> m1_793  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_791 -> m1_796  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_791 -> m1_802  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_791 -> m1_804  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_793 -> m1_794  [key=0, style=solid];
m1_793 -> m1_38  [key=2, style=dotted];
m1_793 -> m1_797  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_793 -> m1_809  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_793 -> m1_810  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_798 -> m1_799  [key=0, style=solid];
m1_798 -> m1_31  [key=2, style=dotted];
m1_798 -> m1_200  [key=2, style=dotted];
m1_798 -> m1_33  [key=2, style=dotted];
m1_798 -> m1_34  [key=2, style=dotted];
m1_798 -> m1_36  [key=2, style=dotted];
m1_799 -> m1_800  [key=0, style=solid];
m1_799 -> m1_537  [key=2, style=dotted];
m1_799 -> m1_200  [key=2, style=dotted];
m1_799 -> m1_33  [key=2, style=dotted];
m1_799 -> m1_538  [key=2, style=dotted];
m1_799 -> m1_36  [key=2, style=dotted];
m1_800 -> m1_801  [key=0, style=solid];
m1_800 -> m1_258  [key=2, style=dotted];
m1_800 -> m1_44  [key=2, style=dotted];
m1_801 -> m1_802  [key=0, style=solid];
m1_801 -> m1_257  [key=2, style=dotted];
m1_802 -> m1_803  [key=0, style=solid];
m1_802 -> m1_205  [key=2, style=dotted];
m1_802 -> m1_540  [key=2, style=dotted];
m1_803 -> m1_804  [key=0, style=solid];
m1_803 -> m1_805  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_803 -> m1_806  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_803 -> m1_807  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_805 -> m1_806  [key=0, style=solid];
m1_811 -> m1_812  [key=0, style=solid];
m1_811 -> m1_28  [key=2, style=dotted];
m1_812 -> m1_813  [key=0, style=solid];
m1_812 -> m1_28  [key=2, style=dotted];
m1_792 -> m1_793  [key=0, style=solid];
m1_792 -> m1_533  [key=2, style=dotted];
m1_792 -> m1_795  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_792 -> m1_796  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_796 -> m1_797  [key=0, style=solid];
m1_796 -> m1_198  [key=2, style=dotted];
m1_804 -> m1_805  [key=0, style=solid];
m1_804 -> m1_541  [key=2, style=dotted];
m1_804 -> m1_542  [key=2, style=dotted];
m1_804 -> m1_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_804 -> m1_807  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_797 -> m1_798  [key=0, style=solid];
m1_797 -> m1_274  [key=2, style=dotted];
m1_809 -> m1_808  [key=0, style=solid];
m1_809 -> m1_209  [key=2, style=dotted];
m1_810 -> m1_811  [key=0, style=solid];
m1_810 -> m1_28  [key=2, style=dotted];
m1_806 -> m1_807  [key=0, style=solid];
m1_807 -> m1_808  [key=0, style=solid];
m1_807 -> m1_543  [key=2, style=dotted];
m1_808 -> m1_809  [key=0, style=solid];
m1_808 -> m1_810  [key=0, style=solid];
m1_813 -> m1_788  [color=blue, key=0, style=bold];
m1_1002 -> m1_1003  [key=0, style=solid];
m1_1003 -> m1_1004  [key=0, style=solid];
m1_1003 -> m1_532  [key=2, style=dotted];
m1_1003 -> m1_1008  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_1003 -> m1_1009  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_1004 -> m1_1005  [key=0, style=solid];
m1_1004 -> m1_30  [key=2, style=dotted];
m1_1004 -> m1_1007  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1008  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1012  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1013  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1014  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1015  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1016  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1017  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1019  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1025  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1027  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1004 -> m1_1028  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1008 -> m1_1009  [key=0, style=solid];
m1_1009 -> m1_1010  [key=0, style=solid];
m1_1009 -> m1_534  [key=2, style=dotted];
m1_1009 -> m1_535  [key=2, style=dotted];
m1_1009 -> m1_536  [key=2, style=dotted];
m1_1005 -> m1_1006  [key=0, style=solid];
m1_1005 -> m1_37  [key=2, style=dotted];
m1_1005 -> m1_1007  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1005 -> m1_1010  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1005 -> m1_1016  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1005 -> m1_1018  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1007 -> m1_1008  [key=0, style=solid];
m1_1007 -> m1_38  [key=2, style=dotted];
m1_1007 -> m1_1011  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1007 -> m1_1024  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1007 -> m1_1026  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1012 -> m1_1013  [key=0, style=solid];
m1_1012 -> m1_31  [key=2, style=dotted];
m1_1012 -> m1_200  [key=2, style=dotted];
m1_1012 -> m1_33  [key=2, style=dotted];
m1_1012 -> m1_34  [key=2, style=dotted];
m1_1012 -> m1_36  [key=2, style=dotted];
m1_1013 -> m1_1014  [key=0, style=solid];
m1_1013 -> m1_537  [key=2, style=dotted];
m1_1013 -> m1_200  [key=2, style=dotted];
m1_1013 -> m1_33  [key=2, style=dotted];
m1_1013 -> m1_538  [key=2, style=dotted];
m1_1013 -> m1_36  [key=2, style=dotted];
m1_1014 -> m1_1015  [key=0, style=solid];
m1_1014 -> m1_258  [key=2, style=dotted];
m1_1014 -> m1_44  [key=2, style=dotted];
m1_1015 -> m1_1016  [key=0, style=solid];
m1_1015 -> m1_257  [key=2, style=dotted];
m1_1016 -> m1_1017  [key=0, style=solid];
m1_1016 -> m1_205  [key=2, style=dotted];
m1_1016 -> m1_540  [key=2, style=dotted];
m1_1017 -> m1_1018  [key=0, style=solid];
m1_1017 -> m1_1019  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1017 -> m1_1020  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1017 -> m1_1021  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1017 -> m1_1022  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1017 -> m1_1024  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1019 -> m1_1020  [key=0, style=solid];
m1_1025 -> m1_1026  [key=0, style=solid];
m1_1027 -> m1_1028  [key=0, style=solid];
m1_1027 -> m1_28  [key=2, style=dotted];
m1_1028 -> m1_1029  [key=0, style=solid];
m1_1028 -> m1_28  [key=2, style=dotted];
m1_1006 -> m1_1007  [key=0, style=solid];
m1_1006 -> m1_533  [key=2, style=dotted];
m1_1006 -> m1_1009  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_1006 -> m1_1010  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_1010 -> m1_1011  [key=0, style=solid];
m1_1010 -> m1_198  [key=2, style=dotted];
m1_1018 -> m1_1019  [key=0, style=solid];
m1_1018 -> m1_541  [key=2, style=dotted];
m1_1018 -> m1_542  [key=2, style=dotted];
m1_1018 -> m1_1030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1018 -> m1_1021  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_1011 -> m1_1012  [key=0, style=solid];
m1_1011 -> m1_274  [key=2, style=dotted];
m1_1024 -> m1_1023  [key=0, style=solid];
m1_1024 -> m1_695  [key=2, style=dotted];
m1_1026 -> m1_1027  [key=0, style=solid];
m1_1026 -> m1_28  [key=2, style=dotted];
m1_1020 -> m1_1021  [key=0, style=solid];
m1_1021 -> m1_1022  [key=0, style=solid];
m1_1021 -> m1_543  [key=2, style=dotted];
m1_1021 -> m1_1023  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_1022 -> m1_1023  [key=0, style=solid];
m1_1022 -> m1_1024  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_1023 -> m1_1024  [key=0, style=solid];
m1_1023 -> m1_1025  [key=0, style=solid];
m1_1029 -> m1_1002  [color=blue, key=0, style=bold];
m1_911 -> m1_912  [key=0, style=solid];
m1_912 -> m1_913  [key=0, style=solid];
m1_912 -> m1_532  [key=2, style=dotted];
m1_912 -> m1_917  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_912 -> m1_918  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_913 -> m1_914  [key=0, style=solid];
m1_913 -> m1_30  [key=2, style=dotted];
m1_913 -> m1_916  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_917  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_921  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_922  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_923  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_924  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_925  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_926  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_928  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_934  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_913 -> m1_935  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_917 -> m1_918  [key=0, style=solid];
m1_918 -> m1_919  [key=0, style=solid];
m1_918 -> m1_534  [key=2, style=dotted];
m1_918 -> m1_535  [key=2, style=dotted];
m1_918 -> m1_536  [key=2, style=dotted];
m1_914 -> m1_915  [key=0, style=solid];
m1_914 -> m1_37  [key=2, style=dotted];
m1_914 -> m1_916  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_914 -> m1_919  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_914 -> m1_925  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_914 -> m1_927  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_916 -> m1_917  [key=0, style=solid];
m1_916 -> m1_38  [key=2, style=dotted];
m1_916 -> m1_920  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_916 -> m1_932  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_916 -> m1_933  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_921 -> m1_922  [key=0, style=solid];
m1_921 -> m1_31  [key=2, style=dotted];
m1_921 -> m1_200  [key=2, style=dotted];
m1_921 -> m1_33  [key=2, style=dotted];
m1_921 -> m1_34  [key=2, style=dotted];
m1_921 -> m1_36  [key=2, style=dotted];
m1_922 -> m1_923  [key=0, style=solid];
m1_922 -> m1_537  [key=2, style=dotted];
m1_922 -> m1_200  [key=2, style=dotted];
m1_922 -> m1_33  [key=2, style=dotted];
m1_922 -> m1_538  [key=2, style=dotted];
m1_922 -> m1_36  [key=2, style=dotted];
m1_923 -> m1_924  [key=0, style=solid];
m1_923 -> m1_258  [key=2, style=dotted];
m1_923 -> m1_44  [key=2, style=dotted];
m1_924 -> m1_925  [key=0, style=solid];
m1_924 -> m1_257  [key=2, style=dotted];
m1_925 -> m1_926  [key=0, style=solid];
m1_925 -> m1_205  [key=2, style=dotted];
m1_925 -> m1_540  [key=2, style=dotted];
m1_926 -> m1_927  [key=0, style=solid];
m1_926 -> m1_928  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_926 -> m1_929  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_926 -> m1_930  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_928 -> m1_929  [key=0, style=solid];
m1_934 -> m1_935  [key=0, style=solid];
m1_934 -> m1_28  [key=2, style=dotted];
m1_935 -> m1_936  [key=0, style=solid];
m1_935 -> m1_28  [key=2, style=dotted];
m1_915 -> m1_916  [key=0, style=solid];
m1_915 -> m1_533  [key=2, style=dotted];
m1_915 -> m1_918  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_915 -> m1_919  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_919 -> m1_920  [key=0, style=solid];
m1_919 -> m1_198  [key=2, style=dotted];
m1_927 -> m1_928  [key=0, style=solid];
m1_927 -> m1_541  [key=2, style=dotted];
m1_927 -> m1_542  [key=2, style=dotted];
m1_927 -> m1_937  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_927 -> m1_930  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_920 -> m1_921  [key=0, style=solid];
m1_920 -> m1_274  [key=2, style=dotted];
m1_932 -> m1_931  [key=0, style=solid];
m1_932 -> m1_209  [key=2, style=dotted];
m1_933 -> m1_934  [key=0, style=solid];
m1_933 -> m1_28  [key=2, style=dotted];
m1_929 -> m1_930  [key=0, style=solid];
m1_930 -> m1_931  [key=0, style=solid];
m1_930 -> m1_543  [key=2, style=dotted];
m1_931 -> m1_932  [key=0, style=solid];
m1_931 -> m1_933  [key=0, style=solid];
m1_936 -> m1_911  [color=blue, key=0, style=bold];
m1_667 -> m1_668  [key=0, style=solid];
m1_668 -> m1_669  [key=0, style=solid];
m1_668 -> m1_532  [key=2, style=dotted];
m1_668 -> m1_673  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_668 -> m1_674  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_669 -> m1_670  [key=0, style=solid];
m1_669 -> m1_30  [key=2, style=dotted];
m1_669 -> m1_672  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_673  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_677  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_678  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_679  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_680  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_681  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_682  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_684  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_689  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_669 -> m1_693  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_673 -> m1_674  [key=0, style=solid];
m1_674 -> m1_675  [key=0, style=solid];
m1_674 -> m1_534  [key=2, style=dotted];
m1_674 -> m1_535  [key=2, style=dotted];
m1_674 -> m1_536  [key=2, style=dotted];
m1_670 -> m1_671  [key=0, style=solid];
m1_670 -> m1_37  [key=2, style=dotted];
m1_670 -> m1_672  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_670 -> m1_675  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_670 -> m1_681  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_670 -> m1_683  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_672 -> m1_673  [key=0, style=solid];
m1_672 -> m1_38  [key=2, style=dotted];
m1_672 -> m1_676  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_672 -> m1_688  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_672 -> m1_690  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_677 -> m1_678  [key=0, style=solid];
m1_677 -> m1_31  [key=2, style=dotted];
m1_677 -> m1_200  [key=2, style=dotted];
m1_677 -> m1_33  [key=2, style=dotted];
m1_677 -> m1_34  [key=2, style=dotted];
m1_677 -> m1_36  [key=2, style=dotted];
m1_678 -> m1_679  [key=0, style=solid];
m1_678 -> m1_537  [key=2, style=dotted];
m1_678 -> m1_200  [key=2, style=dotted];
m1_678 -> m1_33  [key=2, style=dotted];
m1_678 -> m1_538  [key=2, style=dotted];
m1_678 -> m1_36  [key=2, style=dotted];
m1_679 -> m1_680  [key=0, style=solid];
m1_679 -> m1_257  [key=2, style=dotted];
m1_680 -> m1_681  [key=0, style=solid];
m1_680 -> m1_539  [key=2, style=dotted];
m1_680 -> m1_44  [key=2, style=dotted];
m1_681 -> m1_682  [key=0, style=solid];
m1_681 -> m1_205  [key=2, style=dotted];
m1_681 -> m1_540  [key=2, style=dotted];
m1_682 -> m1_683  [key=0, style=solid];
m1_682 -> m1_684  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_682 -> m1_685  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_682 -> m1_686  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_682 -> m1_688  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_684 -> m1_685  [key=0, style=solid];
m1_689 -> m1_690  [key=0, style=solid];
m1_689 -> m1_691  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_689 -> m1_692  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_693 -> m1_694  [key=0, style=solid];
m1_693 -> m1_28  [key=2, style=dotted];
m1_671 -> m1_672  [key=0, style=solid];
m1_671 -> m1_533  [key=2, style=dotted];
m1_671 -> m1_674  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_671 -> m1_675  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_675 -> m1_676  [key=0, style=solid];
m1_675 -> m1_198  [key=2, style=dotted];
m1_683 -> m1_684  [key=0, style=solid];
m1_683 -> m1_541  [key=2, style=dotted];
m1_683 -> m1_542  [key=2, style=dotted];
m1_683 -> m1_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_683 -> m1_685  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_676 -> m1_677  [key=0, style=solid];
m1_676 -> m1_274  [key=2, style=dotted];
m1_688 -> m1_687  [key=0, style=solid];
m1_688 -> m1_695  [key=2, style=dotted];
m1_690 -> m1_691  [key=0, style=solid];
m1_690 -> m1_28  [key=2, style=dotted];
m1_685 -> m1_686  [key=0, style=solid];
m1_685 -> m1_543  [key=2, style=dotted];
m1_685 -> m1_687  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_686 -> m1_687  [key=0, style=solid];
m1_686 -> m1_688  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_687 -> m1_688  [key=0, style=solid];
m1_687 -> m1_689  [key=0, style=solid];
m1_691 -> m1_692  [key=0, style=solid];
m1_691 -> m1_28  [key=2, style=dotted];
m1_692 -> m1_693  [key=0, style=solid];
m1_692 -> m1_28  [key=2, style=dotted];
m1_694 -> m1_667  [color=blue, key=0, style=bold];
m1_208 -> m1_1083  [key=0, style=solid];
m1_1083 -> m1_1084  [key=0, style=solid];
m1_1084 -> m1_208  [color=blue, key=0, style=bold];
m1_577 -> m1_578  [key=0, style=solid];
m1_578 -> m1_579  [key=0, style=solid];
m1_578 -> m1_532  [key=2, style=dotted];
m1_578 -> m1_583  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_578 -> m1_584  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_579 -> m1_580  [key=0, style=solid];
m1_579 -> m1_30  [key=2, style=dotted];
m1_579 -> m1_582  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_583  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_587  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_588  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_589  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_590  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_591  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_592  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_594  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_599  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_579 -> m1_603  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_583 -> m1_584  [key=0, style=solid];
m1_584 -> m1_585  [key=0, style=solid];
m1_584 -> m1_534  [key=2, style=dotted];
m1_584 -> m1_535  [key=2, style=dotted];
m1_584 -> m1_536  [key=2, style=dotted];
m1_580 -> m1_581  [key=0, style=solid];
m1_580 -> m1_37  [key=2, style=dotted];
m1_580 -> m1_582  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_580 -> m1_585  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_580 -> m1_591  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_580 -> m1_593  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_582 -> m1_583  [key=0, style=solid];
m1_582 -> m1_38  [key=2, style=dotted];
m1_582 -> m1_586  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_582 -> m1_598  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_582 -> m1_600  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_587 -> m1_588  [key=0, style=solid];
m1_587 -> m1_31  [key=2, style=dotted];
m1_587 -> m1_200  [key=2, style=dotted];
m1_587 -> m1_33  [key=2, style=dotted];
m1_587 -> m1_34  [key=2, style=dotted];
m1_587 -> m1_36  [key=2, style=dotted];
m1_588 -> m1_589  [key=0, style=solid];
m1_588 -> m1_537  [key=2, style=dotted];
m1_588 -> m1_200  [key=2, style=dotted];
m1_588 -> m1_33  [key=2, style=dotted];
m1_588 -> m1_538  [key=2, style=dotted];
m1_588 -> m1_36  [key=2, style=dotted];
m1_589 -> m1_590  [key=0, style=solid];
m1_589 -> m1_257  [key=2, style=dotted];
m1_590 -> m1_591  [key=0, style=solid];
m1_590 -> m1_539  [key=2, style=dotted];
m1_590 -> m1_44  [key=2, style=dotted];
m1_591 -> m1_592  [key=0, style=solid];
m1_591 -> m1_205  [key=2, style=dotted];
m1_591 -> m1_540  [key=2, style=dotted];
m1_592 -> m1_593  [key=0, style=solid];
m1_592 -> m1_594  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_592 -> m1_595  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_592 -> m1_596  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_594 -> m1_595  [key=0, style=solid];
m1_599 -> m1_600  [key=0, style=solid];
m1_599 -> m1_601  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_599 -> m1_602  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_603 -> m1_604  [key=0, style=solid];
m1_603 -> m1_28  [key=2, style=dotted];
m1_581 -> m1_582  [key=0, style=solid];
m1_581 -> m1_533  [key=2, style=dotted];
m1_581 -> m1_584  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_581 -> m1_585  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_585 -> m1_586  [key=0, style=solid];
m1_585 -> m1_198  [key=2, style=dotted];
m1_593 -> m1_594  [key=0, style=solid];
m1_593 -> m1_541  [key=2, style=dotted];
m1_593 -> m1_542  [key=2, style=dotted];
m1_593 -> m1_605  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_593 -> m1_596  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_586 -> m1_587  [key=0, style=solid];
m1_586 -> m1_274  [key=2, style=dotted];
m1_598 -> m1_597  [key=0, style=solid];
m1_598 -> m1_209  [key=2, style=dotted];
m1_600 -> m1_601  [key=0, style=solid];
m1_600 -> m1_28  [key=2, style=dotted];
m1_595 -> m1_596  [key=0, style=solid];
m1_596 -> m1_597  [key=0, style=solid];
m1_596 -> m1_543  [key=2, style=dotted];
m1_597 -> m1_598  [key=0, style=solid];
m1_597 -> m1_599  [key=0, style=solid];
m1_601 -> m1_602  [key=0, style=solid];
m1_601 -> m1_28  [key=2, style=dotted];
m1_602 -> m1_603  [key=0, style=solid];
m1_602 -> m1_28  [key=2, style=dotted];
m1_604 -> m1_577  [color=blue, key=0, style=bold];
m1_1091 -> m1_1092  [key=0, style=solid];
m1_1091 -> m1_1096  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1092 -> m1_1093  [key=0, style=solid];
m1_1092 -> m1_1094  [key=2, style=dotted];
m1_1092 -> m1_1095  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1093 -> m1_1091  [color=blue, key=0, style=bold];
m1_276 -> m1_277  [key=0, style=solid];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_30  [key=2, style=dotted];
m1_277 -> m1_279  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_277 -> m1_281  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_277 -> m1_285  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_277 -> m1_289  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_37  [key=2, style=dotted];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_38  [key=2, style=dotted];
m1_279 -> m1_283  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_279 -> m1_284  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_279 -> m1_287  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_279 -> m1_288  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_31  [key=2, style=dotted];
m1_281 -> m1_200  [key=2, style=dotted];
m1_281 -> m1_33  [key=2, style=dotted];
m1_281 -> m1_291  [key=2, style=dotted];
m1_281 -> m1_292  [key=2, style=dotted];
m1_281 -> m1_36  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_28  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_28  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_274  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_209  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_28  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_209  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_28  [key=2, style=dotted];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_275  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_275  [key=2, style=dotted];
m1_290 -> m1_276  [color=blue, key=0, style=bold];
m1_1117 -> m1_1118  [key=0, style=solid];
m1_1118 -> m1_1119  [key=0, style=solid];
m1_1118 -> m1_1120  [key=2, style=dotted];
m1_1119 -> m1_1117  [color=blue, key=0, style=bold];
m1_637 -> m1_638  [key=0, style=solid];
m1_638 -> m1_639  [key=0, style=solid];
m1_638 -> m1_532  [key=2, style=dotted];
m1_638 -> m1_643  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_638 -> m1_644  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_639 -> m1_640  [key=0, style=solid];
m1_639 -> m1_30  [key=2, style=dotted];
m1_639 -> m1_642  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_643  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_647  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_648  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_649  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_650  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_651  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_652  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_654  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_658  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_639 -> m1_662  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_643 -> m1_644  [key=0, style=solid];
m1_644 -> m1_645  [key=0, style=solid];
m1_644 -> m1_534  [key=2, style=dotted];
m1_644 -> m1_535  [key=2, style=dotted];
m1_644 -> m1_536  [key=2, style=dotted];
m1_640 -> m1_641  [key=0, style=solid];
m1_640 -> m1_37  [key=2, style=dotted];
m1_640 -> m1_642  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_640 -> m1_645  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_640 -> m1_651  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_640 -> m1_653  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_642 -> m1_643  [key=0, style=solid];
m1_642 -> m1_38  [key=2, style=dotted];
m1_642 -> m1_646  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_642 -> m1_657  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_642 -> m1_659  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_647 -> m1_648  [key=0, style=solid];
m1_647 -> m1_31  [key=2, style=dotted];
m1_647 -> m1_200  [key=2, style=dotted];
m1_647 -> m1_33  [key=2, style=dotted];
m1_647 -> m1_34  [key=2, style=dotted];
m1_647 -> m1_36  [key=2, style=dotted];
m1_648 -> m1_649  [key=0, style=solid];
m1_648 -> m1_537  [key=2, style=dotted];
m1_648 -> m1_200  [key=2, style=dotted];
m1_648 -> m1_33  [key=2, style=dotted];
m1_648 -> m1_538  [key=2, style=dotted];
m1_648 -> m1_36  [key=2, style=dotted];
m1_649 -> m1_650  [key=0, style=solid];
m1_649 -> m1_257  [key=2, style=dotted];
m1_650 -> m1_651  [key=0, style=solid];
m1_650 -> m1_539  [key=2, style=dotted];
m1_650 -> m1_44  [key=2, style=dotted];
m1_651 -> m1_652  [key=0, style=solid];
m1_651 -> m1_205  [key=2, style=dotted];
m1_651 -> m1_540  [key=2, style=dotted];
m1_652 -> m1_653  [key=0, style=solid];
m1_652 -> m1_654  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_652 -> m1_655  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_654 -> m1_655  [key=0, style=solid];
m1_658 -> m1_659  [key=0, style=solid];
m1_658 -> m1_660  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_658 -> m1_661  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_662 -> m1_663  [key=0, style=solid];
m1_662 -> m1_28  [key=2, style=dotted];
m1_641 -> m1_642  [key=0, style=solid];
m1_641 -> m1_533  [key=2, style=dotted];
m1_641 -> m1_644  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_641 -> m1_645  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_645 -> m1_646  [key=0, style=solid];
m1_645 -> m1_198  [key=2, style=dotted];
m1_653 -> m1_654  [key=0, style=solid];
m1_653 -> m1_541  [key=2, style=dotted];
m1_653 -> m1_542  [key=2, style=dotted];
m1_653 -> m1_664  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_653 -> m1_655  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_646 -> m1_647  [key=0, style=solid];
m1_646 -> m1_274  [key=2, style=dotted];
m1_657 -> m1_656  [key=0, style=solid];
m1_657 -> m1_209  [key=2, style=dotted];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_28  [key=2, style=dotted];
m1_655 -> m1_656  [key=0, style=solid];
m1_655 -> m1_543  [key=2, style=dotted];
m1_656 -> m1_657  [key=0, style=solid];
m1_656 -> m1_658  [key=0, style=solid];
m1_660 -> m1_661  [key=0, style=solid];
m1_660 -> m1_28  [key=2, style=dotted];
m1_661 -> m1_662  [key=0, style=solid];
m1_661 -> m1_28  [key=2, style=dotted];
m1_663 -> m1_637  [color=blue, key=0, style=bold];
m1_1099 -> m1_1100  [key=0, style=solid];
m1_1100 -> m1_1101  [key=0, style=solid];
m1_1100 -> m1_1102  [key=2, style=dotted];
m1_1101 -> m1_1099  [color=blue, key=0, style=bold];
m1_759 -> m1_760  [key=0, style=solid];
m1_760 -> m1_761  [key=0, style=solid];
m1_760 -> m1_532  [key=2, style=dotted];
m1_760 -> m1_765  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_760 -> m1_766  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_761 -> m1_762  [key=0, style=solid];
m1_761 -> m1_30  [key=2, style=dotted];
m1_761 -> m1_764  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_765  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_769  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_770  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_771  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_772  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_773  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_774  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_776  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_782  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_761 -> m1_783  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_765 -> m1_766  [key=0, style=solid];
m1_766 -> m1_767  [key=0, style=solid];
m1_766 -> m1_534  [key=2, style=dotted];
m1_766 -> m1_535  [key=2, style=dotted];
m1_766 -> m1_536  [key=2, style=dotted];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_37  [key=2, style=dotted];
m1_762 -> m1_764  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_762 -> m1_767  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_762 -> m1_773  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_762 -> m1_775  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_764 -> m1_765  [key=0, style=solid];
m1_764 -> m1_38  [key=2, style=dotted];
m1_764 -> m1_768  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_764 -> m1_780  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_764 -> m1_781  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_769 -> m1_770  [key=0, style=solid];
m1_769 -> m1_31  [key=2, style=dotted];
m1_769 -> m1_200  [key=2, style=dotted];
m1_769 -> m1_33  [key=2, style=dotted];
m1_769 -> m1_34  [key=2, style=dotted];
m1_769 -> m1_36  [key=2, style=dotted];
m1_770 -> m1_771  [key=0, style=solid];
m1_770 -> m1_537  [key=2, style=dotted];
m1_770 -> m1_200  [key=2, style=dotted];
m1_770 -> m1_33  [key=2, style=dotted];
m1_770 -> m1_538  [key=2, style=dotted];
m1_770 -> m1_36  [key=2, style=dotted];
m1_771 -> m1_772  [key=0, style=solid];
m1_771 -> m1_258  [key=2, style=dotted];
m1_771 -> m1_44  [key=2, style=dotted];
m1_772 -> m1_773  [key=0, style=solid];
m1_772 -> m1_257  [key=2, style=dotted];
m1_773 -> m1_774  [key=0, style=solid];
m1_773 -> m1_205  [key=2, style=dotted];
m1_773 -> m1_540  [key=2, style=dotted];
m1_774 -> m1_775  [key=0, style=solid];
m1_774 -> m1_776  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_774 -> m1_777  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_774 -> m1_778  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_776 -> m1_777  [key=0, style=solid];
m1_782 -> m1_783  [key=0, style=solid];
m1_782 -> m1_28  [key=2, style=dotted];
m1_783 -> m1_784  [key=0, style=solid];
m1_783 -> m1_28  [key=2, style=dotted];
m1_763 -> m1_764  [key=0, style=solid];
m1_763 -> m1_533  [key=2, style=dotted];
m1_763 -> m1_766  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_763 -> m1_767  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_767 -> m1_768  [key=0, style=solid];
m1_767 -> m1_198  [key=2, style=dotted];
m1_775 -> m1_776  [key=0, style=solid];
m1_775 -> m1_541  [key=2, style=dotted];
m1_775 -> m1_542  [key=2, style=dotted];
m1_775 -> m1_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_775 -> m1_778  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_768 -> m1_769  [key=0, style=solid];
m1_768 -> m1_274  [key=2, style=dotted];
m1_780 -> m1_779  [key=0, style=solid];
m1_780 -> m1_209  [key=2, style=dotted];
m1_781 -> m1_782  [key=0, style=solid];
m1_781 -> m1_28  [key=2, style=dotted];
m1_777 -> m1_778  [key=0, style=solid];
m1_778 -> m1_779  [key=0, style=solid];
m1_778 -> m1_543  [key=2, style=dotted];
m1_779 -> m1_780  [key=0, style=solid];
m1_779 -> m1_781  [key=0, style=solid];
m1_784 -> m1_759  [color=blue, key=0, style=bold];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_143  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_132 -> m1_180  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_139  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_147  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_148  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_157  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_165  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_166  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_173  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_174  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_175  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_187  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_133 -> m1_188  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_35  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_35  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_30  [key=2, style=dotted];
m1_134 -> m1_138  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_134 -> m1_141  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_134 -> m1_142  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_199  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_202  [key=2, style=dotted];
m1_147 -> m1_149  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_147 -> m1_150  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_203  [key=2, style=dotted];
m1_148 -> m1_153  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_148 -> m1_154  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_28  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_28  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_28  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_28  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_28  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_28  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_28  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_28  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_202  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_203  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_37  [key=2, style=dotted];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_135 -> m1_138  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_135 -> m1_159  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_135 -> m1_168  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_38  [key=2, style=dotted];
m1_138 -> m1_153  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_154  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_155  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_156  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_157  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_159  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_164  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_165  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_166  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_168  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_173  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_174  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_175  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_177  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_183  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_189  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_190  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_191  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_138 -> m1_195  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_31  [key=2, style=dotted];
m1_141 -> m1_33  [key=2, style=dotted];
m1_141 -> m1_34  [key=2, style=dotted];
m1_141 -> m1_111  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_146  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_150  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_163  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_172  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_180  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_186  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_194  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_142 -> m1_195  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_197  [key=2, style=dotted];
m1_136 -> m1_149  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_136 -> m1_152  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_198  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_211  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_211  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_204  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_207  [key=2, style=dotted];
m1_152 -> m1_208  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_28  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_209  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_28  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_214  [key=2, style=dotted];
m1_177 -> m1_179  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_214  [key=2, style=dotted];
m1_183 -> m1_185  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_209  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_28  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_214  [key=2, style=dotted];
m1_191 -> m1_193  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_191 -> m1_194  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_191 -> m1_195  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_216  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_200  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_201  [key=2, style=dotted];
m1_146 -> m1_44  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_205  [key=2, style=dotted];
m1_150 -> m1_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_201  [key=2, style=dotted];
m1_163 -> m1_44  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_201  [key=2, style=dotted];
m1_172 -> m1_44  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_201  [key=2, style=dotted];
m1_182 -> m1_44  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_201  [key=2, style=dotted];
m1_186 -> m1_44  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_28  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_144 -> m1_147  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_144 -> m1_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_144 -> m1_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_148  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_158  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_162  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_171  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_187  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_145 -> m1_188  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_202  [key=2, style=dotted];
m1_158 -> m1_210  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_40  [key=2, style=dotted];
m1_161 -> m1_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_161 -> m1_163  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_161 -> m1_167  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_161 -> m1_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_167  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_181  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m1_171 -> m1_186  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_206  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_212  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_202  [key=2, style=dotted];
m1_167 -> m1_210  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_40  [key=2, style=dotted];
m1_170 -> m1_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_170 -> m1_172  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_170 -> m1_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_170 -> m1_186  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_170 -> m1_187  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_213  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_212  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_28  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_213  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_28  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_213  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_215  [key=2, style=dotted];
m1_196 -> m1_131  [color=blue, key=0, style=bold];
m1_200 -> m1_1064  [key=0, style=solid];
m1_200 -> m1_1065  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_200 -> m1_1066  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m1_200 -> m1_1067  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_200 -> m1_1068  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m1_200 -> m1_1069  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_200 -> m1_1070  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m1_200 -> m1_1071  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_200 -> m1_1072  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m1_1064 -> m1_1065  [key=0, style=solid];
m1_1064 -> m1_1066  [key=0, style=solid];
m1_1065 -> m1_1073  [key=0, style=solid];
m1_1065 -> n16  [key=2, style=dotted];
m1_1066 -> m1_1067  [key=0, style=solid];
m1_1066 -> m1_1068  [key=0, style=solid];
m1_1067 -> m1_1073  [key=0, style=solid];
m1_1067 -> n16  [key=2, style=dotted];
m1_1068 -> m1_1069  [key=0, style=solid];
m1_1068 -> m1_1070  [key=0, style=solid];
m1_1069 -> m1_1073  [key=0, style=solid];
m1_1069 -> n16  [key=2, style=dotted];
m1_1070 -> m1_1071  [key=0, style=solid];
m1_1070 -> m1_1072  [key=0, style=solid];
m1_1071 -> m1_1073  [key=0, style=solid];
m1_1071 -> n16  [key=2, style=dotted];
m1_1072 -> m1_1073  [key=0, style=solid];
m1_1072 -> m1_1075  [key=2, style=dotted];
m1_1072 -> m1_1076  [key=2, style=dotted];
m1_1073 -> m1_200  [color=blue, key=0, style=bold];
m1_425 -> m1_426  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_428  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_426 -> m1_438  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_434  [color=darkseagreen4, key=1, label=amount, style=dashed];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_442  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_428 -> m1_443  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_428 -> m1_452  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_428 -> m1_458  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_428 -> m1_461  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_438 -> m1_439  [key=0, style=solid];
m1_438 -> m1_35  [key=2, style=dotted];
m1_434 -> m1_435  [color=red, key=0, style=solid];
m1_434 -> m1_199  [key=2, style=dotted];
m1_429 -> m1_430  [key=0, style=solid];
m1_429 -> m1_30  [key=2, style=dotted];
m1_429 -> m1_433  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_429 -> m1_436  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_429 -> m1_437  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_202  [key=2, style=dotted];
m1_442 -> m1_444  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_442 -> m1_445  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_443 -> m1_444  [key=0, style=solid];
m1_443 -> m1_203  [key=2, style=dotted];
m1_443 -> m1_448  [color=darkseagreen4, key=1, label=fill, style=dashed];
m1_452 -> m1_453  [key=0, style=solid];
m1_452 -> m1_202  [key=2, style=dotted];
m1_452 -> m1_210  [key=2, style=dotted];
m1_458 -> m1_459  [key=0, style=solid];
m1_458 -> m1_202  [key=2, style=dotted];
m1_458 -> m1_210  [key=2, style=dotted];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_202  [key=2, style=dotted];
m1_461 -> m1_210  [key=2, style=dotted];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_37  [key=2, style=dotted];
m1_430 -> m1_432  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_430 -> m1_433  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_430 -> m1_450  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_430 -> m1_453  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_430 -> m1_459  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_430 -> m1_462  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_38  [key=2, style=dotted];
m1_433 -> m1_448  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_433 -> m1_450  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_433 -> m1_453  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_433 -> m1_459  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_433 -> m1_462  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_31  [key=2, style=dotted];
m1_436 -> m1_33  [key=2, style=dotted];
m1_436 -> m1_34  [key=2, style=dotted];
m1_436 -> m1_111  [key=2, style=dotted];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_441  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_437 -> m1_445  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_437 -> m1_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_197  [key=2, style=dotted];
m1_431 -> m1_444  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_431 -> m1_447  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_198  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_211  [key=2, style=dotted];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_211  [key=2, style=dotted];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_211  [key=2, style=dotted];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_211  [key=2, style=dotted];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_204  [key=2, style=dotted];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_207  [key=2, style=dotted];
m1_447 -> m1_208  [key=2, style=dotted];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_209  [key=2, style=dotted];
m1_435 -> m1_436  [color=red, key=0, style=solid];
m1_435 -> m1_200  [color=red, key=2, style=dotted];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_201  [key=2, style=dotted];
m1_441 -> m1_44  [key=2, style=dotted];
m1_445 -> m1_446  [key=0, style=solid];
m1_445 -> m1_205  [key=2, style=dotted];
m1_445 -> m1_447  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_457 -> m1_458  [key=0, style=solid];
m1_457 -> m1_201  [key=2, style=dotted];
m1_457 -> m1_44  [key=2, style=dotted];
m1_439 -> m1_440  [key=0, style=solid];
m1_439 -> m1_441  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_439 -> m1_442  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_439 -> m1_449  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_439 -> m1_452  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_439 -> m1_455  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_442  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_440 -> m1_443  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_440 -> m1_449  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_440 -> m1_452  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_440 -> m1_456  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m1_449 -> m1_450  [key=0, style=solid];
m1_449 -> m1_202  [key=2, style=dotted];
m1_449 -> m1_210  [key=2, style=dotted];
m1_455 -> m1_456  [key=0, style=solid];
m1_455 -> m1_40  [key=2, style=dotted];
m1_455 -> m1_455  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_455 -> m1_457  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_455 -> m1_458  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_455 -> m1_461  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_456 -> m1_457  [key=0, style=solid];
m1_456 -> m1_458  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m1_456 -> m1_461  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_206  [key=2, style=dotted];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_212  [key=2, style=dotted];
m1_454 -> m1_455  [key=0, style=solid];
m1_454 -> m1_213  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_213  [key=2, style=dotted];
m1_463 -> m1_464  [key=0, style=solid];
m1_463 -> m1_212  [key=2, style=dotted];
m1_464 -> m1_425  [color=blue, key=0, style=bold];
m1_538 -> m1_1077  [key=0, style=solid];
m1_1077 -> m1_1078  [key=0, style=solid];
m1_1077 -> m1_1079  [key=2, style=dotted];
m1_1077 -> m1_113  [key=2, style=dotted];
m1_1077 -> m1_1080  [key=2, style=dotted];
m1_1078 -> m1_538  [color=blue, key=0, style=bold];
m1_1033 -> m1_1034  [key=0, style=solid];
m1_1034 -> m1_1035  [key=0, style=solid];
m1_1034 -> m1_532  [key=2, style=dotted];
m1_1034 -> m1_1039  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_1034 -> m1_1040  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_1035 -> m1_1036  [key=0, style=solid];
m1_1035 -> m1_30  [key=2, style=dotted];
m1_1035 -> m1_1038  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1039  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1043  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1044  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1045  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1046  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1047  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1048  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1050  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1056  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1058  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1035 -> m1_1059  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_1039 -> m1_1040  [key=0, style=solid];
m1_1040 -> m1_1041  [key=0, style=solid];
m1_1040 -> m1_534  [key=2, style=dotted];
m1_1040 -> m1_535  [key=2, style=dotted];
m1_1040 -> m1_536  [key=2, style=dotted];
m1_1036 -> m1_1037  [key=0, style=solid];
m1_1036 -> m1_37  [key=2, style=dotted];
m1_1036 -> m1_1038  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1036 -> m1_1041  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1036 -> m1_1047  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1036 -> m1_1049  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_1038 -> m1_1039  [key=0, style=solid];
m1_1038 -> m1_38  [key=2, style=dotted];
m1_1038 -> m1_1042  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1038 -> m1_1055  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1038 -> m1_1057  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_1043 -> m1_1044  [key=0, style=solid];
m1_1043 -> m1_31  [key=2, style=dotted];
m1_1043 -> m1_200  [key=2, style=dotted];
m1_1043 -> m1_33  [key=2, style=dotted];
m1_1043 -> m1_34  [key=2, style=dotted];
m1_1043 -> m1_36  [key=2, style=dotted];
m1_1044 -> m1_1045  [key=0, style=solid];
m1_1044 -> m1_537  [key=2, style=dotted];
m1_1044 -> m1_200  [key=2, style=dotted];
m1_1044 -> m1_33  [key=2, style=dotted];
m1_1044 -> m1_538  [key=2, style=dotted];
m1_1044 -> m1_36  [key=2, style=dotted];
m1_1045 -> m1_1046  [key=0, style=solid];
m1_1045 -> m1_258  [key=2, style=dotted];
m1_1045 -> m1_44  [key=2, style=dotted];
m1_1046 -> m1_1047  [key=0, style=solid];
m1_1046 -> m1_257  [key=2, style=dotted];
m1_1047 -> m1_1048  [key=0, style=solid];
m1_1047 -> m1_205  [key=2, style=dotted];
m1_1047 -> m1_540  [key=2, style=dotted];
m1_1048 -> m1_1049  [key=0, style=solid];
m1_1048 -> m1_1050  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1048 -> m1_1051  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1048 -> m1_1052  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1048 -> m1_1053  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1048 -> m1_1055  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_1050 -> m1_1051  [key=0, style=solid];
m1_1056 -> m1_1057  [key=0, style=solid];
m1_1058 -> m1_1059  [key=0, style=solid];
m1_1058 -> m1_28  [key=2, style=dotted];
m1_1059 -> m1_1060  [key=0, style=solid];
m1_1059 -> m1_28  [key=2, style=dotted];
m1_1037 -> m1_1038  [key=0, style=solid];
m1_1037 -> m1_533  [key=2, style=dotted];
m1_1037 -> m1_1040  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_1037 -> m1_1041  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_1041 -> m1_1042  [key=0, style=solid];
m1_1041 -> m1_198  [key=2, style=dotted];
m1_1049 -> m1_1050  [key=0, style=solid];
m1_1049 -> m1_541  [key=2, style=dotted];
m1_1049 -> m1_542  [key=2, style=dotted];
m1_1049 -> m1_1061  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1049 -> m1_1052  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_1042 -> m1_1043  [key=0, style=solid];
m1_1042 -> m1_274  [key=2, style=dotted];
m1_1055 -> m1_1054  [key=0, style=solid];
m1_1055 -> m1_695  [key=2, style=dotted];
m1_1057 -> m1_1058  [key=0, style=solid];
m1_1057 -> m1_28  [key=2, style=dotted];
m1_1051 -> m1_1052  [key=0, style=solid];
m1_1052 -> m1_1053  [key=0, style=solid];
m1_1052 -> m1_543  [key=2, style=dotted];
m1_1052 -> m1_1054  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_1053 -> m1_1054  [key=0, style=solid];
m1_1053 -> m1_1055  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_1054 -> m1_1055  [key=0, style=solid];
m1_1054 -> m1_1056  [key=0, style=solid];
m1_1060 -> m1_1033  [color=blue, key=0, style=bold];
m1_380 -> m1_381  [key=0, style=solid];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_417  [key=2, style=dotted];
m1_381 -> m1_386  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m1_381 -> m1_410  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m1_381 -> m1_412  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_30  [key=2, style=dotted];
m1_382 -> m1_384  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_382 -> m1_386  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_382 -> m1_387  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_418  [key=2, style=dotted];
m1_386 -> m1_200  [key=2, style=dotted];
m1_386 -> m1_33  [key=2, style=dotted];
m1_386 -> m1_34  [key=2, style=dotted];
m1_386 -> m1_36  [key=2, style=dotted];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_423  [key=2, style=dotted];
m1_410 -> m1_412  [color=darkseagreen4, key=1, label=marketOpen, style=dashed];
m1_412 -> m1_413  [key=0, style=solid];
m1_412 -> m1_40  [key=2, style=dotted];
m1_412 -> m1_424  [key=2, style=dotted];
m1_412 -> m1_41  [key=2, style=dotted];
m1_412 -> m1_412  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_37  [key=2, style=dotted];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_38  [key=2, style=dotted];
m1_384 -> m1_390  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_391  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_395  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_397  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_398  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_402  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_404  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_405  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_407  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_408  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_409  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_413  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_414  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_384 -> m1_415  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_389  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_387 -> m1_393  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_387 -> m1_396  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_387 -> m1_400  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_387 -> m1_403  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_274  [key=2, style=dotted];
m1_390 -> m1_391  [key=0, style=solid];
m1_390 -> m1_28  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_391 -> m1_28  [key=2, style=dotted];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_209  [key=2, style=dotted];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_28  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_28  [key=2, style=dotted];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_209  [key=2, style=dotted];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_28  [key=2, style=dotted];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_28  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_422  [key=2, style=dotted];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_28  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_28  [key=2, style=dotted];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_422  [key=2, style=dotted];
m1_414 -> m1_415  [key=0, style=solid];
m1_414 -> m1_28  [key=2, style=dotted];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_28  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_419  [key=2, style=dotted];
m1_388 -> m1_420  [key=2, style=dotted];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_28  [key=2, style=dotted];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_202  [key=2, style=dotted];
m1_393 -> m1_360  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_28  [key=2, style=dotted];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_202  [key=2, style=dotted];
m1_400 -> m1_360  [key=2, style=dotted];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_28  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_421  [key=2, style=dotted];
m1_392 -> m1_394  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_392 -> m1_399  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_275  [key=2, style=dotted];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_40  [key=2, style=dotted];
m1_399 -> m1_399  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_399 -> m1_401  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_399 -> m1_406  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_275  [key=2, style=dotted];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_40  [key=2, style=dotted];
m1_406 -> m1_406  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_406 -> m1_410  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_406 -> m1_412  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_213  [key=2, style=dotted];
m1_416 -> m1_380  [color=blue, key=0, style=bold];
m1_293 -> m1_294  [key=0, style=solid];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_30  [key=2, style=dotted];
m1_294 -> m1_296  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_294 -> m1_298  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_294 -> m1_301  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_294 -> m1_304  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_37  [key=2, style=dotted];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_38  [key=2, style=dotted];
m1_296 -> m1_300  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_296 -> m1_303  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_31  [key=2, style=dotted];
m1_298 -> m1_200  [key=2, style=dotted];
m1_298 -> m1_33  [key=2, style=dotted];
m1_298 -> m1_291  [key=2, style=dotted];
m1_298 -> m1_292  [key=2, style=dotted];
m1_298 -> m1_36  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_28  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_28  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_274  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_209  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_209  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_275  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_275  [key=2, style=dotted];
m1_305 -> m1_293  [color=blue, key=0, style=bold];
m1_1111 -> m1_1112  [key=0, style=solid];
m1_1112 -> m1_1113  [key=0, style=solid];
m1_1112 -> m1_1102  [key=2, style=dotted];
m1_1113 -> m1_1111  [color=blue, key=0, style=bold];
m1_306 -> m1_307  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_30  [key=2, style=dotted];
m1_307 -> m1_309  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_307 -> m1_311  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_307 -> m1_315  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_37  [key=2, style=dotted];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_38  [key=2, style=dotted];
m1_309 -> m1_313  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_309 -> m1_314  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_31  [key=2, style=dotted];
m1_311 -> m1_200  [key=2, style=dotted];
m1_311 -> m1_33  [key=2, style=dotted];
m1_311 -> m1_34  [key=2, style=dotted];
m1_311 -> m1_36  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_28  [key=2, style=dotted];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_274  [key=2, style=dotted];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_209  [key=2, style=dotted];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_28  [key=2, style=dotted];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_275  [key=2, style=dotted];
m1_316 -> m1_306  [color=blue, key=0, style=bold];
m1_1085 -> m1_1086  [key=0, style=solid];
m1_1085 -> m1_1087  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1086 -> m1_1087  [key=0, style=solid];
m1_1087 -> m1_1088  [key=0, style=solid];
m1_1087 -> m1_1090  [key=2, style=dotted];
m1_1088 -> m1_1089  [key=0, style=solid];
m1_1089 -> m1_1085  [color=blue, key=0, style=bold];
m1_204 -> m1_1081  [key=0, style=solid];
m1_1081 -> m1_1082  [key=0, style=solid];
m1_1082 -> m1_204  [color=blue, key=0, style=bold];
m1_547 -> m1_548  [key=0, style=solid];
m1_548 -> m1_549  [key=0, style=solid];
m1_548 -> m1_532  [key=2, style=dotted];
m1_548 -> m1_553  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_548 -> m1_554  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_549 -> m1_550  [key=0, style=solid];
m1_549 -> m1_30  [key=2, style=dotted];
m1_549 -> m1_552  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_553  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_557  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_558  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_559  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_560  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_561  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_562  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_564  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_568  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_549 -> m1_572  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_553 -> m1_554  [key=0, style=solid];
m1_554 -> m1_555  [key=0, style=solid];
m1_554 -> m1_534  [key=2, style=dotted];
m1_554 -> m1_535  [key=2, style=dotted];
m1_554 -> m1_536  [key=2, style=dotted];
m1_550 -> m1_551  [key=0, style=solid];
m1_550 -> m1_37  [key=2, style=dotted];
m1_550 -> m1_552  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_550 -> m1_555  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_550 -> m1_561  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_550 -> m1_563  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_552 -> m1_553  [key=0, style=solid];
m1_552 -> m1_38  [key=2, style=dotted];
m1_552 -> m1_556  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_552 -> m1_567  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_552 -> m1_569  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_557 -> m1_558  [key=0, style=solid];
m1_557 -> m1_31  [key=2, style=dotted];
m1_557 -> m1_200  [key=2, style=dotted];
m1_557 -> m1_33  [key=2, style=dotted];
m1_557 -> m1_34  [key=2, style=dotted];
m1_557 -> m1_36  [key=2, style=dotted];
m1_558 -> m1_559  [key=0, style=solid];
m1_558 -> m1_537  [key=2, style=dotted];
m1_558 -> m1_200  [key=2, style=dotted];
m1_558 -> m1_33  [key=2, style=dotted];
m1_558 -> m1_538  [key=2, style=dotted];
m1_558 -> m1_36  [key=2, style=dotted];
m1_559 -> m1_560  [key=0, style=solid];
m1_559 -> m1_257  [key=2, style=dotted];
m1_560 -> m1_561  [key=0, style=solid];
m1_560 -> m1_539  [key=2, style=dotted];
m1_560 -> m1_44  [key=2, style=dotted];
m1_561 -> m1_562  [key=0, style=solid];
m1_561 -> m1_205  [key=2, style=dotted];
m1_561 -> m1_540  [key=2, style=dotted];
m1_562 -> m1_563  [key=0, style=solid];
m1_562 -> m1_564  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_562 -> m1_565  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_564 -> m1_565  [key=0, style=solid];
m1_568 -> m1_569  [key=0, style=solid];
m1_568 -> m1_570  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_568 -> m1_571  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_572 -> m1_573  [key=0, style=solid];
m1_572 -> m1_28  [key=2, style=dotted];
m1_551 -> m1_552  [key=0, style=solid];
m1_551 -> m1_533  [key=2, style=dotted];
m1_551 -> m1_554  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_551 -> m1_555  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_555 -> m1_556  [key=0, style=solid];
m1_555 -> m1_198  [key=2, style=dotted];
m1_563 -> m1_564  [key=0, style=solid];
m1_563 -> m1_541  [key=2, style=dotted];
m1_563 -> m1_542  [key=2, style=dotted];
m1_563 -> m1_574  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_563 -> m1_565  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_556 -> m1_557  [key=0, style=solid];
m1_556 -> m1_274  [key=2, style=dotted];
m1_567 -> m1_566  [key=0, style=solid];
m1_567 -> m1_209  [key=2, style=dotted];
m1_569 -> m1_570  [key=0, style=solid];
m1_569 -> m1_28  [key=2, style=dotted];
m1_565 -> m1_566  [key=0, style=solid];
m1_565 -> m1_543  [key=2, style=dotted];
m1_566 -> m1_567  [key=0, style=solid];
m1_566 -> m1_568  [key=0, style=solid];
m1_570 -> m1_571  [key=0, style=solid];
m1_570 -> m1_28  [key=2, style=dotted];
m1_571 -> m1_572  [key=0, style=solid];
m1_571 -> m1_28  [key=2, style=dotted];
m1_573 -> m1_547  [color=blue, key=0, style=bold];
m1_217 -> m1_218  [key=0, style=solid];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_30  [key=2, style=dotted];
m1_218 -> m1_222  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_231  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_232  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_233  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_234  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_236  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_237  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_238  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_239  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_241  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_242  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_243  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_218 -> m1_244  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_37  [key=2, style=dotted];
m1_219 -> m1_221  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_219 -> m1_222  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_219 -> m1_250  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_219 -> m1_253  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_38  [key=2, style=dotted];
m1_222 -> m1_224  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_225  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_226  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_227  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_228  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_250  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_222 -> m1_253  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_31  [key=2, style=dotted];
m1_231 -> m1_33  [key=2, style=dotted];
m1_231 -> m1_34  [key=2, style=dotted];
m1_231 -> m1_111  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_35  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_257  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_258  [key=2, style=dotted];
m1_234 -> m1_44  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_109  [key=2, style=dotted];
m1_236 -> m1_34  [key=2, style=dotted];
m1_236 -> m1_111  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_35  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_257  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_258  [key=2, style=dotted];
m1_239 -> m1_44  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_109  [key=2, style=dotted];
m1_241 -> m1_34  [key=2, style=dotted];
m1_241 -> m1_111  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_35  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_257  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_258  [key=2, style=dotted];
m1_244 -> m1_44  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_197  [key=2, style=dotted];
m1_220 -> m1_246  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_220 -> m1_249  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_198  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_211  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_211  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_204  [key=2, style=dotted];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_207  [key=2, style=dotted];
m1_249 -> m1_208  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_199  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_256  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_256  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_241  [color=darkseagreen4, key=1, label=gbpCash, style=dashed];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_236  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_234  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_229 -> m1_239  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_229 -> m1_244  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_200  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_200  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_200  [key=2, style=dotted];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_202  [key=2, style=dotted];
m1_245 -> m1_247  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m1_245 -> m1_250  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_205  [key=2, style=dotted];
m1_247 -> m1_249  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_206  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_213  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_202  [key=2, style=dotted];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_212  [key=2, style=dotted];
m1_255 -> m1_217  [color=blue, key=0, style=bold];
m1_342 -> m1_343  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_30  [key=2, style=dotted];
m1_343 -> m1_345  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_343 -> m1_348  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_343 -> m1_349  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_37  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_38  [key=2, style=dotted];
m1_345 -> m1_347  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_345 -> m1_348  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_345 -> m1_351  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_345 -> m1_354  [color=red, key=1, label=portfolio, style=dashed];
m1_345 -> m1_356  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_345 -> m1_357  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_345 -> m1_358  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_109  [key=2, style=dotted];
m1_348 -> m1_200  [key=2, style=dotted];
m1_348 -> m1_34  [key=2, style=dotted];
m1_348 -> m1_36  [key=2, style=dotted];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_349 -> m1_355  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_274  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_256  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_28  [key=2, style=dotted];
m1_354 -> m1_355  [color=red, key=0, style=solid];
m1_354 -> m1_209  [color=red, key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_28  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_28  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_28  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_28  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_202  [key=2, style=dotted];
m1_352 -> m1_360  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_28  [key=2, style=dotted];
m1_353 -> m1_354  [color=red, key=0, style=solid];
m1_353 -> m1_275  [key=2, style=dotted];
m1_359 -> m1_342  [color=blue, key=0, style=bold];
m1_879 -> m1_880  [key=0, style=solid];
m1_880 -> m1_881  [key=0, style=solid];
m1_880 -> m1_532  [key=2, style=dotted];
m1_880 -> m1_886  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_881 -> m1_882  [key=0, style=solid];
m1_881 -> m1_30  [key=2, style=dotted];
m1_881 -> m1_884  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_886  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_889  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_890  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_891  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_892  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_893  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_894  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_881 -> m1_902  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_886 -> m1_887  [key=0, style=solid];
m1_882 -> m1_883  [key=0, style=solid];
m1_882 -> m1_37  [key=2, style=dotted];
m1_882 -> m1_884  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_882 -> m1_887  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_882 -> m1_900  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_882 -> m1_908  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_884 -> m1_885  [key=0, style=solid];
m1_884 -> m1_38  [key=2, style=dotted];
m1_884 -> m1_888  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_884 -> m1_900  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_884 -> m1_908  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_889 -> m1_890  [key=0, style=solid];
m1_889 -> m1_31  [key=2, style=dotted];
m1_889 -> m1_200  [key=2, style=dotted];
m1_889 -> m1_33  [key=2, style=dotted];
m1_889 -> m1_34  [key=2, style=dotted];
m1_889 -> m1_36  [key=2, style=dotted];
m1_890 -> m1_891  [key=0, style=solid];
m1_890 -> m1_537  [key=2, style=dotted];
m1_890 -> m1_200  [key=2, style=dotted];
m1_890 -> m1_33  [key=2, style=dotted];
m1_890 -> m1_538  [key=2, style=dotted];
m1_890 -> m1_36  [key=2, style=dotted];
m1_891 -> m1_892  [key=0, style=solid];
m1_891 -> m1_258  [key=2, style=dotted];
m1_891 -> m1_44  [key=2, style=dotted];
m1_892 -> m1_893  [key=0, style=solid];
m1_892 -> m1_257  [key=2, style=dotted];
m1_893 -> m1_894  [key=0, style=solid];
m1_893 -> m1_897  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_893 -> m1_905  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_894 -> m1_895  [key=0, style=solid];
m1_902 -> m1_903  [key=0, style=solid];
m1_902 -> m1_258  [key=2, style=dotted];
m1_902 -> m1_44  [key=2, style=dotted];
m1_883 -> m1_884  [key=0, style=solid];
m1_883 -> m1_197  [key=2, style=dotted];
m1_883 -> m1_887  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_883 -> m1_896  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_883 -> m1_899  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_883 -> m1_904  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_883 -> m1_907  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_887 -> m1_888  [key=0, style=solid];
m1_887 -> m1_198  [key=2, style=dotted];
m1_900 -> m1_901  [key=0, style=solid];
m1_900 -> m1_211  [key=2, style=dotted];
m1_908 -> m1_909  [key=0, style=solid];
m1_908 -> m1_211  [key=2, style=dotted];
m1_896 -> m1_897  [key=0, style=solid];
m1_896 -> m1_204  [key=2, style=dotted];
m1_899 -> m1_900  [key=0, style=solid];
m1_899 -> m1_207  [key=2, style=dotted];
m1_899 -> m1_208  [key=2, style=dotted];
m1_904 -> m1_905  [key=0, style=solid];
m1_904 -> m1_204  [key=2, style=dotted];
m1_907 -> m1_908  [key=0, style=solid];
m1_907 -> m1_207  [key=2, style=dotted];
m1_907 -> m1_208  [key=2, style=dotted];
m1_885 -> m1_886  [key=0, style=solid];
m1_885 -> m1_895  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_885 -> m1_903  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_888 -> m1_889  [key=0, style=solid];
m1_888 -> m1_274  [key=2, style=dotted];
m1_895 -> m1_896  [key=0, style=solid];
m1_895 -> m1_878  [key=2, style=dotted];
m1_895 -> m1_210  [key=2, style=dotted];
m1_895 -> m1_897  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_895 -> m1_900  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_903 -> m1_904  [key=0, style=solid];
m1_903 -> m1_878  [key=2, style=dotted];
m1_903 -> m1_210  [key=2, style=dotted];
m1_903 -> m1_905  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_903 -> m1_908  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_897 -> m1_898  [key=0, style=solid];
m1_897 -> m1_205  [key=2, style=dotted];
m1_897 -> m1_899  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_905 -> m1_906  [key=0, style=solid];
m1_905 -> m1_205  [key=2, style=dotted];
m1_905 -> m1_907  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_898 -> m1_899  [key=0, style=solid];
m1_898 -> m1_206  [key=2, style=dotted];
m1_901 -> m1_902  [key=0, style=solid];
m1_901 -> m1_212  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_906 -> m1_206  [key=2, style=dotted];
m1_909 -> m1_910  [key=0, style=solid];
m1_909 -> m1_213  [key=2, style=dotted];
m1_910 -> m1_879  [color=blue, key=0, style=bold];
m1_846 -> m1_847  [key=0, style=solid];
m1_847 -> m1_848  [key=0, style=solid];
m1_847 -> m1_532  [key=2, style=dotted];
m1_847 -> m1_853  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_848 -> m1_849  [key=0, style=solid];
m1_848 -> m1_30  [key=2, style=dotted];
m1_848 -> m1_851  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_853  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_856  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_857  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_858  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_859  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_860  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_861  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_848 -> m1_869  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_853 -> m1_854  [key=0, style=solid];
m1_849 -> m1_850  [key=0, style=solid];
m1_849 -> m1_37  [key=2, style=dotted];
m1_849 -> m1_851  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_849 -> m1_854  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_849 -> m1_867  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_849 -> m1_875  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_851 -> m1_852  [key=0, style=solid];
m1_851 -> m1_38  [key=2, style=dotted];
m1_851 -> m1_855  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_851 -> m1_867  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_851 -> m1_875  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_856 -> m1_857  [key=0, style=solid];
m1_856 -> m1_31  [key=2, style=dotted];
m1_856 -> m1_200  [key=2, style=dotted];
m1_856 -> m1_33  [key=2, style=dotted];
m1_856 -> m1_34  [key=2, style=dotted];
m1_856 -> m1_36  [key=2, style=dotted];
m1_857 -> m1_858  [key=0, style=solid];
m1_857 -> m1_537  [key=2, style=dotted];
m1_857 -> m1_200  [key=2, style=dotted];
m1_857 -> m1_33  [key=2, style=dotted];
m1_857 -> m1_538  [key=2, style=dotted];
m1_857 -> m1_36  [key=2, style=dotted];
m1_858 -> m1_859  [key=0, style=solid];
m1_858 -> m1_258  [key=2, style=dotted];
m1_858 -> m1_44  [key=2, style=dotted];
m1_859 -> m1_860  [key=0, style=solid];
m1_859 -> m1_257  [key=2, style=dotted];
m1_860 -> m1_861  [key=0, style=solid];
m1_860 -> m1_864  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_860 -> m1_872  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_861 -> m1_862  [key=0, style=solid];
m1_869 -> m1_870  [key=0, style=solid];
m1_869 -> m1_258  [key=2, style=dotted];
m1_869 -> m1_44  [key=2, style=dotted];
m1_850 -> m1_851  [key=0, style=solid];
m1_850 -> m1_197  [key=2, style=dotted];
m1_850 -> m1_854  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_850 -> m1_863  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_850 -> m1_866  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_850 -> m1_871  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_850 -> m1_874  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m1_854 -> m1_855  [key=0, style=solid];
m1_854 -> m1_198  [key=2, style=dotted];
m1_867 -> m1_868  [key=0, style=solid];
m1_867 -> m1_211  [key=2, style=dotted];
m1_875 -> m1_876  [key=0, style=solid];
m1_875 -> m1_211  [key=2, style=dotted];
m1_863 -> m1_864  [key=0, style=solid];
m1_863 -> m1_204  [key=2, style=dotted];
m1_866 -> m1_867  [key=0, style=solid];
m1_866 -> m1_207  [key=2, style=dotted];
m1_866 -> m1_208  [key=2, style=dotted];
m1_871 -> m1_872  [key=0, style=solid];
m1_871 -> m1_204  [key=2, style=dotted];
m1_874 -> m1_875  [key=0, style=solid];
m1_874 -> m1_207  [key=2, style=dotted];
m1_874 -> m1_208  [key=2, style=dotted];
m1_852 -> m1_853  [key=0, style=solid];
m1_852 -> m1_862  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_852 -> m1_870  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_855 -> m1_856  [key=0, style=solid];
m1_855 -> m1_274  [key=2, style=dotted];
m1_862 -> m1_863  [key=0, style=solid];
m1_862 -> m1_878  [key=2, style=dotted];
m1_862 -> m1_210  [key=2, style=dotted];
m1_862 -> m1_864  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_862 -> m1_867  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_870 -> m1_871  [key=0, style=solid];
m1_870 -> m1_878  [key=2, style=dotted];
m1_870 -> m1_210  [key=2, style=dotted];
m1_870 -> m1_872  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_870 -> m1_875  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_864 -> m1_865  [key=0, style=solid];
m1_864 -> m1_205  [key=2, style=dotted];
m1_864 -> m1_866  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_872 -> m1_873  [key=0, style=solid];
m1_872 -> m1_205  [key=2, style=dotted];
m1_872 -> m1_874  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_865 -> m1_866  [key=0, style=solid];
m1_865 -> m1_206  [key=2, style=dotted];
m1_868 -> m1_869  [key=0, style=solid];
m1_868 -> m1_212  [key=2, style=dotted];
m1_873 -> m1_874  [key=0, style=solid];
m1_873 -> m1_206  [key=2, style=dotted];
m1_876 -> m1_877  [key=0, style=solid];
m1_876 -> m1_213  [key=2, style=dotted];
m1_877 -> m1_846  [color=blue, key=0, style=bold];
m1_971 -> m1_972  [key=0, style=solid];
m1_972 -> m1_973  [key=0, style=solid];
m1_972 -> m1_532  [key=2, style=dotted];
m1_972 -> m1_977  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_972 -> m1_978  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_973 -> m1_974  [key=0, style=solid];
m1_973 -> m1_30  [key=2, style=dotted];
m1_973 -> m1_976  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_977  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_981  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_982  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_983  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_984  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_985  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_986  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_988  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_994  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_996  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_973 -> m1_997  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_977 -> m1_978  [key=0, style=solid];
m1_978 -> m1_979  [key=0, style=solid];
m1_978 -> m1_534  [key=2, style=dotted];
m1_978 -> m1_535  [key=2, style=dotted];
m1_978 -> m1_536  [key=2, style=dotted];
m1_974 -> m1_975  [key=0, style=solid];
m1_974 -> m1_37  [key=2, style=dotted];
m1_974 -> m1_976  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_974 -> m1_979  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_974 -> m1_985  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_974 -> m1_987  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_976 -> m1_977  [key=0, style=solid];
m1_976 -> m1_38  [key=2, style=dotted];
m1_976 -> m1_980  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_976 -> m1_993  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_976 -> m1_995  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_981 -> m1_982  [key=0, style=solid];
m1_981 -> m1_31  [key=2, style=dotted];
m1_981 -> m1_200  [key=2, style=dotted];
m1_981 -> m1_33  [key=2, style=dotted];
m1_981 -> m1_34  [key=2, style=dotted];
m1_981 -> m1_36  [key=2, style=dotted];
m1_982 -> m1_983  [key=0, style=solid];
m1_982 -> m1_537  [key=2, style=dotted];
m1_982 -> m1_200  [key=2, style=dotted];
m1_982 -> m1_33  [key=2, style=dotted];
m1_982 -> m1_538  [key=2, style=dotted];
m1_982 -> m1_36  [key=2, style=dotted];
m1_983 -> m1_984  [key=0, style=solid];
m1_983 -> m1_258  [key=2, style=dotted];
m1_983 -> m1_44  [key=2, style=dotted];
m1_984 -> m1_985  [key=0, style=solid];
m1_984 -> m1_257  [key=2, style=dotted];
m1_985 -> m1_986  [key=0, style=solid];
m1_985 -> m1_205  [key=2, style=dotted];
m1_985 -> m1_540  [key=2, style=dotted];
m1_986 -> m1_987  [key=0, style=solid];
m1_986 -> m1_988  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_986 -> m1_989  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_986 -> m1_990  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_986 -> m1_991  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_986 -> m1_993  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_988 -> m1_989  [key=0, style=solid];
m1_994 -> m1_995  [key=0, style=solid];
m1_996 -> m1_997  [key=0, style=solid];
m1_996 -> m1_28  [key=2, style=dotted];
m1_997 -> m1_998  [key=0, style=solid];
m1_997 -> m1_28  [key=2, style=dotted];
m1_975 -> m1_976  [key=0, style=solid];
m1_975 -> m1_533  [key=2, style=dotted];
m1_975 -> m1_978  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_975 -> m1_979  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_979 -> m1_980  [key=0, style=solid];
m1_979 -> m1_198  [key=2, style=dotted];
m1_987 -> m1_988  [key=0, style=solid];
m1_987 -> m1_541  [key=2, style=dotted];
m1_987 -> m1_542  [key=2, style=dotted];
m1_987 -> m1_999  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_987 -> m1_990  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_980 -> m1_981  [key=0, style=solid];
m1_980 -> m1_274  [key=2, style=dotted];
m1_993 -> m1_992  [key=0, style=solid];
m1_993 -> m1_695  [key=2, style=dotted];
m1_995 -> m1_996  [key=0, style=solid];
m1_995 -> m1_28  [key=2, style=dotted];
m1_989 -> m1_990  [key=0, style=solid];
m1_990 -> m1_991  [key=0, style=solid];
m1_990 -> m1_543  [key=2, style=dotted];
m1_990 -> m1_992  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_991 -> m1_992  [key=0, style=solid];
m1_991 -> m1_993  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_992 -> m1_993  [key=0, style=solid];
m1_992 -> m1_994  [key=0, style=solid];
m1_998 -> m1_971  [color=blue, key=0, style=bold];
m1_729 -> m1_730  [key=0, style=solid];
m1_730 -> m1_731  [key=0, style=solid];
m1_730 -> m1_532  [key=2, style=dotted];
m1_730 -> m1_735  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_730 -> m1_736  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_731 -> m1_732  [key=0, style=solid];
m1_731 -> m1_30  [key=2, style=dotted];
m1_731 -> m1_734  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_735  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_739  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_740  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_741  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_742  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_743  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_745  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_750  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_731 -> m1_754  [color=darkseagreen4, key=1, label=securities, style=dashed];
m1_735 -> m1_736  [key=0, style=solid];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_534  [key=2, style=dotted];
m1_736 -> m1_535  [key=2, style=dotted];
m1_736 -> m1_536  [key=2, style=dotted];
m1_732 -> m1_733  [key=0, style=solid];
m1_732 -> m1_37  [key=2, style=dotted];
m1_732 -> m1_734  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_732 -> m1_737  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_732 -> m1_742  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_732 -> m1_744  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m1_734 -> m1_735  [key=0, style=solid];
m1_734 -> m1_38  [key=2, style=dotted];
m1_734 -> m1_738  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_734 -> m1_749  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_734 -> m1_751  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m1_739 -> m1_740  [key=0, style=solid];
m1_739 -> m1_31  [key=2, style=dotted];
m1_739 -> m1_200  [key=2, style=dotted];
m1_739 -> m1_33  [key=2, style=dotted];
m1_739 -> m1_34  [key=2, style=dotted];
m1_739 -> m1_36  [key=2, style=dotted];
m1_740 -> m1_741  [key=0, style=solid];
m1_740 -> m1_537  [key=2, style=dotted];
m1_740 -> m1_200  [key=2, style=dotted];
m1_740 -> m1_33  [key=2, style=dotted];
m1_740 -> m1_538  [key=2, style=dotted];
m1_740 -> m1_36  [key=2, style=dotted];
m1_741 -> m1_742  [key=0, style=solid];
m1_741 -> m1_257  [key=2, style=dotted];
m1_742 -> m1_743  [key=0, style=solid];
m1_742 -> m1_205  [key=2, style=dotted];
m1_742 -> m1_540  [key=2, style=dotted];
m1_743 -> m1_744  [key=0, style=solid];
m1_743 -> m1_745  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_743 -> m1_746  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_743 -> m1_747  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_743 -> m1_749  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_745 -> m1_746  [key=0, style=solid];
m1_750 -> m1_751  [key=0, style=solid];
m1_750 -> m1_752  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_750 -> m1_753  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m1_754 -> m1_755  [key=0, style=solid];
m1_754 -> m1_28  [key=2, style=dotted];
m1_733 -> m1_734  [key=0, style=solid];
m1_733 -> m1_533  [key=2, style=dotted];
m1_733 -> m1_736  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_733 -> m1_737  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m1_737 -> m1_738  [key=0, style=solid];
m1_737 -> m1_198  [key=2, style=dotted];
m1_744 -> m1_745  [key=0, style=solid];
m1_744 -> m1_541  [key=2, style=dotted];
m1_744 -> m1_542  [key=2, style=dotted];
m1_744 -> m1_756  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_744 -> m1_746  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_738 -> m1_739  [key=0, style=solid];
m1_738 -> m1_274  [key=2, style=dotted];
m1_749 -> m1_748  [key=0, style=solid];
m1_749 -> m1_695  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_751 -> m1_28  [key=2, style=dotted];
m1_746 -> m1_747  [key=0, style=solid];
m1_746 -> m1_543  [key=2, style=dotted];
m1_746 -> m1_748  [color=darkseagreen4, key=1, label=fills, style=dashed];
m1_747 -> m1_748  [key=0, style=solid];
m1_747 -> m1_749  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m1_748 -> m1_749  [key=0, style=solid];
m1_748 -> m1_750  [key=0, style=solid];
m1_752 -> m1_753  [key=0, style=solid];
m1_752 -> m1_28  [key=2, style=dotted];
m1_753 -> m1_754  [key=0, style=solid];
m1_753 -> m1_28  [key=2, style=dotted];
m1_755 -> m1_729  [color=blue, key=0, style=bold];
m1_1121 -> m1_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_230  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_235  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_281  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_298  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_311  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_334  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_367  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_386  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_435  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_515  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_516  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_557  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_558  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_587  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_588  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_618  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_619  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_647  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_648  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_677  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_678  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_709  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_710  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_739  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_740  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_769  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_770  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_798  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_799  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_827  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_828  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_856  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_857  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_889  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_890  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_921  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_922  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_950  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_951  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_981  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_982  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_1012  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_1013  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_1043  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1121 -> m1_1044  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m1_1122 -> m1_1081  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1083  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1087  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1092  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1122 -> m1_1112  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m1_1123 -> m1_1096  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_5  [key=2, style=dotted];
m2_14 -> m2_11  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_141  [key=2, style=dotted];
m2_147 -> m2_113  [key=2, style=dotted];
m2_147 -> m2_149  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_147 -> m2_150  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_147 -> m2_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_147 -> m2_152  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_5  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_5  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_5  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_196  [key=2, style=dotted];
m2_151 -> m2_5  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_197  [key=2, style=dotted];
m2_152 -> m2_5  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_141  [key=2, style=dotted];
m2_154 -> m2_113  [key=2, style=dotted];
m2_154 -> m2_156  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_154 -> m2_157  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_154 -> m2_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_154 -> m2_159  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_5  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_5  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_5  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_196  [key=2, style=dotted];
m2_158 -> m2_5  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_197  [key=2, style=dotted];
m2_159 -> m2_5  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_141  [key=2, style=dotted];
m2_161 -> m2_113  [key=2, style=dotted];
m2_161 -> m2_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_161 -> m2_164  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_161 -> m2_165  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_161 -> m2_166  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_5  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_5  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_5  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_196  [key=2, style=dotted];
m2_165 -> m2_5  [key=2, style=dotted];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_5  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_141  [key=2, style=dotted];
m2_168 -> m2_113  [key=2, style=dotted];
m2_168 -> m2_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_168 -> m2_171  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_168 -> m2_172  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_168 -> m2_173  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_5  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_5  [key=2, style=dotted];
m2_170 -> m2_210  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.List<string> types", style=bold];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_5  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_196  [key=2, style=dotted];
m2_172 -> m2_5  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_197  [key=2, style=dotted];
m2_173 -> m2_5  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_141  [key=2, style=dotted];
m2_175 -> m2_113  [key=2, style=dotted];
m2_175 -> m2_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_175 -> m2_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_175 -> m2_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_175 -> m2_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_5  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_5  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_5  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_196  [key=2, style=dotted];
m2_179 -> m2_5  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_5  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_141  [key=2, style=dotted];
m2_182 -> m2_113  [key=2, style=dotted];
m2_182 -> m2_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_182 -> m2_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_182 -> m2_186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_182 -> m2_187  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_5  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_5  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_5  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_196  [key=2, style=dotted];
m2_186 -> m2_5  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_197  [key=2, style=dotted];
m2_187 -> m2_5  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_141  [key=2, style=dotted];
m2_189 -> m2_113  [key=2, style=dotted];
m2_189 -> m2_191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_189 -> m2_192  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m2_189 -> m2_193  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_189 -> m2_194  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_5  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_5  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_5  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_196  [key=2, style=dotted];
m2_193 -> m2_5  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_197  [key=2, style=dotted];
m2_194 -> m2_5  [key=2, style=dotted];
m2_195 -> m2_142  [color=blue, key=0, style=bold];
m2_227 -> m2_256  [key=0, style=solid];
m2_227 -> m2_257  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_227 -> m2_258  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m2_227 -> m2_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_227 -> m2_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_261  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_268  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_271  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_227 -> m2_275  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_256 -> m2_257  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_263  [key=0, style=solid];
m2_261 -> m2_262  [key=0, style=solid];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_265  [key=0, style=solid];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_267  [key=0, style=solid];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_270  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_63  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_274  [key=0, style=solid];
m2_272 -> m2_63  [key=2, style=dotted];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_276  [key=0, style=solid];
m2_275 -> m2_276  [key=0, style=solid];
m2_262 -> m2_268  [key=0, style=solid];
m2_264 -> m2_268  [key=0, style=solid];
m2_266 -> m2_268  [key=0, style=solid];
m2_267 -> m2_276  [key=0, style=solid];
m2_267 -> m2_277  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> n16  [key=2, style=dotted];
m2_270 -> m2_63  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_276 -> m2_227  [color=blue, key=0, style=bold];
m2_243 -> m2_244  [key=0, style=solid];
m2_214 -> m2_238  [key=0, style=solid];
m2_214 -> m2_239  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_214 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m2_214 -> m2_241  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m2_214 -> m2_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_214 -> m2_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_214 -> m2_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_214 -> m2_246  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m2_214 -> m2_247  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m2_214 -> m2_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_214 -> m2_250  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_240  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_241 -> m2_242  [key=0, style=solid];
m2_242 -> m2_243  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_252  [key=2, style=dotted];
m2_244 -> m2_253  [key=2, style=dotted];
m2_244 -> m2_254  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_250  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> n16  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_252  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_251 -> m2_214  [color=blue, key=0, style=bold];
m2_235 -> m2_236  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_220  [key=2, style=dotted];
m2_218 -> m2_221  [key=2, style=dotted];
m2_219 -> m2_217  [color=blue, key=0, style=bold];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_220  [key=2, style=dotted];
m2_236 -> m2_221  [key=2, style=dotted];
m2_237 -> m2_235  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_82 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_82 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_82 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_64  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_78  [key=2, style=dotted];
m2_84 -> m2_88  [color=darkseagreen4, key=1, label=source, style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_85 -> m2_88  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_85 -> m2_53  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m2_85 -> m2_60  [color=darkorchid, key=3, label="method methodReturn bool TryCreatePythonAlgorithm", style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_5  [key=2, style=dotted];
m2_89 -> m2_82  [color=blue, key=0, style=bold];
m2_233 -> m2_233  [color=darkorchid, key=3, label="Field variable string AlgorithmBaseTypeFullName", style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_31 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_63  [key=2, style=dotted];
m2_32 -> m2_64  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_65  [key=2, style=dotted];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_36  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_37  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_38  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_41  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_52  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_55  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_33 -> m2_57  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_66  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_5  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_5  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_5  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_5  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_47  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_40 -> m2_49  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_51 -> m2_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_56 -> m2_59  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_56 -> m2_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_50  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_46  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_47  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_48  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_41 -> m2_49  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_55  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_62  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_57 -> m2_60  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_57 -> m2_61  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_5  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_5  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_5  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_5  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_5  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_5  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_5  [key=2, style=dotted];
m2_49 -> m2_62  [key=0, style=solid];
m2_49 -> m2_5  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_67  [key=2, style=dotted];
m2_53 -> m2_60  [color=darkorchid, key=3, label="method methodReturn bool TryCreateAlgorithmInstance", style=bold];
m2_53 -> m2_210  [color=darkorchid, key=3, label="Parameter variable string assemblyPath", style=bold];
m2_53 -> m2_222  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m2_54 -> m2_62  [key=0, style=solid];
m2_54 -> m2_5  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_67  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_67  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_5  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_5  [key=2, style=dotted];
m2_62 -> m2_31  [color=blue, key=0, style=bold];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_119  [key=2, style=dotted];
m2_116 -> m2_5  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=2, style=dotted];
m2_117 -> m2_5  [key=2, style=dotted];
m2_118 -> m2_115  [color=blue, key=0, style=bold];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_141  [key=2, style=dotted];
m2_125 -> m2_114  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_141  [key=2, style=dotted];
m2_127 -> m2_114  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_141  [key=2, style=dotted];
m2_129 -> m2_114  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_141  [key=2, style=dotted];
m2_131 -> m2_114  [key=2, style=dotted];
m2_131 -> m2_53  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m2_131 -> m2_60  [color=darkorchid, key=3, label="method methodReturn bool TryCreateILAlgorithm", style=bold];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_141  [key=2, style=dotted];
m2_133 -> m2_114  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_141  [key=2, style=dotted];
m2_135 -> m2_114  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_141  [key=2, style=dotted];
m2_137 -> m2_114  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_141  [key=2, style=dotted];
m2_139 -> m2_114  [key=2, style=dotted];
m2_140 -> m2_120  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_21 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_29  [key=2, style=dotted];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label=line, style=dashed];
m2_22 -> m2_27  [color=darkseagreen4, key=1, label=line, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_5  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_30  [key=2, style=dotted];
m2_25 -> m2_5  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=2, style=dotted];
m2_27 -> m2_5  [key=2, style=dotted];
m2_28 -> m2_21  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_78  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_20  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_79  [key=2, style=dotted];
m2_70 -> m2_73  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m2_70 -> m2_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m2_70 -> m2_76  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_80  [key=2, style=dotted];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label=indexOfHash, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_81  [key=2, style=dotted];
m2_75 -> m2_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_5  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_79  [key=2, style=dotted];
m2_72 -> m2_76  [color=darkseagreen4, key=1, label=normalizeZipFilePath, style=dashed];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=0, style=solid];
m2_77 -> m2_68  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_16  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_95  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m2_91 -> m2_96  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_97  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m2_92 -> m2_98  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_104  [key=2, style=dotted];
m2_95 -> m2_5  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_104  [key=2, style=dotted];
m2_96 -> m2_105  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_99  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m2_93 -> m2_100  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_104  [key=2, style=dotted];
m2_97 -> m2_5  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_104  [key=2, style=dotted];
m2_98 -> m2_105  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_101  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m2_94 -> m2_102  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_104  [key=2, style=dotted];
m2_99 -> m2_5  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_104  [key=2, style=dotted];
m2_100 -> m2_105  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=2, style=dotted];
m2_101 -> m2_5  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [key=2, style=dotted];
m2_102 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_90  [color=blue, key=0, style=bold];
m2_222 -> m2_223  [key=0, style=solid];
m2_223 -> m2_224  [color=red, key=0, style=solid];
m2_223 -> m2_226  [key=2, style=dotted];
m2_223 -> m2_60  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m2_223 -> m2_53  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m2_224 -> m2_225  [color=red, key=0, style=solid];
m2_224 -> m2_213  [color=red, key=2, style=dotted];
m2_224 -> m2_227  [color=red, key=2, style=dotted];
m2_224 -> m2_228  [color=red, key=2, style=dotted];
m2_224 -> m2_229  [color=red, key=2, style=dotted];
m2_224 -> m2_230  [color=red, key=2, style=dotted];
m2_224 -> m2_231  [color=red, key=2, style=dotted];
m2_224 -> m2_232  [color=red, key=2, style=dotted];
m2_224 -> m2_233  [color=red, key=2, style=dotted];
m2_224 -> m2_234  [color=red, key=2, style=dotted];
m2_224 -> m2_215  [color=red, key=2, style=dotted];
m2_224 -> m2_216  [color=red, key=2, style=dotted];
m2_224 -> m2_235  [color=red, key=1, label="lambda expression", style=dashed];
m2_225 -> m2_222  [color=blue, key=0, style=bold];
m2_9 -> m2_6  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_6 -> m2_33  [color=darkorchid, key=3, label="Field variable QuantConnect.Language _language", style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_5  [key=2, style=dotted];
m2_8 -> m2_33  [color=darkorchid, key=3, label="Field variable System.Func<System.Collections.Generic.List<string>, string> _multipleTypeNameResolverFunction", style=bold];
m2_67 -> m2_198  [key=0, style=solid];
m2_67 -> m2_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m2_67 -> m2_202  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m2_67 -> m2_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m2_67 -> m2_204  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m2_67 -> m2_205  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_200  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_202  [key=0, style=solid];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_5  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_5  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_5  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_5  [key=2, style=dotted];
m2_199 -> m2_206  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_207  [key=2, style=dotted];
m2_206 -> m2_67  [color=blue, key=0, style=bold];
m2_208 -> m2_209  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_212  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_213  [key=2, style=dotted];
m2_210 -> m2_214  [key=2, style=dotted];
m2_210 -> m2_215  [key=2, style=dotted];
m2_210 -> m2_216  [key=2, style=dotted];
m2_210 -> m2_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_210 -> m2_210  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<string> GetExtendedTypeNames", style=bold];
m2_210 -> m2_222  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m2_211 -> m2_208  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_112  [key=2, style=dotted];
m2_107 -> m2_113  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_112  [key=2, style=dotted];
m2_108 -> m2_113  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_112  [key=2, style=dotted];
m2_109 -> m2_113  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_114  [key=2, style=dotted];
m2_111 -> m2_106  [color=blue, key=0, style=bold];
m2_278 -> m2_238  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_239  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_241  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_242  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_243  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_244  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_245  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_246  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_247  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_278 -> m2_250  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m2_279 -> m2_256  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_257  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_259  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_262  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_269  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_271  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_272  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_273  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m2_279 -> m2_275  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_67 -> m3_51  [color=darkorchid, key=3, label="Parameter variable string fileName", style=bold];
m3_67 -> m3_74  [key=0, style=solid];
m3_67 -> m3_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_86  [key=2, style=dotted];
m3_74 -> m3_83  [color=darkseagreen4, key=1, label=rows, style=dashed];
m3_74 -> m3_84  [color=darkseagreen4, key=1, label=rows, style=dashed];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_87  [key=2, style=dotted];
m3_75 -> m3_77  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_84 -> m3_85  [key=0, style=solid];
m3_83 -> m3_81  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_88  [key=2, style=dotted];
m3_76 -> m3_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m3_76 -> m3_79  [color=darkseagreen4, key=1, label=stream, style=dashed];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_89  [key=2, style=dotted];
m3_81 -> m3_84  [key=0, style=solid];
m3_81 -> m3_83  [color=darkseagreen4, key=1, label=line, style=dashed];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_92  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_93  [key=2, style=dotted];
m3_82 -> m3_94  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_90  [key=2, style=dotted];
m3_79 -> m3_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_91  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_85 -> m3_67  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m3_14 -> m3_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m3_14 -> m3_19  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_18 -> m3_23  [key=0, style=solid];
m3_18 -> m3_24  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_12  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_23 -> m3_14  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_45 -> m3_32  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m3_45 -> m3_38  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m3_45 -> m3_51  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m3_45 -> m3_101  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_45 -> m3_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m3_45 -> m3_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m3_45 -> m3_95  [key=0, style=solid];
m3_45 -> m3_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_45 -> m3_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_110  [key=2, style=dotted];
m3_101 -> m3_111  [key=2, style=dotted];
m3_95 -> m3_101  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_102  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m3_96 -> m3_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_96 -> m3_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_105  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_108  [key=2, style=dotted];
m3_100 -> m3_109  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_112  [key=2, style=dotted];
m3_97 -> m3_100  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_66  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_106  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_107  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_107  [key=2, style=dotted];
m3_104 -> m3_45  [color=blue, key=0, style=bold];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_47  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_73 -> m3_71  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_68  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_17  [key=2, style=dotted];
m3_13 -> m3_18  [key=2, style=dotted];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_25 -> m3_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m3_32 -> m3_43  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_44  [key=2, style=dotted];
m3_33 -> m3_45  [key=2, style=dotted];
m3_36 -> m3_28  [key=0, style=solid];
m3_36 -> m3_47  [key=2, style=dotted];
m3_36 -> m3_48  [key=2, style=dotted];
m3_38 -> m3_43  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_44  [key=2, style=dotted];
m3_39 -> m3_45  [key=2, style=dotted];
m3_27 -> m3_32  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_27 -> m3_33  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_27 -> m3_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_27 -> m3_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_42  [key=2, style=dotted];
m3_27 -> m3_29  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_27 -> m3_31  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_35  [key=0, style=solid];
m3_26 -> m3_33  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_26 -> m3_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_26 -> m3_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_41  [key=2, style=dotted];
m3_26 -> m3_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_26 -> m3_37  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_46  [key=2, style=dotted];
m3_28 -> m3_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_28 -> m3_31  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_37  [key=0, style=solid];
m3_28 -> m3_35  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_35 -> m3_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_40  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_13  [key=2, style=dotted];
m3_30 -> m3_40  [key=0, style=solid];
m3_40 -> m3_25  [color=blue, key=0, style=bold];
m3_11 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_8  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> n16  [key=2, style=dotted];
m3_8 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_9 -> m3_5  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_24 -> m3_21  [color=blue, key=0, style=bold];
m3_24 -> m3_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m3_24 -> m3_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m3_24 -> m3_49  [key=0, style=solid];
m3_51 -> m3_43  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_54  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m3_51 -> m3_55  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m3_51 -> m3_62  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_64  [key=2, style=dotted];
m3_52 -> m3_65  [key=2, style=dotted];
m3_52 -> m3_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m3_52 -> m3_58  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_44  [key=2, style=dotted];
m3_62 -> m3_45  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_62  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m3_50 -> m3_42  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_58  [key=0, style=solid];
m3_54 -> m3_66  [key=2, style=dotted];
m3_55 -> m3_67  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_57  [color=darkseagreen4, key=1, label=rows, style=dashed];
m3_55 -> m3_59  [color=darkseagreen4, key=1, label=rows, style=dashed];
m3_53 -> m3_52  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m3_53 -> m3_67  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m3_53 -> m3_54  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_59  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_49 -> m3_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_41  [key=2, style=dotted];
m3_49 -> m3_60  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_49 -> m3_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=0, style=solid];
m3_60 -> m3_48  [key=2, style=dotted];
m3_60 -> m3_60  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_60 -> m3_59  [key=0, style=solid];
m3_57 -> m3_56  [key=0, style=solid];
m3_57 -> m3_57  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_59 -> m3_61  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_63 -> m3_24  [color=blue, key=0, style=bold];
m3_43 -> m3_113  [color=green, key=0, style=solid];
m3_43 -> m3_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m3_43 -> m3_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m3_113 -> m3_114  [color=green, key=0, style=solid];
m3_113 -> m3_115  [color=green, key=2, style=dotted];
m3_114 -> m3_43  [color=blue, key=0, style=bold];
m3_116 -> m3_113  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_32  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_33  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_36  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_39  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_51  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_52  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_72  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m3_116 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=2, style=dotted];
m4_79 -> m4_76  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_17  [key=2, style=dotted];
m4_29 -> m4_18  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_30 -> m4_28  [color=blue, key=0, style=bold];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_33 -> m4_31  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_84 -> m4_83  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=2, style=dotted];
m4_87 -> m4_85  [color=blue, key=0, style=bold];
m4_18 -> m4_61  [key=0, style=solid];
m4_18 -> m4_5  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_61  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_61 -> m4_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_61 -> m4_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_61 -> m4_65  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_67  [key=0, style=solid];
m4_62 -> m4_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_62 -> m4_65  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_62 -> m4_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_68  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_69  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_62  [key=0, style=solid];
m4_66 -> m4_70  [key=2, style=dotted];
m4_66 -> m4_60  [key=2, style=dotted];
m4_67 -> m4_18  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [color=red, key=0, style=solid];
m4_36 -> m4_37  [color=red, key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_49  [color=red, key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label=time, style=dashed];
m4_38 -> m4_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m4_49 -> m4_50  [color=red, key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_52  [key=2, style=dotted];
m4_39 -> m4_53  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_54  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_42  [key=0, style=solid];
m4_43 -> m4_56  [key=2, style=dotted];
m4_43 -> m4_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m4_43 -> m4_45  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_55  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_37  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_45  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m4_45 -> m4_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m4_45 -> m4_48  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_57  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_58  [key=2, style=dotted];
m4_48 -> m4_42  [key=0, style=solid];
m4_48 -> m4_59  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_60  [key=2, style=dotted];
m4_51 -> m4_35  [color=blue, key=0, style=bold];
m4_81 -> m4_82  [key=0, style=solid];
m4_82 -> m4_81  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m4_0 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_27  [key=2, style=dotted];
m4_13 -> m4_13  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_18  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_19  [key=2, style=dotted];
m4_7 -> m4_20  [key=2, style=dotted];
m4_7 -> m4_21  [key=2, style=dotted];
m4_7 -> m4_7  [color=darkseagreen4, key=1, label=date, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_24  [key=2, style=dotted];
m4_9 -> m4_23  [key=2, style=dotted];
m4_11 -> m4_10  [key=0, style=solid];
m4_11 -> m4_26  [key=2, style=dotted];
m4_11 -> m4_23  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_22  [key=2, style=dotted];
m4_8 -> m4_23  [key=2, style=dotted];
m4_8 -> m4_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_25  [key=2, style=dotted];
m4_10 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=0, style=solid];
m4_14 -> m4_12  [key=0, style=solid];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m4_15 -> m4_0  [color=blue, key=0, style=bold];
m4_23 -> m4_71  [key=0, style=solid];
m4_23 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m4_23 -> m4_73  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [key=0, style=solid];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_27  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=2, style=dotted];
m4_74 -> m4_23  [color=blue, key=0, style=bold];
m4_89 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_36  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_49  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m4_89 -> m4_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m5_136 -> m5_137  [key=0, style=solid];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_140  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_129  [key=2, style=dotted];
m5_140 -> m5_136  [color=blue, key=0, style=bold];
m5_8 -> m5_28  [key=0, style=solid];
m5_8 -> m5_29  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_40  [color=darkseagreen4, key=1, label="QuantConnect.Util.Composer", style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_42  [key=2, style=dotted];
m5_31 -> m5_40  [color=darkseagreen4, key=1, label=setupHandlerTypeName, style=dashed];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_33 -> m5_36  [color=green, key=2, style=dotted];
m5_33 -> m5_37  [color=green, key=2, style=dotted];
m5_33 -> m5_38  [color=green, key=2, style=dotted];
m5_33 -> m5_39  [color=green, key=2, style=dotted];
m5_33 -> m5_42  [key=2, style=dotted];
m5_33 -> m5_40  [color=darkseagreen4, key=1, label=realTimeHandlerTypeName, style=dashed];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_35  [key=2, style=dotted];
m5_32 -> m5_42  [key=2, style=dotted];
m5_32 -> m5_40  [color=darkseagreen4, key=1, label=transactionHandlerTypeName, style=dashed];
m5_34 -> m5_31  [color=blue, key=0, style=bold];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_42  [key=2, style=dotted];
m5_34 -> m5_40  [color=darkseagreen4, key=1, label=dataFeedHandlerTypeName, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_0  [key=2, style=dotted];
m5_40 -> m5_43  [key=2, style=dotted];
m5_40 -> m5_37  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_42  [key=2, style=dotted];
m5_35 -> m5_40  [color=darkseagreen4, key=1, label=resultHandlerTypeName, style=dashed];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_42  [key=2, style=dotted];
m5_36 -> m5_40  [color=darkseagreen4, key=1, label=commandQueueHandlerTypeName, style=dashed];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_42  [key=2, style=dotted];
m5_37 -> m5_40  [color=darkseagreen4, key=1, label=mapFileProviderTypeName, style=dashed];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_42  [key=2, style=dotted];
m5_38 -> m5_40  [color=darkseagreen4, key=1, label=factorFileProviderTypeName, style=dashed];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_42  [key=2, style=dotted];
m5_41 -> m5_30  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_44  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_106 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m5_106 -> m5_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_106 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_106 -> m5_92  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_116  [key=2, style=dotted];
m5_113 -> m5_83  [key=2, style=dotted];
m5_113 -> m5_84  [key=2, style=dotted];
m5_113 -> m5_111  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_114  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_102  [key=2, style=dotted];
m5_108 -> m5_111  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_103  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_110 -> m5_115  [key=0, style=solid];
m5_109 -> m5_102  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_115 -> m5_106  [color=blue, key=0, style=bold];
m5_141 -> m5_142  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_144  [key=2, style=dotted];
m5_142 -> m5_145  [key=2, style=dotted];
m5_143 -> m5_141  [color=blue, key=0, style=bold];
m5_223 -> m5_224  [key=0, style=solid];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_215  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_228 -> m5_229  [key=0, style=solid];
m5_225 -> m5_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_225 -> m5_228  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_217  [key=2, style=dotted];
m5_225 -> m5_229  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_226 -> m5_227  [key=0, style=solid];
m5_229 -> m5_236  [key=0, style=solid];
m5_229 -> m5_218  [key=2, style=dotted];
m5_232 -> m5_236  [key=0, style=solid];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_221  [key=2, style=dotted];
m5_235 -> m5_222  [key=2, style=dotted];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_233  [key=0, style=solid];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_220  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_219  [key=2, style=dotted];
m5_236 -> m5_223  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m5_0 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m5_0 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m5_0 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
m5_0 -> m5_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMapFileProvider", style=dashed];
m5_0 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFactorFileProvider", style=dashed];
m5_0 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m5_0 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m5_0 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m5_0 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m5_0 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m5_0 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m5_0 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
m5_0 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMapFileProvider", style=dashed];
m5_0 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFactorFileProvider", style=dashed];
m5_0 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m5_0 -> m5_2  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.Environment", style=dashed];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_3 -> m5_7  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_11 -> m5_14  [key=2, style=dotted];
m5_11 -> m5_15  [key=2, style=dotted];
m5_11 -> m5_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_24  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_25  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_14  [key=2, style=dotted];
m5_22 -> m5_15  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_19  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_30  [key=2, style=dotted];
m5_2 -> m5_28  [key=0, style=solid];
m5_2 -> m5_29  [key=2, style=dotted];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_5  [color=green, key=1, label=basePathStreaming, style=dashed];
m5_4 -> m5_28  [key=0, style=solid];
m5_4 -> m5_29  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_28  [key=0, style=solid];
m5_6 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_10 -> m5_28  [key=0, style=solid];
m5_10 -> m5_29  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_13  [key=2, style=dotted];
m5_12 -> m5_28  [key=0, style=solid];
m5_12 -> m5_29  [key=2, style=dotted];
m5_12 -> m5_12  [color=darkorchid, key=3, label="Local variable decimal marketOrderFillPrice", style=bold];
m5_12 -> m5_9  [color=blue, key=0, style=bold];
m5_14 -> m5_28  [key=0, style=solid];
m5_14 -> m5_29  [key=2, style=dotted];
m5_16 -> m5_28  [key=0, style=solid];
m5_16 -> m5_29  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_18 -> m5_28  [key=0, style=solid];
m5_18 -> m5_29  [key=2, style=dotted];
m5_18 -> m5_16  [color=blue, key=0, style=bold];
m5_28 -> m5_0  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_14  [key=2, style=dotted];
m5_28 -> m5_15  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=2, style=dotted];
m5_50 -> m5_38  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=2, style=dotted];
m5_50 -> m5_53  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_80  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_49 -> m5_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m5_51 -> m5_49  [color=blue, key=0, style=bold];
m5_87 -> m5_85  [color=blue, key=0, style=bold];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_44  [color=blue, key=0, style=bold];
m5_48 -> m5_46  [color=blue, key=0, style=bold];
m5_260 -> m5_245  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m5_260 -> m5_335  [key=0, style=solid];
m5_260 -> m5_336  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_260 -> m5_345  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_260 -> m5_264  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m5_335 -> m5_336  [key=0, style=solid];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_339  [key=0, style=solid];
m5_336 -> m5_341  [key=0, style=solid];
m5_336 -> m5_343  [key=0, style=solid];
m5_336 -> m5_345  [key=0, style=solid];
m5_345 -> m5_347  [key=0, style=solid];
m5_345 -> m5_348  [key=2, style=dotted];
m5_346 -> m5_347  [key=0, style=solid];
m5_337 -> m5_338  [key=0, style=solid];
m5_339 -> m5_340  [key=0, style=solid];
m5_341 -> m5_342  [key=0, style=solid];
m5_343 -> m5_344  [key=0, style=solid];
m5_338 -> m5_346  [key=0, style=solid];
m5_340 -> m5_346  [key=0, style=solid];
m5_342 -> m5_346  [key=0, style=solid];
m5_344 -> m5_346  [key=0, style=solid];
m5_347 -> m5_260  [color=blue, key=0, style=bold];
m5_146 -> m5_147  [key=0, style=solid];
m5_159 -> m5_160  [color=green, key=0, style=solid];
m5_159 -> m5_83  [color=green, key=2, style=dotted];
m5_159 -> m5_164  [color=green, key=2, style=dotted];
m5_159 -> m5_165  [color=green, key=2, style=dotted];
m5_159 -> m5_84  [color=green, key=2, style=dotted];
m5_154 -> m5_159  [color=green, key=1, label=transaction, style=dashed];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_162  [key=2, style=dotted];
m5_155 -> m5_159  [color=green, key=1, label=order, style=dashed];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_163  [key=2, style=dotted];
m5_155 -> m5_157  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_158 -> m5_159  [color=green, key=0, style=solid];
m5_158 -> m5_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m5_151 -> m5_152  [key=0, style=solid];
m5_152 -> m5_160  [key=0, style=solid];
m5_157 -> m5_82  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_147 -> m5_154  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_25  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_156 -> m5_160  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_150 -> m5_151  [key=0, style=solid];
m5_148 -> m5_161  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_149 -> m5_153  [key=0, style=solid];
m5_149 -> m5_150  [key=0, style=solid];
m5_160 -> m5_146  [color=blue, key=0, style=bold];
m5_54 -> m5_70  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_71  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_72  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_73  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_54 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
m5_70 -> m5_71  [color=green, key=0, style=solid];
m5_70 -> m5_82  [color=green, key=2, style=dotted];
m5_69 -> m5_70  [color=green, key=0, style=solid];
m5_69 -> m5_71  [color=green, key=1, label=orderFee, style=dashed];
m5_69 -> m5_73  [color=green, key=1, label=orderFee, style=dashed];
m5_69 -> m5_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m5_71 -> m5_72  [color=green, key=0, style=solid];
m5_71 -> m5_83  [color=green, key=2, style=dotted];
m5_71 -> m5_84  [color=green, key=2, style=dotted];
m5_72 -> m5_73  [color=green, key=0, style=solid];
m5_72 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_83  [color=green, key=2, style=dotted];
m5_73 -> m5_84  [color=green, key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_59 -> m5_73  [color=green, key=1, label=marketOrderFillPrice, style=dashed];
m5_59 -> m5_59  [color=darkorchid, key=3, label="Local variable decimal marketOrderFillPrice", style=bold];
m5_59 -> m5_60  [key=0, style=solid];
m5_62 -> m5_73  [color=green, key=1, label=marketOrderFillPrice, style=dashed];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_79  [key=2, style=dotted];
m5_64 -> m5_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_80  [key=2, style=dotted];
m5_64 -> m5_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m5_66 -> m5_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_80  [key=2, style=dotted];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m5_68 -> m5_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m5_68 -> m5_81  [key=2, style=dotted];
m5_68 -> m5_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_60 -> m5_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m5_60 -> m5_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m5_60 -> m5_60  [color=darkorchid, key=3, label="Local variable int marketOrderFillQuantity", style=bold];
m5_60 -> m5_61  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_76  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_77  [key=2, style=dotted];
m5_56 -> m5_58  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_78  [key=2, style=dotted];
m5_61 -> m5_69  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_67 -> m5_69  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_62  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_64  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_66  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_67  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_58 -> m5_65  [color=darkseagreen4, key=1, label=fill, style=dashed];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_67  [key=0, style=solid];
m5_75 -> m5_54  [color=blue, key=0, style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=2, style=dotted];
m5_42 -> m5_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_40  [color=blue, key=0, style=bold];
m5_219 -> m5_237  [key=0, style=solid];
m5_219 -> m5_238  [color=darkseagreen4, key=1, label="System.Net.WebResponse", style=dashed];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_243  [key=2, style=dotted];
m5_237 -> m5_239  [color=darkseagreen4, key=1, label=stream, style=dashed];
m5_237 -> m5_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m5_237 -> m5_241  [color=darkseagreen4, key=1, label=stream, style=dashed];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_241  [key=0, style=solid];
m5_241 -> m5_242  [key=0, style=solid];
m5_239 -> m5_241  [key=0, style=solid];
m5_239 -> m5_240  [key=0, style=solid];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m5_240 -> m5_244  [key=2, style=dotted];
m5_242 -> m5_219  [color=blue, key=0, style=bold];
m5_124 -> m5_125  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_128  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_129  [key=2, style=dotted];
m5_128 -> m5_124  [color=blue, key=0, style=bold];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_48  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_268  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_264 -> m5_272  [color=crimson, key=0, style=bold];
m5_264 -> m5_266  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_264 -> m5_267  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_264 -> m5_271  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_256  [key=2, style=dotted];
m5_265 -> m5_268  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_260  [key=2, style=dotted];
m5_268 -> m5_261  [key=2, style=dotted];
m5_268 -> m5_262  [key=2, style=dotted];
m5_272 -> m5_38  [key=2, style=dotted];
m5_272 -> m5_269  [key=0, style=solid];
m5_272 -> m5_274  [key=2, style=dotted];
m5_272 -> m5_196  [key=2, style=dotted];
m5_272 -> m5_275  [key=2, style=dotted];
m5_266 -> m5_268  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_257  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_272  [color=darkseagreen4, key=1, label=period, style=dashed];
m5_267 -> m5_258  [key=2, style=dotted];
m5_267 -> m5_259  [key=2, style=dotted];
m5_269 -> m5_272  [color=darkseagreen4, key=1, label=candle, style=dashed];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_273  [key=0, style=solid];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_273  [key=0, style=solid];
m5_270 -> m5_272  [color=darkseagreen4, key=1, label=time, style=dashed];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_141  [key=2, style=dotted];
m5_273 -> m5_264  [color=blue, key=0, style=bold];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_250  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_245 -> m5_254  [color=crimson, key=0, style=bold];
m5_245 -> m5_247  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_245 -> m5_248  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_245 -> m5_249  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m5_245 -> m5_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_256  [key=2, style=dotted];
m5_246 -> m5_250  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_260  [key=2, style=dotted];
m5_250 -> m5_261  [key=2, style=dotted];
m5_250 -> m5_262  [key=2, style=dotted];
m5_254 -> m5_38  [key=2, style=dotted];
m5_254 -> m5_251  [key=0, style=solid];
m5_254 -> m5_263  [key=2, style=dotted];
m5_254 -> m5_196  [key=2, style=dotted];
m5_247 -> m5_250  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_257  [key=2, style=dotted];
m5_248 -> m5_250  [color=darkseagreen4, key=1, label=endUtc, style=dashed];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_257  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_254  [color=darkseagreen4, key=1, label=period, style=dashed];
m5_249 -> m5_258  [key=2, style=dotted];
m5_249 -> m5_259  [key=2, style=dotted];
m5_251 -> m5_254  [color=darkseagreen4, key=1, label=candle, style=dashed];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_255  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_255  [key=0, style=solid];
m5_252 -> m5_254  [color=darkseagreen4, key=1, label=time, style=dashed];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_141  [key=2, style=dotted];
m5_255 -> m5_245  [color=blue, key=0, style=bold];
m5_76 -> m5_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_76 -> m5_88  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_76 -> m5_349  [key=0, style=solid];
m5_76 -> m5_351  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_356  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_359  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_362  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_364  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_76 -> m5_350  [color=darkorchid, key=3, label="method methodReturn string GenerateOrderRequest", style=bold];
m5_349 -> m5_350  [key=0, style=solid];
m5_349 -> m5_256  [key=2, style=dotted];
m5_349 -> m5_353  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_349 -> m5_356  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_349 -> m5_359  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_349 -> m5_362  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_350 -> m5_351  [key=0, style=solid];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_367  [key=2, style=dotted];
m5_353 -> m5_368  [key=2, style=dotted];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_370  [key=2, style=dotted];
m5_356 -> m5_368  [key=2, style=dotted];
m5_356 -> m5_371  [key=2, style=dotted];
m5_359 -> m5_360  [key=0, style=solid];
m5_359 -> m5_372  [key=2, style=dotted];
m5_359 -> m5_368  [key=2, style=dotted];
m5_359 -> m5_371  [key=2, style=dotted];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_373  [key=2, style=dotted];
m5_362 -> m5_368  [key=2, style=dotted];
m5_362 -> m5_371  [key=2, style=dotted];
m5_351 -> m5_352  [key=0, style=solid];
m5_351 -> m5_355  [key=0, style=solid];
m5_351 -> m5_358  [key=0, style=solid];
m5_351 -> m5_361  [key=0, style=solid];
m5_351 -> m5_364  [key=0, style=solid];
m5_364 -> m5_366  [key=0, style=solid];
m5_364 -> m5_374  [key=2, style=dotted];
m5_352 -> m5_353  [key=0, style=solid];
m5_354 -> m5_365  [key=0, style=solid];
m5_354 -> m5_369  [key=2, style=dotted];
m5_355 -> m5_356  [key=0, style=solid];
m5_357 -> m5_365  [key=0, style=solid];
m5_357 -> m5_369  [key=2, style=dotted];
m5_358 -> m5_359  [key=0, style=solid];
m5_360 -> m5_365  [key=0, style=solid];
m5_360 -> m5_369  [key=2, style=dotted];
m5_361 -> m5_362  [key=0, style=solid];
m5_363 -> m5_365  [key=0, style=solid];
m5_363 -> m5_369  [key=2, style=dotted];
m5_365 -> m5_366  [key=0, style=solid];
m5_366 -> m5_76  [color=blue, key=0, style=bold];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_319  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m5_317 -> m5_325  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m5_317 -> m5_328  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m5_317 -> m5_320  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m5_317 -> m5_321  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_332  [key=2, style=dotted];
m5_318 -> m5_330  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_333  [key=2, style=dotted];
m5_319 -> m5_330  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_325 -> m5_38  [key=2, style=dotted];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m5_328 -> m5_38  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m5_322 -> m5_60  [color=darkorchid, key=3, label="Local variable decimal averagePrice", style=bold];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m5_323 -> m5_60  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_330  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m5_323 -> m5_320  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m5_323 -> m5_321  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m5_320 -> m5_80  [key=2, style=dotted];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_324  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m5_320 -> m5_326  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m5_321 -> m5_80  [key=2, style=dotted];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_327  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m5_321 -> m5_329  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_334  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_327  [key=0, style=solid];
m5_326 -> m5_330  [key=0, style=solid];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_330  [key=0, style=solid];
m5_329 -> m5_330  [key=0, style=solid];
m5_331 -> m5_317  [color=blue, key=0, style=bold];
m5_166 -> m5_167  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_172 -> m5_188  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_189  [key=2, style=dotted];
m5_175 -> m5_180  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_190  [key=2, style=dotted];
m5_176 -> m5_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_176 -> m5_180  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_176 -> m5_181  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_176 -> m5_185  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_191  [key=2, style=dotted];
m5_177 -> m5_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_182  [key=0, style=solid];
m5_179 -> m5_192  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_195  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_78  [key=2, style=dotted];
m5_183 -> m5_164  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_197  [key=2, style=dotted];
m5_183 -> m5_185  [color=darkseagreen4, key=1, label=bidPrice, style=dashed];
m5_184 -> m5_164  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_197  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_176  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_174 -> m5_177  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_174 -> m5_162  [key=2, style=dotted];
m5_174 -> m5_183  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_174 -> m5_184  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_193  [key=2, style=dotted];
m5_180 -> m5_194  [key=2, style=dotted];
m5_180 -> m5_182  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_187  [color=darkseagreen4, key=1, label=tick, style=dashed];
m5_185 -> m5_198  [key=2, style=dotted];
m5_178 -> m5_179  [key=0, style=solid];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_185  [color=darkseagreen4, key=1, label=time, style=dashed];
m5_182 -> m5_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m5_182 -> m5_196  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_173  [key=0, style=solid];
m5_167 -> m5_174  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_167 -> m5_25  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_173 -> m5_174  [key=0, style=solid];
m5_168 -> m5_161  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_188 -> m5_166  [color=blue, key=0, style=bold];
m5_88 -> m5_99  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_88 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_88 -> m5_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_88 -> m5_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_88 -> m5_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_88 -> m5_92  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m5_99 -> m5_100  [color=green, key=0, style=solid];
m5_99 -> m5_83  [color=green, key=2, style=dotted];
m5_99 -> m5_38  [color=green, key=2, style=dotted];
m5_99 -> m5_80  [color=green, key=2, style=dotted];
m5_99 -> m5_84  [color=green, key=2, style=dotted];
m5_95 -> m5_99  [color=green, key=1, label=response, style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_105  [key=2, style=dotted];
m5_95 -> m5_97  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_98 -> m5_99  [color=green, key=0, style=solid];
m5_98 -> m5_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m5_100 -> m5_101  [key=0, style=solid];
m5_93 -> m5_95  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_76  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_102  [key=2, style=dotted];
m5_90 -> m5_93  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_103  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_104  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_92 -> m5_101  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_100  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_102  [key=2, style=dotted];
m5_101 -> m5_88  [color=blue, key=0, style=bold];
m5_29 -> m5_26  [color=blue, key=0, style=bold];
m5_276 -> m5_294  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_292  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_295  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_293  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_305  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_281  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_284  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_287  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_278  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order ConvertOrder", style=bold];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_189  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_190  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_191  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_163  [key=2, style=dotted];
m5_302 -> m5_304  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_161  [key=2, style=dotted];
m5_308 -> m5_191  [key=2, style=dotted];
m5_282 -> m5_164  [key=2, style=dotted];
m5_282 -> m5_292  [key=0, style=solid];
m5_282 -> m5_311  [key=2, style=dotted];
m5_285 -> m5_164  [key=2, style=dotted];
m5_285 -> m5_292  [key=0, style=solid];
m5_285 -> m5_312  [key=2, style=dotted];
m5_288 -> m5_164  [key=2, style=dotted];
m5_288 -> m5_292  [key=0, style=solid];
m5_288 -> m5_313  [key=2, style=dotted];
m5_294 -> m5_165  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_299  [color=darkseagreen4, key=1, label=units, style=dashed];
m5_292 -> m5_296  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_292 -> m5_297  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_161  [key=2, style=dotted];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_298  [color=darkseagreen4, key=1, label=createTime, style=dashed];
m5_295 -> m5_161  [key=2, style=dotted];
m5_290 -> m5_297  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_298  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_308  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_292  [key=0, style=solid];
m5_290 -> m5_314  [key=2, style=dotted];
m5_290 -> m5_299  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_300  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_301  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_304  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_307  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_290 -> m5_309  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m5_299 -> m5_300  [key=0, style=solid];
m5_293 -> m5_302  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_161  [key=2, style=dotted];
m5_293 -> m5_301  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_316  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_305  [key=0, style=solid];
m5_304 -> m5_305  [key=0, style=solid];
m5_305 -> m5_308  [color=darkseagreen4, key=1, label=gtdTime, style=dashed];
m5_305 -> m5_306  [key=0, style=solid];
m5_307 -> m5_308  [key=0, style=solid];
m5_309 -> m5_310  [key=0, style=solid];
m5_281 -> m5_162  [key=2, style=dotted];
m5_281 -> m5_282  [key=0, style=solid];
m5_284 -> m5_162  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_287 -> m5_162  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_289 -> m5_290  [key=0, style=solid];
m5_300 -> m5_301  [key=0, style=solid];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_309  [key=0, style=solid];
m5_277 -> m5_161  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_279  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_277 -> m5_291  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_280 -> m5_281  [key=0, style=solid];
m5_283 -> m5_284  [key=0, style=solid];
m5_286 -> m5_287  [key=0, style=solid];
m5_278 -> m5_279  [key=0, style=solid];
m5_279 -> m5_289  [key=0, style=solid];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_283  [key=0, style=solid];
m5_279 -> m5_286  [key=0, style=solid];
m5_279 -> m5_291  [key=0, style=solid];
m5_291 -> m5_310  [key=0, style=solid];
m5_291 -> m5_315  [key=2, style=dotted];
m5_310 -> m5_276  [color=blue, key=0, style=bold];
m5_117 -> m5_118  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_122  [key=2, style=dotted];
m5_119 -> m5_120  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_123  [key=2, style=dotted];
m5_121 -> m5_117  [color=blue, key=0, style=bold];
m5_199 -> m5_200  [key=0, style=solid];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_215  [key=2, style=dotted];
m5_201 -> m5_216  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_214  [key=2, style=dotted];
m5_202 -> m5_204  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_202 -> m5_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_217  [key=2, style=dotted];
m5_202 -> m5_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_203 -> m5_204  [key=0, style=solid];
m5_206 -> m5_213  [key=0, style=solid];
m5_206 -> m5_218  [key=2, style=dotted];
m5_209 -> m5_213  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_221  [key=2, style=dotted];
m5_212 -> m5_222  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_210  [key=0, style=solid];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_220  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_219  [key=2, style=dotted];
m5_213 -> m5_199  [color=blue, key=0, style=bold];
m5_130 -> m5_131  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_135  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_123  [key=2, style=dotted];
m5_134 -> m5_130  [color=blue, key=0, style=bold];
m5_375 -> m5_33  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_70  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_71  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_73  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_99  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_159  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_126  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_127  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_138  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_171  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_172  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_228  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_302  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_308  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_318  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_319  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m5_375 -> m5_349  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_38  [key=2, style=dotted];
m6_34 -> m6_37  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_39  [key=2, style=dotted];
m6_37 -> m6_33  [color=blue, key=0, style=bold];
m6_29 -> m6_30  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_32  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_31 -> m6_29  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_41 -> m6_44  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_41 -> m6_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_51  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_52  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_54  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_41 -> m6_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_41 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_66  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_41 -> m6_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_68  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m6_42 -> m6_42  [color=darkorchid, key=3, label="Local variable bool initializeComplete", style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_60  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_52  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_53  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_54  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_55  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_56  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_57  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_44 -> m6_58  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_70  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_71  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_72  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_73  [key=2, style=dotted];
m6_48 -> m6_74  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_75  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_76  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_77  [key=2, style=dotted];
m6_51 -> m6_78  [key=2, style=dotted];
m6_51 -> m6_12  [color=darkorchid, key=3, label="Parameter variable JObject jObject", style=bold];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_79  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_59 -> m6_61  [key=0, style=solid];
m6_59 -> m6_64  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_82  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_83  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_60 -> m6_64  [key=0, style=solid];
m6_60 -> m6_24  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=0, style=solid];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_80  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_81  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_68  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m6_69 -> m6_41  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m6_10 -> m6_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_10 -> m6_12  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_21  [key=2, style=dotted];
m6_14 -> m6_22  [key=2, style=dotted];
m6_14 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_23  [key=2, style=dotted];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label=error, style=dashed];
m6_15 -> m6_18  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_20  [key=2, style=dotted];
m6_13 -> m6_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m6_13 -> m6_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_17 -> m6_24  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_10  [color=blue, key=0, style=bold];
m6_32 -> m6_92  [key=0, style=solid];
m6_32 -> m6_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_32 -> m6_14  [color=darkorchid, key=3, label="Parameter variable string currentTypeFullName", style=bold];
m6_32 -> m6_13  [color=darkorchid, key=3, label="Parameter variable string expectedTypeName", style=bold];
m6_32 -> m6_93  [color=darkorchid, key=3, label="method methodReturn bool MatchTypeName", style=bold];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_94  [key=0, style=solid];
m6_92 -> m6_96  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_97  [key=2, style=dotted];
m6_94 -> m6_98  [key=2, style=dotted];
m6_93 -> m6_95  [key=0, style=solid];
m6_95 -> m6_32  [color=blue, key=0, style=bold];
m6_73 -> m6_84  [key=0, style=solid];
m6_73 -> m6_85  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds", style=bold];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_20  [key=2, style=dotted];
m6_84 -> m6_86  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m6_84 -> m6_87  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_90  [key=2, style=dotted];
m6_85 -> m6_88  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_88  [key=0, style=solid];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_91  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_73  [color=blue, key=0, style=bold];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_99  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_9  [key=2, style=dotted];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_101 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_101 -> m6_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m6_102 -> m6_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m6_102 -> m6_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [color=darkorchid, key=3, label="method methodReturn bool CanUpdateOrder", style=bold];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_12  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_9  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_2  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=2, style=dotted];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_8 -> m8_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_6  [color=green, key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_7  [key=2, style=dotted];
m8_13 -> m8_8  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_1 -> m8_6  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_7  [key=2, style=dotted];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_14 -> m8_9  [color=green, key=1, label="QuantConnect.Securities.Crypto.Crypto", style=dashed];
m8_14 -> m8_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Crypto.Crypto", style=dashed];
m8_14 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Crypto.Crypto", style=dashed];
m8_14 -> m8_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Crypto.Crypto", style=dashed];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_38  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=2, style=dotted];
m11_42 -> m11_33  [key=2, style=dotted];
m11_43 -> m11_41  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_0 -> m11_4  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeSpan", style=bold];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_7  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_7  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_7  [key=2, style=dotted];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_13 -> m11_8  [color=blue, key=0, style=bold];
m11_128 -> m11_125  [color=green, key=3, label="Parameter variable QuantConnect.Data.HistoryRequest request", style=bold];
m11_128 -> m11_163  [key=0, style=solid];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_152  [key=2, style=dotted];
m11_163 -> m11_33  [key=2, style=dotted];
m11_164 -> m11_128  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_23  [key=0, style=solid];
m11_269 -> m11_270  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_55 -> m11_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_64  [key=2, style=dotted];
m11_60 -> m11_65  [key=2, style=dotted];
m11_61 -> m11_68  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_66  [key=2, style=dotted];
m11_61 -> m11_67  [key=2, style=dotted];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_80 -> m11_68  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_228 -> m11_229  [key=0, style=solid];
m11_228 -> m11_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_228 -> m11_231  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_230 -> m11_68  [key=2, style=dotted];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_230 -> m11_235  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_230 -> m11_236  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_247 -> m11_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_64  [key=2, style=dotted];
m11_249 -> m11_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m11_249 -> m11_254  [color=darkseagreen4, key=1, label=start, style=dashed];
m11_250 -> m11_251  [key=0, style=solid];
m11_250 -> m11_66  [key=2, style=dotted];
m11_250 -> m11_67  [key=2, style=dotted];
m11_250 -> m11_254  [color=darkseagreen4, key=1, label=end, style=dashed];
m11_251 -> m11_252  [key=0, style=solid];
m11_251 -> m11_239  [key=2, style=dotted];
m11_251 -> m11_49  [key=2, style=dotted];
m11_251 -> m11_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_254 -> m11_68  [key=2, style=dotted];
m11_254 -> m11_255  [key=0, style=solid];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_56 -> m11_61  [color=darkseagreen4, key=1, label=config, style=dashed];
m11_56 -> m11_63  [key=2, style=dotted];
m11_56 -> m11_57  [key=0, style=solid];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_61  [color=darkseagreen4, key=1, label=res, style=dashed];
m11_62 -> m11_54  [color=blue, key=0, style=bold];
m11_69 -> m11_70  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_77 -> m11_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m11_77 -> m11_63  [key=2, style=dotted];
m11_77 -> m11_78  [key=0, style=solid];
m11_78 -> m11_80  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_81 -> m11_75  [color=blue, key=0, style=bold];
m11_82 -> m11_83  [key=0, style=solid];
m11_223 -> m11_224  [key=0, style=solid];
m11_226 -> m11_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_226 -> m11_227  [key=0, style=solid];
m11_227 -> m11_228  [key=0, style=solid];
m11_227 -> m11_197  [key=2, style=dotted];
m11_227 -> m11_236  [color=darkseagreen4, key=1, label=requests, style=dashed];
m11_227 -> m11_237  [color=darkseagreen4, key=1, label=requests, style=dashed];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_239  [key=2, style=dotted];
m11_229 -> m11_237  [key=0, style=solid];
m11_231 -> m11_232  [key=0, style=solid];
m11_231 -> m11_233  [color=darkseagreen4, key=1, label=res, style=dashed];
m11_233 -> m11_234  [key=0, style=solid];
m11_235 -> m11_236  [key=0, style=solid];
m11_236 -> m11_229  [key=0, style=solid];
m11_236 -> m11_240  [key=2, style=dotted];
m11_243 -> m11_244  [key=0, style=solid];
m11_246 -> m11_247  [key=0, style=solid];
m11_246 -> m11_249  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_250  [color=darkseagreen4, key=1, label=res, style=dashed];
m11_252 -> m11_246  [color=blue, key=0, style=bold];
m11_253 -> m11_254  [key=0, style=solid];
m11_255 -> m11_253  [color=blue, key=0, style=bold];
m11_232 -> m11_233  [key=0, style=solid];
m11_232 -> m11_234  [key=0, style=solid];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_236  [key=0, style=solid];
m11_130 -> m11_131  [key=0, style=solid];
m11_57 -> m11_59  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_58 -> m11_62  [key=0, style=solid];
m11_71 -> m11_69  [color=blue, key=0, style=bold];
m11_70 -> m11_71  [key=0, style=solid];
m11_79 -> m11_81  [key=0, style=solid];
m11_84 -> m11_82  [color=blue, key=0, style=bold];
m11_83 -> m11_84  [key=0, style=solid];
m11_116 -> m11_117  [key=0, style=solid];
m11_224 -> m11_187  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_244 -> m11_187  [key=2, style=dotted];
m11_244 -> m11_245  [key=0, style=solid];
m11_225 -> m11_223  [color=blue, key=0, style=bold];
m11_238 -> m11_226  [color=blue, key=0, style=bold];
m11_237 -> m11_238  [key=0, style=solid];
m11_245 -> m11_243  [color=blue, key=0, style=bold];
m11_132 -> m11_130  [color=blue, key=0, style=bold];
m11_131 -> m11_132  [key=0, style=solid];
m11_118 -> m11_116  [color=blue, key=0, style=bold];
m11_117 -> m11_118  [key=0, style=solid];
m11_270 -> m11_271  [key=0, style=solid];
m11_271 -> m11_269  [color=blue, key=0, style=bold];
m11_63 -> m11_119  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_63 -> m11_46  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_63 -> m11_72  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_63 -> m11_102  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_63 -> m11_262  [key=0, style=solid];
m11_63 -> m11_168  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_63 -> m11_103  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m11_63 -> m11_120  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m11_63 -> m11_174  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m11_262 -> m11_239  [key=2, style=dotted];
m11_262 -> m11_263  [key=0, style=solid];
m11_262 -> m11_264  [key=2, style=dotted];
m11_263 -> m11_63  [color=blue, key=0, style=bold];
m11_7 -> m11_14  [key=0, style=solid];
m11_7 -> m11_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_2  [color=darkorchid, key=3, label="Parameter variable string quoteCurrency", style=bold];
m11_7 -> m11_10  [color=darkorchid, key=3, label="Parameter variable string quoteCurrency", style=bold];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_7 -> m11_11  [color=darkorchid, key=3, label="Parameter variable int barCount", style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=0, style=solid];
m11_15 -> m11_18  [key=0, style=solid];
m11_15 -> m11_19  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_20  [key=2, style=dotted];
m11_16 -> m11_18  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_16 -> m11_14  [color=blue, key=0, style=bold];
m11_17 -> m11_18  [color=green, key=0, style=solid];
m11_17 -> m11_21  [key=2, style=dotted];
m11_17 -> m11_25  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m11_17 -> m11_27  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m11_18 -> m11_7  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [color=green, key=0, style=solid];
m11_18 -> m11_20  [color=green, key=0, style=solid];
m11_64 -> m11_46  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m11_64 -> m11_155  [key=0, style=solid];
m11_64 -> m11_158  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_64 -> m11_241  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_64 -> m11_25  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m11_64 -> m11_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_64 -> m11_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_64 -> m11_156  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_64 -> m11_89  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_158  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_155 -> m11_159  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_26  [key=2, style=dotted];
m11_158 -> m11_161  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_162  [key=2, style=dotted];
m11_156 -> m11_66  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_157  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m11_160 -> m11_64  [color=blue, key=0, style=bold];
m11_99 -> m11_102  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_99 -> m11_108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_99 -> m11_109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_104  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_102 -> m11_106  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_102 -> m11_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_64  [key=2, style=dotted];
m11_109 -> m11_88  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_66  [key=2, style=dotted];
m11_109 -> m11_67  [key=2, style=dotted];
m11_109 -> m11_33  [key=2, style=dotted];
m11_100 -> m11_102  [key=0, style=solid];
m11_100 -> m11_101  [key=0, style=solid];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_107  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m11_104 -> m11_63  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_106 -> m11_49  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_112  [key=2, style=dotted];
m11_106 -> m11_113  [key=2, style=dotted];
m11_106 -> m11_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_105 -> m11_108  [key=0, style=solid];
m11_105 -> m11_106  [key=0, style=solid];
m11_107 -> m11_110  [key=0, style=solid];
m11_107 -> m11_114  [key=2, style=dotted];
m11_107 -> m11_115  [key=2, style=dotted];
m11_101 -> m11_110  [key=0, style=solid];
m11_101 -> m11_111  [key=2, style=dotted];
m11_110 -> m11_99  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_6  [key=2, style=dotted];
m11_10 -> m11_7  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_189 -> m11_172  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m11_189 -> m11_203  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_189 -> m11_204  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_189 -> m11_168  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_189 -> m11_171  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_189 -> m11_201  [key=0, style=solid];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_26  [key=2, style=dotted];
m11_203 -> m11_161  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_162  [key=2, style=dotted];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_202  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m11_201 -> m11_66  [key=2, style=dotted];
m11_201 -> m11_202  [key=0, style=solid];
m11_205 -> m11_189  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_6  [color=darkorchid, key=3, label="Field variable int _maxOrders", style=bold];
m11_6 -> m11_4  [color=blue, key=0, style=bold];
m11_19 -> m11_24  [key=0, style=solid];
m11_19 -> m11_25  [key=2, style=dotted];
m11_139 -> m11_146  [key=0, style=solid];
m11_139 -> m11_133  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_32  [key=2, style=dotted];
m11_146 -> m11_33  [key=2, style=dotted];
m11_147 -> m11_139  [color=blue, key=0, style=bold];
m11_239 -> m11_220  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_239 -> m11_241  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_239 -> m11_63  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m11_239 -> m11_265  [key=0, style=solid];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_265  [color=darkseagreen4, key=1, label=sub, style=dashed];
m11_265 -> m11_267  [key=2, style=dotted];
m11_265 -> m11_268  [key=2, style=dotted];
m11_265 -> m11_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_266 -> m11_239  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_45 -> m11_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_45 -> m11_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_46 -> m11_68  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m11_46 -> m11_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_49  [key=2, style=dotted];
m11_46 -> m11_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_46 -> m11_63  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_50  [key=2, style=dotted];
m11_47 -> m11_51  [key=2, style=dotted];
m11_47 -> m11_52  [key=2, style=dotted];
m11_47 -> m11_53  [key=2, style=dotted];
m11_47 -> m11_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_48 -> m11_45  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_30 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_29  [color=blue, key=0, style=bold];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_91  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_89 -> m11_95  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_89 -> m11_92  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_64  [key=2, style=dotted];
m11_91 -> m11_95  [color=darkseagreen4, key=1, label=start, style=dashed];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_97  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_66  [key=2, style=dotted];
m11_95 -> m11_67  [key=2, style=dotted];
m11_95 -> m11_32  [key=2, style=dotted];
m11_95 -> m11_98  [key=2, style=dotted];
m11_95 -> m11_33  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_95  [key=0, style=solid];
m11_96 -> m11_89  [color=blue, key=0, style=bold];
m11_133 -> m11_137  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_133 -> m11_134  [key=0, style=solid];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_97  [key=2, style=dotted];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_139  [key=2, style=dotted];
m11_137 -> m11_98  [key=2, style=dotted];
m11_137 -> m11_33  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_137  [key=0, style=solid];
m11_134 -> m11_135  [key=0, style=solid];
m11_138 -> m11_133  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_26  [key=2, style=dotted];
m11_140 -> m11_144  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_140 -> m11_141  [key=0, style=solid];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_97  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_32  [key=2, style=dotted];
m11_144 -> m11_98  [key=2, style=dotted];
m11_144 -> m11_33  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_144  [key=0, style=solid];
m11_141 -> m11_142  [key=0, style=solid];
m11_145 -> m11_140  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=2, style=dotted];
m11_39 -> m11_33  [key=2, style=dotted];
m11_40 -> m11_38  [color=blue, key=0, style=bold];
m11_85 -> m11_86  [key=0, style=solid];
m11_86 -> m11_88  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_33  [key=2, style=dotted];
m11_87 -> m11_85  [color=blue, key=0, style=bold];
m11_32 -> m11_91  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m11_32 -> m11_153  [key=0, style=solid];
m11_32 -> m11_29  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_32 -> m11_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_32 -> m11_140  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m11_32 -> m11_89  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_27  [key=2, style=dotted];
m11_153 -> m11_152  [key=2, style=dotted];
m11_153 -> m11_33  [key=2, style=dotted];
m11_154 -> m11_32  [color=blue, key=0, style=bold];
m11_22 -> m11_24  [key=0, style=solid];
m11_22 -> m11_27  [key=2, style=dotted];
m11_22 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m11_22 -> m11_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m11_22 -> m11_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m11_22 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_28  [key=2, style=dotted];
m11_24 -> m11_17  [color=blue, key=0, style=bold];
m11_27 -> m11_21  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m11_27 -> m11_220  [key=0, style=solid];
m11_27 -> m11_230  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_27 -> m11_231  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_27 -> m11_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_27 -> m11_233  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_27 -> m11_234  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_27 -> m11_235  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_27 -> m11_32  [color=darkorchid, key=3, label="Parameter variable bool? extendedMarket", style=bold];
m11_220 -> m11_68  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.HistoryRequest request", style=bold];
m11_220 -> m11_220  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> ", style=bold];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_50  [key=2, style=dotted];
m11_220 -> m11_222  [key=2, style=dotted];
m11_220 -> m11_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_220 -> m11_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_221 -> m11_27  [color=blue, key=0, style=bold];
m11_152 -> m11_165  [key=0, style=solid];
m11_152 -> m11_25  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m11_152 -> m11_27  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_167  [key=2, style=dotted];
m11_165 -> m11_33  [key=2, style=dotted];
m11_166 -> m11_152  [color=blue, key=0, style=bold];
m11_37 -> m11_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m11_37 -> m11_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_37 -> m11_148  [key=0, style=solid];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_25  [key=2, style=dotted];
m11_150 -> m11_152  [key=2, style=dotted];
m11_150 -> m11_33  [key=2, style=dotted];
m11_148 -> m11_150  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_149 -> m11_151  [key=0, style=solid];
m11_149 -> m11_111  [key=2, style=dotted];
m11_151 -> m11_37  [color=blue, key=0, style=bold];
m11_168 -> m11_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData GetLastKnownPrice", style=bold];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_168 -> m11_181  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_168 -> m11_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_168 -> m11_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_168 -> m11_177  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_171  [key=0, style=solid];
m11_169 -> m11_187  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_189  [key=2, style=dotted];
m11_172 -> m11_181  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_66  [key=2, style=dotted];
m11_173 -> m11_67  [key=2, style=dotted];
m11_173 -> m11_181  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_192  [key=2, style=dotted];
m11_181 -> m11_65  [key=2, style=dotted];
m11_181 -> m11_193  [key=2, style=dotted];
m11_181 -> m11_194  [key=2, style=dotted];
m11_181 -> m11_195  [key=2, style=dotted];
m11_181 -> m11_196  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_197  [key=2, style=dotted];
m11_182 -> m11_152  [key=2, style=dotted];
m11_182 -> m11_198  [key=2, style=dotted];
m11_182 -> m11_184  [color=darkseagreen4, key=1, label=history, style=dashed];
m11_170 -> m11_186  [key=0, style=solid];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_173  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m11_171 -> m11_181  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m11_171 -> m11_188  [key=2, style=dotted];
m11_171 -> m11_176  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m11_171 -> m11_179  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m11_171 -> m11_180  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_177  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m11_177 -> m11_181  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m11_177 -> m11_63  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_179  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m11_177 -> m11_180  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_180  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m11_180 -> m11_191  [key=2, style=dotted];
m11_178 -> m11_181  [key=0, style=solid];
m11_178 -> m11_179  [key=0, style=solid];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_185  [key=0, style=solid];
m11_183 -> m11_199  [key=2, style=dotted];
m11_183 -> m11_200  [key=2, style=dotted];
m11_184 -> m11_186  [key=0, style=solid];
m11_184 -> m11_200  [key=2, style=dotted];
m11_175 -> m11_177  [key=0, style=solid];
m11_175 -> m11_176  [key=0, style=solid];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_190  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_190  [key=2, style=dotted];
m11_185 -> m11_186  [key=0, style=solid];
m11_186 -> m11_168  [color=blue, key=0, style=bold];
m11_167 -> m11_216  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m11_167 -> m11_152  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m11_167 -> m11_206  [key=0, style=solid];
m11_167 -> m11_207  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_208  [key=0, style=solid];
m11_210 -> m11_211  [key=0, style=solid];
m11_215 -> m11_208  [key=0, style=solid];
m11_215 -> m11_218  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_219  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_208 -> m11_210  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_208 -> m11_216  [key=0, style=solid];
m11_208 -> m11_211  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_208 -> m11_212  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_213  [key=0, style=solid];
m11_214 -> m11_215  [key=0, style=solid];
m11_207 -> m11_216  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m11_207 -> m11_198  [key=2, style=dotted];
m11_207 -> m11_208  [key=0, style=solid];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_206  [color=darkorchid, key=3, label="Local variable bool sentMessage", style=bold];
m11_206 -> m11_213  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m11_213 -> m11_208  [key=0, style=solid];
m11_213 -> m11_214  [key=0, style=solid];
m11_212 -> m11_213  [key=0, style=solid];
m11_217 -> m11_167  [color=blue, key=0, style=bold];
m11_25 -> m11_241  [key=0, style=solid];
m11_25 -> m11_249  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_25 -> m11_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_25 -> m11_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_25 -> m11_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_25 -> m11_37  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_50  [key=2, style=dotted];
m11_241 -> m11_222  [key=2, style=dotted];
m11_241 -> m11_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_241 -> m11_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_241 -> m11_64  [color=darkorchid, key=3, label="Local variable System.DateTime start", style=bold];
m11_242 -> m11_25  [color=blue, key=0, style=bold];
m11_88 -> m11_125  [color=green, key=1, label="System.DateTime", style=dashed];
m11_88 -> m11_119  [key=0, style=solid];
m11_88 -> m11_124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_88 -> m11_126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m11_88 -> m11_85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_88 -> m11_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_88 -> m11_108  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m11_125 -> m11_126  [color=green, key=0, style=solid];
m11_125 -> m11_68  [color=green, key=2, style=dotted];
m11_119 -> m11_125  [color=green, key=1, label=security, style=dashed];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_121  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_119 -> m11_123  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_121 -> m11_125  [color=green, key=1, label=config, style=dashed];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_63  [key=2, style=dotted];
m11_122 -> m11_125  [color=green, key=0, style=solid];
m11_122 -> m11_123  [key=0, style=solid];
m11_126 -> m11_128  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_129  [key=2, style=dotted];
m11_126 -> m11_33  [key=2, style=dotted];
m11_124 -> m11_127  [key=0, style=solid];
m11_124 -> m11_114  [key=2, style=dotted];
m11_124 -> m11_115  [key=2, style=dotted];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_124  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_49  [key=2, style=dotted];
m11_123 -> m11_112  [key=2, style=dotted];
m11_123 -> m11_113  [key=2, style=dotted];
m11_123 -> m11_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_127 -> m11_88  [color=blue, key=0, style=bold];
m11_44 -> m11_72  [key=0, style=solid];
m11_44 -> m11_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_44 -> m11_41  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_72 -> m11_68  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m11_72 -> m11_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_49  [key=2, style=dotted];
m11_72 -> m11_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_72 -> m11_63  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_50  [key=2, style=dotted];
m11_73 -> m11_51  [key=2, style=dotted];
m11_73 -> m11_52  [key=2, style=dotted];
m11_73 -> m11_53  [key=2, style=dotted];
m11_73 -> m11_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_74 -> m11_44  [color=blue, key=0, style=bold];
m11_68 -> m11_88  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_68 -> m11_119  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m11_68 -> m11_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m11_68 -> m11_256  [key=0, style=solid];
m11_68 -> m11_257  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m11_68 -> m11_258  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_68 -> m11_46  [color=darkorchid, key=3, label="Parameter variable System.DateTime startAlgoTz", style=bold];
m11_68 -> m11_72  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m11_68 -> m11_220  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m11_68 -> m11_241  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m11_68 -> m11_44  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_68 -> m11_27  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_68 -> m11_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_68 -> m11_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_261  [key=2, style=dotted];
m11_258 -> m11_65  [key=2, style=dotted];
m11_256 -> m11_258  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_256 -> m11_256  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_256 -> m11_257  [key=0, style=solid];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_190  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_260 -> m11_68  [color=blue, key=0, style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_37  [key=2, style=dotted];
m11_35 -> m11_33  [key=2, style=dotted];
m11_36 -> m11_34  [color=blue, key=0, style=bold];
m11_272 -> m11_18  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_125  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_136  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_163  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_203  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_215  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_230  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_249  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_272 -> m11_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_273 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_273 -> m11_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_273 -> m11_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_274 -> m11_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_275 -> m11_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_276 -> m11_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_277 -> m11_80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_278 -> m11_230  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_279 -> m11_230  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_280 -> m11_230  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_280 -> m11_231  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_284 -> m11_249  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_283 -> m11_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_283 -> m11_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_283 -> m11_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m11_285 -> m11_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_286 -> m11_254  [color=darkseagreen4, key=1, label=start, style=dashed];
m11_287 -> m11_254  [color=darkseagreen4, key=1, label=end, style=dashed];
m11_281 -> m11_233  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_281 -> m11_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_282 -> m11_235  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m11_282 -> m11_234  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m12_172 -> m12_173  [key=0, style=solid];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_160  [key=2, style=dotted];
m12_173 -> m12_161  [key=2, style=dotted];
m12_173 -> m12_162  [key=2, style=dotted];
m12_173 -> m12_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_174 -> m12_172  [color=blue, key=0, style=bold];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_182  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_183  [key=2, style=dotted];
m12_181 -> m12_178  [color=blue, key=0, style=bold];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_205  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_203 -> m12_206  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_203 -> m12_208  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_203 -> m12_207  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_211  [key=2, style=dotted];
m12_204 -> m12_207  [color=darkseagreen4, key=1, label=name, style=dashed];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_32  [key=2, style=dotted];
m12_205 -> m12_208  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_32  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_212  [key=2, style=dotted];
m12_208 -> m12_153  [key=2, style=dotted];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_202  [key=2, style=dotted];
m12_207 -> m12_209  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m12_209 -> m12_210  [key=0, style=solid];
m12_210 -> m12_203  [color=blue, key=0, style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_132  [key=2, style=dotted];
m12_131 -> m12_129  [color=blue, key=0, style=bold];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_233  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_229 -> m12_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_219  [key=2, style=dotted];
m12_230 -> m12_233  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_235  [key=2, style=dotted];
m12_233 -> m12_221  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_233  [key=0, style=solid];
m12_232 -> m12_234  [key=0, style=solid];
m12_234 -> m12_229  [color=blue, key=0, style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_139  [key=2, style=dotted];
m12_142 -> m12_140  [color=blue, key=0, style=bold];
m12_311 -> m12_312  [color=green, key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_39  [key=2, style=dotted];
m12_37 -> m12_40  [key=2, style=dotted];
m12_37 -> m12_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_38 -> m12_36  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_41  [color=blue, key=0, style=bold];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_39  [key=2, style=dotted];
m12_50 -> m12_40  [key=2, style=dotted];
m12_50 -> m12_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_39  [key=2, style=dotted];
m12_56 -> m12_40  [key=2, style=dotted];
m12_56 -> m12_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_49 -> m12_50  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_51 -> m12_49  [color=blue, key=0, style=bold];
m12_52 -> m12_53  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_54 -> m12_52  [color=blue, key=0, style=bold];
m12_57 -> m12_55  [color=blue, key=0, style=bold];
m12_58 -> m12_59  [key=0, style=solid];
m12_59 -> m12_60  [key=0, style=solid];
m12_60 -> m12_58  [color=blue, key=0, style=bold];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_39  [key=2, style=dotted];
m12_66 -> m12_40  [key=2, style=dotted];
m12_66 -> m12_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_65 -> m12_66  [key=0, style=solid];
m12_67 -> m12_65  [color=blue, key=0, style=bold];
m12_68 -> m12_69  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_70 -> m12_68  [color=blue, key=0, style=bold];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_78  [key=2, style=dotted];
m12_76 -> m12_40  [key=2, style=dotted];
m12_76 -> m12_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_77 -> m12_75  [color=blue, key=0, style=bold];
m12_79 -> m12_80  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_81 -> m12_79  [color=blue, key=0, style=bold];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_39  [key=2, style=dotted];
m12_87 -> m12_40  [key=2, style=dotted];
m12_87 -> m12_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_86 -> m12_87  [key=0, style=solid];
m12_88 -> m12_86  [color=blue, key=0, style=bold];
m12_89 -> m12_90  [key=0, style=solid];
m12_90 -> m12_91  [key=0, style=solid];
m12_91 -> m12_89  [color=blue, key=0, style=bold];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_39  [key=2, style=dotted];
m12_124 -> m12_40  [key=2, style=dotted];
m12_124 -> m12_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_119  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_125 -> m12_123  [color=blue, key=0, style=bold];
m12_126 -> m12_127  [key=0, style=solid];
m12_128 -> m12_126  [color=blue, key=0, style=bold];
m12_163 -> m12_164  [key=0, style=solid];
m12_164 -> m12_165  [key=0, style=solid];
m12_165 -> m12_163  [color=blue, key=0, style=bold];
m12_169 -> m12_170  [key=0, style=solid];
m12_170 -> m12_171  [key=0, style=solid];
m12_171 -> m12_169  [color=blue, key=0, style=bold];
m12_175 -> m12_176  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_177 -> m12_175  [color=blue, key=0, style=bold];
m12_302 -> m12_303  [color=green, key=0, style=solid];
m12_302 -> m12_305  [color=green, key=1, label=PyObject, style=dashed];
m12_302 -> m12_306  [color=green, key=1, label=PyObject, style=dashed];
m12_308 -> m12_309  [color=green, key=0, style=solid];
m12_303 -> m12_304  [color=green, key=0, style=solid];
m12_303 -> m12_305  [color=green, key=0, style=solid];
m12_305 -> m12_306  [color=green, key=0, style=solid];
m12_305 -> m12_34  [color=green, key=2, style=dotted];
m12_305 -> m12_35  [color=green, key=2, style=dotted];
m12_306 -> m12_307  [color=green, key=0, style=solid];
m12_306 -> m12_35  [color=green, key=2, style=dotted];
m12_304 -> m12_307  [color=green, key=0, style=solid];
m12_307 -> m12_302  [color=blue, key=0, style=bold];
m12_309 -> m12_310  [color=green, key=0, style=solid];
m12_310 -> m12_308  [color=blue, key=0, style=bold];
m12_312 -> m12_313  [color=green, key=0, style=solid];
m12_312 -> m12_314  [color=green, key=2, style=dotted];
m12_312 -> m12_287  [color=green, key=2, style=dotted];
m12_313 -> m12_311  [color=blue, key=0, style=bold];
m12_99 -> m12_100  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_10  [key=2, style=dotted];
m12_100 -> m12_95  [key=2, style=dotted];
m12_101 -> m12_99  [color=blue, key=0, style=bold];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_32  [key=2, style=dotted];
m12_72 -> m12_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_33  [key=2, style=dotted];
m12_73 -> m12_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_74 -> m12_71  [color=blue, key=0, style=bold];
m12_247 -> m12_248  [color=green, key=0, style=solid];
m12_248 -> m12_249  [color=green, key=0, style=solid];
m12_248 -> m12_250  [color=green, key=2, style=dotted];
m12_248 -> m12_251  [color=green, key=2, style=dotted];
m12_249 -> m12_247  [color=blue, key=0, style=bold];
m12_154 -> m12_155  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_153  [key=2, style=dotted];
m12_156 -> m12_154  [color=blue, key=0, style=bold];
m12_147 -> m12_148  [key=0, style=solid];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_146  [key=2, style=dotted];
m12_149 -> m12_147  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=2, style=dotted];
m12_6 -> m12_4  [color=blue, key=0, style=bold];
m12_136 -> m12_137  [key=0, style=solid];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_139  [key=2, style=dotted];
m12_138 -> m12_136  [color=blue, key=0, style=bold];
m12_150 -> m12_151  [key=0, style=solid];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_153  [key=2, style=dotted];
m12_152 -> m12_150  [color=blue, key=0, style=bold];
m12_219 -> m12_269  [color=green, key=0, style=solid];
m12_219 -> m12_270  [color=green, key=1, label=PyObject, style=dashed];
m12_219 -> m12_272  [color=green, key=1, label=PyObject, style=dashed];
m12_219 -> m12_275  [color=green, key=1, label=PyObject, style=dashed];
m12_219 -> m12_213  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m12_219 -> m12_222  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m12_219 -> m12_229  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m12_219 -> m12_271  [color=green, key=3, label="Parameter variable PyObject pyObject", style=bold];
m12_269 -> m12_270  [color=green, key=0, style=solid];
m12_269 -> m12_244  [color=green, key=2, style=dotted];
m12_270 -> m12_271  [color=green, key=0, style=solid];
m12_270 -> m12_274  [color=green, key=0, style=solid];
m12_270 -> m12_281  [color=green, key=2, style=dotted];
m12_272 -> m12_273  [color=green, key=0, style=solid];
m12_272 -> m12_283  [color=green, key=2, style=dotted];
m12_275 -> m12_276  [color=green, key=0, style=solid];
m12_275 -> m12_279  [color=green, key=0, style=solid];
m12_271 -> m12_272  [color=green, key=0, style=solid];
m12_271 -> m12_282  [color=green, key=2, style=dotted];
m12_271 -> m12_273  [color=green, key=1, label=tmp, style=dashed];
m12_274 -> m12_275  [color=green, key=0, style=solid];
m12_274 -> m12_284  [color=green, key=2, style=dotted];
m12_274 -> m12_278  [color=green, key=1, label=symbols, style=dashed];
m12_274 -> m12_279  [color=green, key=1, label=symbols, style=dashed];
m12_273 -> m12_274  [color=green, key=0, style=solid];
m12_273 -> m12_275  [color=green, key=1, label=PyObject, style=dashed];
m12_278 -> m12_275  [color=green, key=0, style=solid];
m12_278 -> m12_286  [color=green, key=2, style=dotted];
m12_279 -> m12_280  [color=green, key=0, style=solid];
m12_276 -> m12_277  [color=green, key=0, style=solid];
m12_276 -> m12_35  [color=green, key=2, style=dotted];
m12_276 -> m12_278  [color=green, key=1, label=symbol, style=dashed];
m12_277 -> m12_278  [color=green, key=0, style=solid];
m12_277 -> m12_275  [color=green, key=0, style=solid];
m12_277 -> m12_285  [color=green, key=2, style=dotted];
m12_280 -> m12_219  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_22  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_11 -> m12_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_11 -> m12_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_11 -> m12_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m12_11 -> m12_7  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_18  [key=2, style=dotted];
m12_12 -> m12_15  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_19  [key=2, style=dotted];
m12_13 -> m12_20  [key=2, style=dotted];
m12_13 -> m12_15  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_21  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_23  [key=2, style=dotted];
m12_17 -> m12_11  [color=blue, key=0, style=bold];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_217  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_213 -> m12_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_219  [key=2, style=dotted];
m12_214 -> m12_217  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_220  [key=2, style=dotted];
m12_217 -> m12_221  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_217  [key=0, style=solid];
m12_216 -> m12_218  [key=0, style=solid];
m12_218 -> m12_213  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_29  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_24 -> m12_30  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_32  [key=2, style=dotted];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_25 -> m12_37  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_34  [key=2, style=dotted];
m12_29 -> m12_35  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_35  [key=2, style=dotted];
m12_30 -> m12_33  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_29  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_33  [key=2, style=dotted];
m12_27 -> m12_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_28 -> m12_31  [key=0, style=solid];
m12_31 -> m12_24  [color=blue, key=0, style=bold];
m12_287 -> m12_288  [color=green, key=0, style=solid];
m12_287 -> m12_289  [color=green, key=1, label="System.Type", style=dashed];
m12_287 -> m12_290  [color=green, key=1, label="System.Type", style=dashed];
m12_287 -> m12_287  [color=darkorchid, key=3, label="method methodReturn System.Type GetIndicatorBaseType", style=bold];
m12_288 -> m12_289  [color=green, key=0, style=solid];
m12_288 -> m12_290  [color=green, key=0, style=solid];
m12_289 -> m12_291  [color=green, key=0, style=solid];
m12_290 -> m12_291  [color=green, key=0, style=solid];
m12_290 -> m12_287  [color=green, key=2, style=dotted];
m12_291 -> m12_287  [color=blue, key=0, style=bold];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_32  [key=2, style=dotted];
m12_62 -> m12_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_33  [key=2, style=dotted];
m12_63 -> m12_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_64 -> m12_61  [color=blue, key=0, style=bold];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_115  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m12_95 -> m12_111  [key=0, style=solid];
m12_95 -> m12_114  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_95 -> m12_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_95 -> m12_116  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_95 -> m12_117  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_95 -> m12_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_95 -> m12_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_95 -> m12_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m12_95 -> m12_93  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m12_95 -> m12_105  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_108  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_92  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_96  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_99  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_102  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m12_95 -> m12_12  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_18  [key=2, style=dotted];
m12_111 -> m12_113  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_119  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> n16  [key=2, style=dotted];
m12_115 -> m12_117  [color=darkseagreen4, key=1, label=config, style=dashed];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_32  [key=2, style=dotted];
m12_116 -> m12_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_121  [key=2, style=dotted];
m12_117 -> m12_122  [key=2, style=dotted];
m12_117 -> m12_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_115  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m12_118 -> m12_95  [color=blue, key=0, style=bold];
m12_96 -> m12_97  [key=0, style=solid];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_10  [key=2, style=dotted];
m12_97 -> m12_95  [key=2, style=dotted];
m12_98 -> m12_96  [color=blue, key=0, style=bold];
m12_133 -> m12_134  [key=0, style=solid];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_132  [key=2, style=dotted];
m12_135 -> m12_133  [color=blue, key=0, style=bold];
m12_10 -> m12_315  [key=0, style=solid];
m12_10 -> m12_316  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_10 -> m12_319  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_10 -> m12_7  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_92  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_96  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_99  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_102  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_105  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_10 -> m12_108  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_244  [key=2, style=dotted];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_321  [key=2, style=dotted];
m12_316 -> m12_322  [key=2, style=dotted];
m12_316 -> m12_323  [key=2, style=dotted];
m12_316 -> m12_324  [key=2, style=dotted];
m12_316 -> m12_319  [color=darkseagreen4, key=1, label=an, style=dashed];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_327  [key=2, style=dotted];
m12_319 -> m12_328  [key=2, style=dotted];
m12_319 -> m12_329  [key=2, style=dotted];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_325  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_326  [key=2, style=dotted];
m12_320 -> m12_10  [color=blue, key=0, style=bold];
m12_236 -> m12_237  [color=green, key=0, style=solid];
m12_236 -> m12_238  [color=green, key=1, label=PyObject, style=dashed];
m12_236 -> m12_242  [color=green, key=1, label=PyObject, style=dashed];
m12_237 -> m12_238  [color=green, key=0, style=solid];
m12_237 -> m12_244  [color=green, key=2, style=dotted];
m12_238 -> m12_239  [color=green, key=0, style=solid];
m12_238 -> m12_32  [color=green, key=2, style=dotted];
m12_238 -> m12_240  [color=green, key=1, label=pyBenchmark, style=dashed];
m12_242 -> m12_243  [color=green, key=0, style=solid];
m12_242 -> m12_35  [color=green, key=2, style=dotted];
m12_242 -> m12_246  [color=green, key=2, style=dotted];
m12_239 -> m12_240  [color=green, key=0, style=solid];
m12_239 -> m12_242  [color=green, key=0, style=solid];
m12_240 -> m12_241  [color=green, key=0, style=solid];
m12_240 -> m12_245  [color=green, key=2, style=dotted];
m12_241 -> m12_243  [color=green, key=0, style=solid];
m12_243 -> m12_236  [color=blue, key=0, style=bold];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_226  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_222 -> m12_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_219  [key=2, style=dotted];
m12_223 -> m12_226  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_228  [key=2, style=dotted];
m12_226 -> m12_221  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_226  [key=0, style=solid];
m12_225 -> m12_227  [key=0, style=solid];
m12_227 -> m12_222  [color=blue, key=0, style=bold];
m12_252 -> m12_253  [color=green, key=0, style=solid];
m12_252 -> m12_257  [color=green, key=1, label=PyObject, style=dashed];
m12_252 -> m12_261  [color=green, key=1, label=PyObject, style=dashed];
m12_253 -> m12_254  [color=green, key=0, style=solid];
m12_253 -> m12_263  [color=green, key=2, style=dotted];
m12_253 -> m12_255  [color=green, key=1, label=securityInitializer1, style=dashed];
m12_257 -> m12_258  [color=green, key=0, style=solid];
m12_257 -> m12_265  [color=green, key=2, style=dotted];
m12_257 -> m12_259  [color=green, key=1, label=securityInitializer2, style=dashed];
m12_261 -> m12_262  [color=green, key=0, style=solid];
m12_261 -> m12_267  [color=green, key=2, style=dotted];
m12_261 -> m12_268  [color=green, key=2, style=dotted];
m12_254 -> m12_255  [color=green, key=0, style=solid];
m12_254 -> m12_257  [color=green, key=0, style=solid];
m12_255 -> m12_256  [color=green, key=0, style=solid];
m12_255 -> m12_264  [color=green, key=2, style=dotted];
m12_256 -> m12_262  [color=green, key=0, style=solid];
m12_258 -> m12_259  [color=green, key=0, style=solid];
m12_258 -> m12_261  [color=green, key=0, style=solid];
m12_259 -> m12_260  [color=green, key=0, style=solid];
m12_259 -> m12_266  [color=green, key=2, style=dotted];
m12_260 -> m12_262  [color=green, key=0, style=solid];
m12_262 -> m12_252  [color=blue, key=0, style=bold];
m12_143 -> m12_144  [key=0, style=solid];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_146  [key=2, style=dotted];
m12_145 -> m12_143  [color=blue, key=0, style=bold];
m12_182 -> m12_292  [color=green, key=0, style=solid];
m12_182 -> m12_293  [color=green, key=1, label=PyObject, style=dashed];
m12_182 -> m12_178  [color=darkorchid, key=3, label="Parameter variable PyObject fourth", style=bold];
m12_182 -> m12_184  [color=darkorchid, key=3, label="Parameter variable PyObject fourth", style=bold];
m12_292 -> m12_293  [color=green, key=0, style=solid];
m12_292 -> m12_244  [color=green, key=2, style=dotted];
m12_293 -> m12_294  [color=green, key=0, style=solid];
m12_293 -> m12_40  [color=green, key=2, style=dotted];
m12_293 -> m12_161  [color=green, key=2, style=dotted];
m12_293 -> m12_302  [color=green, key=1, label="lambda expression", style=dashed];
m12_293 -> m12_297  [color=green, key=1, label=array, style=dashed];
m12_293 -> m12_215  [color=green, key=3, label="method methodReturn dynamic ", style=bold];
m12_294 -> m12_295  [color=green, key=0, style=solid];
m12_294 -> m12_160  [color=green, key=2, style=dotted];
m12_294 -> m12_40  [color=green, key=2, style=dotted];
m12_294 -> m12_299  [color=green, key=2, style=dotted];
m12_294 -> m12_308  [color=green, key=1, label="lambda expression", style=dashed];
m12_294 -> m12_311  [color=green, key=1, label="lambda expression", style=dashed];
m12_297 -> m12_298  [color=green, key=0, style=solid];
m12_295 -> m12_296  [color=green, key=0, style=solid];
m12_295 -> m12_297  [color=green, key=0, style=solid];
m12_295 -> m12_300  [color=green, key=2, style=dotted];
m12_296 -> m12_298  [color=green, key=0, style=solid];
m12_296 -> m12_301  [color=green, key=2, style=dotted];
m12_298 -> m12_182  [color=blue, key=0, style=bold];
m12_102 -> m12_103  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_10  [key=2, style=dotted];
m12_103 -> m12_95  [key=2, style=dotted];
m12_104 -> m12_102  [color=blue, key=0, style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_32  [key=2, style=dotted];
m12_45 -> m12_47  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_45 -> m12_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_32  [key=2, style=dotted];
m12_46 -> m12_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_33  [key=2, style=dotted];
m12_47 -> m12_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_47 -> m12_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_48 -> m12_44  [color=blue, key=0, style=bold];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_195  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_193 -> m12_196  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_193 -> m12_198  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_193 -> m12_188  [color=darkorchid, key=3, label="Parameter variable string fieldName", style=bold];
m12_193 -> m12_189  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m12_193 -> m12_197  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_201  [key=2, style=dotted];
m12_194 -> m12_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_32  [key=2, style=dotted];
m12_195 -> m12_198  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_32  [key=2, style=dotted];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_139  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_202  [key=2, style=dotted];
m12_197 -> m12_199  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m12_199 -> m12_200  [key=0, style=solid];
m12_200 -> m12_193  [color=blue, key=0, style=bold];
m12_166 -> m12_167  [key=0, style=solid];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_160  [key=2, style=dotted];
m12_167 -> m12_161  [key=2, style=dotted];
m12_167 -> m12_162  [key=2, style=dotted];
m12_167 -> m12_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_168 -> m12_166  [color=blue, key=0, style=bold];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_32  [key=2, style=dotted];
m12_83 -> m12_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_33  [key=2, style=dotted];
m12_84 -> m12_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_85 -> m12_82  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_108 -> m12_109  [key=0, style=solid];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_10  [key=2, style=dotted];
m12_109 -> m12_95  [key=2, style=dotted];
m12_110 -> m12_108  [color=blue, key=0, style=bold];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_182  [key=2, style=dotted];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_183  [key=2, style=dotted];
m12_187 -> m12_184  [color=blue, key=0, style=bold];
m12_105 -> m12_106  [key=0, style=solid];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_10  [key=2, style=dotted];
m12_106 -> m12_95  [key=2, style=dotted];
m12_107 -> m12_105  [color=blue, key=0, style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_10  [key=2, style=dotted];
m12_93 -> m12_95  [key=2, style=dotted];
m12_94 -> m12_92  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m12_7 -> m12_5  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=2, style=dotted];
m12_8 -> m12_11  [key=2, style=dotted];
m12_9 -> m12_7  [color=blue, key=0, style=bold];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_190  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_188 -> m12_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_192  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_193  [key=2, style=dotted];
m12_191 -> m12_188  [color=blue, key=0, style=bold];
m12_157 -> m12_158  [key=0, style=solid];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_160  [key=2, style=dotted];
m12_158 -> m12_161  [key=2, style=dotted];
m12_158 -> m12_162  [key=2, style=dotted];
m12_158 -> m12_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_159 -> m12_157  [color=blue, key=0, style=bold];
m12_330 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_185  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_190  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_208  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_214  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_226  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_230  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_240  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_242  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_248  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_255  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_259  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_261  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_290  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_294  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_330 -> m12_312  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_331 -> m12_37  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_332 -> m12_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m12_333 -> m12_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m12_334 -> m12_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_335 -> m12_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_336 -> m12_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m12_337 -> m12_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_337 -> m12_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_338 -> m12_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_338 -> m12_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_339 -> m12_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=2, style=dotted];
m13_15 -> m13_18  [key=2, style=dotted];
m13_16 -> m13_14  [color=blue, key=0, style=bold];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m13_8 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_13  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_12  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_8  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_2 -> m13_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_6 -> m13_2  [color=blue, key=0, style=bold];
m13_19 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m13_19 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m13_19 -> m13_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m13_19 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m13_19 -> m13_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_12  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_13  [key=0, style=solid];
m15_11 -> m15_14  [key=0, style=solid];
m15_11 -> m15_8  [key=2, style=dotted];
m15_12 -> m15_17  [key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_18  [key=2, style=dotted];
m15_13 -> m15_16  [color=darkseagreen4, key=1, label=moveNext, style=dashed];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_9  [color=blue, key=0, style=bold];
m15_16 -> m15_17  [key=0, style=solid];
m15_15 -> m15_16  [key=0, style=solid];
m15_17 -> m15_10  [color=blue, key=0, style=bold];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_25  [color=blue, key=0, style=bold];
m15_30 -> m15_28  [color=blue, key=0, style=bold];
m15_18 -> m15_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_18 -> m15_19  [key=0, style=solid];
m15_9 -> m15_12  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_9 -> m15_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_0  [color=blue, key=0, style=bold];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_25 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_30  [key=2, style=dotted];
m15_26 -> m15_28  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m15_26 -> m15_23  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_18  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [key=0, style=solid];
m15_54 -> m15_57  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.SubmitOrderRequest GenerateMarginCallOrder", style=bold];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_56  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_54 -> m15_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_54 -> m15_60  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_54 -> m15_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_54 -> m15_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_54 -> m15_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_54 -> m15_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_57 -> m15_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m15_57 -> m15_66  [key=0, style=solid];
m15_57 -> m15_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_58  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_55  [color=darkorchid, key=3, label="Local variable decimal marginBuffer", style=bold];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_60  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_67  [key=2, style=dotted];
m15_62 -> m15_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_68  [key=2, style=dotted];
m15_62 -> m15_69  [key=2, style=dotted];
m15_62 -> m15_64  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_62 -> m15_65  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_65  [key=0, style=solid];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_70  [key=2, style=dotted];
m15_65 -> m15_71  [key=2, style=dotted];
m15_59 -> m15_66  [key=0, style=solid];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_64  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_66 -> m15_54  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_0 -> m15_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_0 -> m15_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_0 -> m15_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m15_0 -> m15_8  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_7  [key=0, style=solid];
m15_2 -> m15_8  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_7  [key=0, style=solid];
m15_4 -> m15_8  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_0  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_21  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_20 -> m15_24  [key=0, style=solid];
m15_20 -> m15_8  [key=2, style=dotted];
m15_21 -> m15_19  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_23  [color=darkseagreen4, key=1, label=margin, style=dashed];
m15_35 -> m15_42  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_44  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_46  [color=green, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m15_35 -> m15_48  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_50  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_51  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m15_35 -> m15_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m15_35 -> m15_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m15_42 -> m15_52  [color=green, key=0, style=solid];
m15_41 -> m15_42  [color=green, key=0, style=solid];
m15_44 -> m15_52  [color=green, key=0, style=solid];
m15_44 -> m15_53  [color=green, key=2, style=dotted];
m15_44 -> m15_49  [color=green, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket CancelOrder", style=bold];
m15_43 -> m15_44  [color=green, key=0, style=solid];
m15_49 -> m15_44  [color=green, key=3, label="Parameter variable int orderId", style=bold];
m15_49 -> m15_50  [color=green, key=0, style=solid];
m15_46 -> m15_47  [color=green, key=0, style=solid];
m15_46 -> m15_49  [color=green, key=0, style=solid];
m15_45 -> m15_46  [color=green, key=0, style=solid];
m15_45 -> m15_51  [color=green, key=0, style=solid];
m15_45 -> m15_45  [color=green, key=3, label="Local variable double timestamp", style=bold];
m15_47 -> m15_48  [color=green, key=0, style=solid];
m15_48 -> m15_52  [color=green, key=0, style=solid];
m15_48 -> m15_53  [color=green, key=2, style=dotted];
m15_50 -> m15_52  [color=green, key=0, style=solid];
m15_51 -> m15_52  [color=green, key=0, style=solid];
m15_36 -> m15_45  [color=green, key=1, label=holdings, style=dashed];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_39  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m15_39 -> m15_45  [color=green, key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_40 -> m15_41  [color=green, key=0, style=solid];
m15_40 -> m15_43  [color=green, key=0, style=solid];
m15_37 -> m15_39  [key=0, style=solid];
m15_37 -> m15_38  [key=0, style=solid];
m15_38 -> m15_52  [key=0, style=solid];
m15_52 -> m15_35  [color=blue, key=0, style=bold];
m15_32 -> m15_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_32 -> m15_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m15_33 -> m15_34  [key=0, style=solid];
m15_34 -> m15_32  [color=blue, key=0, style=bold];
m15_72 -> m15_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m15_72 -> m15_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
}
