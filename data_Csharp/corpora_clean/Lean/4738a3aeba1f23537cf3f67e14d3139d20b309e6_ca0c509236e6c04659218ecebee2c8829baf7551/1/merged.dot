digraph  {
d20 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="65-65", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0];
d12 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d19 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d21 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0];
d22 [label="stop.LimitPrice = stop.StopPrice", span="70-70", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0];
d13 [label="var stop = (StopLimitOrder) order", span="45-45", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d25 [label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, int, System.MidpointRounding)"];
d27 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)"];
d26 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)"];
d17 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="53-53", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d18 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d23 [label="return stop.StopPrice != previousStop;", span="71-71", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0];
d14 [label="var previousStop = stop.StopPrice", span="46-46", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d24 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d15 [label="order.Quantity > 0", span="47-47", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d16 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d22  [key=0, style=solid, color=green];
d12 -> d20  [key=1, style=dashed, color=green, label="QuantConnect.Orders.Order"];
d12 -> d21  [key=1, style=dashed, color=green, label=decimal];
d12 -> d13  [key=0, style=solid];
d12 -> d15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d12 -> d16  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d12 -> d17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d12 -> d18  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d12 -> d19  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d25  [key=2, style=dotted];
d19 -> d27  [key=2, style=dotted];
d19 -> d26  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d25  [key=2, style=dotted, color=green];
d21 -> d27  [key=2, style=dotted, color=green];
d21 -> d26  [key=2, style=dotted, color=green];
d22 -> d23  [key=0, style=solid, color=green];
d13 -> d21  [key=1, style=dashed, color=green, label=stop];
d13 -> d22  [key=1, style=dashed, color=green, label=stop];
d13 -> d23  [key=1, style=dashed, color=green, label=stop];
d13 -> d19  [key=1, style=dashed, color=darkseagreen4, label=stop];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [key=1, style=dashed, color=darkseagreen4, label=stop];
d13 -> d18  [key=1, style=dashed, color=darkseagreen4, label=stop];
d17 -> d22  [key=0, style=solid, color=green];
d17 -> d18  [key=0, style=solid];
d18 -> d22  [key=0, style=solid, color=green];
d18 -> d25  [key=2, style=dotted];
d18 -> d27  [key=2, style=dotted];
d18 -> d26  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid, color=green];
d14 -> d23  [key=1, style=dashed, color=green, label=previousStop];
d14 -> d15  [key=0, style=solid];
d24 -> d12  [key=0, style=bold, color=blue];
d15 -> d19  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d16 -> d25  [key=2, style=dotted];
d16 -> d27  [key=2, style=dotted];
d16 -> d26  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
}
