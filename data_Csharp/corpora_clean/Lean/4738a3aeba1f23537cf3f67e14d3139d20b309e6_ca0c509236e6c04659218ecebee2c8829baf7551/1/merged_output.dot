digraph  {
d20 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0, label="0: order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="65-65"];
d12 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
d19 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61"];
d21 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0, label="2: stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67"];
d22 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0, label="1: stop.LimitPrice = stop.StopPrice", span="70-70"];
d13 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="var stop = (StopLimitOrder) order", span="45-45"];
d25 [cluster="System.Math.Round(decimal, int, System.MidpointRounding)", label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0"];
d27 [cluster="System.Math.Min(decimal, decimal)", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
d26 [cluster="System.Math.Max(decimal, decimal)", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
d17 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="53-53"];
d18 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55"];
d23 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=green, community=0, label="1: return stop.StopPrice != previousStop;", span="71-71"];
d14 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="var previousStop = stop.StopPrice", span="46-46"];
d24 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
d15 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="order.Quantity > 0", span="47-47"];
d16 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50"];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d22  [color=green, key=0, style=solid];
d12 -> d20  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
d12 -> d21  [color=green, key=1, label=decimal, style=dashed];
d12 -> d13  [key=0, style=solid];
d12 -> d15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d12 -> d16  [color=darkseagreen4, key=1, label=decimal, style=dashed];
d12 -> d17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d12 -> d18  [color=darkseagreen4, key=1, label=decimal, style=dashed];
d12 -> d19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
d19 -> d20  [color=green, key=0, style=solid];
d19 -> d25  [key=2, style=dotted];
d19 -> d27  [key=2, style=dotted];
d19 -> d26  [key=2, style=dotted];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> d25  [color=green, key=2, style=dotted];
d21 -> d27  [color=green, key=2, style=dotted];
d21 -> d26  [color=green, key=2, style=dotted];
d22 -> d23  [color=green, key=0, style=solid];
d13 -> d21  [color=green, key=1, label=stop, style=dashed];
d13 -> d22  [color=green, key=1, label=stop, style=dashed];
d13 -> d23  [color=green, key=1, label=stop, style=dashed];
d13 -> d19  [color=darkseagreen4, key=1, label=stop, style=dashed];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [color=darkseagreen4, key=1, label=stop, style=dashed];
d13 -> d18  [color=darkseagreen4, key=1, label=stop, style=dashed];
d17 -> d22  [color=green, key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d18 -> d22  [color=green, key=0, style=solid];
d18 -> d25  [key=2, style=dotted];
d18 -> d27  [key=2, style=dotted];
d18 -> d26  [key=2, style=dotted];
d23 -> d24  [color=green, key=0, style=solid];
d14 -> d23  [color=green, key=1, label=previousStop, style=dashed];
d14 -> d15  [key=0, style=solid];
d24 -> d12  [color=blue, key=0, style=bold];
d15 -> d19  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d16 -> d25  [key=2, style=dotted];
d16 -> d27  [key=2, style=dotted];
d16 -> d26  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
}
