digraph  {
n141 [label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span=""];
n142 [label="QuantConnect.Lean.Engine.Results.IResultHandler", span=""];
n143 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n144 [label=job, span=""];
n145 [label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
n146 [label="QuantConnect.Packets.Controls", span=""];
n0 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="106-106", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()"];
n1 [label="Errors = new List<Exception>()", span="108-108", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()"];
n2 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="106-106", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()"];
n3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n4 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="117-117", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n5 [label="string error", span="119-119", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n7 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(60), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="123-123", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n8 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="124-124", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n6 [label="IAlgorithm algorithm", span="120-120", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n13 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)"];
n14 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n18 [label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="123-123", cluster="lambda expression"];
n9 [label="!complete", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n15 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="348-348", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)"];
n10 [label="throw new Exception(error + '' Try re-building algorithm.'');", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n11 [label="return algorithm;", span="127-127", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n12 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="117-117", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n16 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n17 [label="Entry lambda expression", span="123-123", cluster="lambda expression"];
n19 [label="Exit lambda expression", span="123-123", cluster="lambda expression"];
n20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)"];
n21 [label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="897-897", cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)"];
n22 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n23 [label="factory = new BacktestingBrokerageFactory()", span="139-139", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n25 [label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="141-141", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n24 [label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()"];
n26 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n28 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()"];
n29 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n30 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="154-154", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n31 [label="var job = baseJob as BacktestNodePacket", span="156-156", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n33 [label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="159-159", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n35 [label="algorithm == null", span="164-164", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n38 [label="algorithm.Name = job.GetAlgorithmName()", span="170-170", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n44 [label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromMinutes(5), () =>\r\n            {\r\n                try\r\n                {\r\n                    resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'');\r\n\r\n                    //Set our parameters\r\n                    algorithm.SetParameters(job.Parameters);\r\n\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n\r\n                    //Set the source impl for the event scheduling\r\n                    algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                    // set the option chain provider\r\n                    algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()));\r\n\r\n                    // set the future chain provider\r\n                    algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new BacktestingFutureChainProvider()));\r\n\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(err);\r\n                    Errors.Add(new AlgorithmSetupException(''Failed to initialize algorithm: Initialize(): '' + err.Message, err));\r\n                }\r\n            }, controls.RamAllocation)", span="181-210", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n83 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="185-185", cluster="lambda expression"];
n84 [label="algorithm.SetParameters(job.Parameters)", span="188-188", cluster="lambda expression"];
n85 [label="algorithm.SetLiveMode(false)", span="191-191", cluster="lambda expression"];
n86 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="194-194", cluster="lambda expression"];
n87 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="197-197", cluster="lambda expression"];
n88 [label="algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new BacktestingFutureChainProvider()))", span="200-200", cluster="lambda expression"];
n89 [label="algorithm.Initialize()", span="203-203", cluster="lambda expression"];
n47 [label="job.PeriodStart = algorithm.StartDate", span="216-216", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n48 [label="job.PeriodFinish = algorithm.EndDate", span="217-217", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n49 [label="algorithm.PostInitialize()", span="219-219", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n50 [label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager, algorithm.UniverseManager, baseJob.Controls)", span="222-222", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n53 [label="_startingCaptial = algorithm.Portfolio.Cash", span="231-231", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n58 [label="algorithm.SetMaximumOrders(_maxOrders)", span="245-245", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n32 [label="job == null", span="157-157", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n34 [label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="162-162", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n39 [label="job.PeriodStart == default(DateTime)", span="173-173", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n42 [label="var controls = job.Controls", span="179-179", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n51 [label="job.Language == Language.Python", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n54 [label="job.UserPlan == UserPlan.Free", span="234-234", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n59 [label="_startingDate = job.PeriodStart", span="248-248", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n60 [label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="251-251", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n61 [label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="252-252", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n68 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
n69 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n36 [label="Errors.Add(new AlgorithmSetupException(''Could not create instance of algorithm''))", span="166-166", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n37 [label="return false;", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n70 [label="Entry QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string)", span="28-28", cluster="QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string)"];
n71 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n72 [label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150", cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()"];
n40 [label="Errors.Add(new AlgorithmSetupException(''Algorithm start date was never set''))", span="175-175", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n41 [label="return false;", span="176-176", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n43 [label="var isolator = new Isolator()", span="180-180", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n73 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()"];
n45 [label="!initializeComplete", span="213-213", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n74 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n75 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)"];
n82 [label="Entry lambda expression", span="181-210", cluster="lambda expression"];
n64 [label="return initializeComplete;", span="258-258", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n46 [label="return false;", span="213-213", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n76 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()"];
n77 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="270-270", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n52 [label="_maxRuntime = _maxRuntime.Add(TimeSpan.FromSeconds(_maxRuntime.TotalSeconds * 9))", span="227-227", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n78 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)"];
n55 [label="_maxOrders = 10000", span="236-236", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n56 [label="_maxOrders = int.MaxValue", span="240-240", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n57 [label="_maxRuntime += _maxRuntime", span="241-241", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n79 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="600-600", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)"];
n62 [label="Errors.Count > 0", span="254-254", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n80 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()"];
n81 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
n63 [label="initializeComplete = false", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n65 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="154-154", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n66 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n67 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n94 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n95 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)"];
n96 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="583-583", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)"];
n97 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)"];
n98 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)"];
n99 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()"];
n100 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="639-639", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)"];
n101 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)"];
n102 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()"];
n103 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="645-645", cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)"];
n90 [label=Exception, span="205-205", cluster="lambda expression"];
n93 [label="Exit lambda expression", span="181-210", cluster="lambda expression"];
n104 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()"];
n91 [label="Log.Error(err)", span="207-207", cluster="lambda expression"];
n92 [label="Errors.Add(new AlgorithmSetupException(''Failed to initialize algorithm: Initialize(): '' + err.Message, err))", span="208-208", cluster="lambda expression"];
n105 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n106 [label="Entry QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", span="38-38", cluster="QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)"];
n107 [label="var derivativeSubscriptions = subscriptionManager.Subscriptions\r\n                .Where(x => x.Symbol.IsCanonical())\r\n                .Select(x => controls.GetLimit(x.Resolution))\r\n                .Sum()", span="273-276", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n132 [label="controls.GetLimit(x.Resolution)", span="275-275", cluster="lambda expression"];
n108 [label="var universeSubscriptions = universeManager\r\n                // use max limit for universes without explicitly added securities\r\n                .Sum(u => u.Value.Members.Count == 0 ? controls.GetLimit(u.Value.UniverseSettings.Resolution) : u.Value.Members.Count)", span="279-281", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n136 [label="u.Value.Members.Count == 0 ? controls.GetLimit(u.Value.UniverseSettings.Resolution) : u.Value.Members.Count", span="281-281", cluster="lambda expression"];
n111 [label="var jobDays = (finish - start).TotalDays", span="286-286", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n122 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n123 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n124 [label="Entry Unk.Sum", span="", cluster="Unk.Sum"];
n127 [label="Entry lambda expression", span="274-274", cluster="lambda expression"];
n131 [label="Entry lambda expression", span="275-275", cluster="lambda expression"];
n109 [label="var subscriptionCount = derivativeSubscriptions + universeSubscriptions", span="283-283", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n125 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)"];
n135 [label="Entry lambda expression", span="281-281", cluster="lambda expression"];
n110 [label="double maxRunTime = 0", span="285-285", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n112 [label="maxRunTime = 10 * subscriptionCount * jobDays", span="288-288", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n117 [label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="302-302", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n113 [label="(maxRunTime / 3600) > 12", span="291-291", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n115 [label="maxRunTime < 60", span="296-296", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n120 [label="return TimeSpan.FromSeconds(maxRunTime);", span="310-310", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n114 [label="maxRunTime = 3600 * 12", span="294-294", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n116 [label="maxRunTime = 60", span="299-299", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n118 [label="OS.IsWindows", span="305-305", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n126 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)"];
n119 [label="maxRunTime = 24 * 60 * 60", span="307-307", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n121 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="270-270", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)"];
n128 [label="x.Symbol.IsCanonical()", span="274-274", cluster="lambda expression"];
n129 [label="Exit lambda expression", span="274-274", cluster="lambda expression"];
n130 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()"];
n133 [label="Exit lambda expression", span="275-275", cluster="lambda expression"];
n134 [label="Entry Unk.GetLimit", span="", cluster="Unk.GetLimit"];
n137 [label="Exit lambda expression", span="281-281", cluster="lambda expression"];
n138 [label="Entry QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85", cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)"];
n139 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="317-317", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()"];
n140 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="317-317", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()"];
m0_13 [label="var cl = new WebClient()", span="73-73", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_14 [label="var data = cl.DownloadString(request)", span="75-75", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_27 [label="Entry System.Net.WebClient.WebClient()", span="0-0", cluster="System.Net.WebClient.WebClient()", file="CryptoiqDownloader.cs"];
m0_25 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="CryptoiqDownloader.cs"];
m0_34 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="CryptoiqDownloader.cs"];
m0_35 [label="m.Time", span="78-78", cluster="lambda expression", file="CryptoiqDownloader.cs"];
m0_36 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="CryptoiqDownloader.cs"];
m0_24 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CryptoiqDownloader.cs"];
m0_5 [label="resolution != Resolution.Tick", span="55-55", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_30 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="CryptoiqDownloader.cs"];
m0_31 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="CryptoiqDownloader.cs"];
m0_29 [label="Entry Unk.>", span="", cluster="Unk.>", file="CryptoiqDownloader.cs"];
m0_12 [label="string request = String.Format(url, counter.ToString(''yyyy-MM-dd''), hour.ToString(), symbol.Value, _exchange)", span="71-71", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_3 [label="Exit QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", span="38-38", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", file="CryptoiqDownloader.cs"];
m0_0 [label="Entry QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", span="38-38", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", file="CryptoiqDownloader.cs"];
m0_1 [label="_exchange = exchange", span="40-40", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", file="CryptoiqDownloader.cs"];
m0_2 [label="_divisor = divisor", span="41-41", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, decimal)", file="CryptoiqDownloader.cs", color=green, community=0];
m0_4 [label="Entry QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="52-52", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_18 [label="yield return new Tick\r\n                            {\r\n                                Time = item.Time,\r\n                                Symbol = symbol,\r\n                                Value = item.Last / _divisor,\r\n                                AskPrice = item.Ask / _divisor,\r\n                                BidPrice = item.Bid / _divisor,\r\n                                TickType = QuantConnect.TickType.Quote\r\n                            };", span="81-89", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", color=green, community=0, file="CryptoiqDownloader.cs"];
m0_17 [label=mbtc, span="79-79", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_7 [label=isLiveMode, span="49-49", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_10 [label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName);", span="55-55", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_16 [label="mbtc = mbtc.OrderBy(m => m.Time).ToList()", span="78-78", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_19 [label="hour++", span="91-91", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_8 [label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="51-51", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_9 [label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="54-54", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_11 [label="Exit QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_20 [label="counter = counter.AddDays(1)", span="94-94", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_6 [label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CryptoiqDownloader.cs"];
m0_21 [label="hour = 0", span="95-95", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_15 [label="var mbtc = JsonConvert.DeserializeObject<List<CryptoiqBitcoin>>(data)", span="77-77", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_22 [label="Exit QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="52-52", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="CryptoiqDownloader.cs"];
m0_26 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="CryptoiqDownloader.cs"];
m0_28 [label="Entry System.Net.WebClient.DownloadString(string)", span="0-0", cluster="System.Net.WebClient.DownloadString(string)", file="CryptoiqDownloader.cs"];
m0_32 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="99-99", cluster="QuantConnect.Data.Market.Tick.Tick()", file="CryptoiqDownloader.cs"];
m0_33 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="CryptoiqDownloader.cs"];
m0_37 [label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader", span="", file="CryptoiqDownloader.cs"];
m3_199 [label="Entry QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", span="47-47", cluster="QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", file="LeanDataWriter.cs"];
m3_42 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataWriter.cs"];
m3_14 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="LeanDataWriter.cs"];
m3_22 [label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="59-59", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="LeanDataWriter.cs"];
m3_15 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="LeanDataWriter.cs"];
m3_18 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="LeanDataWriter.cs"];
m3_21 [label="var manager = new SecurityManager(timeKeeper)", span="57-57", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="LeanDataWriter.cs"];
m3_16 [label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36", cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="LeanDataWriter.cs"];
m3_19 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", span="54-54", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="LeanDataWriter.cs"];
m3_17 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="LeanDataWriter.cs"];
m3_20 [label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="56-56", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="LeanDataWriter.cs"];
m3_23 [label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="60-71", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="LeanDataWriter.cs"];
m3_28 [label="var baseDirectory = Path.Combine(_dataDirectory, _securityType.ToString().ToLower(), _market)", span="102-102", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_218 [label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="359-359", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="LeanDataWriter.cs"];
m3_219 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", span="357-357", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="LeanDataWriter.cs"];
m3_113 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="215-215", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_220 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="LeanDataWriter.cs"];
m3_31 [label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="108-108", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_173 [label="var subscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="318-332", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_167 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="309-309", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_168 [label="var identifier = SecurityIdentifier.GenerateFuture(new DateTime(2020, 12, 15), ''ED'', Market.USA)", span="311-311", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_169 [label="var symbol = new Symbol(identifier, ''ED'', Symbol.Empty)", span="312-312", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_170 [label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''ED'', SecurityType.Equity, TimeZones.NewYork)", span="313-313", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_171 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, ''ED'', symbol.ID.SecurityType, CashBook.AccountCurrency)", span="314-314", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_174 [label="Assert.IsFalse(symbol.IsCanonical())", span="334-334", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_172 [label="var subscriptionTypes = new List<Type>() { typeof(TradeBar), typeof(QuoteBar), typeof(OpenInterest) }", span="316-316", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_175 [label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 3)", span="336-336", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_176 [label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="337-337", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_177 [label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="338-338", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_178 [label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="339-339", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_179 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="309-309", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_67 [label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="111-111", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_41 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="96-96", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_24 [label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="138-138", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_25 [label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="96-96", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_12 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="56-56", cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="LeanDataWriter.cs"];
m3_27 [label="var lastTime = new DateTime()", span="99-99", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_99 [label="data = data.TrimEnd()", span="213-213", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_91 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="LeanDataWriter.cs"];
m3_92 [label="Entry Unk.Extract", span="", cluster="Unk.Extract", file="LeanDataWriter.cs"];
m3_93 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="LeanDataWriter.cs"];
m3_95 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="LeanDataWriter.cs"];
m3_97 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataWriter.cs"];
m3_94 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LeanDataWriter.cs"];
m3_96 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="LeanDataWriter.cs"];
m3_98 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", file="LeanDataWriter.cs"];
m3_100 [label="File.Exists(fileName)", span="214-214", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_101 [label="File.Delete(fileName)", span="216-216", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_110 [label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(TradeBar))", span="210-210", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_51 [label="args.NewItems.OfType<object>().Single() != security", span="85-85", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_157 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="LeanDataWriter.cs"];
m3_108 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="LeanDataWriter.cs"];
m3_102 [label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + fileName)", span="217-217", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_103 [label="Directory.CreateDirectory(Path.GetDirectoryName(fileName))", span="220-220", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_104 [label="Compression.Zip(data, fileName, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, time, _resolution, _dataType))", span="223-223", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_106 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_105 [label="Log.Trace(''LeanDataWriter.Write(): Created: '' + fileName)", span="224-224", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_107 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="LeanDataWriter.cs"];
m3_109 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanDataWriter.cs"];
m3_111 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="LeanDataWriter.cs"];
m3_112 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="269-269", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataWriter.cs"];
m3_64 [label="sb.Length > 0", span="173-173", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_13 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="LeanDataWriter.cs"];
m3_87 [label="return rows;", span="205-205", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs"];
m3_153 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", span="259-259", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="LeanDataWriter.cs"];
m3_90 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="LeanDataWriter.cs"];
m3_70 [label="Exit lambda expression", span="107-118", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_77 [label="var forex = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                forexMarketHoursDbEntry.ExchangeHours,\r\n                forexMarketHoursDbEntry.DataTimeZone,\r\n                forexSymbolProperties,\r\n                _securityInitializer,\r\n                forexSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="133-147", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_78 [label="Assert.AreEqual(forex.Subscriptions.Count(), 1)", span="148-148", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_86 [label="rows.Add(time, line)", span="199-199", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs"];
m3_79 [label="Assert.AreEqual(forex.Subscriptions.First().Type, typeof(QuoteBar))", span="149-149", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_80 [label="Assert.AreEqual(forex.Subscriptions.First().TickType, TickType.Quote)", span="150-150", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_84 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="LeanDataWriter.cs"];
m3_85 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="LeanDataWriter.cs"];
m3_81 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="124-124", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_82 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanDataWriter.cs"];
m3_83 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="LeanDataWriter.cs"];
m3_88 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LeanDataWriter.cs"];
m3_155 [label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164", cluster="QuantConnect.Symbol.IsCanonical()", file="LeanDataWriter.cs"];
m3_180 [label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="319-319", cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="LeanDataWriter.cs"];
m3_74 [label="var forexDefaultQuoteCurrency = forexSymbol.Value.Substring(3)", span="128-128", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs", color=red, community=0];
m3_33 [label="var outputFile = GetZipOutputFileName(baseDirectory, lastTime)", span="114-114", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_35 [label="sb.Clear()", span="116-116", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_32 [label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="111-111", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_34 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="115-115", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_36 [label="lastTime = data.Time", span="119-119", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_37 [label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="122-122", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_53 [label="var lastTime = new DateTime()", span="141-141", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_50 [label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="31-31", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataWriter.cs"];
m3_52 [label="var sb = new StringBuilder()", span="140-140", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_54 [label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="144-144", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_55 [label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="147-147", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_66 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="138-138", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_68 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="LeanDataWriter.cs"];
m3_65 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="175-175", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_69 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="LeanDataWriter.cs"];
m3_158 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_161 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_164 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_159 [label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="303-303", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_160 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_162 [label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="304-304", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_163 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_165 [label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="305-305", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_166 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_181 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_184 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_187 [label="Entry lambda expression", span="339-339", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_182 [label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="337-337", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_183 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_185 [label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="338-338", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_186 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_188 [label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="339-339", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_189 [label="Exit lambda expression", span="339-339", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_203 [label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="349-349", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_207 [label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="351-351", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_210 [label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="352-352", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_213 [label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="353-353", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_216 [label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="354-354", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_202 [label="Entry lambda expression", span="349-349", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_206 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_209 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_212 [label="Entry lambda expression", span="353-353", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_215 [label="Entry lambda expression", span="354-354", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_204 [label="Exit lambda expression", span="349-349", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_208 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_211 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_214 [label="Exit lambda expression", span="353-353", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_217 [label="Exit lambda expression", span="354-354", cluster="lambda expression", file="LeanDataWriter.cs"];
m3_75 [label="var forexSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(forexSymbol.ID.Market, forexSymbol, forexSymbol.ID.SecurityType, forexDefaultQuoteCurrency)", span="130-130", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_71 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="124-124", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_76 [label="var subscriptionTypes = new List<Type>() { typeof(QuoteBar) }", span="131-131", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_72 [label="var forexSymbol = Symbol.Create(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="126-126", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_73 [label="var forexMarketHoursDbEntry = _marketHoursDatabase.GetEntry(forexSymbol.ID.Market, forexSymbol, SecurityType.Forex)", span="127-127", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_11 [label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs"];
m3_38 [label="sb.Length > 0", span="126-126", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", color=green, community=0];
m3_119 [label="var subscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="223-237", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_114 [label="return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="235-235", cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs"];
m3_115 [label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="233-233", cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs"];
m3_117 [label="QuantConnect.ToolBox.LeanDataWriter", span="", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_116 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="151-151", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanDataWriter.cs"];
m3_118 [label="var subscriptionTypes = new List<Type>() { typeof(TradeBar) }", span="221-221", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_120 [label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 1)", span="239-239", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_121 [label="Assert.AreEqual(subscriptions.Subscriptions.First().Type, typeof(TradeBar))", span="240-240", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_122 [label="Assert.AreEqual(subscriptions.Subscriptions.First().TickType, TickType.Trade)", span="241-241", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_123 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="215-215", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_63 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="100-100", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_57 [label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="102-102", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs", color=red, community=0];
m3_58 [label="var manager = new SecurityManager(timeKeeper)", span="103-103", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_56 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="100-100", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_59 [label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="105-105", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_61 [label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.OldItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Remove);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="107-118", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs", color=red, community=0];
m3_62 [label="manager.Remove(security.Symbol)", span="120-120", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_60 [label="manager.Add(security.Symbol, security)", span="106-106", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="LeanDataWriter.cs"];
m3_44 [label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="79-79", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="LeanDataWriter.cs"];
m3_46 [label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="82-82", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="LeanDataWriter.cs"];
m3_26 [label="var sb = new StringBuilder()", span="98-98", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_29 [label=source, span="105-105", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_43 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", span="77-77", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="LeanDataWriter.cs"];
m3_151 [label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="LeanDataWriter.cs"];
m3_47 [label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="83-94", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="LeanDataWriter.cs"];
m3_45 [label="Entry System.IO.Path.Combine(string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string)", file="LeanDataWriter.cs"];
m3_48 [label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs"];
m3_49 [label="Entry System.Text.StringBuilder.Clear()", span="0-0", cluster="System.Text.StringBuilder.Clear()", file="LeanDataWriter.cs"];
m3_190 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="343-343", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_191 [label="var option = new Symbol(SecurityIdentifier.GenerateOption(SecurityIdentifier.DefaultDate, Symbols.SPY.ID, Market.USA, 0, default(OptionRight), default(OptionStyle)), ''?SPY'')", span="345-345", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_192 [label="var subscriptionDataConfigList = new SubscriptionDataConfigList(option)", span="347-347", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_193 [label="Assert.DoesNotThrow(() => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="349-349", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_194 [label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="351-351", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_195 [label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="352-352", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_196 [label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="353-353", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_197 [label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="354-354", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_198 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="343-343", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="LeanDataWriter.cs"];
m3_39 [label="var outputFile = GetZipOutputFileName(baseDirectory, lastTime)", span="128-128", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_200 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="LeanDataWriter.cs"];
m3_89 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="LeanDataWriter.cs"];
m3_40 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="129-129", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_30 [label="data.Time < lastTime", span="108-108", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs"];
m3_144 [label="var optionSubscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                optionMarketHoursDbEntry.ExchangeHours,\r\n                optionMarketHoursDbEntry.DataTimeZone,\r\n                optionSymbolProperties,\r\n                _securityInitializer,\r\n                optionSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="284-298", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_137 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="274-274", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_138 [label="var underlying = SecurityIdentifier.GenerateEquity(new DateTime(1998, 01, 02), ''SPY'', Market.USA)", span="276-276", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_139 [label="var optionIdentifier = SecurityIdentifier.GenerateOption(new DateTime(2015, 09, 18), underlying, Market.USA, 195.50m, OptionRight.Put, OptionStyle.European)", span="277-277", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_140 [label="var optionSymbol = new Symbol(optionIdentifier, ''SPY'', Symbol.Empty)", span="278-278", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_141 [label="var optionMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''SPY'', SecurityType.Equity, TimeZones.NewYork)", span="279-279", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_142 [label="var optionSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(optionSymbol.ID.Market, ''SPY'', optionSymbol.ID.SecurityType, CashBook.AccountCurrency)", span="280-280", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_145 [label="Assert.IsFalse(optionSymbol.IsCanonical())", span="300-300", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_143 [label="var subscriptionTypes = new List<Type>() { typeof(TradeBar), typeof(QuoteBar), typeof(OpenInterest) }", span="282-282", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_146 [label="Assert.AreEqual(optionSubscriptions.Subscriptions.Count(), 3)", span="302-302", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_147 [label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="303-303", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_148 [label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="304-304", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_149 [label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="305-305", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_150 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="274-274", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_134 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="LeanDataWriter.cs"];
m3_154 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="LeanDataWriter.cs"];
m3_135 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="LeanDataWriter.cs"];
m3_205 [label="Entry QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="56-56", cluster="QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="LeanDataWriter.cs"];
m3_136 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="LeanDataWriter.cs"];
m3_156 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="LeanDataWriter.cs"];
m3_152 [label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302", cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="LeanDataWriter.cs"];
m3_129 [label="var equity = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                equityMarketHoursDbEntry.ExchangeHours,\r\n                equityMarketHoursDbEntry.DataTimeZone,\r\n                equitySymbolProperties,\r\n                _securityInitializer,\r\n                equitySymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="252-266", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_124 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_125 [label="var equitySymbol = new Symbol(SecurityIdentifier.GenerateBase(''BTC'', Market.USA), ''BTC'')", span="247-247", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_126 [label="var equityMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''BTC'', SecurityType.Base, TimeZones.NewYork)", span="248-248", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_127 [label="var equitySymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(equitySymbol.ID.Market, equitySymbol, equitySymbol.ID.SecurityType, CashBook.AccountCurrency)", span="249-249", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_128 [label="var subscriptionTypes = new List<Type>() { typeof(Bitcoin) }", span="250-250", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_130 [label="Assert.AreEqual(equity.Subscriptions.Count(), 1)", span="268-268", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_131 [label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(Bitcoin))", span="269-269", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_132 [label="Assert.AreEqual(equity.Subscriptions.First().TickType, TickType.Trade)", span="270-270", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_133 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="LeanDataWriter.cs"];
m3_0 [label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="41-41", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_1 [label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="43-43", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_2 [label="_securityManager = new SecurityManager(timeKeeper)", span="44-44", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_3 [label="_securityTransactionManager = new SecurityTransactionManager(_securityManager)", span="45-45", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_4 [label="_securityPortfolioManager = new SecurityPortfolioManager(_securityManager, _securityTransactionManager)", span="46-46", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_5 [label="_subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="47-47", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_6 [label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="48-48", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_7 [label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="49-49", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_8 [label="_securityInitializer = SecurityInitializer.Null", span="50-50", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_9 [label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="41-41", cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="LeanDataWriter.cs"];
m3_10 [label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46", cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="LeanDataWriter.cs"];
m3_201 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="LeanDataWriter.cs"];
m3_221 [label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", span="", file="LeanDataWriter.cs"];
m3_222 [label=security, span="", file="LeanDataWriter.cs"];
m3_223 [label=security, span="", file="LeanDataWriter.cs"];
m3_224 [label=security, span="", file="LeanDataWriter.cs"];
m3_225 [label=subscriptionDataConfigList, span="", file="LeanDataWriter.cs"];
m5_51 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", span="43-43", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs"];
m5_23 [label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(int)", span="50-50", cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(int)", file="MovingAverageTypeExtensions.cs"];
m5_56 [label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs"];
m5_25 [label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(int)", span="50-50", cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(int)", file="MovingAverageTypeExtensions.cs"];
m5_28 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="MovingAverageTypeExtensions.cs"];
m5_22 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int, decimal)", span="64-64", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs"];
m5_54 [label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37", cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs"];
m5_21 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", span="54-54", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", file="MovingAverageTypeExtensions.cs"];
m5_26 [label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(int)", span="50-50", cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(int)", file="MovingAverageTypeExtensions.cs"];
m5_50 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs"];
m5_29 [label="Entry QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", span="72-72", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_47 [label="throw new ArgumentOutOfRangeException(''movingAverageType'');", span="101-101", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_30 [label=movingAverageType, span="74-74", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_31 [label="MovingAverageType.Simple", span="76-76", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_33 [label="MovingAverageType.Exponential", span="79-79", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_35 [label="MovingAverageType.Wilders", span="82-82", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_37 [label="MovingAverageType.LinearWeightedMovingAverage", span="85-85", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_39 [label="MovingAverageType.DoubleExponential", span="88-88", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_41 [label="MovingAverageType.TripleExponential", span="91-91", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_43 [label="MovingAverageType.Triangular", span="94-94", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_45 [label="MovingAverageType.T3", span="97-97", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_32 [label="return new SimpleMovingAverage(name, period);", span="77-77", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_34 [label="return new ExponentialMovingAverage(name, period);", span="80-80", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_36 [label="return new ExponentialMovingAverage(name, period, 1m / period);", span="83-83", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_38 [label="return new LinearWeightedMovingAverage(name, period);", span="86-86", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_40 [label="return new DoubleExponentialMovingAverage(name, period);", span="89-89", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_42 [label="return new TripleExponentialMovingAverage(name, period);", span="92-92", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_44 [label="return new TriangularMovingAverage(name, period);", span="95-95", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_46 [label="return new T3MovingAverage(name, period);", span="98-98", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_48 [label="Exit QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", span="72-72", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs"];
m5_53 [label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs"];
m5_49 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs"];
m5_27 [label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(int, decimal)", span="52-52", cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs"];
m5_55 [label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34", cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs"];
m5_20 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="MovingAverageTypeExtensions.cs"];
m5_52 [label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41", cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs"];
m5_0 [label="Entry QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", span="31-31", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_18 [label="throw new ArgumentOutOfRangeException(''movingAverageType'');", span="60-60", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", color=green, community=0, file="MovingAverageTypeExtensions.cs"];
m5_1 [label=movingAverageType, span="33-33", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_2 [label="MovingAverageType.Simple", span="35-35", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_4 [label="MovingAverageType.Exponential", span="38-38", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_6 [label="MovingAverageType.Wilders", span="41-41", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_8 [label="MovingAverageType.LinearWeightedMovingAverage", span="44-44", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_10 [label="MovingAverageType.DoubleExponential", span="47-47", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_12 [label="MovingAverageType.TripleExponential", span="50-50", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_14 [label="MovingAverageType.Triangular", span="53-53", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_16 [label="MovingAverageType.T3", span="56-56", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_3 [label="return new SimpleMovingAverage(period);", span="36-36", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_5 [label="return new ExponentialMovingAverage(period);", span="39-39", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_7 [label="return new ExponentialMovingAverage(period, 1m/period);", span="42-42", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_9 [label="return new LinearWeightedMovingAverage(period);", span="45-45", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_11 [label="return new DoubleExponentialMovingAverage(period);", span="48-48", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_13 [label="return new TripleExponentialMovingAverage(period);", span="51-51", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_15 [label="return new TriangularMovingAverage(period);", span="54-54", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_17 [label="return new T3MovingAverage(period);", span="57-57", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_19 [label="Exit QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", span="31-31", cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs"];
m5_24 [label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(int, decimal)", span="52-52", cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs"];
m6_37 [label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="72-72", cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="MovingAverageTypeExtensionsTests.cs"];
m6_36 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="MovingAverageTypeExtensionsTests.cs"];
m6_0 [label="Entry QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", span="24-24", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_17 [label="string name = string.Empty", span="50-50", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", color=green, community=0, file="MovingAverageTypeExtensionsTests.cs"];
m6_16 [label="Assert.IsInstanceOf(typeof(T3MovingAverage), indicator)", span="48-48", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_18 [label="indicator = MovingAverageType.Simple.AsIndicator(name, 1)", span="51-51", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", color=green, community=0, file="MovingAverageTypeExtensionsTests.cs"];
m6_20 [label="indicator = MovingAverageType.Exponential.AsIndicator(name, 1)", span="54-54", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_22 [label="indicator = MovingAverageType.Wilders.AsIndicator(name, 1)", span="57-57", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_24 [label="indicator = MovingAverageType.LinearWeightedMovingAverage.AsIndicator(name, 1)", span="60-60", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_26 [label="indicator = MovingAverageType.DoubleExponential.AsIndicator(name, 1)", span="63-63", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_28 [label="indicator = MovingAverageType.TripleExponential.AsIndicator(name, 1)", span="66-66", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_30 [label="indicator = MovingAverageType.Triangular.AsIndicator(name, 1)", span="69-69", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_32 [label="indicator = MovingAverageType.T3.AsIndicator(name, 1)", span="72-72", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_19 [label="Assert.IsInstanceOf(typeof(SimpleMovingAverage), indicator)", span="52-52", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", color=green, community=0, file="MovingAverageTypeExtensionsTests.cs"];
m6_15 [label="indicator = MovingAverageType.T3.AsIndicator(1)", span="47-47", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_21 [label="Assert.IsInstanceOf(typeof(ExponentialMovingAverage), indicator)", span="55-55", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_23 [label="Assert.IsInstanceOf(typeof(ExponentialMovingAverage), indicator)", span="58-58", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_25 [label="Assert.IsInstanceOf(typeof(LinearWeightedMovingAverage), indicator)", span="61-61", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_27 [label="Assert.IsInstanceOf(typeof(DoubleExponentialMovingAverage), indicator)", span="64-64", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_29 [label="Assert.IsInstanceOf(typeof(TripleExponentialMovingAverage), indicator)", span="67-67", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_31 [label="Assert.IsInstanceOf(typeof(TriangularMovingAverage), indicator)", span="70-70", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_33 [label="Assert.IsInstanceOf(typeof(T3MovingAverage), indicator)", span="73-73", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_2 [label="Assert.IsInstanceOf(typeof(SimpleMovingAverage), indicator)", span="27-27", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_4 [label="Assert.IsInstanceOf(typeof(ExponentialMovingAverage), indicator)", span="30-30", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_6 [label="Assert.IsInstanceOf(typeof(ExponentialMovingAverage), indicator)", span="33-33", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_8 [label="Assert.IsInstanceOf(typeof(LinearWeightedMovingAverage), indicator)", span="36-36", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_10 [label="Assert.IsInstanceOf(typeof(DoubleExponentialMovingAverage), indicator)", span="39-39", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_12 [label="Assert.IsInstanceOf(typeof(TripleExponentialMovingAverage), indicator)", span="42-42", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_14 [label="Assert.IsInstanceOf(typeof(TriangularMovingAverage), indicator)", span="45-45", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_1 [label="var indicator = MovingAverageType.Simple.AsIndicator(1)", span="26-26", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_3 [label="indicator = MovingAverageType.Exponential.AsIndicator(1)", span="29-29", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_5 [label="indicator = MovingAverageType.Wilders.AsIndicator(1)", span="32-32", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_7 [label="indicator = MovingAverageType.LinearWeightedMovingAverage.AsIndicator(1)", span="35-35", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_9 [label="indicator = MovingAverageType.DoubleExponential.AsIndicator(1)", span="38-38", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_11 [label="indicator = MovingAverageType.TripleExponential.AsIndicator(1)", span="41-41", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_13 [label="indicator = MovingAverageType.Triangular.AsIndicator(1)", span="44-44", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_34 [label="Exit QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", span="24-24", cluster="QuantConnect.Tests.Indicators.MovingAverageTypeExtensionsTests.CreatesCorrectAveragingIndicator()", file="MovingAverageTypeExtensionsTests.cs"];
m6_35 [label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(int)", span="31-31", cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(int)", file="MovingAverageTypeExtensionsTests.cs"];
m7_24 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Program.cs"];
m7_22 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m7_27 [label="Entry QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, bool)", span="39-39", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.CryptoiqDownloader(string, bool)", file="Program.cs"];
m7_31 [label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="74-74", cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="Program.cs"];
m7_21 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="Program.cs"];
m7_26 [label="Entry bool.Parse(string)", span="0-0", cluster="bool.Parse(string)", file="Program.cs"];
m7_0 [label="Entry QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", span="26-26", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_1 [label="args.Length == 3", span="28-28", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_2 [label="args = new string[] { args[0], DateTime.UtcNow.ToString(''yyyyMMdd''), args[1], args[2] }", span="30-30", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_3 [label="args.Length < 4", span="32-32", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_8 [label="var startDate = DateTime.ParseExact(args[0], ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="45-45", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_9 [label="var endDate = DateTime.ParseExact(args[1], ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="46-46", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_13 [label="var downloader = new CryptoiqDownloader(args[2], useDivisor)", span="55-55", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m7_14 [label="var symbolObject = Symbol.Create(args[3], SecurityType.Forex, market)", span="58-58", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_4 [label="Console.WriteLine(''Usage: CryptoiqDownloader FROMDATE TODATE EXCHANGE SYMBOL'')", span="34-34", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_5 [label="Console.WriteLine(''FROMDATE = yyyymmdd'')", span="35-35", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_6 [label="Console.WriteLine(''TODATE = yyyymmdd'')", span="36-36", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_7 [label="Environment.Exit(1)", span="37-37", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_15 [label="var data = downloader.Get(symbolObject, Resolution.Tick, startDate, endDate)", span="59-59", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_10 [label="var dataDirectory = Config.Get(''data-directory'', ''../../../Data'')", span="49-49", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_11 [label="bool useDivisor = bool.Parse(Config.Get(''bitfinex-use-divisor'', ''false''))", span="50-50", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m7_16 [label="var writer = new LeanDataWriter(Resolution.Tick, symbolObject, dataDirectory, TickType.Quote)", span="62-62", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_12 [label="string market = Market.Bitfinex", span="54-54", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_17 [label="writer.Write(data)", span="63-63", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_18 [label=Exception, span="66-66", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_19 [label="Log.Error(err)", span="68-68", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_20 [label="Exit QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", span="26-26", cluster="QuantConnect.ToolBox.CryptoiqDownloader.Program.Main(string[])", file="Program.cs"];
m7_28 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Program.cs"];
m7_29 [label="Entry QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="53-53", cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="Program.cs"];
m7_25 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Program.cs"];
m7_23 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)", file="Program.cs"];
m7_30 [label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="Program.cs"];
m8_91 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_92 [label="return AROON(symbol, period, period, resolution, selector);", span="234-234", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_93 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="913-913", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_370 [label="selector = selector ?? (x => x.Value)", span="916-916", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_371 [label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="919-919", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_372 [label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="922-926", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_373 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="913-913", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_12 [label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27", cluster="QuantConnect.Indicators.Identity.Identity(string)", file="QCAlgorithm.Indicators.cs"];
m8_128 [label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="67-67", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_178 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_179 [label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="455-455", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_181 [label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="457-457", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_180 [label="var onBalanceVolume = new OnBalanceVolume(name)", span="456-456", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_182 [label="return onBalanceVolume;", span="458-458", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_183 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_150 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_151 [label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="386-386", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_152 [label="var rateofchange = new RateOfChange(name, period)", span="387-387", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_153 [label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="388-388", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_154 [label="return rateofchange;", span="389-389", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_155 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_157 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_158 [label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="403-403", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_159 [label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="404-404", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_160 [label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="405-405", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_161 [label="return rateofchangepercent;", span="406-406", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_162 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_5 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_6 [label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_8 [label="RegisterIndicator(symbol, identity, resolution, selector)", span="53-53", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_7 [label="var identity = new Identity(name)", span="52-52", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_9 [label="return identity;", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_10 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_338 [label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_339 [label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="842-842", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_340 [label="var natr = new NormalizedAverageTrueRange(name, period)", span="843-843", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_341 [label="RegisterIndicator(symbol, natr, resolution, selector)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_342 [label="return natr;", span="845-845", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_343 [label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_247 [label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_248 [label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="633-633", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_249 [label="var variance = new Variance(name, period)", span="634-634", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_250 [label="RegisterIndicator(symbol, variance, resolution, selector)", span="635-635", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_251 [label="return variance;", span="636-636", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_252 [label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_215 [label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54", cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="QCAlgorithm.Indicators.cs"];
m8_192 [label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_193 [label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_194 [label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="492-492", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_195 [label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_196 [label="return keltnerChannels;", span="494-494", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_197 [label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_216 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_217 [label="return STO(symbol, period, period, 3, resolution);", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_218 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_310 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_311 [label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="776-776", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_312 [label="var mad = new MeanAbsoluteDeviation(name, period)", span="777-777", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_313 [label="RegisterIndicator(symbol, mad, resolution, selector)", span="778-778", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_314 [label="return mad;", span="779-779", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_315 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_331 [label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_332 [label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="826-826", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_333 [label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="827-827", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_334 [label="RegisterIndicator(symbol, t3, resolution, selector)", span="828-828", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_335 [label="return t3;", span="829-829", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_336 [label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_351 [label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="62-62", cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="QCAlgorithm.Indicators.cs"];
m8_72 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.Indicators.cs"];
m8_268 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_269 [label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="680-680", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_271 [label="RegisterIndicator(symbol, tr, resolution, selector)", span="682-682", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_270 [label="var tr = new TrueRange(name)", span="681-681", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_272 [label="return tr;", span="683-683", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_273 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_1 [label="var resolution = GetSubscription(symbol).Resolution", span="36-36", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_2 [label="return Identity(symbol, resolution, selector, fieldName);", span="37-37", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_3 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_115 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_116 [label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="300-300", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_117 [label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="301-301", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_118 [label="RegisterIndicator(symbol, rsi, resolution, selector)", span="302-302", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_119 [label="return rsi;", span="303-303", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_120 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_330 [label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44", cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_374 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="120-120", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs"];
m8_199 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_200 [label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="509-509", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_201 [label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="510-510", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_202 [label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_203 [label="return donchianChannel;", span="512-512", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_204 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_382 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Indicators.cs"];
m8_417 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="QCAlgorithm.Indicators.cs"];
m8_469 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="QCAlgorithm.Indicators.cs"];
m8_437 [label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39", cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs"];
m8_100 [label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61", cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs"];
m8_282 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_283 [label="var name = CreateIndicatorName(symbol, ''DEMA'' + period, resolution)", span="712-712", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_284 [label="var dema = new DoubleExponentialMovingAverage(name, period)", span="713-713", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_285 [label="RegisterIndicator(symbol, dema, resolution, selector)", span="714-714", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_286 [label="return dema;", span="715-715", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_287 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_143 [label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_144 [label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="369-369", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_145 [label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="370-370", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_146 [label="RegisterIndicator(symbol, bb, resolution, selector)", span="371-371", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_147 [label="return bb;", span="372-372", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_148 [label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_435 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs"];
m8_390 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="964-964", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_391 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_392 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="964-964", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_267 [label="Entry QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", span="48-48", cluster="QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs"];
m8_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1044-1044", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_420 [label="var subscription = GetSubscription(symbol)", span="1046-1046", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_421 [label="!timeSpan.HasValue || subscription.Resolution.ToTimeSpan() == timeSpan.Value", span="1049-1049", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_424 [label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1058-1058", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_425 [label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                    );", span="1060-1063", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_427 [label="return new TradeBarConsolidator(timeSpan.Value);", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_429 [label="return new TickConsolidator(timeSpan.Value);", span="1077-1077", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_431 [label="return new DynamicDataConsolidator(timeSpan.Value);", span="1083-1083", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_432 [label="return new BaseDataConsolidator(timeSpan.Value);", span="1087-1087", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_422 [label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1052-1052", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_426 [label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1068-1068", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_428 [label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1075-1075", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_430 [label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1081-1081", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_423 [label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1053-1053", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_433 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1044-1044", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs"];
m8_122 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_123 [label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="318-318", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_124 [label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="319-319", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_125 [label="RegisterIndicator(symbol, cci, resolution, selector)", span="320-320", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_126 [label="return cci;", span="321-321", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_127 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_164 [label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_165 [label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="421-421", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_166 [label="var williamspercentr = new WilliamsPercentR(name, period)", span="422-422", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_167 [label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="423-423", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_168 [label="return williamspercentr;", span="424-424", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_169 [label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_40 [label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_41 [label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="124-124", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_42 [label="var ema = new ExponentialMovingAverage(name, period)", span="125-125", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_43 [label="RegisterIndicator(symbol, ema, resolution, selector)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_44 [label="return ema;", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_45 [label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_434 [label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44", cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs"];
m8_114 [label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38", cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_447 [label="Entry lambda expression", span="1102-1102", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_75 [label="((TradeBar)x).High", span="187-187", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_74 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_76 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_89 [label="((TradeBar) x).Low", span="216-216", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_88 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_90 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_362 [label="x.Value", span="889-889", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_361 [label="Entry lambda expression", span="889-889", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_363 [label="Exit lambda expression", span="889-889", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_368 [label="x.Value", span="902-902", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_367 [label="Entry lambda expression", span="902-902", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_369 [label="Exit lambda expression", span="902-902", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_380 [label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="925-925", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_376 [label="x.Value", span="916-916", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_379 [label="var value = selector(consolidated)", span="924-924", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_375 [label="Entry lambda expression", span="916-916", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_377 [label="Exit lambda expression", span="916-916", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_378 [label="Entry lambda expression", span="922-926", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_381 [label="Exit lambda expression", span="922-926", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_406 [label="indicator.Update(value)", span="1001-1001", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_402 [label="(T) x", span="982-982", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_405 [label="var value = selector(consolidated)", span="1000-1000", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_401 [label="Entry lambda expression", span="982-982", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_403 [label="Exit lambda expression", span="982-982", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_404 [label="Entry lambda expression", span="998-1002", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_407 [label="Exit lambda expression", span="998-1002", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_448 [label="x.Symbol == symbol", span="1102-1102", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_449 [label="Exit lambda expression", span="1102-1102", cluster="lambda expression", file="QCAlgorithm.Indicators.cs"];
m8_135 [label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78", cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_254 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_255 [label="var name = CreateIndicatorName(symbol, ''AD'', resolution)", span="648-648", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_257 [label="RegisterIndicator(symbol, ad, resolution, selector)", span="650-650", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_256 [label="var ad = new AccumulationDistribution(name)", span="649-649", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_258 [label="return ad;", span="651-651", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_259 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_296 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_297 [label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="744-744", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_298 [label="var trima = new TriangularMovingAverage(name, period)", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_299 [label="RegisterIndicator(symbol, trima, resolution, selector)", span="746-746", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_300 [label="return trima;", span="747-747", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_301 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_209 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_210 [label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_211 [label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="541-541", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_212 [label="RegisterIndicator(symbol, stoch, resolution)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_213 [label="return stoch;", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_214 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_54 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_55 [label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="160-160", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_56 [label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="161-161", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_57 [label="RegisterIndicator(symbol, macd, resolution, selector)", span="162-162", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_58 [label="return macd;", span="163-163", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_59 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_142 [label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44", cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_171 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_172 [label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="438-438", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_173 [label="var lwma = new LinearWeightedMovingAverage(name, period)", span="439-439", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_174 [label="RegisterIndicator(symbol, lwma, resolution, selector)", span="440-440", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_175 [label="return lwma;", span="441-441", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_176 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_364 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_365 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="902-902", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_366 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_77 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_78 [label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_79 [label="var min = new Minimum(name, period)", span="207-207", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_80 [label="selector == null", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_81 [label="var subscription = GetSubscription(symbol)", span="212-212", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_84 [label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="220-220", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_85 [label="return min;", span="221-221", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_82 [label="typeof (TradeBar).IsAssignableFrom(subscription.Type)", span="213-213", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_83 [label="selector = x => ((TradeBar) x).Low", span="216-216", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_86 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_260 [label="Entry QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", span="30-30", cluster="QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", file="QCAlgorithm.Indicators.cs"];
m8_232 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="40-40", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1096-1096", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_438 [label="SubscriptionDataConfig subscription", span="1098-1098", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_439 [label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1102-1102", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_441 [label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1107-1107", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_440 [label=InvalidOperationException, span="1104-1104", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_442 [label="return subscription;", span="1109-1109", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_443 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1096-1096", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs"];
m8_206 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_207 [label="return DCH(symbol, period, period, resolution, selector);", span="526-526", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_208 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_316 [label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48", cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_38 [label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56", cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_20 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Indicators.cs"];
m8_275 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_276 [label="var name = CreateIndicatorName(symbol, ''CMO'' + period, resolution)", span="696-696", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_277 [label="var cmo = new ChandeMomentumOscillator(name, period)", span="697-697", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_278 [label="RegisterIndicator(symbol, cmo, resolution, selector)", span="698-698", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_279 [label="return cmo;", span="699-699", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_280 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_60 [label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66", cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_288 [label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs"];
m8_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_15 [label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="68-68", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_17 [label="RegisterIndicator(symbol, identity, ResolveConsolidator(symbol, resolution), selector)", span="70-70", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_16 [label="var identity = new Identity(name)", span="69-69", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_18 [label="return identity;", span="71-71", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_19 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs"];
m8_185 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_186 [label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_187 [label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="473-473", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_188 [label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="474-474", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_189 [label="return averageDirectionalIndex;", span="475-475", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_190 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_226 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_227 [label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="583-583", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_228 [label="var lsma = new LeastSquaresMovingAverage(name, period)", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_229 [label="RegisterIndicator(symbol, lsma, resolution, selector)", span="585-585", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_230 [label="return lsma;", span="586-586", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_231 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_198 [label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_87 [label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_289 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_290 [label="var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="728-728", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_291 [label="var tema = new TripleExponentialMovingAverage(name, period)", span="729-729", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_292 [label="RegisterIndicator(symbol, tema, resolution, selector)", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_293 [label="return tema;", span="731-731", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_294 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_309 [label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29", cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_240 [label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_241 [label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="617-617", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_243 [label="RegisterIndicator(symbol, bop, resolution, selector)", span="619-619", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_242 [label="var bop = new BalanceOfPower(name)", span="618-618", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_244 [label="return bop;", span="620-620", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_245 [label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_317 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_318 [label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="793-793", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_319 [label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_320 [label="RegisterIndicator(symbol, momersion, resolution, selector)", span="795-795", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_321 [label="return momersion;", span="796-796", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_322 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_302 [label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34", cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_418 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="QCAlgorithm.Indicators.cs"];
m8_253 [label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39", cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_446 [label="Entry QuantConnect.Symbol.ToString()", span="203-203", cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Indicators.cs"];
m8_246 [label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30", cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="QCAlgorithm.Indicators.cs"];
m8_47 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_48 [label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="141-141", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_49 [label="var sma = new SimpleMovingAverage(name, period)", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_50 [label="RegisterIndicator(symbol, sma, resolution, selector)", span="143-143", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_51 [label="return sma;", span="144-144", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_52 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_225 [label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31", cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_352 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_353 [label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="873-873", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_354 [label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="874-874", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_355 [label="RegisterIndicator(symbol, adxr, resolution, selector)", span="875-875", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_356 [label="return adxr;", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_357 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_94 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_95 [label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_96 [label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="249-249", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_97 [label="RegisterIndicator(symbol, aroon, resolution, selector)", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_98 [label="return aroon;", span="251-251", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_99 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_205 [label="Entry QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", span="55-55", cluster="QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", file="QCAlgorithm.Indicators.cs"];
m8_149 [label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53", cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="936-936", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_385 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="939-939", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_386 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="936-936", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_400 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Indicators.cs"];
m8_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1119-1119", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_450 [label="!resolution.HasValue", span="1121-1121", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_451 [label="resolution = GetSubscription(symbol).Resolution", span="1123-1123", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_453 [label=resolution, span="1126-1126", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_467 [label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1150-1150", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_452 [label="string res", span="1125-1125", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_454 [label="Resolution.Tick", span="1128-1128", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_456 [label="Resolution.Second", span="1131-1131", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_458 [label="Resolution.Minute", span="1134-1134", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_460 [label="Resolution.Hour", span="1137-1137", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_462 [label="Resolution.Daily", span="1140-1140", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_464 [label=null, span="1143-1143", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_466 [label="throw new ArgumentOutOfRangeException(''resolution'');", span="1147-1147", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_455 [label="res = ''_tick''", span="1129-1129", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_457 [label="res = ''_sec''", span="1132-1132", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_459 [label="res = ''_min''", span="1135-1135", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_461 [label="res = ''_hr''", span="1138-1138", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_463 [label="res = ''_day''", span="1141-1141", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_465 [label="res = string.Empty", span="1144-1144", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_468 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1119-1119", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_384 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="81-81", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="QCAlgorithm.Indicators.cs"];
m8_53 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_101 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_102 [label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="265-265", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_103 [label="var momentum = new Momentum(name, period)", span="266-266", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_104 [label="RegisterIndicator(symbol, momentum, resolution, selector)", span="267-267", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_105 [label="return momentum;", span="268-268", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_106 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_136 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_137 [label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="351-351", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_138 [label="var std = new StandardDeviation(name, period)", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_139 [label="RegisterIndicator(symbol, std, resolution, selector)", span="353-353", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_140 [label="return std;", span="354-354", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_141 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_239 [label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43", cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="QCAlgorithm.Indicators.cs"];
m8_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_33 [label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_34 [label="var atr = new AverageTrueRange(name, period, type)", span="108-108", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_35 [label="RegisterIndicator(symbol, atr, resolution, selector)", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_36 [label="return atr;", span="110-110", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_37 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_184 [label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34", cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="QCAlgorithm.Indicators.cs"];
m8_156 [label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37", cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_107 [label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37", cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_29 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="QCAlgorithm.Indicators.cs"];
m8_46 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_170 [label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59", cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_109 [label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="282-282", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_110 [label="var momentum = new MomentumPercent(name, period)", span="283-283", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_111 [label="RegisterIndicator(symbol, momentum, resolution, selector)", span="284-284", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_112 [label="return momentum;", span="285-285", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_113 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_444 [label="Entry Unk.First", span="", cluster="Unk.First", file="QCAlgorithm.Indicators.cs"];
m8_419 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="546-546", cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Indicators.cs"];
m8_163 [label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37", cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_233 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_234 [label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="601-601", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_235 [label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_236 [label="RegisterIndicator(symbol, psar, resolution, selector)", span="603-603", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_237 [label="return psar;", span="604-604", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_238 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_61 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_62 [label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="177-177", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_63 [label="var max = new Maximum(name, period)", span="178-178", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_64 [label="selector == null", span="181-181", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_65 [label="var subscription = GetSubscription(symbol)", span="183-183", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_68 [label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="191-191", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_69 [label="return max;", span="192-192", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_66 [label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_67 [label="selector = x => ((TradeBar)x).High", span="187-187", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_70 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_281 [label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44", cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_337 [label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs"];
m8_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_359 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="889-889", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_360 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_274 [label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35", cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="QCAlgorithm.Indicators.cs"];
m8_324 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_325 [label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="809-809", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_326 [label="var sum = new Sum(name, period)", span="810-810", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_327 [label="RegisterIndicator(symbol, sum, resolution, selector)", span="811-811", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_328 [label="return sum;", span="812-812", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_329 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_219 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_220 [label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="567-567", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_221 [label="var logr = new LogReturn(name, period)", span="568-568", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_222 [label="RegisterIndicator(symbol, logr, resolution)", span="569-569", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_223 [label="return logr;", span="570-570", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_224 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_436 [label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs"];
m8_121 [label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55", cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs"];
m8_71 [label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_303 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_304 [label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_305 [label="var rocr = new RateOfChangeRatio(name, period)", span="761-761", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_306 [label="RegisterIndicator(symbol, rocr, resolution, selector)", span="762-762", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_307 [label="return rocr;", span="763-763", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_308 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs"];
m8_261 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_262 [label="var name = CreateIndicatorName(symbol, string.Format(''ADOSC({0},{1})'', fastPeriod, slowPeriod), resolution)", span="665-665", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_263 [label="var adOsc = new AccumulationDistributionOscillator(name, fastPeriod, slowPeriod)", span="666-666", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_264 [label="RegisterIndicator(symbol, adOsc, resolution, selector)", span="667-667", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_265 [label="return adOsc;", span="668-668", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_266 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_129 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_130 [label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="335-335", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_131 [label="var mfi = new MoneyFlowIndex(name, period)", span="336-336", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_132 [label="RegisterIndicator(symbol, mfi, resolution, selector)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_133 [label="return mfi;", span="338-338", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_134 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_24 [label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="89-89", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_25 [label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_26 [label="RegisterIndicator(symbol, ichimoku, resolution)", span="91-91", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_27 [label="return ichimoku;", span="92-92", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_345 [label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_346 [label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_348 [label="RegisterIndicator(symbol, ha, resolution, selector)", span="859-859", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_347 [label="var ha = new HeikinAshi(name)", span="858-858", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_349 [label="return ha;", span="860-860", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_350 [label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs"];
m8_383 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs"];
m8_191 [label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66", cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_295 [label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37", cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_387 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="978-978", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_393 [label="selector = selector ?? (x => (T) x)", span="982-982", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_394 [label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="985-985", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_396 [label="!type.IsAssignableFrom(consolidator.OutputType)", span="989-989", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_397 [label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                    ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                    );", span="991-994", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_398 [label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="998-1002", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_395 [label="var type = typeof(T)", span="988-988", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_399 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="978-978", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_177 [label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41", cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_344 [label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36", cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_39 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="950-950", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_388 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="953-953", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_389 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="950-950", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs"];
m8_30 [label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99", cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="QCAlgorithm.Indicators.cs"];
m8_358 [label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36", cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="QCAlgorithm.Indicators.cs"];
m8_323 [label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52", cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="QCAlgorithm.Indicators.cs"];
m8_73 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1011-1011", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_408 [label="var subscription = GetSubscription(symbol)", span="1013-1013", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_409 [label="!resolution.HasValue || subscription.Resolution == resolution.Value", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_412 [label="var timeSpan = resolution.Value.ToTimeSpan()", span="1023-1023", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_414 [label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                    );", span="1029-1032", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_415 [label="return ResolveConsolidator(symbol, timeSpan);", span="1035-1035", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_410 [label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_413 [label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1027-1027", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_411 [label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1020-1020", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_416 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1011-1011", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs"];
m8_470 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="QCAlgorithm.Indicators.cs"];
m8_471 [label="System.Func<QuantConnect.Data.BaseData, decimal>", span="", file="QCAlgorithm.Indicators.cs"];
m8_472 [label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span="", file="QCAlgorithm.Indicators.cs"];
m8_473 [label="System.Func<QuantConnect.Data.BaseData, T>", span="", file="QCAlgorithm.Indicators.cs"];
m8_474 [label="QuantConnect.Indicators.IndicatorBase<T>", span="", file="QCAlgorithm.Indicators.cs"];
m8_475 [label="QuantConnect.Symbol", span="", file="QCAlgorithm.Indicators.cs"];
n141 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n141 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
n142 -> n83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
n143 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n143 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n143 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n143 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n143 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n143 -> n89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n144 -> n84  [key=1, style=dashed, color=darkseagreen4, label=job];
n145 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
n146 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Controls"];
n146 -> n136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Controls"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n4 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n6  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n7 -> n14  [key=2, style=dotted];
n7 -> n18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n8 -> n9  [key=0, style=solid];
n8 -> n15  [key=2, style=dotted];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label=error];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n6 -> n7  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n18 -> n21  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n4  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n19 -> n17  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n23 -> n24  [key=0, style=solid];
n23 -> n27  [key=2, style=dotted];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n26 -> n22  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n30 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
n30 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n30 -> n58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n38  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n39  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n42  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n44  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n84  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n47  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n48  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n50  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n51  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n54  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n59  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n60  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n61  [key=1, style=dashed, color=darkseagreen4, label=job];
n33 -> n65  [key=0, style=solid];
n33 -> n66  [key=2, style=dotted];
n33 -> n67  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n72  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n74  [key=2, style=dotted];
n44 -> n75  [key=2, style=dotted];
n44 -> n82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n44 -> n64  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
n83 -> n84  [key=0, style=solid];
n83 -> n94  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n95  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n96  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n97  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n98  [key=2, style=dotted];
n87 -> n99  [key=2, style=dotted];
n87 -> n100  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n101  [key=2, style=dotted];
n88 -> n102  [key=2, style=dotted];
n88 -> n103  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n93  [key=0, style=solid];
n89 -> n104  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n76  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n77  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n79  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n68  [key=2, style=dotted];
n34 -> n69  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=1, style=dashed, color=darkseagreen4, label=controls];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n69  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n80  [key=2, style=dotted];
n61 -> n81  [key=2, style=dotted];
n61 -> n69  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n70  [key=2, style=dotted];
n36 -> n71  [key=2, style=dotted];
n37 -> n65  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n70  [key=2, style=dotted];
n40 -> n71  [key=2, style=dotted];
n41 -> n65  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n73  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n75 -> n27  [key=3, color=darkorchid, style=bold, label="Property variable System.TimeSpan ResamplePeriod"];
n82 -> n83  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n46 -> n65  [key=0, style=solid];
n77 -> n107  [key=0, style=solid];
n77 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Controls"];
n77 -> n108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.UniverseManager"];
n77 -> n136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Controls"];
n77 -> n111  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n52 -> n53  [key=0, style=solid];
n52 -> n14  [key=2, style=dotted];
n52 -> n78  [key=2, style=dotted];
n55 -> n58  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n65 -> n30  [key=0, style=bold, color=blue];
n97 -> n97  [key=3, color=darkorchid, style=bold, label="Field variable int _debugMessageLength"];
n90 -> n91  [key=0, style=solid];
n93 -> n82  [key=0, style=bold, color=blue];
n91 -> n92  [key=0, style=solid];
n91 -> n105  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n106  [key=2, style=dotted];
n92 -> n71  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n122  [key=2, style=dotted];
n107 -> n123  [key=2, style=dotted];
n107 -> n124  [key=2, style=dotted];
n107 -> n127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n107 -> n131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n107 -> n109  [key=1, style=dashed, color=darkseagreen4, label=derivativeSubscriptions];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n125  [key=2, style=dotted];
n108 -> n135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=2, style=dotted];
n136 -> n136  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
n111 -> n112  [key=0, style=solid];
n111 -> n117  [key=1, style=dashed, color=darkseagreen4, label=jobDays];
n127 -> n128  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n112  [key=1, style=dashed, color=darkseagreen4, label=subscriptionCount];
n135 -> n136  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n115  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
n112 -> n117  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
n112 -> n120  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
n117 -> n118  [key=0, style=solid];
n117 -> n126  [key=2, style=dotted];
n117 -> n69  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n117  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n14  [key=2, style=dotted];
n114 -> n117  [key=0, style=solid];
n114 -> n120  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
n116 -> n117  [key=0, style=solid];
n116 -> n120  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n121 -> n77  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=2, style=dotted];
n129 -> n127  [key=0, style=bold, color=blue];
n133 -> n131  [key=0, style=bold, color=blue];
n137 -> n135  [key=0, style=bold, color=blue];
n139 -> n140  [key=0, style=solid];
n140 -> n139  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_27  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_28  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_5 -> m0_7  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_24  [key=2, style=dotted];
m0_12 -> m0_25  [key=2, style=dotted];
m0_12 -> m0_26  [key=2, style=dotted];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=request];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=green, label=decimal];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_5  [key=2, style=dotted];
m0_4 -> m0_18  [key=0, style=bold, color=green];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_18 -> m0_17  [key=0, style=solid, color=green];
m0_18 -> m0_32  [key=2, style=dotted, color=green];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_19  [key=0, style=solid];
m0_7 -> m0_4  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime counter"];
m0_7 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=counter];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=counter];
m0_7 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=counter];
m0_7 -> m0_9  [key=0, style=solid];
m0_10 -> m0_22  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=mbtc];
m0_16 -> m0_30  [key=2, style=dotted];
m0_16 -> m0_31  [key=2, style=dotted];
m0_16 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=hour];
m0_19 -> m0_11  [key=0, style=solid];
m0_8 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=hour];
m0_8 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=hour];
m0_8 -> m0_8  [key=3, color=darkorchid, style=bold, label="Local variable int hour"];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=hour];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=url];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="Local variable string url"];
m0_9 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_20  [key=0, style=solid];
m0_11 -> m0_6  [key=0, style=bold, color=blue];
m0_20 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=counter];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_33  [key=2, style=dotted];
m0_6 -> m0_22  [key=0, style=solid];
m0_6 -> n66  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m0_21 -> m0_10  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_4  [key=0, style=bold, color=blue];
m0_37 -> m0_2  [key=1, style=dashed, color=green, label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader"];
m0_37 -> m0_18  [key=1, style=dashed, color=green, label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader"];
m0_37 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader"];
m0_37 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader"];
m3_14 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m3_22 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_26  [key=2, style=dotted];
m3_22 -> m3_27  [key=2, style=dotted];
m3_22 -> m3_28  [key=2, style=dotted];
m3_22 -> m3_29  [key=2, style=dotted];
m3_22 -> m3_30  [key=2, style=dotted];
m3_22 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_22 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [key=0, style=solid];
m3_18 -> m3_23  [key=0, style=solid];
m3_18 -> m3_24  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_12  [key=2, style=dotted];
m3_21 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_21 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_16 -> m3_17  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_10  [key=2, style=dotted];
m3_20 -> m3_11  [key=2, style=dotted];
m3_23 -> m3_14  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_23 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_28 -> m3_218  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m3_28 -> m3_44  [key=2, style=dotted];
m3_28 -> m3_12  [key=2, style=dotted];
m3_28 -> m3_45  [key=2, style=dotted];
m3_28 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_220  [key=2, style=dotted];
m3_219 -> m3_28  [key=0, style=bold, color=blue];
m3_113 -> m3_114  [key=0, style=solid];
m3_31 -> m3_41  [key=0, style=solid];
m3_31 -> m3_13  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_87  [key=2, style=dotted];
m3_173 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_173 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_173 -> m3_177  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_173 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_11  [key=2, style=dotted];
m3_168 -> m3_180  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_153  [key=2, style=dotted];
m3_169 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_169 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_169 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_136  [key=2, style=dotted];
m3_170 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=marketHoursDbEntry];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_154  [key=2, style=dotted];
m3_171 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_155  [key=2, style=dotted];
m3_174 -> m3_156  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> n3  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_88  [key=2, style=dotted];
m3_175 -> m3_89  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_157  [key=2, style=dotted];
m3_176 -> m3_41  [key=2, style=dotted];
m3_176 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_157  [key=2, style=dotted];
m3_177 -> m3_41  [key=2, style=dotted];
m3_177 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_157  [key=2, style=dotted];
m3_178 -> m3_41  [key=2, style=dotted];
m3_178 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_179 -> m3_167  [key=0, style=bold, color=blue];
m3_67 -> m3_70  [key=0, style=solid];
m3_67 -> m3_40  [key=2, style=dotted];
m3_41 -> m3_25  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_31  [key=2, style=dotted];
m3_24 -> m3_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source"];
m3_24 -> m3_52  [key=0, style=solid];
m3_24 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m3_25 -> m3_19  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m3_25 -> m3_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source"];
m3_27 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_43  [key=2, style=dotted];
m3_27 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_27 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_27 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_27 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_27 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_90  [key=2, style=dotted];
m3_99 -> m3_89  [key=2, style=dotted];
m3_99 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_99 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_99 -> m3_107  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_82  [key=2, style=dotted];
m3_92 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=optionSymbol];
m3_92 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=optionSymbol];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_83  [key=2, style=dotted];
m3_93 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=optionMarketHoursDbEntry];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_85  [key=2, style=dotted];
m3_95 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=optionSymbolProperties];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_87  [key=2, style=dotted];
m3_97 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=option];
m3_97 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=option];
m3_97 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_94 -> m3_95  [key=0, style=solid];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> n3  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_88  [key=2, style=dotted];
m3_98 -> m3_89  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_90  [key=2, style=dotted];
m3_100 -> m3_89  [key=2, style=dotted];
m3_100 -> m3_103  [key=0, style=solid];
m3_100 -> m3_69  [key=2, style=dotted];
m3_101 -> m3_91  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_108  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_90  [key=2, style=dotted];
m3_110 -> m3_89  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=0, style=solid];
m3_51 -> m3_38  [key=2, style=dotted];
m3_51 -> m3_39  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_87  [key=2, style=dotted];
m3_108 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label=equity];
m3_108 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label=equity];
m3_108 -> m3_108  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TimeSpan CalculateIncrement"];
m3_108 -> m3_6  [key=3, color=darkorchid, style=bold, label="Parameter variable bool includeTick"];
m3_108 -> m3_61  [key=3, color=red, style=bold, label="Parameter variable bool includeTick"];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_109  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_82  [key=2, style=dotted];
m3_103 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label=equitySymbol];
m3_103 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=equitySymbol];
m3_103 -> m3_110  [key=2, style=dotted];
m3_103 -> m3_111  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_83  [key=2, style=dotted];
m3_104 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=equityMarketHoursDbEntry];
m3_104 -> m3_112  [key=2, style=dotted];
m3_104 -> m3_113  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_85  [key=2, style=dotted];
m3_106 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=equitySymbolProperties];
m3_106 -> m3_48  [key=0, style=bold, color=blue];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_109  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> n3  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_88  [key=2, style=dotted];
m3_109 -> m3_89  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_90  [key=2, style=dotted];
m3_111 -> m3_89  [key=2, style=dotted];
m3_112 -> m3_102  [key=0, style=bold, color=blue];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=0, style=solid];
m3_13 -> m3_13  [key=3, color=darkorchid, style=bold, label="Field variable int _subscriptions"];
m3_87 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_87 -> m3_88  [key=0, style=solid];
m3_70 -> m3_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string fileName"];
m3_70 -> m3_77  [key=0, style=solid];
m3_70 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_70 -> m3_65  [key=0, style=bold, color=blue];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_89  [key=2, style=dotted];
m3_77 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=rows];
m3_77 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label=rows];
m3_77 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=forex];
m3_77 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=forex];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_90  [key=2, style=dotted];
m3_78 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=zip];
m3_78 -> m3_88  [key=2, style=dotted];
m3_78 -> m3_89  [key=2, style=dotted];
m3_86 -> m3_84  [key=0, style=solid];
m3_86 -> m3_98  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_91  [key=2, style=dotted];
m3_79 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=stream];
m3_79 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=stream];
m3_79 -> m3_90  [key=2, style=dotted];
m3_79 -> m3_89  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_92  [key=2, style=dotted];
m3_80 -> m3_90  [key=2, style=dotted];
m3_80 -> m3_89  [key=2, style=dotted];
m3_84 -> m3_87  [key=0, style=solid];
m3_84 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=line];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_95  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_96  [key=2, style=dotted];
m3_85 -> m3_97  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_93  [key=2, style=dotted];
m3_81 -> m3_71  [key=0, style=bold, color=blue];
m3_82 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_94  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_88 -> m3_70  [key=0, style=bold, color=blue];
m3_74 -> m3_75  [key=0, style=solid, color=red];
m3_74 -> m3_84  [key=2, style=dotted, color=red];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=0, style=solid];
m3_33 -> m3_38  [key=2, style=dotted];
m3_33 -> m3_39  [key=2, style=dotted];
m3_33 -> m3_46  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_41  [key=2, style=dotted];
m3_35 -> m3_49  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_32 -> m3_36  [key=0, style=solid];
m3_34 -> m3_37  [key=0, style=solid];
m3_34 -> m3_40  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_47  [key=2, style=dotted];
m3_34 -> m3_48  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_42  [key=2, style=dotted];
m3_36 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_36 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_37 -> m3_32  [key=0, style=bold, color=blue];
m3_37 -> m3_29  [key=0, style=solid];
m3_37 -> m3_50  [key=2, style=dotted];
m3_37 -> m3_51  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_41  [key=2, style=dotted];
m3_53 -> m3_43  [key=2, style=dotted];
m3_53 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_52 -> m3_55  [key=0, style=solid];
m3_52 -> m3_40  [key=2, style=dotted];
m3_52 -> m3_42  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_52 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_52 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_42  [key=2, style=dotted];
m3_54 -> m3_46  [key=2, style=dotted];
m3_54 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m3_54 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m3_54 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m3_55 -> m3_50  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_67  [key=2, style=dotted];
m3_55 -> m3_68  [key=2, style=dotted];
m3_55 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_55 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_55 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=newRows];
m3_55 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=newRows];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_68  [key=0, style=solid];
m3_66 -> m3_38  [key=2, style=dotted];
m3_66 -> m3_39  [key=2, style=dotted];
m3_66 -> m3_24  [key=0, style=bold, color=blue];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_41  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_65 -> m3_48  [key=2, style=dotted];
m3_65 -> m3_47  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_42  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_161 -> m3_162  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_159 -> m3_160  [key=0, style=solid];
m3_160 -> m3_158  [key=0, style=bold, color=blue];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_161  [key=0, style=bold, color=blue];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_164  [key=0, style=bold, color=blue];
m3_181 -> m3_182  [key=0, style=solid];
m3_184 -> m3_185  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_183 -> m3_181  [key=0, style=bold, color=blue];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_184  [key=0, style=bold, color=blue];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_187  [key=0, style=bold, color=blue];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_205  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_205  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_205  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_205  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_205  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_206 -> m3_207  [key=0, style=solid];
m3_209 -> m3_210  [key=0, style=solid];
m3_212 -> m3_213  [key=0, style=solid];
m3_215 -> m3_216  [key=0, style=solid];
m3_204 -> m3_202  [key=0, style=bold, color=blue];
m3_208 -> m3_206  [key=0, style=bold, color=blue];
m3_211 -> m3_209  [key=0, style=bold, color=blue];
m3_214 -> m3_212  [key=0, style=bold, color=blue];
m3_217 -> m3_215  [key=0, style=bold, color=blue];
m3_75 -> m3_50  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_85  [key=2, style=dotted];
m3_75 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=forexSymbolProperties];
m3_71 -> m3_72  [key=0, style=solid];
m3_76 -> m3_74  [key=0, style=bold, color=blue];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> n3  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_82  [key=2, style=dotted];
m3_72 -> m3_74  [key=1, style=dashed, color=red, label=forexSymbol];
m3_72 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=forexSymbol];
m3_72 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=forexSymbol];
m3_73 -> m3_71  [key=0, style=bold, color=blue];
m3_73 -> m3_74  [key=0, style=solid, color=red];
m3_73 -> m3_83  [key=2, style=dotted];
m3_73 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=forexMarketHoursDbEntry];
m3_11 -> m3_0  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid, color=green];
m3_38 -> m3_41  [key=0, style=solid, color=green];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_87  [key=2, style=dotted];
m3_119 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_119 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_82  [key=2, style=dotted];
m3_114 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_114 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_114 -> m3_116  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_83  [key=2, style=dotted];
m3_115 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=marketHoursDbEntry];
m3_115 -> m3_46  [key=0, style=bold, color=blue];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_85  [key=2, style=dotted];
m3_117 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
m3_117 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_117 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m3_116 -> m3_117  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> n3  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_88  [key=2, style=dotted];
m3_120 -> m3_89  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_90  [key=2, style=dotted];
m3_121 -> m3_89  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_90  [key=2, style=dotted];
m3_122 -> m3_89  [key=2, style=dotted];
m3_123 -> m3_113  [key=0, style=bold, color=blue];
m3_63 -> m3_51  [key=2, style=dotted];
m3_63 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_63 -> m3_62  [key=0, style=solid];
m3_63 -> m3_56  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid, color=red];
m3_57 -> m3_61  [key=0, style=solid];
m3_57 -> m3_69  [key=2, style=dotted];
m3_57 -> m3_10  [key=2, style=dotted, color=red];
m3_57 -> m3_11  [key=2, style=dotted, color=red];
m3_58 -> m3_70  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_58 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_58 -> m3_12  [key=2, style=dotted];
m3_58 -> m3_61  [key=1, style=dashed, color=red, label=manager];
m3_56 -> m3_55  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows"];
m3_56 -> m3_70  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows"];
m3_56 -> m3_57  [key=0, style=solid, color=red];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_62  [key=0, style=solid];
m3_59 -> m3_26  [key=2, style=dotted];
m3_59 -> m3_27  [key=2, style=dotted];
m3_59 -> m3_28  [key=2, style=dotted];
m3_59 -> m3_29  [key=2, style=dotted];
m3_59 -> m3_30  [key=2, style=dotted];
m3_59 -> m3_61  [key=1, style=dashed, color=red, label=security];
m3_59 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_59 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_61 -> m3_62  [key=0, style=solid, color=red];
m3_61 -> m3_66  [key=1, style=dashed, color=red, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_61 -> m3_68  [key=1, style=dashed, color=red, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=0, style=solid];
m3_60 -> m3_59  [key=0, style=solid];
m3_60 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_60 -> m3_61  [key=0, style=solid, color=red];
m3_60 -> m3_31  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_10  [key=2, style=dotted];
m3_44 -> m3_11  [key=2, style=dotted];
m3_46 -> m3_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
m3_46 -> m3_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string baseDirectory"];
m3_46 -> m3_114  [key=0, style=solid];
m3_46 -> m3_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_26  [key=2, style=dotted];
m3_46 -> m3_29  [key=2, style=dotted];
m3_46 -> m3_30  [key=2, style=dotted];
m3_46 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_46 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_26 -> m3_38  [key=1, style=dashed, color=green, label=sb];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_42  [key=2, style=dotted];
m3_26 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_26 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_26 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_26 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_29 -> m3_38  [key=0, style=solid, color=green];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_29 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_29 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_43 -> m3_44  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_47 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_12  [key=2, style=dotted];
m3_45 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_45 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=manager];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_126  [key=3, color=darkorchid, style=bold, label="Property variable System.DateTime LoadedDataFrontier"];
m3_48 -> m3_39  [key=3, color=darkorchid, style=bold, label="Parameter variable string fileName"];
m3_48 -> m3_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
m3_48 -> m3_99  [key=0, style=solid];
m3_48 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_48 -> m3_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string fileName"];
m3_48 -> m3_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string fileName"];
m3_48 -> m3_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
m3_49 -> m3_43  [key=0, style=bold, color=blue];
m3_190 -> m3_191  [key=0, style=solid];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_134  [key=2, style=dotted];
m3_191 -> m3_152  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_199  [key=2, style=dotted];
m3_192 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_192 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_200  [key=2, style=dotted];
m3_193 -> m3_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_201  [key=2, style=dotted];
m3_194 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_201  [key=2, style=dotted];
m3_195 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_201  [key=2, style=dotted];
m3_196 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_201  [key=2, style=dotted];
m3_197 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_198 -> m3_190  [key=0, style=bold, color=blue];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_46  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_47  [key=2, style=dotted];
m3_40 -> m3_48  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_87  [key=2, style=dotted];
m3_144 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label=optionSubscriptions];
m3_144 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label=optionSubscriptions];
m3_144 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=optionSubscriptions];
m3_144 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=optionSubscriptions];
m3_144 -> m3_144  [key=3, color=darkorchid, style=bold, label="Local variable int bridgeFullCount"];
m3_144 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable int bridgeZeroCount"];
m3_144 -> m3_98  [key=3, color=darkorchid, style=bold, label="Local variable int active"];
m3_137 -> m3_138  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_11  [key=2, style=dotted];
m3_138 -> m3_151  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_11  [key=2, style=dotted];
m3_139 -> m3_152  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_153  [key=2, style=dotted];
m3_140 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=optionSymbol];
m3_140 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=optionSymbol];
m3_140 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=optionSymbol];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_136  [key=2, style=dotted];
m3_141 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=optionMarketHoursDbEntry];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_154  [key=2, style=dotted];
m3_142 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=optionSymbolProperties];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_155  [key=2, style=dotted];
m3_145 -> m3_156  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> n3  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_88  [key=2, style=dotted];
m3_146 -> m3_89  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_157  [key=2, style=dotted];
m3_147 -> m3_41  [key=2, style=dotted];
m3_147 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_157  [key=2, style=dotted];
m3_148 -> m3_41  [key=2, style=dotted];
m3_148 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_157  [key=2, style=dotted];
m3_149 -> m3_41  [key=2, style=dotted];
m3_149 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_150 -> m3_137  [key=0, style=bold, color=blue];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_87  [key=2, style=dotted];
m3_129 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=equity];
m3_129 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=equity];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable long earlyBirdTicks"];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_134  [key=2, style=dotted];
m3_125 -> m3_135  [key=2, style=dotted];
m3_125 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label=equitySymbol];
m3_125 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=equitySymbol];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_136  [key=2, style=dotted];
m3_126 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=equityMarketHoursDbEntry];
m3_126 -> m3_128  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime frontier"];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_85  [key=2, style=dotted];
m3_127 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=equitySymbolProperties];
m3_127 -> m3_108  [key=3, color=darkorchid, style=bold, label="Local variable System.TimeSpan tradeBarIncrements"];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> n3  [key=2, style=dotted];
m3_128 -> m3_108  [key=3, color=darkorchid, style=bold, label="Local variable System.TimeSpan increment"];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_88  [key=2, style=dotted];
m3_130 -> m3_89  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_90  [key=2, style=dotted];
m3_131 -> m3_89  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_90  [key=2, style=dotted];
m3_132 -> m3_89  [key=2, style=dotted];
m3_132 -> m3_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_133 -> m3_124  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_10  [key=2, style=dotted];
m3_1 -> m3_11  [key=2, style=dotted];
m3_1 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=timeKeeper];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_13  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_14  [key=2, style=dotted];
m3_5 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_15  [key=2, style=dotted];
m3_5 -> m3_16  [key=2, style=dotted];
m3_5 -> m3_77  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Packets.BacktestNodePacket _job"];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_17  [key=2, style=dotted];
m3_6 -> m3_6  [key=3, color=darkorchid, style=bold, label="Field variable bool _endOfStreams"];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_7 -> m3_18  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_8  [key=3, color=darkorchid, style=bold, label="Field variable int _bridgeMax"];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_9 -> m3_0  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_10 -> m3_77  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Interfaces.IAlgorithm _algorithm"];
m3_221 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_221 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests"];
m3_222 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_223 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_224 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_225 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_225 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_225 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_225 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m3_225 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfigList];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_47 -> m5_28  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_30 -> m5_47  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [key=0, style=solid];
m5_30 -> m5_35  [key=0, style=solid];
m5_30 -> m5_37  [key=0, style=solid];
m5_30 -> m5_39  [key=0, style=solid];
m5_30 -> m5_41  [key=0, style=solid];
m5_30 -> m5_43  [key=0, style=solid];
m5_30 -> m5_45  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_32 -> m5_48  [key=0, style=solid];
m5_32 -> m5_49  [key=2, style=dotted];
m5_34 -> m5_48  [key=0, style=solid];
m5_34 -> m5_50  [key=2, style=dotted];
m5_36 -> m5_48  [key=0, style=solid];
m5_36 -> m5_51  [key=2, style=dotted];
m5_38 -> m5_48  [key=0, style=solid];
m5_38 -> m5_52  [key=2, style=dotted];
m5_40 -> m5_48  [key=0, style=solid];
m5_40 -> m5_53  [key=2, style=dotted];
m5_42 -> m5_48  [key=0, style=solid];
m5_42 -> m5_54  [key=2, style=dotted];
m5_44 -> m5_48  [key=0, style=solid];
m5_44 -> m5_55  [key=2, style=dotted];
m5_46 -> m5_48  [key=0, style=solid];
m5_46 -> m5_56  [key=2, style=dotted];
m5_48 -> m5_29  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_28  [key=2, style=dotted, color=green];
m5_1 -> m5_18  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=0, style=solid];
m5_1 -> m5_6  [key=0, style=solid];
m5_1 -> m5_8  [key=0, style=solid];
m5_1 -> m5_10  [key=0, style=solid];
m5_1 -> m5_12  [key=0, style=solid];
m5_1 -> m5_14  [key=0, style=solid];
m5_1 -> m5_16  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_3 -> m5_19  [key=0, style=solid];
m5_3 -> m5_20  [key=2, style=dotted];
m5_5 -> m5_19  [key=0, style=solid];
m5_5 -> m5_21  [key=2, style=dotted];
m5_7 -> m5_19  [key=0, style=solid];
m5_7 -> m5_22  [key=2, style=dotted];
m5_9 -> m5_19  [key=0, style=solid];
m5_9 -> m5_23  [key=2, style=dotted];
m5_11 -> m5_19  [key=0, style=solid];
m5_11 -> m5_24  [key=2, style=dotted];
m5_13 -> m5_19  [key=0, style=solid];
m5_13 -> m5_25  [key=2, style=dotted];
m5_15 -> m5_19  [key=0, style=solid];
m5_15 -> m5_26  [key=2, style=dotted];
m5_17 -> m5_19  [key=0, style=solid];
m5_17 -> m5_27  [key=2, style=dotted];
m5_19 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid, color=green];
m6_17 -> m6_20  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_22  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_24  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_26  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_28  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_30  [key=1, style=dashed, color=green, label=name];
m6_17 -> m6_32  [key=1, style=dashed, color=green, label=name];
m6_16 -> m6_17  [key=0, style=solid, color=green];
m6_16 -> m6_36  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid, color=green];
m6_18 -> m6_37  [key=2, style=dotted, color=green];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_37  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_37  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_37  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_37  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_37  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_37  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_37  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid, color=green];
m6_19 -> m6_36  [key=2, style=dotted, color=green];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_35  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_36  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_36  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_36  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_36  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_36  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_36  [key=2, style=dotted];
m6_33 -> m6_36  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_2 -> m6_36  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_4 -> m6_36  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_6 -> m6_36  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_8 -> m6_36  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_10 -> m6_36  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_12 -> m6_36  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_14 -> m6_36  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_35  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_35  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_35  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_35  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_35  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_35  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_35  [key=2, style=dotted];
m6_34 -> m6_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_0 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_0 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_0 -> m7_13  [key=1, style=dashed, color=red, label="string[]"];
m7_0 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_2 -> m7_8  [key=0, style=solid];
m7_2 -> m7_21  [key=2, style=dotted];
m7_2 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_2 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_2 -> m7_13  [key=1, style=dashed, color=red, label="string[]"];
m7_2 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_24  [key=2, style=dotted];
m7_8 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_24  [key=2, style=dotted];
m7_9 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_13 -> m7_27  [key=2, style=dotted, color=red];
m7_13 -> m7_15  [key=1, style=dashed, color=red, label=downloader];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_28  [key=2, style=dotted];
m7_14 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=symbolObject];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_22  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_22  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_22  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_23  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_29  [key=2, style=dotted];
m7_15 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=data];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_10 -> m7_25  [key=2, style=dotted];
m7_10 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=dataDirectory];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_25  [key=2, style=dotted, color=red];
m7_11 -> m7_26  [key=2, style=dotted, color=red];
m7_11 -> m7_13  [key=1, style=dashed, color=red, label=useDivisor];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_30  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_12 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=market];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_20  [key=0, style=solid];
m7_17 -> m7_31  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> n105  [key=2, style=dotted];
m7_20 -> m7_0  [key=0, style=bold, color=blue];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_94  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.AroonOscillator AROON"];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_94  [key=2, style=dotted];
m8_93 -> m8_91  [key=0, style=bold, color=blue];
m8_22 -> m8_370  [key=0, style=solid];
m8_22 -> m8_371  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_22 -> m8_372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m8_22 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m8_22 -> m8_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_22 -> m8_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_22 -> m8_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_22 -> m8_13  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_22 -> m8_364  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_22 -> m8_16  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_22 -> m8_63  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_22 -> m8_79  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_22 -> m8_21  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator"];
m8_22 -> m8_73  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator"];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_370  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_370 -> m8_376  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_370 -> m8_372  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_370 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_374  [key=2, style=dotted];
m8_372 -> m8_373  [key=0, style=solid];
m8_372 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_372 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_373 -> m8_22  [key=0, style=bold, color=blue];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_178 -> m8_180  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.OnBalanceVolume OBV"];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_11  [key=2, style=dotted];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_39  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_184  [key=2, style=dotted];
m8_180 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=onBalanceVolume];
m8_182 -> m8_183  [key=0, style=solid];
m8_183 -> m8_178  [key=0, style=bold, color=blue];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_152  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_150 -> m8_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_11  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_156  [key=2, style=dotted];
m8_152 -> m8_154  [key=1, style=dashed, color=darkseagreen4, label=rateofchange];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_13  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_155 -> m8_150  [key=0, style=bold, color=blue];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_157 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_11  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_163  [key=2, style=dotted];
m8_159 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=rateofchangepercent];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_13  [key=2, style=dotted];
m8_161 -> m8_162  [key=0, style=solid];
m8_162 -> m8_157  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_5 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string fieldName"];
m8_5 -> m8_1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m8_5 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.Identity Identity"];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_11  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_12  [key=2, style=dotted];
m8_7 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=identity];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_5  [key=0, style=bold, color=blue];
m8_338 -> m8_339  [key=0, style=solid];
m8_338 -> m8_340  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_338 -> m8_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_11  [key=2, style=dotted];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_344  [key=2, style=dotted];
m8_340 -> m8_342  [key=1, style=dashed, color=darkseagreen4, label=natr];
m8_341 -> m8_342  [key=0, style=solid];
m8_341 -> m8_39  [key=2, style=dotted];
m8_342 -> m8_343  [key=0, style=solid];
m8_343 -> m8_338  [key=0, style=bold, color=blue];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_249  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_247 -> m8_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_11  [key=2, style=dotted];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_253  [key=2, style=dotted];
m8_249 -> m8_251  [key=1, style=dashed, color=darkseagreen4, label=variance];
m8_250 -> m8_251  [key=0, style=solid];
m8_250 -> m8_13  [key=2, style=dotted];
m8_251 -> m8_252  [key=0, style=solid];
m8_252 -> m8_247  [key=0, style=bold, color=blue];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_194  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_192 -> m8_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_11  [key=2, style=dotted];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_198  [key=2, style=dotted];
m8_194 -> m8_196  [key=1, style=dashed, color=darkseagreen4, label=keltnerChannels];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_39  [key=2, style=dotted];
m8_196 -> m8_197  [key=0, style=solid];
m8_197 -> m8_192  [key=0, style=bold, color=blue];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_209  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.Stochastic STO"];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_209  [key=2, style=dotted];
m8_218 -> m8_216  [key=0, style=bold, color=blue];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_312  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_310 -> m8_313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_11  [key=2, style=dotted];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_316  [key=2, style=dotted];
m8_312 -> m8_314  [key=1, style=dashed, color=darkseagreen4, label=mad];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_13  [key=2, style=dotted];
m8_314 -> m8_315  [key=0, style=solid];
m8_315 -> m8_310  [key=0, style=bold, color=blue];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_333  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_331 -> m8_334  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_29  [key=2, style=dotted];
m8_332 -> m8_11  [key=2, style=dotted];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_337  [key=2, style=dotted];
m8_333 -> m8_335  [key=1, style=dashed, color=darkseagreen4, label=t3];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_13  [key=2, style=dotted];
m8_335 -> m8_336  [key=0, style=solid];
m8_336 -> m8_331  [key=0, style=bold, color=blue];
m8_268 -> m8_269  [key=0, style=solid];
m8_268 -> m8_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_268 -> m8_270  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.TrueRange TR"];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_11  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_39  [key=2, style=dotted];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_274  [key=2, style=dotted];
m8_270 -> m8_272  [key=1, style=dashed, color=darkseagreen4, label=tr];
m8_272 -> m8_273  [key=0, style=solid];
m8_273 -> m8_268  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_0 -> m8_5  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.Identity Identity"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [key=2, style=dotted];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_115 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_11  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_121  [key=2, style=dotted];
m8_117 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label=rsi];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_13  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_115  [key=0, style=bold, color=blue];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_201  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_199 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_199 -> m8_206  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar> selector"];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_11  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_205  [key=2, style=dotted];
m8_201 -> m8_203  [key=1, style=dashed, color=darkseagreen4, label=donchianChannel];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_39  [key=2, style=dotted];
m8_203 -> m8_204  [key=0, style=solid];
m8_204 -> m8_199  [key=0, style=bold, color=blue];
m8_282 -> m8_283  [key=0, style=solid];
m8_282 -> m8_284  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_282 -> m8_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_11  [key=2, style=dotted];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_288  [key=2, style=dotted];
m8_284 -> m8_286  [key=1, style=dashed, color=darkseagreen4, label=dema];
m8_285 -> m8_286  [key=0, style=solid];
m8_285 -> m8_13  [key=2, style=dotted];
m8_286 -> m8_287  [key=0, style=solid];
m8_287 -> m8_282  [key=0, style=bold, color=blue];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_145  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_143 -> m8_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_29  [key=2, style=dotted];
m8_144 -> m8_11  [key=2, style=dotted];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_149  [key=2, style=dotted];
m8_145 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label=bb];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_13  [key=2, style=dotted];
m8_147 -> m8_148  [key=0, style=solid];
m8_148 -> m8_143  [key=0, style=bold, color=blue];
m8_390 -> m8_391  [key=0, style=solid];
m8_391 -> m8_392  [key=0, style=solid];
m8_391 -> m8_21  [key=2, style=dotted];
m8_391 -> m8_387  [key=2, style=dotted];
m8_392 -> m8_390  [key=0, style=bold, color=blue];
m8_21 -> m8_420  [key=0, style=solid];
m8_21 -> m8_421  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_424  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_425  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_21 -> m8_427  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_429  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_431  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_432  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m8_21 -> m8_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan? timeSpan"];
m8_21 -> m8_364  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan? timeSpan"];
m8_21 -> m8_390  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan? timeSpan"];
m8_21 -> m8_73  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_21 -> m8_412  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan? timeSpan"];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_4  [key=2, style=dotted];
m8_420 -> m8_422  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_420 -> m8_424  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_420 -> m8_425  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_420 -> m8_426  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_420 -> m8_428  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_420 -> m8_430  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_421 -> m8_422  [key=0, style=solid];
m8_421 -> m8_424  [key=0, style=solid];
m8_421 -> m8_419  [key=2, style=dotted];
m8_424 -> m8_425  [key=0, style=solid];
m8_424 -> m8_426  [key=0, style=solid];
m8_424 -> m8_419  [key=2, style=dotted];
m8_425 -> m8_433  [key=0, style=solid];
m8_425 -> m8_400  [key=2, style=dotted];
m8_425 -> m8_29  [key=2, style=dotted];
m8_427 -> m8_433  [key=0, style=solid];
m8_427 -> m8_434  [key=2, style=dotted];
m8_429 -> m8_433  [key=0, style=solid];
m8_429 -> m8_435  [key=2, style=dotted];
m8_431 -> m8_433  [key=0, style=solid];
m8_431 -> m8_436  [key=2, style=dotted];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_437  [key=2, style=dotted];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_417  [key=2, style=dotted];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_428  [key=0, style=solid];
m8_426 -> m8_72  [key=2, style=dotted];
m8_428 -> m8_429  [key=0, style=solid];
m8_428 -> m8_430  [key=0, style=solid];
m8_428 -> m8_72  [key=2, style=dotted];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_432  [key=0, style=solid];
m8_430 -> m8_72  [key=2, style=dotted];
m8_423 -> m8_433  [key=0, style=solid];
m8_423 -> m8_418  [key=2, style=dotted];
m8_433 -> m8_21  [key=0, style=bold, color=blue];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_122 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_11  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_128  [key=2, style=dotted];
m8_124 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label=cci];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_39  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_122  [key=0, style=bold, color=blue];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_164 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_11  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_170  [key=2, style=dotted];
m8_166 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label=williamspercentr];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_39  [key=2, style=dotted];
m8_168 -> m8_169  [key=0, style=solid];
m8_169 -> m8_164  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_40 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_11  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_46  [key=2, style=dotted];
m8_42 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=ema];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_13  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_40  [key=0, style=bold, color=blue];
m8_447 -> m8_448  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_76 -> m8_74  [key=0, style=bold, color=blue];
m8_89 -> m8_90  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_90 -> m8_88  [key=0, style=bold, color=blue];
m8_362 -> m8_363  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_363 -> m8_361  [key=0, style=bold, color=blue];
m8_368 -> m8_369  [key=0, style=solid];
m8_367 -> m8_368  [key=0, style=solid];
m8_369 -> m8_367  [key=0, style=bold, color=blue];
m8_380 -> m8_381  [key=0, style=solid];
m8_380 -> m8_383  [key=2, style=dotted];
m8_380 -> m8_384  [key=2, style=dotted];
m8_376 -> m8_377  [key=0, style=solid];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_382  [key=2, style=dotted];
m8_375 -> m8_376  [key=0, style=solid];
m8_377 -> m8_375  [key=0, style=bold, color=blue];
m8_378 -> m8_379  [key=0, style=solid];
m8_378 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_381 -> m8_378  [key=0, style=bold, color=blue];
m8_406 -> m8_407  [key=0, style=solid];
m8_406 -> m8_384  [key=2, style=dotted];
m8_402 -> m8_403  [key=0, style=solid];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_382  [key=2, style=dotted];
m8_401 -> m8_402  [key=0, style=solid];
m8_403 -> m8_401  [key=0, style=bold, color=blue];
m8_404 -> m8_405  [key=0, style=solid];
m8_407 -> m8_404  [key=0, style=bold, color=blue];
m8_448 -> m8_449  [key=0, style=solid];
m8_449 -> m8_447  [key=0, style=bold, color=blue];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_254 -> m8_256  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.AccumulationDistribution AD"];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_11  [key=2, style=dotted];
m8_257 -> m8_258  [key=0, style=solid];
m8_257 -> m8_39  [key=2, style=dotted];
m8_256 -> m8_257  [key=0, style=solid];
m8_256 -> m8_260  [key=2, style=dotted];
m8_256 -> m8_258  [key=1, style=dashed, color=darkseagreen4, label=ad];
m8_258 -> m8_259  [key=0, style=solid];
m8_259 -> m8_254  [key=0, style=bold, color=blue];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_298  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_296 -> m8_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_11  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_302  [key=2, style=dotted];
m8_298 -> m8_300  [key=1, style=dashed, color=darkseagreen4, label=trima];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_13  [key=2, style=dotted];
m8_300 -> m8_301  [key=0, style=solid];
m8_301 -> m8_296  [key=0, style=bold, color=blue];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_209 -> m8_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_209 -> m8_216  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_209 -> m8_217  [key=3, color=darkorchid, style=bold, label="Parameter variable int dPeriod"];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_11  [key=2, style=dotted];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_215  [key=2, style=dotted];
m8_211 -> m8_213  [key=1, style=dashed, color=darkseagreen4, label=stoch];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_31  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_214 -> m8_209  [key=0, style=bold, color=blue];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_54 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_29  [key=2, style=dotted];
m8_55 -> m8_11  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_60  [key=2, style=dotted];
m8_56 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=macd];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_13  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_59 -> m8_54  [key=0, style=bold, color=blue];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_171 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_11  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_177  [key=2, style=dotted];
m8_173 -> m8_175  [key=1, style=dashed, color=darkseagreen4, label=lwma];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_13  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_176 -> m8_171  [key=0, style=bold, color=blue];
m8_364 -> m8_365  [key=0, style=solid];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_21  [key=2, style=dotted];
m8_365 -> m8_22  [key=2, style=dotted];
m8_365 -> m8_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_366 -> m8_364  [key=0, style=bold, color=blue];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_77 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_77 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_77 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_77 -> m8_83  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_11  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_87  [key=2, style=dotted];
m8_79 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=min];
m8_79 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label=min];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_84  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_4  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_73  [key=2, style=dotted];
m8_84 -> m8_22  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_84  [key=0, style=solid];
m8_82 -> m8_72  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_86 -> m8_77  [key=0, style=bold, color=blue];
m8_4 -> m8_438  [key=0, style=solid];
m8_4 -> m8_439  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_4 -> m8_448  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_4 -> m8_441  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_4 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_4 -> m8_61  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_4 -> m8_77  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_4 -> m8_73  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_4 -> m8_21  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_4 -> m8_11  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m8_438 -> m8_439  [key=0, style=solid];
m8_439 -> m8_440  [key=0, style=solid];
m8_439 -> m8_442  [key=0, style=solid];
m8_439 -> m8_444  [key=2, style=dotted];
m8_439 -> m8_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_441 -> m8_443  [key=0, style=solid];
m8_441 -> n16  [key=2, style=dotted];
m8_441 -> m8_446  [key=2, style=dotted];
m8_440 -> m8_441  [key=0, style=solid];
m8_442 -> m8_443  [key=0, style=solid];
m8_443 -> m8_4  [key=0, style=bold, color=blue];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_199  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.DonchianChannel DCH"];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_199  [key=2, style=dotted];
m8_208 -> m8_206  [key=0, style=bold, color=blue];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_277  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_275 -> m8_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_11  [key=2, style=dotted];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_281  [key=2, style=dotted];
m8_277 -> m8_279  [key=1, style=dashed, color=darkseagreen4, label=cmo];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_13  [key=2, style=dotted];
m8_279 -> m8_280  [key=0, style=solid];
m8_280 -> m8_275  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_14 -> m8_16  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.Identity Identity"];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_20  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_21  [key=2, style=dotted];
m8_17 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_12  [key=2, style=dotted];
m8_16 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=identity];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_14  [key=0, style=bold, color=blue];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_187  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_185 -> m8_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_11  [key=2, style=dotted];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_191  [key=2, style=dotted];
m8_187 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label=averageDirectionalIndex];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_39  [key=2, style=dotted];
m8_189 -> m8_190  [key=0, style=solid];
m8_190 -> m8_185  [key=0, style=bold, color=blue];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_228  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_226 -> m8_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_11  [key=2, style=dotted];
m8_228 -> m8_229  [key=0, style=solid];
m8_228 -> m8_232  [key=2, style=dotted];
m8_228 -> m8_230  [key=1, style=dashed, color=darkseagreen4, label=lsma];
m8_229 -> m8_230  [key=0, style=solid];
m8_229 -> m8_13  [key=2, style=dotted];
m8_230 -> m8_231  [key=0, style=solid];
m8_231 -> m8_226  [key=0, style=bold, color=blue];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_291  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_289 -> m8_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_11  [key=2, style=dotted];
m8_291 -> m8_292  [key=0, style=solid];
m8_291 -> m8_295  [key=2, style=dotted];
m8_291 -> m8_293  [key=1, style=dashed, color=darkseagreen4, label=tema];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_13  [key=2, style=dotted];
m8_293 -> m8_294  [key=0, style=solid];
m8_294 -> m8_289  [key=0, style=bold, color=blue];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_240 -> m8_242  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.BalanceOfPower BOP"];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_11  [key=2, style=dotted];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_39  [key=2, style=dotted];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_246  [key=2, style=dotted];
m8_242 -> m8_244  [key=1, style=dashed, color=darkseagreen4, label=bop];
m8_244 -> m8_245  [key=0, style=solid];
m8_245 -> m8_240  [key=0, style=bold, color=blue];
m8_317 -> m8_318  [key=0, style=solid];
m8_317 -> m8_319  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_317 -> m8_320  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_29  [key=2, style=dotted];
m8_318 -> m8_11  [key=2, style=dotted];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_323  [key=2, style=dotted];
m8_319 -> m8_321  [key=1, style=dashed, color=darkseagreen4, label=momersion];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_13  [key=2, style=dotted];
m8_321 -> m8_322  [key=0, style=solid];
m8_322 -> m8_317  [key=0, style=bold, color=blue];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_47 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_11  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=2, style=dotted];
m8_49 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label=sma];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_13  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_47  [key=0, style=bold, color=blue];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_354  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_352 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_353 -> m8_354  [key=0, style=solid];
m8_353 -> m8_11  [key=2, style=dotted];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_358  [key=2, style=dotted];
m8_354 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label=adxr];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_39  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_357 -> m8_352  [key=0, style=bold, color=blue];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_94 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_94 -> m8_91  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar> selector"];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_29  [key=2, style=dotted];
m8_95 -> m8_11  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_100  [key=2, style=dotted];
m8_96 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=aroon];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_39  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_94  [key=0, style=bold, color=blue];
m8_31 -> m8_385  [key=0, style=solid];
m8_31 -> m8_23  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_31 -> m8_209  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_31 -> m8_219  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_31 -> m8_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_31 -> m8_211  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_31 -> m8_221  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_73  [key=2, style=dotted];
m8_385 -> m8_387  [key=2, style=dotted];
m8_386 -> m8_31  [key=0, style=bold, color=blue];
m8_11 -> m8_450  [key=0, style=solid];
m8_11 -> m8_451  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_11 -> m8_453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m8_11 -> m8_467  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_11 -> m8_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_23  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_32  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_40  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_47  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_54  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_61  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_77  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_94  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_101  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_108  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_115  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_122  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_129  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_136  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_143  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_150  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_157  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_164  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_171  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_178  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_185  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_192  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_199  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_209  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_219  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_226  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_233  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_240  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_247  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_254  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_261  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_268  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_275  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_282  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_289  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_296  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_303  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_310  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_317  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_324  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_331  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_338  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_345  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_352  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_11 -> m8_179  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_186  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_193  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_200  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_210  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_220  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_241  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_255  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_269  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_11 -> m8_346  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m8_450 -> m8_451  [key=0, style=solid];
m8_450 -> m8_452  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_451 -> m8_4  [key=2, style=dotted];
m8_451 -> m8_453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_456  [key=0, style=solid];
m8_453 -> m8_458  [key=0, style=solid];
m8_453 -> m8_460  [key=0, style=solid];
m8_453 -> m8_462  [key=0, style=solid];
m8_453 -> m8_464  [key=0, style=solid];
m8_453 -> m8_466  [key=0, style=solid];
m8_467 -> m8_468  [key=0, style=solid];
m8_467 -> m8_446  [key=2, style=dotted];
m8_467 -> m8_20  [key=2, style=dotted];
m8_452 -> m8_453  [key=0, style=solid];
m8_454 -> m8_455  [key=0, style=solid];
m8_456 -> m8_457  [key=0, style=solid];
m8_458 -> m8_459  [key=0, style=solid];
m8_460 -> m8_461  [key=0, style=solid];
m8_462 -> m8_463  [key=0, style=solid];
m8_464 -> m8_465  [key=0, style=solid];
m8_466 -> m8_468  [key=0, style=solid];
m8_466 -> m8_469  [key=2, style=dotted];
m8_455 -> m8_467  [key=0, style=solid];
m8_457 -> m8_467  [key=0, style=solid];
m8_459 -> m8_467  [key=0, style=solid];
m8_461 -> m8_467  [key=0, style=solid];
m8_463 -> m8_467  [key=0, style=solid];
m8_465 -> m8_467  [key=0, style=solid];
m8_468 -> m8_11  [key=0, style=bold, color=blue];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_101 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_11  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_107  [key=2, style=dotted];
m8_103 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label=momentum];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_13  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_106 -> m8_101  [key=0, style=bold, color=blue];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_136 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_11  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_142  [key=2, style=dotted];
m8_138 -> m8_140  [key=1, style=dashed, color=darkseagreen4, label=std];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_13  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_141 -> m8_136  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_32 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_11  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_38  [key=2, style=dotted];
m8_34 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=atr];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_39  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_32  [key=0, style=bold, color=blue];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_108 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_11  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_114  [key=2, style=dotted];
m8_110 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label=momentum];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_13  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_113 -> m8_108  [key=0, style=bold, color=blue];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_235  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m8_233 -> m8_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_20  [key=2, style=dotted];
m8_234 -> m8_11  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_239  [key=2, style=dotted];
m8_235 -> m8_237  [key=1, style=dashed, color=darkseagreen4, label=psar];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_39  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid];
m8_238 -> m8_233  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_61 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_61 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_61 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_61 -> m8_67  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_11  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_71  [key=2, style=dotted];
m8_63 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label=max];
m8_63 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=max];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_68  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_4  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_73  [key=2, style=dotted];
m8_68 -> m8_22  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_68  [key=0, style=solid];
m8_66 -> m8_72  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_70 -> m8_61  [key=0, style=bold, color=blue];
m8_13 -> m8_359  [key=0, style=solid];
m8_13 -> m8_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_47  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_54  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_101  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_136  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_143  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_150  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_157  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_171  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_226  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_247  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_275  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_282  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_289  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_296  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_303  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_310  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_317  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_324  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_331  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector"];
m8_13 -> m8_7  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_42  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_49  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_56  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_103  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_110  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_117  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_138  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_145  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_152  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_159  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_173  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_228  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_249  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_277  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_284  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_291  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_298  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_305  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_312  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_319  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_326  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_13 -> m8_333  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator"];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_73  [key=2, style=dotted];
m8_359 -> m8_22  [key=2, style=dotted];
m8_359 -> m8_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_360 -> m8_13  [key=0, style=bold, color=blue];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_326  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_324 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_11  [key=2, style=dotted];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_330  [key=2, style=dotted];
m8_326 -> m8_328  [key=1, style=dashed, color=darkseagreen4, label=sum];
m8_327 -> m8_328  [key=0, style=solid];
m8_327 -> m8_13  [key=2, style=dotted];
m8_328 -> m8_329  [key=0, style=solid];
m8_329 -> m8_324  [key=0, style=bold, color=blue];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_221  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_219 -> m8_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_11  [key=2, style=dotted];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_225  [key=2, style=dotted];
m8_221 -> m8_223  [key=1, style=dashed, color=darkseagreen4, label=logr];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_31  [key=2, style=dotted];
m8_223 -> m8_224  [key=0, style=solid];
m8_224 -> m8_219  [key=0, style=bold, color=blue];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_305  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_303 -> m8_306  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_11  [key=2, style=dotted];
m8_305 -> m8_306  [key=0, style=solid];
m8_305 -> m8_309  [key=2, style=dotted];
m8_305 -> m8_307  [key=1, style=dashed, color=darkseagreen4, label=rocr];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_13  [key=2, style=dotted];
m8_307 -> m8_308  [key=0, style=solid];
m8_308 -> m8_303  [key=0, style=bold, color=blue];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_263  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_261 -> m8_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_29  [key=2, style=dotted];
m8_262 -> m8_11  [key=2, style=dotted];
m8_263 -> m8_264  [key=0, style=solid];
m8_263 -> m8_267  [key=2, style=dotted];
m8_263 -> m8_265  [key=1, style=dashed, color=darkseagreen4, label=adOsc];
m8_264 -> m8_265  [key=0, style=solid];
m8_264 -> m8_39  [key=2, style=dotted];
m8_265 -> m8_266  [key=0, style=solid];
m8_266 -> m8_261  [key=0, style=bold, color=blue];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_129 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_11  [key=2, style=dotted];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_135  [key=2, style=dotted];
m8_131 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label=mfi];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_39  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_134 -> m8_129  [key=0, style=bold, color=blue];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_23 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_29  [key=2, style=dotted];
m8_24 -> m8_11  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_30  [key=2, style=dotted];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=ichimoku];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_31  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_23  [key=0, style=bold, color=blue];
m8_345 -> m8_346  [key=0, style=solid];
m8_345 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_345 -> m8_347  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.HeikinAshi HeikinAshi"];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_11  [key=2, style=dotted];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_39  [key=2, style=dotted];
m8_347 -> m8_348  [key=0, style=solid];
m8_347 -> m8_351  [key=2, style=dotted];
m8_347 -> m8_349  [key=1, style=dashed, color=darkseagreen4, label=ha];
m8_349 -> m8_350  [key=0, style=solid];
m8_350 -> m8_345  [key=0, style=bold, color=blue];
m8_387 -> m8_393  [key=0, style=solid];
m8_387 -> m8_394  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_387 -> m8_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m8_387 -> m8_397  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_387 -> m8_398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m8_387 -> m8_406  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m8_387 -> m8_31  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_387 -> m8_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_387 -> m8_390  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_387 -> m8_73  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator"];
m8_387 -> m8_21  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator"];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_393  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, T>"];
m8_393 -> m8_402  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_393 -> m8_398  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, T>"];
m8_393 -> m8_405  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, T>"];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_374  [key=2, style=dotted];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_398  [key=0, style=solid];
m8_396 -> m8_72  [key=2, style=dotted];
m8_397 -> m8_399  [key=0, style=solid];
m8_397 -> m8_400  [key=2, style=dotted];
m8_397 -> m8_20  [key=2, style=dotted];
m8_398 -> m8_399  [key=0, style=solid];
m8_398 -> m8_405  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_397  [key=1, style=dashed, color=darkseagreen4, label=type];
m8_399 -> m8_387  [key=0, style=bold, color=blue];
m8_39 -> m8_388  [key=0, style=solid];
m8_39 -> m8_32  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_94  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_129  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_164  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_178  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_185  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_192  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_199  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_233  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_240  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_254  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_261  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_268  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_338  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_345  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_352  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector"];
m8_39 -> m8_34  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_96  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_124  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_131  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_166  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_180  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_187  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_194  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_201  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_235  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_242  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_256  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_263  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_270  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_340  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_347  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_39 -> m8_354  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator"];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_73  [key=2, style=dotted];
m8_388 -> m8_387  [key=2, style=dotted];
m8_389 -> m8_39  [key=0, style=bold, color=blue];
m8_73 -> m8_408  [key=0, style=solid];
m8_73 -> m8_409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m8_73 -> m8_412  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m8_73 -> m8_414  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_73 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m8_73 -> m8_61  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_73 -> m8_77  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_73 -> m8_13  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_73 -> m8_31  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_73 -> m8_39  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution? resolution"];
m8_73 -> m8_21  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.Consolidators.IDataConsolidator ResolveConsolidator"];
m8_408 -> m8_409  [key=0, style=solid];
m8_408 -> m8_4  [key=2, style=dotted];
m8_408 -> m8_410  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_408 -> m8_413  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_408 -> m8_414  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m8_409 -> m8_410  [key=0, style=solid];
m8_409 -> m8_412  [key=0, style=solid];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_419  [key=2, style=dotted];
m8_412 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label=timeSpan];
m8_414 -> m8_416  [key=0, style=solid];
m8_414 -> m8_400  [key=2, style=dotted];
m8_414 -> m8_20  [key=2, style=dotted];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_21  [key=2, style=dotted];
m8_410 -> m8_411  [key=0, style=solid];
m8_410 -> m8_417  [key=2, style=dotted];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_415  [key=0, style=solid];
m8_413 -> m8_419  [key=2, style=dotted];
m8_411 -> m8_416  [key=0, style=solid];
m8_411 -> m8_418  [key=2, style=dotted];
m8_416 -> m8_73  [key=0, style=bold, color=blue];
m8_470 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_290  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_297  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_306  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_320  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_334  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_346  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_353  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_365  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_371  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_385  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_394  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_408  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_420  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_439  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_470 -> m8_451  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m8_471 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, decimal>"];
m8_472 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m8_473 -> m8_405  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.BaseData, T>"];
m8_474 -> m8_406  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m8_475 -> m8_448  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
}
