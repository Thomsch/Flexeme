digraph  {
m1_0 [cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="BindingActionStrategy.cs", label="Entry Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m1_1 [cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="BindingActionStrategy.cs", label="Exit Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m7_19 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", span="126-126"];
m7_21 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", color=green, community=0, file="BindingConfiguration.cs", label="0: return this.Condition == null || this.Condition(request);", span="129-129"];
m7_20 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", file="BindingConfiguration.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="128-128"];
m7_22 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", file="BindingConfiguration.cs", label="Exit Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", span="126-126"];
m7_8 [cluster="System.Collections.Generic.List<T>.List()", file="BindingConfiguration.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_14 [cluster="System.Func<T, TResult>.Invoke(T)", file="BindingConfiguration.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_15 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", span="115-115"];
m7_17 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="return this.ScopeCallback(context);", span="118-118"];
m7_16 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="117-117"];
m7_18 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Exit Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", span="115-115"];
m7_7 [cluster="Ninject.Planning.Bindings.BindingMetadata.BindingMetadata()", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Bindings.BindingMetadata.BindingMetadata()", span="21-21"];
m7_9 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", span="104-104"];
m7_11 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="return this.ProviderCallback(context);", span="107-107"];
m7_10 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="106-106"];
m7_12 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", file="BindingConfiguration.cs", label="Exit Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", span="104-104"];
m7_0 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", span="37-37"];
m7_1 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="this.Metadata = new BindingMetadata()", span="39-39"];
m7_2 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="this.Parameters = new List<IParameter>()", span="40-40"];
m7_3 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="this.ActivationActions = new List<Action<IContext, object>>()", span="41-41"];
m7_4 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="this.DeactivationActions = new List<Action<IContext, object>>()", span="42-42"];
m7_5 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="this.ScopeCallback = StandardScopeCallbacks.Transient", span="43-43"];
m7_6 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="BindingConfiguration.cs", label="Exit Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", span="37-37"];
m7_13 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="BindingConfiguration.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m7_23 [file="BindingConfiguration.cs", label="Ninject.Planning.Bindings.BindingConfiguration", span=""];
m12_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CachePruningTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_0 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="CachePruningTests.cs", label="Entry Ninject.NinjectSettings.Get<T>(string, T)", span="133-133"];
m12_1 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", color=green, community=0, file="CachePruningTests.cs", label="0: return _values.ContainsKey(key) ? (T)_values[key] : defaultValue;", span="135-135"];
m12_2 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="CachePruningTests.cs", label="Exit Ninject.NinjectSettings.Get<T>(string, T)", span="133-133"];
m12_4 [cluster="Ninject.NinjectSettings.Set(string, object)", file="CachePruningTests.cs", label="Entry Ninject.NinjectSettings.Set(string, object)", span="143-143"];
m12_5 [cluster="Ninject.NinjectSettings.Set(string, object)", file="CachePruningTests.cs", label="_values[key] = value", span="145-145"];
m12_6 [cluster="Ninject.NinjectSettings.Set(string, object)", file="CachePruningTests.cs", label="Exit Ninject.NinjectSettings.Set(string, object)", span="143-143"];
m12_7 [file="CachePruningTests.cs", label="Ninject.NinjectSettings", span=""];
m14_48 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.Get(System.Type)", span="151-151"];
m14_56 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="return Kernel;", span="156-156"];
m14_58 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="return Kernel;", span="158-158"];
m14_63 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="return GetAll(argument).CastSlow(argument);", span="172-172"];
m14_64 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Type implementation = _mappings[component].FirstOrDefault()", span="175-175"];
m14_67 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="return ResolveInstance(component, implementation);", span="180-180"];
m14_55 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="component == typeof(IReadonlyKernel)", span="155-155"];
m14_57 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="component == typeof(IKernelConfiguration)", span="157-157"];
m14_61 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Type argument = component.GetGenericArguments()[0]", span="163-163"];
m14_62 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="gtd.IsInterface && typeof (IEnumerable<>).IsAssignableFrom(gtd)", span="171-171"];
m14_59 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="component.IsGenericType", span="160-160"];
m14_65 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="implementation == null", span="177-177"];
m14_66 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="throw new InvalidOperationException(ExceptionFormatter.NoSuchComponentRegistered(component));", span="178-178"];
m14_54 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Ensure.ArgumentNotNull(component, ''component'')", span="153-153"];
m14_60 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Type gtd = component.GetGenericTypeDefinition()", span="162-162"];
m14_68 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.Get(System.Type)", span="151-151"];
m14_12 [cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58"];
m14_13 [cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ComponentContainer.cs", label="_mappings.Add(typeof(TComponent), typeof(TImplementation))", span="62-62"];
m14_14 [cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58"];
m14_52 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.GetAll(System.Type)", span="188-188"];
m14_78 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ComponentContainer.cs", label="return _mappings[component]\r\n                .Select(implementation => ResolveInstance(component, implementation));", span="192-193"];
m14_77 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ComponentContainer.cs", label="Ensure.ArgumentNotNull(component, ''component'')", span="190-190"];
m14_79 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.GetAll(System.Type)", span="188-188"];
m14_15 [cluster="Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", span="64-64"];
m14_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_26 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", span="93-93"];
m14_31 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", color=green, community=0, file="ComponentContainer.cs", label="0: _mappings[typeof(T)].Remove(typeof(TImplementation))", span="103-103"];
m14_30 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="_instances.Remove(implementation)", span="101-101"];
m14_28 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="_instances.ContainsKey(implementation)", span="98-98"];
m14_29 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="_instances[implementation].Dispose()", span="99-99"];
m14_27 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="var implementation = typeof(TImplementation)", span="97-97"];
m14_32 [cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", span="93-93"];
m14_87 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="202-202"];
m14_88 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", color=green, community=0, file="ComponentContainer.cs", label="0: ConstructorInfo constructor = SelectConstructor(component, implementation)", span="204-204"];
m14_89 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="var arguments = constructor.GetParameters().Select(parameter => Get(parameter.ParameterType)).ToArray()", span="205-205"];
m14_90 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="var instance = constructor.Invoke(arguments) as INinjectComponent", span="209-209"];
m14_91 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="instance.Settings = Kernel.Settings", span="210-210"];
m14_92 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="!this.transients.Contains(new KeyValuePair<Type, Type>(component, implementation))", span="212-212"];
m14_93 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="_instances.Add(implementation, instance)", span="214-214"];
m14_97 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="return null;", span="222-222"];
m14_94 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="return instance;", span="217-217"];
m14_96 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="ex.RethrowInnerException()", span="221-221"];
m14_95 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label=TargetInvocationException, span="219-219"];
m14_98 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="202-202"];
m14_114 [cluster="System.Type.GetConstructors()", file="ComponentContainer.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m14_53 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ComponentContainer.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m14_71 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ComponentContainer.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m14_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="ComponentContainer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m14_20 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m14_0 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.Dispose(bool)", span="39-39"];
m14_1 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="disposing && !IsDisposed", span="41-41"];
m14_2 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="_instances.Values", span="43-43"];
m14_4 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="_mappings.Clear()", span="46-46"];
m14_5 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="_instances.Clear()", span="47-47"];
m14_6 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="base.Dispose(disposing)", span="50-50"];
m14_3 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="instance.Dispose()", span="44-44"];
m14_7 [cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.Dispose(bool)", span="39-39"];
m14_33 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_75 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="258-258"];
m14_73 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ComponentContainer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m14_16 [cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70"];
m14_17 [cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ComponentContainer.cs", label="this.Add<TComponent, TImplementation>()", span="74-74"];
m14_18 [cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ComponentContainer.cs", label="this.transients.Add(new KeyValuePair<Type, Type>(typeof(TComponent), typeof(TImplementation)))", span="75-75"];
m14_19 [cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70"];
m14_99 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="226-226"];
m14_110 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", color=green, community=0, file="ComponentContainer.cs", label="0: constructor == null", span="230-230"];
m14_109 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ComponentContainer.cs", label="var constructor = implementation.GetConstructors().OrderByDescending(c => c.GetParameters().Length).FirstOrDefault()", span="228-228"];
m14_111 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ComponentContainer.cs", label="throw new InvalidOperationException(ExceptionFormatter.NoConstructorsAvailableForComponent(component, implementation));", span="231-231"];
m14_112 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ComponentContainer.cs", label="return constructor;", span="233-233"];
m14_113 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="226-226"];
m14_72 [cluster="System.Collections.IEnumerable.CastSlow(System.Type)", file="ComponentContainer.cs", label="Entry System.Collections.IEnumerable.CastSlow(System.Type)", span="19-19"];
m14_101 [cluster="Unk.ToArray", file="ComponentContainer.cs", label="Entry Unk.ToArray", span=""];
m14_74 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ComponentContainer.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m14_43 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m14_11 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m14_102 [cluster="Unk.Invoke", file="ComponentContainer.cs", label="Entry Unk.Invoke", span=""];
m14_116 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="238-238"];
m14_49 [cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="140-140"];
m14_50 [cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ComponentContainer.cs", label="return GetAll(typeof(T)).Cast<T>();", span="143-143"];
m14_51 [cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.GetAll<T>()", span="140-140"];
m14_70 [cluster="System.Type.GetGenericArguments()", file="ComponentContainer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m14_9 [cluster="Ninject.Infrastructure.Multimap<K, V>.Clear()", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Clear()", span="103-103"];
m14_81 [cluster="lambda expression", file="ComponentContainer.cs", label="Entry lambda expression", span="193-193"];
m14_82 [cluster="lambda expression", file="ComponentContainer.cs", label="ResolveInstance(component, implementation)", span="193-193"];
m14_107 [cluster="lambda expression", file="ComponentContainer.cs", label="Get(parameter.ParameterType)", span="205-205"];
m14_106 [cluster="lambda expression", file="ComponentContainer.cs", label="Entry lambda expression", span="205-205"];
m14_117 [cluster="lambda expression", file="ComponentContainer.cs", label="Entry lambda expression", span="228-228"];
m14_83 [cluster="lambda expression", file="ComponentContainer.cs", label="Exit lambda expression", span="193-193"];
m14_108 [cluster="lambda expression", file="ComponentContainer.cs", label="Exit lambda expression", span="205-205"];
m14_118 [cluster="lambda expression", file="ComponentContainer.cs", label="c.GetParameters().Length", span="228-228"];
m14_119 [cluster="lambda expression", file="ComponentContainer.cs", label="Exit lambda expression", span="228-228"];
m14_115 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m14_80 [cluster="Unk.Select", file="ComponentContainer.cs", label="Entry Unk.Select", span=""];
m14_44 [cluster="Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", file="ComponentContainer.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", span="94-94"];
m14_35 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m14_22 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82"];
m14_23 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ComponentContainer.cs", label="RemoveAll(typeof(T))", span="85-85"];
m14_24 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82"];
m14_105 [cluster="System.Reflection.TargetInvocationException.RethrowInnerException()", file="ComponentContainer.cs", label="Entry System.Reflection.TargetInvocationException.RethrowInnerException()", span="18-18"];
m14_69 [cluster="System.Type.GetGenericTypeDefinition()", file="ComponentContainer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m14_76 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="196-196"];
m14_84 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ComponentContainer.cs", label=_instances, span="198-198"];
m14_85 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="return _instances.ContainsKey(implementation) ? _instances[implementation] : CreateNewInstance(component, implementation);", span="199-199"];
m14_86 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="196-196"];
m14_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m14_100 [cluster="System.Reflection.MethodBase.GetParameters()", file="ComponentContainer.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m14_25 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109"];
m14_37 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="_mappings[component]", span="113-113"];
m14_38 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="_instances.ContainsKey(implementation)", span="115-115"];
m14_39 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="_instances[implementation].Dispose()", span="116-116"];
m14_40 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="_instances.Remove(implementation)", span="118-118"];
m14_41 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="_mappings.RemoveAll(component)", span="121-121"];
m14_36 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="Ensure.ArgumentNotNull(component, ''component'')", span="111-111"];
m14_42 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109"];
m14_8 [cluster="System.IDisposable.Dispose()", file="ComponentContainer.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m14_45 [cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ComponentContainer.cs", label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="129-129"];
m14_46 [cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ComponentContainer.cs", label="return (T) Get(typeof(T));", span="132-132"];
m14_47 [cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ComponentContainer.cs", label="Exit Ninject.Components.ComponentContainer.Get<T>()", span="129-129"];
m14_103 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m14_21 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="ComponentContainer.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m14_120 [file="ComponentContainer.cs", label="Ninject.Components.ComponentContainer", span=""];
m14_121 [file="ComponentContainer.cs", label="System.Type", span=""];
m16_14 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="20-20"];
m16_93 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="o.RespectingRuntimeTypes()", span="174-174"];
m16_130 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var text = value.Substring(1)", span="111-111"];
m16_131 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="char.IsDigit(text[0])", span="113-113"];
m16_132 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield return Token.Value(value);", span="115-115"];
m16_135 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield return Token.Name(text);", span="121-121"];
m16_133 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield break;", span="116-116"];
m16_134 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="value.Length == 2", span="119-119"];
m16_136 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield break;", span="122-122"];
m16_81 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="0: replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="69-71"];
m16_152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ConditionalBindingTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="256-256"];
m16_149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ConditionalBindingTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="253-253"];
m16_150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ConditionalBindingTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="254-254"];
m16_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="text.Should().NotBeEmpty()", span="43-43"];
m16_57 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="89-89"];
m16_60 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ConditionalBindingTests.cs", label="0: var sut = new Parser(with => with.EnableDashDash = true)", span="106-106"];
m16_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="102-102"];
m16_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var expectedOptions = new AddOptions { Patch = true, FileName = ''--strange-fn'' }", span="105-105"];
m16_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions),\r\n                typeof(CommitOptions),\r\n                typeof(CloneOptions))", span="109-113"];
m16_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="116-116"];
m16_63 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="117-117"];
m16_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
m16_236 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="357-357"];
m16_237 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="360-360"];
m16_238 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="361-361"];
m16_240 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="365-365"];
m16_239 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''commit'', ''--help'' })", span="364-364"];
m16_241 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="368-368"];
m16_242 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="357-357"];
m16_284 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", span="426-426"];
m16_285 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="431-431"];
m16_286 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(arguments)", span="434-434"];
m16_288 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="438-438"];
m16_287 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="437-437"];
m16_289 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.CommitOptions)", span="426-426"];
m16_163 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="onError(new BadFormatTokenError(value))", span="165-165"];
m16_164 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="yield break;", span="166-166"];
m16_165 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="var parts = text.Split('=')", span="168-168"];
m16_167 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="yield return Token.Value(parts[1], true);", span="170-170"];
m16_166 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="yield return Token.Name(parts[0]);", span="169-169"];
m16_168 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="150-150"];
m16_169 [cluster="string.IndexOf(char)", file="ConditionalBindingTests.cs", label="Entry string.IndexOf(char)", span="0-0"];
m16_170 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="ConditionalBindingTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m16_171 [cluster="System.Action<T>.Invoke(T)", file="ConditionalBindingTests.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m16_172 [cluster="string.Split(params char[])", file="ConditionalBindingTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m16_173 [cluster="CommandLine.Core.Token.Value(string, bool)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m16_174 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label=unkTokens, span=""];
m16_175 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label=values, span=""];
m16_176 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m16_177 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label=int, span=""];
m16_178 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label=replaces, span=""];
m16_179 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ConditionalBindingTests.cs", label=int, span=""];
m16_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="ConditionalBindingTests.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="28-35"];
m16_110 [cluster="T.ToMaybe<T>()", file="ConditionalBindingTests.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m16_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="ConditionalBindingTests.cs", label="var errors = new List<Error>()", span="25-25"];
m16_154 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_25 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="36-36"];
m16_111 [cluster="CommandLine.Core.Token.IsValue()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Token.IsValue()", span="133-133"];
m16_118 [cluster="Unk.Equals", file="ConditionalBindingTests.cs", label="Entry Unk.Equals", span=""];
m16_103 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="var expectedError = new HelpRequestedError()", span="197-197"];
m16_95 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=x, span="73-73"];
m16_96 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="73-73"];
m16_97 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m16_99 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJust()", span="94-98"];
m16_98 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", color=green, community=0, file="ConditionalBindingTests.cs", label="0: var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJust()", span="81-92"];
m16_100 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var normalized = tokens.Except(toExclude)", span="100-100"];
m16_85 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ConditionalBindingTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m16_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m16_87 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="69-69"];
m16_90 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="70-70"];
m16_88 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="x.Item1 == i", span="69-69"];
m16_89 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="69-69"];
m16_91 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="70-70"];
m16_84 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="147-147"];
m16_156 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="154-154"];
m16_26 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="with.HelpWriter = writer", span="36-36"];
m16_104 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="var sut = new Parser()", span="198-198"];
m16_155 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m16_22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ConditionalBindingTests.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144"];
m16_153 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="242-242"];
m16_24 [cluster="UnknownOptionError.cstr", file="ConditionalBindingTests.cs", label="Entry UnknownOptionError.cstr", span=""];
m16_23 [cluster="Unk.Should", file="ConditionalBindingTests.cs", label="Entry Unk.Should", span=""];
m16_112 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="204-204"];
m16_3 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<FakeOptionsWithRequired>(new string[] { })", span="23-23"];
m16_12 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="20-20"];
m16_10 [cluster="System.IO.StringWriter.ToString()", file="ConditionalBindingTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m16_11 [cluster="Unk.True", file="ConditionalBindingTests.cs", label="Entry Unk.True", span=""];
m16_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m16_13 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="with.HelpWriter = writer", span="20-20"];
m16_74 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Tuple.Create(i + 1, sep)", span="65-65"];
m16_75 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="65-65"];
m16_76 [cluster="Unk.Create", file="ConditionalBindingTests.cs", label="Entry Unk.Create", span=""];
m16_79 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="66-66"];
m16_77 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="66-66"];
m16_78 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="x.Item1 < 0", span="66-66"];
m16_80 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="68-71"];
m16_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
m16_246 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="373-373"];
m16_247 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="376-376"];
m16_248 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="377-377"];
m16_250 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="382-382"];
m16_249 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<AddOptionsWithUsage, CommitOptionsWithUsage, CloneOptionsWithUsage>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="380-381"];
m16_251 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="385-385"];
m16_252 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="386-386"];
m16_253 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="387-387"];
m16_254 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="388-388"];
m16_255 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="389-389"];
m16_256 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="390-390"];
m16_257 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[5].ShouldBeEquivalentTo(''Cloning quietly:'')", span="391-391"];
m16_258 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[6].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="392-392"];
m16_259 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[7].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="393-393"];
m16_260 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[8].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="394-394"];
m16_261 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[9].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="395-395"];
m16_262 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[10].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="396-396"];
m16_263 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[11].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="397-397"];
m16_264 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[12].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="398-398"];
m16_265 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[13].ShouldBeEquivalentTo(''--version         Display version information.'')", span="399-399"];
m16_266 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="lines[14].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="400-400"];
m16_267 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="373-373"];
m16_4 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="var text = writer.ToString()", span="26-26"];
m16_27 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="41-41"];
m16_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m16_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="ConditionalBindingTests.cs", label="return tokenizer(arguments);", span="54-54"];
m16_38 [cluster="Unk.Any", file="ConditionalBindingTests.cs", label="Entry Unk.Any", span=""];
m16_56 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="52-52"];
m16_55 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="tokens.Concat(values)", span="52-52"];
m16_68 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="63-66"];
m16_70 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="63-66"];
m16_67 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="ConditionalBindingTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m16_69 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="64-66"];
m16_71 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ConditionalBindingTests.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m16_72 [cluster="Unk.Return", file="ConditionalBindingTests.cs", label="Entry Unk.Return", span=""];
m16_82 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="68-71"];
m16_83 [cluster="Unk.FirstOrDefault", file="ConditionalBindingTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m16_92 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="70-70"];
m16_94 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="73-73"];
m16_116 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="88-88"];
m16_115 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="p.IsName() && !nameLookup(p.Text)", span="88-88"];
m16_113 [cluster="CSharpx.Maybe.Nothing<T>()", file="ConditionalBindingTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m16_114 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="88-88"];
m16_117 [cluster="Unk.IsName", file="ConditionalBindingTests.cs", label="Entry Unk.IsName", span=""];
m16_128 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="97-97"];
m16_127 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="t.IsJust()", span="97-97"];
m16_129 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="109-109"];
m16_142 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="!seen.Contains(c) && nameLookup(n)", span="133-133"];
m16_138 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield return Token.Name(first);", span="126-126"];
m16_141 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var n = new string(c, 1)", span="132-132"];
m16_139 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var seen = new List<char> { first[0] }", span="128-128"];
m16_140 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="text.Substring(1)", span="130-130"];
m16_143 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="seen.Add(c)", span="135-135"];
m16_158 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="var equalIndex = text.IndexOf('=')", span="157-157"];
m16_160 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="yield return Token.Name(text);", span="160-160"];
m16_157 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="var text = value.Substring(2)", span="156-156"];
m16_159 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="equalIndex <= 0", span="158-158"];
m16_161 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="yield break;", span="161-161"];
m16_162 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="equalIndex == 1", span="163-163"];
m16_181 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m16_180 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="CommandLine.Core.Token", span=""];
m16_182 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="System.Func<string, bool>", span=""];
m16_198 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.HelpWriter = help", span="291-291"];
m16_197 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="291-291"];
m16_199 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="291-291"];
m16_211 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.HelpWriter = help", span="316-316"];
m16_213 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="325-325"];
m16_210 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="316-316"];
m16_212 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="316-316"];
m16_214 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="x == 1", span="325-325"];
m16_215 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="325-325"];
m16_234 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.HelpWriter = help", span="335-335"];
m16_233 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="335-335"];
m16_235 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="335-335"];
m16_244 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.HelpWriter = help", span="361-361"];
m16_243 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="361-361"];
m16_245 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="361-361"];
m16_269 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.HelpWriter = help", span="377-377"];
m16_268 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="377-377"];
m16_270 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="377-377"];
m16_282 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="opts.ShouldBeEquivalentTo(expected)", span="419-419"];
m16_279 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.IgnoreUnknownArguments = true", span="412-412"];
m16_281 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="419-419"];
m16_278 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="412-412"];
m16_280 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="412-412"];
m16_283 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="419-419"];
m16_294 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="opts.ShouldBeEquivalentTo(expected)", span="438-438"];
m16_291 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="config.IgnoreUnknownArguments = true", span="431-431"];
m16_293 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="438-438"];
m16_290 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="431-431"];
m16_292 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="431-431"];
m16_295 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="438-438"];
m16_105 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="201-201"];
m16_119 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="210-210"];
m16_124 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="221-221"];
m16_107 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="205-205"];
m16_106 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="204-204"];
m16_123 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="218-218"];
m16_126 [cluster="Unk.BeGreaterThan", file="ConditionalBindingTests.cs", label="Entry Unk.BeGreaterThan", span=""];
m16_108 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="194-194"];
m16_121 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="214-214"];
m16_120 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="213-213"];
m16_125 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="210-210"];
m16_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ConditionalBindingTests.cs", label="var result =\r\n                sut.ParseArguments<FakeOptionsWithValues>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="92-94"];
m16_73 [cluster="Unk.RespectingRuntimeTypes", file="ConditionalBindingTests.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m16_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48"];
m16_48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="79-79"];
m16_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m16_53 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="79-79"];
m16_52 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ConditionalBindingTests.cs", label="((Parsed<FakeOptionsWithValues>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="97-97"];
m16_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="var writer = new StringWriter()", span="51-51"];
m16_44 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64"];
m16_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ConditionalBindingTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="89-89"];
m16_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: var expectedOptions = new FakeOptionsWithValues\r\n                                  {\r\n                                      StringValue = ''astring'',\r\n                                      LongValue = 20L,\r\n                                      StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                                      IntValue = 30\r\n                                  }", span="82-88"];
m16_46 [cluster="CommandLine.Parser.Parser()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m16_45 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m16_5 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="Assert.True(text.Length > 0)", span="27-27"];
m16_6 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="16-16"];
m16_101 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="return normalized;", span="102-102"];
m16_144 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield return Token.Name(n);", span="136-136"];
m16_145 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="seen.Count() < text.Length", span="143-143"];
m16_146 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="145-145"];
m16_148 [cluster="string.Substring(int)", file="ConditionalBindingTests.cs", label="Entry string.Substring(int)", span="0-0"];
m16_147 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="105-105"];
m16_151 [cluster="string.Substring(int, int)", file="ConditionalBindingTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m16_122 [cluster="Unk.IsJust", file="ConditionalBindingTests.cs", label="Entry Unk.IsJust", span=""];
m16_16 [cluster="CommandLine.Core.Token.Value(string)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m16_17 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="150-150"];
m16_19 [cluster="Unk.Memorize", file="ConditionalBindingTests.cs", label="Entry Unk.Memorize", span=""];
m16_18 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="105-105"];
m16_47 [cluster="string.EqualsOrdinal(string)", file="ConditionalBindingTests.cs", label="Entry string.EqualsOrdinal(string)", span="40-40"];
m16_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0"];
m16_64 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="102-102"];
m16_65 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m16_200 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="312-312"];
m16_201 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="315-315"];
m16_203 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="319-319"];
m16_202 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="316-316"];
m16_204 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="320-320"];
m16_205 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="323-323"];
m16_206 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="324-324"];
m16_207 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="325-325"];
m16_208 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="326-326"];
m16_209 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="312-312"];
m16_102 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m16_137 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="ConditionalBindingTests.cs", label="var first = text.Substring(0, 1)", span="125-125"];
m16_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ConditionalBindingTests.cs", label="var expectedOptions = new FakeOptions { StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 } }", span="67-67"];
m16_183 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label=indexes, span=""];
m16_184 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="290-290"];
m16_185 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="291-291"];
m16_187 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="295-295"];
m16_186 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''--help'' })", span="294-294"];
m16_188 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="298-298"];
m16_189 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="299-299"];
m16_190 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="300-300"];
m16_191 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="301-301"];
m16_192 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="302-302"];
m16_193 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="303-303"];
m16_194 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="304-304"];
m16_195 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="305-305"];
m16_196 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="287-287"];
m16_216 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="331-331"];
m16_217 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="var help = new StringWriter()", span="334-334"];
m16_218 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="335-335"];
m16_220 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="var result = help.ToString()", span="339-339"];
m16_219 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<FakeOptionsWithTwoRequiredAndSets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="338-338"];
m16_221 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="342-342"];
m16_222 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="343-343"];
m16_223 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="344-344"];
m16_224 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="345-345"];
m16_225 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="346-346"];
m16_226 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="347-347"];
m16_227 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="348-348"];
m16_228 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="349-349"];
m16_229 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[7].ShouldBeEquivalentTo(''-a'')", span="350-350"];
m16_230 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="351-351"];
m16_231 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="352-352"];
m16_232 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="331-331"];
m16_0 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="16-16"];
m16_1 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="var writer = new StringWriter()", span="19-19"];
m16_2 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ConditionalBindingTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="20-20"];
m16_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64"];
m16_277 [cluster="Unk.WithParsed", file="ConditionalBindingTests.cs", label="Entry Unk.WithParsed", span=""];
m16_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ConditionalBindingTests.cs", label="var sut = new Parser()", span="68-68"];
m16_43 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", color=red, community=0, file="ConditionalBindingTests.cs", label="0: Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m16_42 [cluster="Unk.Select", color=red, community=0, file="ConditionalBindingTests.cs", label="0: Entry Unk.Select", span=""];
m16_66 [cluster="Unk.>", file="ConditionalBindingTests.cs", label="Entry Unk.>", span=""];
m16_271 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", span="407-407"];
m16_272 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="412-412"];
m16_273 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="var result = sut.ParseArguments<FakeOptions>(arguments)", span="415-415"];
m16_275 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="419-419"];
m16_274 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="418-418"];
m16_276 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.FakeOptions)", span="407-407"];
m16_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="55-55"];
m16_34 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48"];
m16_33 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="text.Should().NotBeEmpty()", span="59-59"];
m16_35 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ConditionalBindingTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m16_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ConditionalBindingTests.cs", label="var text = writer.ToString()", span="58-58"];
m16_30 [cluster="Unk.Contains", file="ConditionalBindingTests.cs", label="Entry Unk.Contains", span=""];
m16_296 [file="ConditionalBindingTests.cs", label=writer, span=""];
m16_297 [file="ConditionalBindingTests.cs", label=writer, span=""];
m16_298 [file="ConditionalBindingTests.cs", label=writer, span=""];
m16_299 [file="ConditionalBindingTests.cs", label=expectedError, span=""];
m16_300 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_301 [file="ConditionalBindingTests.cs", label=expectedError, span=""];
m16_302 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_303 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_304 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_305 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_306 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_307 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_308 [file="ConditionalBindingTests.cs", label=help, span=""];
m16_309 [file="ConditionalBindingTests.cs", label="CommandLine.Tests.Fakes.FakeOptions", span=""];
m16_310 [file="ConditionalBindingTests.cs", label="CommandLine.Tests.Fakes.CommitOptions", span=""];
m19_49 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="277-277"];
m19_79 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", span="114-114"];
m19_80 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel()", span="116-116"];
m19_81 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="kernel.Components.Add<IActivationStrategy, TestActivationStrategy>()", span="118-118"];
m19_82 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="119-119"];
m19_83 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<Sword>().ToSelf()", span="120-120"];
m19_84 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<IWeapon>().ToMethod(ctx => ctx.Kernel.Get<Sword>())", span="121-121"];
m19_85 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="var testActivationStrategy = kernel.Components.GetAll<IActivationStrategy>().OfType<TestActivationStrategy>().Single()", span="122-122"];
m19_86 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="var warrior = kernel.Get<IWarrior>()", span="124-124"];
m19_87 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="testActivationStrategy.ActivationCount.ShouldBe(2)", span="126-126"];
m19_88 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", span="114-114"];
m19_22 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", span="33-33"];
m19_23 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel()", span="35-35"];
m19_24 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .OnActivation((ctx, instance) =>\r\n                    {\r\n                        instance.Warrior = new FootSoldier();\r\n                        instance.Weapon = new Shuriken();\r\n                    })", span="37-43"];
m19_25 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="var barracks = kernel.Get<Barracks>()", span="45-45"];
m19_26 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldNotBeNull()", span="46-46"];
m19_27 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="47-47"];
m19_28 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldNotBeNull()", span="48-48"];
m19_29 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="49-49"];
m19_30 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", span="33-33"];
m19_15 [cluster="Unk.>", file="DefaultValueBindingResolver.cs", label="Entry Unk.>", span=""];
m19_95 [cluster="Unk.ShouldBe", file="DefaultValueBindingResolver.cs", label="Entry Unk.ShouldBe", span=""];
m19_48 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="165-165"];
m19_10 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m19_89 [cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="31-31"];
m19_91 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="72-72"];
m19_14 [cluster="Unk.ShouldNotBeNull", file="DefaultValueBindingResolver.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m19_115 [cluster="Ninject.Activation.Strategies.ActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Activation.Strategies.ActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="27-27"];
m19_90 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m19_94 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="DefaultValueBindingResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m19_31 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="271-271"];
m19_0 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", span="12-12"];
m19_1 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel()", span="14-14"];
m19_2 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .OnActivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = new FootSoldier();\r\n                                        instance.Weapon = new Shuriken();\r\n                                    })", span="16-22"];
m19_3 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="var barracks = kernel.Get<Barracks>()", span="24-24"];
m19_4 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldNotBeNull()", span="25-25"];
m19_5 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="26-26"];
m19_6 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldNotBeNull()", span="27-27"];
m19_7 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="28-28"];
m19_8 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", span="12-12"];
m19_92 [cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="59-59"];
m19_99 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", span="131-131"];
m19_100 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel(new NinjectSettings { AllowNullInjection = true })", span="133-133"];
m19_101 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="kernel.Components.Add<IActivationStrategy, TestActivationStrategy>()", span="135-135"];
m19_102 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="136-136"];
m19_103 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<IWeapon>().ToConstant(null)", span="137-137"];
m19_104 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="var testActivationStrategy = kernel.Components.GetAll<IActivationStrategy>().OfType<TestActivationStrategy>().Single()", span="138-138"];
m19_105 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="var warrior = kernel.Get<IWarrior>()", span="140-140"];
m19_106 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="testActivationStrategy.ActivationCount.ShouldBe(1)", span="142-142"];
m19_107 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", span="131-131"];
m19_9 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="DefaultValueBindingResolver.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m19_21 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m19_108 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="DefaultValueBindingResolver.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="43-43"];
m19_13 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m19_11 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m19_12 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="266-266"];
m19_93 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="DefaultValueBindingResolver.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m19_96 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="121-121"];
m19_16 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="18-22"];
m19_17 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = new FootSoldier()", span="20-20"];
m19_18 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = new Shuriken()", span="21-21"];
m19_19 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="18-22"];
m19_32 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="39-43"];
m19_33 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = new FootSoldier()", span="41-41"];
m19_34 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = new Shuriken()", span="42-42"];
m19_35 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="39-43"];
m19_51 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="62-66"];
m19_55 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="67-71"];
m19_52 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = new FootSoldier()", span="64-64"];
m19_53 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = new Shuriken()", span="65-65"];
m19_54 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="62-66"];
m19_56 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = null", span="69-69"];
m19_57 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = null", span="70-70"];
m19_58 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="67-71"];
m19_71 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="92-96"];
m19_75 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Entry lambda expression", span="97-101"];
m19_72 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = new FootSoldier()", span="94-94"];
m19_73 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = new Shuriken()", span="95-95"];
m19_74 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="92-96"];
m19_76 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Warrior = null", span="99-99"];
m19_77 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="instance.Weapon = null", span="100-100"];
m19_78 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="97-101"];
m19_97 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="ctx.Kernel.Get<Sword>()", span="121-121"];
m19_98 [cluster="lambda expression", file="DefaultValueBindingResolver.cs", label="Exit lambda expression", span="121-121"];
m19_20 [cluster="Ninject.Tests.Fakes.FootSoldier.FootSoldier()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Fakes.FootSoldier.FootSoldier()", span="2-2"];
m19_36 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", span="54-54"];
m19_37 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="Barracks barracks", span="56-56"];
m19_38 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel()", span="57-57"];
m19_39 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .InSingletonScope()\r\n                    .OnActivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = new FootSoldier();\r\n                                        instance.Weapon = new Shuriken();\r\n                                    })\r\n                    .OnDeactivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = null;\r\n                                        instance.Weapon = null;\r\n                                    })", span="59-71"];
m19_40 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks = kernel.Get<Barracks>()", span="73-73"];
m19_41 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldNotBeNull()", span="74-74"];
m19_42 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="75-75"];
m19_43 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldNotBeNull()", span="76-76"];
m19_44 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="77-77"];
m19_45 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeNull()", span="79-79"];
m19_46 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeNull()", span="80-80"];
m19_47 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", span="54-54"];
m19_110 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="78-78"];
m19_109 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="19-19"];
m19_59 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", span="84-84"];
m19_60 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="Barracks barracks", span="86-86"];
m19_61 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="var kernel = new StandardKernel()", span="87-87"];
m19_62 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .InSingletonScope()\r\n                    .OnActivation((ctx, instance) =>\r\n                    {\r\n                        instance.Warrior = new FootSoldier();\r\n                        instance.Weapon = new Shuriken();\r\n                    })\r\n                    .OnDeactivation(instance =>\r\n                    {\r\n                        instance.Warrior = null;\r\n                        instance.Weapon = null;\r\n                    })", span="89-101"];
m19_63 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks = kernel.Get<Barracks>()", span="103-103"];
m19_64 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldNotBeNull()", span="104-104"];
m19_65 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="105-105"];
m19_66 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldNotBeNull()", span="106-106"];
m19_67 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="107-107"];
m19_68 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Warrior.ShouldBeNull()", span="109-109"];
m19_69 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="barracks.Weapon.ShouldBeNull()", span="110-110"];
m19_70 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", span="84-84"];
m19_50 [cluster="Unk.ShouldBeNull", file="DefaultValueBindingResolver.cs", label="Entry Unk.ShouldBeNull", span=""];
m19_111 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="DefaultValueBindingResolver.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="158-158"];
m19_112 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="DefaultValueBindingResolver.cs", label="this.activationCount++", span="160-160"];
m19_113 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="DefaultValueBindingResolver.cs", label="base.Activate(context, reference)", span="161-161"];
m19_114 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="DefaultValueBindingResolver.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="158-158"];
m19_116 [file="DefaultValueBindingResolver.cs", label="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy", span=""];
m21_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m21_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196"];
m21_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="199-203"];
m21_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="206-206"];
m21_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m21_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m21_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="9-9"];
m21_139 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m21_150 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="9-9"];
m21_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m21_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="617-617"];
m21_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="620-624"];
m21_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="627-627"];
m21_262 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m21_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m21_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="598-598"];
m21_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="601-605"];
m21_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="608-608"];
m21_254 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m21_19 [cluster="Unk.Equal", file="ExtensionsForMemberInfo.cs", label="Entry Unk.Equal", span=""];
m21_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m21_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="var fakeOptions = new FakeOptions()", span="20-20"];
m21_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="21-23"];
m21_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="26-30"];
m21_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.Equals(result))", span="33-33"];
m21_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m21_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m21_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m21_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="297-297"];
m21_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304"];
m21_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307"];
m21_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m21_313 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m21_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="9-9"];
m21_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m21_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="389-393"];
m21_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="396-396"];
m21_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m21_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m21_172 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m21_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m21_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m21_197 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m21_270 [cluster="string.Equals(string)", file="ExtensionsForMemberInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m21_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m21_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="697-697"];
m21_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceMinMaxEqual(),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="700-704"];
m21_293 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="707-707"];
m21_294 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m21_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="9-9"];
m21_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m21_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="640-644"];
m21_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="ExtensionsForMemberInfo.cs", label="Assert.True(expected.Equals(result.Value.StringValue))", span="647-647"];
m21_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m21_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m21_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="316-316"];
m21_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323"];
m21_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326"];
m21_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m21_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m21_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="520-524"];
m21_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="526-530"];
m21_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="533-533"];
m21_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m21_203 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="4-4"];
m21_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m21_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="579-579"];
m21_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="582-586"];
m21_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="589-589"];
m21_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m21_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m21_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="216-216"];
m21_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="219-223"];
m21_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="226-226"];
m21_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m21_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m21_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="367-371"];
m21_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="374-374"];
m21_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m21_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m21_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="411-415"];
m21_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringSequence)", span="418-418"];
m21_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m21_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m21_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="541-541"];
m21_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="544-548"];
m21_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="551-551"];
m21_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m21_35 [cluster="Unk.SequenceEqual", file="ExtensionsForMemberInfo.cs", label="Entry Unk.SequenceEqual", span=""];
m21_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m21_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="70-74"];
m21_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", color=red, community=0, file="ExtensionsForMemberInfo.cs", label="0: Assert.Equal(expected, result.Value.DoubleValue)", span="77-77"];
m21_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m21_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m21_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m21_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="278-278"];
m21_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285"];
m21_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288"];
m21_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m21_220 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m21_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m21_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504"];
m21_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="506-510"];
m21_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ExtensionsForMemberInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="513-513"];
m21_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m21_193 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m21_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="733-733"];
m21_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithScalarValueAndSequenceStringAdjacent(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="738-742"];
m21_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="745-745"];
m21_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="733-733"];
m21_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m21_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m21_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="656-656"];
m21_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="659-663"];
m21_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="666-666"];
m21_278 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m21_187 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m21_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m21_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="481-484"];
m21_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="486-490"];
m21_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ExtensionsForMemberInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="493-493"];
m21_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m21_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m21_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165"];
m21_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="168-168"];
m21_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m21_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m21_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="94-98"];
m21_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="101-101"];
m21_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m21_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m21_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143"];
m21_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="146-146"];
m21_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m21_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m21_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="235-235"];
m21_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="238-242"];
m21_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="245-245"];
m21_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m21_114 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m21_158 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="9-9"];
m21_282 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m21_310 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="739-739"];
m21_13 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label=fakeOptions, span="27-27"];
m21_12 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="27-27"];
m21_14 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="27-27"];
m21_20 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="48-48"];
m21_21 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="48-48"];
m21_22 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="48-48"];
m21_27 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="71-71"];
m21_28 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithDouble()", span="71-71"];
m21_29 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="71-71"];
m21_36 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="95-95"];
m21_37 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequence()", span="95-95"];
m21_38 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="95-95"];
m21_44 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="117-117"];
m21_45 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="117-117"];
m21_46 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="117-117"];
m21_51 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="140-140"];
m21_52 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="140-140"];
m21_53 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="140-140"];
m21_59 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="162-162"];
m21_60 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="162-162"];
m21_61 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="162-162"];
m21_70 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="181-181"];
m21_71 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="181-181"];
m21_72 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="181-181"];
m21_79 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="200-200"];
m21_80 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="200-200"];
m21_81 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="200-200"];
m21_88 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="220-220"];
m21_89 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="220-220"];
m21_90 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="220-220"];
m21_96 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="239-239"];
m21_97 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="239-239"];
m21_98 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="239-239"];
m21_105 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="263-263"];
m21_106 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithEnum()", span="263-263"];
m21_107 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="263-263"];
m21_115 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="282-282"];
m21_116 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithEnum()", span="282-282"];
m21_117 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="282-282"];
m21_123 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="301-301"];
m21_124 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithEnum()", span="301-301"];
m21_125 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="301-301"];
m21_131 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="320-320"];
m21_132 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithEnum()", span="320-320"];
m21_133 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="320-320"];
m21_140 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="345-345"];
m21_141 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithValues()", span="345-345"];
m21_142 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="345-345"];
m21_147 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="368-368"];
m21_148 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="368-368"];
m21_149 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="368-368"];
m21_155 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="390-390"];
m21_156 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="390-390"];
m21_157 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="390-390"];
m21_163 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="412-412"];
m21_164 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="412-412"];
m21_165 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="412-412"];
m21_173 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="441-441"];
m21_176 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="442-444"];
m21_174 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithValues()", span="441-441"];
m21_175 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="441-441"];
m21_177 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="443-444"];
m21_181 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="444-444"];
m21_185 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="444-444"];
m21_178 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="442-444"];
m21_180 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="444-444"];
m21_182 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="444-444"];
m21_184 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="444-444"];
m21_186 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="444-444"];
m21_194 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="467-467"];
m21_195 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSets()", span="467-467"];
m21_196 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="467-467"];
m21_204 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="487-487"];
m21_205 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="487-487"];
m21_206 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="487-487"];
m21_212 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="507-507"];
m21_213 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="507-507"];
m21_214 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="507-507"];
m21_221 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="527-527"];
m21_222 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="527-527"];
m21_223 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="527-527"];
m21_229 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="545-545"];
m21_230 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionWithRequired()", span="545-545"];
m21_231 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="545-545"];
m21_238 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="564-564"];
m21_239 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="564-564"];
m21_240 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="564-564"];
m21_247 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="583-583"];
m21_248 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="583-583"];
m21_249 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="583-583"];
m21_255 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="602-602"];
m21_256 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="602-602"];
m21_257 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="602-602"];
m21_263 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="621-621"];
m21_264 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="621-621"];
m21_265 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="621-621"];
m21_271 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="641-641"];
m21_272 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="641-641"];
m21_273 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="641-641"];
m21_279 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="660-660"];
m21_280 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithRequiredValue()", span="660-660"];
m21_281 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="660-660"];
m21_287 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="682-682"];
m21_288 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptions()", span="682-682"];
m21_289 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="682-682"];
m21_295 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="701-701"];
m21_296 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="701-701"];
m21_297 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="701-701"];
m21_303 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Entry lambda expression", span="720-720"];
m21_304 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithRequiredValue()", span="720-720"];
m21_305 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="720-720"];
m21_311 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="739-739"];
m21_312 [cluster="lambda expression", file="ExtensionsForMemberInfo.cs", label="Exit lambda expression", span="739-739"];
m21_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="714-714"];
m21_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="719-723"];
m21_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="726-726"];
m21_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="714-714"];
m21_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m21_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="177-177"];
m21_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="180-184"];
m21_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="187-187"];
m21_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m21_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m21_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266"];
m21_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.Colors)", span="269-269"];
m21_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m21_298 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m21_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m21_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m21_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="123-123"];
m21_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m21_232 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m21_108 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="16-16"];
m21_246 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m21_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m21_104 [cluster="Unk.ShouldBeEquivalentTo", file="ExtensionsForMemberInfo.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m21_183 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m21_11 [cluster="Unk.True", file="ExtensionsForMemberInfo.cs", label="Entry Unk.True", span=""];
m21_30 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="9-9"];
m21_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m21_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="47-51"];
m21_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="ExtensionsForMemberInfo.cs", label="Assert.Equal(expected, result.Value.LongValue)", span="54-54"];
m21_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m21_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="9-9"];
m21_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m21_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="335-341"];
m21_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="344-348"];
m21_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ExtensionsForMemberInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="351-351"];
m21_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m21_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m21_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="560-560"];
m21_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="563-567"];
m21_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="570-570"];
m21_237 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m21_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m21_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="681-685"];
m21_285 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="ExtensionsForMemberInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringValue)", span="688-688"];
m21_286 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m21_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m21_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="459-463"];
m21_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="466-470"];
m21_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ExtensionsForMemberInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="473-473"];
m21_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m21_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m21_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="430-436"];
m21_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="437-437"];
m21_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="450-450"];
m21_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="440-447"];
m21_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ExtensionsForMemberInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m21_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="9-9"];
m21_179 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="ExtensionsForMemberInfo.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31"];
m21_314 [file="ExtensionsForMemberInfo.cs", label=fakeOptions, span=""];
m21_315 [file="ExtensionsForMemberInfo.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m23_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m23_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m23_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161"];
m23_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="sut.MaximumDisplayWidth = 40", span="162-162"];
m23_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166"];
m23_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169"];
m23_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170"];
m23_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m23_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172"];
m23_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173"];
m23_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174"];
m23_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175"];
m23_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m23_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m23_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="IBindingConfiguration.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m23_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m23_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138"];
m23_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="sut.MaximumDisplayWidth = 40", span="139-139"];
m23_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143"];
m23_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146"];
m23_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147"];
m23_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149"];
m23_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150"];
m23_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151"];
m23_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152"];
m23_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m23_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m23_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="IBindingConfiguration.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m23_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m23_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m23_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IBindingConfiguration.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21"];
m23_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m23_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m23_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="IBindingConfiguration.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m23_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m23_165 [cluster="Unk.StartWithEquivalent", file="IBindingConfiguration.cs", label="Entry Unk.StartWithEquivalent", span=""];
m23_164 [cluster="Unk.Should", file="IBindingConfiguration.cs", label="Entry Unk.Should", span=""];
m23_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="IBindingConfiguration.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m23_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="IBindingConfiguration.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m23_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317"];
m23_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="320-321"];
m23_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="322-325"];
m23_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="328-328"];
m23_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="331-331"];
m23_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="333-333"];
m23_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="334-334"];
m23_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="335-335"];
m23_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="336-336"];
m23_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="337-337"];
m23_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="338-338"];
m23_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="339-339"];
m23_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317"];
m23_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="IBindingConfiguration.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m23_257 [cluster="System.Type.ToTypeInfo()", file="IBindingConfiguration.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m23_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="IBindingConfiguration.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m23_259 [cluster="Unk.Be", file="IBindingConfiguration.cs", label="Entry Unk.Be", span=""];
m23_256 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="IBindingConfiguration.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="20-20"];
m23_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m23_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m23_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m23_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271"];
m23_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274"];
m23_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277"];
m23_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278"];
m23_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279"];
m23_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280"];
m23_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281"];
m23_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282"];
m23_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283"];
m23_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284"];
m23_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285"];
m23_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286"];
m23_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m23_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433"];
m23_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="436-436"];
m23_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="437-440"];
m23_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="handlers.ChangeCulture()", span="443-443"];
m23_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="handlers.ResetCulture()", span="445-445"];
m23_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="444-444"];
m23_249 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="var text = helpText.ToString()", span="448-448"];
m23_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="449-449"];
m23_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="451-451"];
m23_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="452-452"];
m23_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="453-453"];
m23_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433"];
m23_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="IBindingConfiguration.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m23_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m23_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IBindingConfiguration.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124"];
m23_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127"];
m23_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129"];
m23_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m23_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m23_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="var sut = new HelpText(''Heading Info.'')", span="184-184"];
m23_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="sut.MaximumDisplayWidth = 40", span="185-185"];
m23_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188"];
m23_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191"];
m23_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m23_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m23_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194"];
m23_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195"];
m23_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196"];
m23_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197"];
m23_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m23_218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393"];
m23_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="396-401"];
m23_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="404-404"];
m23_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var text = helpText.ToString()", span="407-407"];
m23_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="408-408"];
m23_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="409-409"];
m23_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="410-410"];
m23_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="411-411"];
m23_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="412-412"];
m23_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="413-413"];
m23_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="414-414"];
m23_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="415-415"];
m23_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="416-416"];
m23_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="417-417"];
m23_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="418-418"];
m23_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="419-419"];
m23_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="420-420"];
m23_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="421-421"];
m23_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="422-422"];
m23_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="423-423"];
m23_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="424-424"];
m23_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="425-425"];
m23_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="426-426"];
m23_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="427-427"];
m23_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393"];
m23_255 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="IBindingConfiguration.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m23_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m23_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34"];
m23_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37"];
m23_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39"];
m23_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40"];
m23_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41"];
m23_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42"];
m23_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43"];
m23_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44"];
m23_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m23_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m23_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219"];
m23_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241"];
m23_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246"];
m23_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243"];
m23_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var lines = errorsText.ToNotEmptyLines()", span="249-249"];
m23_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251"];
m23_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252"];
m23_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253"];
m23_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254"];
m23_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255"];
m23_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256"];
m23_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257"];
m23_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m23_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="IBindingConfiguration.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m23_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="IBindingConfiguration.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m23_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="IBindingConfiguration.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m23_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m23_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80"];
m23_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84"];
m23_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85"];
m23_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86"];
m23_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87"];
m23_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88"];
m23_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89"];
m23_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90"];
m23_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91"];
m23_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m23_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IBindingConfiguration.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m23_146 [cluster="lambda expression", file="IBindingConfiguration.cs", label="Entry lambda expression", span="243-243"];
m23_128 [cluster="lambda expression", file="IBindingConfiguration.cs", label="err.Tag", span="222-222"];
m23_130 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225"];
m23_132 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227"];
m23_134 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229"];
m23_136 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231"];
m23_138 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233"];
m23_142 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237"];
m23_127 [cluster="lambda expression", file="IBindingConfiguration.cs", label="Entry lambda expression", span="220-241"];
m23_129 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.BadFormatTokenError", span="224-224"];
m23_131 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.MissingValueOptionError", span="226-226"];
m23_133 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.UnknownOptionError", span="228-228"];
m23_135 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.MissingRequiredOptionError", span="230-230"];
m23_137 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.SequenceOutOfRangeError", span="232-232"];
m23_139 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.NoVerbSelectedError", span="234-234"];
m23_141 [cluster="lambda expression", file="IBindingConfiguration.cs", label="ErrorType.BadVerbSelectedError", span="236-236"];
m23_143 [cluster="lambda expression", file="IBindingConfiguration.cs", label="throw new InvalidOperationException();", span="239-239"];
m23_140 [cluster="lambda expression", file="IBindingConfiguration.cs", label="return ''ERR no-verb-selected'';", span="235-235"];
m23_144 [cluster="lambda expression", file="IBindingConfiguration.cs", label="Exit lambda expression", span="220-241"];
m23_147 [cluster="lambda expression", file="IBindingConfiguration.cs", label="string.Empty", span="243-243"];
m23_148 [cluster="lambda expression", file="IBindingConfiguration.cs", label="Exit lambda expression", span="243-243"];
m23_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="IBindingConfiguration.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m23_258 [cluster="System.Action.Invoke()", file="IBindingConfiguration.cs", label="Entry System.Action.Invoke()", span="0-0"];
m23_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m23_21 [cluster="string.ToNotEmptyLines()", file="IBindingConfiguration.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m23_5 [cluster="Unk.ShouldBeEquivalentTo", file="IBindingConfiguration.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m23_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="IBindingConfiguration.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m23_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m23_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=red, community=0, file="IBindingConfiguration.cs", label="0: var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103"];
m23_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107"];
m23_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108"];
m23_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109"];
m23_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110"];
m23_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111"];
m23_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112"];
m23_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113"];
m23_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m23_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m23_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="294-299"];
m23_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302"];
m23_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305"];
m23_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307"];
m23_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308"];
m23_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="309-309"];
m23_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310"];
m23_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="311-311"];
m23_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="312-312"];
m23_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m23_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m23_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369"];
m23_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="372-374"];
m23_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="var text = HelpText.RenderUsageText(result)", span="377-377"];
m23_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="var lines = text.ToNotEmptyLines()", span="380-380"];
m23_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="383-383"];
m23_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="384-384"];
m23_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="385-385"];
m23_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386"];
m23_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="387-387"];
m23_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="388-388"];
m23_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="389-389"];
m23_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369"];
m23_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m23_4 [cluster="CommandLine.Text.HelpText.ToString()", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m23_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m23_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56"];
m23_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60"];
m23_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61"];
m23_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62"];
m23_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63"];
m23_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64"];
m23_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65"];
m23_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66"];
m23_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67"];
m23_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68"];
m23_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m23_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m23_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344"];
m23_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="348-351"];
m23_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="355-355"];
m23_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="356-356"];
m23_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="357-357"];
m23_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="358-358"];
m23_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="359-359"];
m23_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="360-360"];
m23_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="361-361"];
m23_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="362-362"];
m23_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="363-363"];
m23_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="364-364"];
m23_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IBindingConfiguration.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344"];
m23_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="IBindingConfiguration.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m23_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m23_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IBindingConfiguration.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m25_0 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IBindingResolver.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m25_1 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IBindingResolver.cs", label="Exit Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m26_6 [cluster="System.ArgumentException.ArgumentException(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m26_5 [cluster="string.IsNullOrWhiteSpace(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m26_0 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m26_1 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="string.IsNullOrWhiteSpace(name)", span="22-22"];
m26_3 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="this.name = name", span="24-24"];
m26_2 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="throw new ArgumentException(''name'');", span="22-22"];
m26_4 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m26_7 [file="IBindingToSyntax{T1,T2,T3,T4}.cs", label="CommandLine.VerbAttribute", span=""];
m28_0 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m28_1 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="name == null", span="15-15"];
m28_3 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="helpText == null", span="16-16"];
m28_5 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="this.name = name", span="18-18"];
m28_6 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="this.helpText = helpText", span="19-19"];
m28_2 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="throw new ArgumentNullException(''name'');", span="15-15"];
m28_4 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="throw new ArgumentNullException(''helpText'');", span="16-16"];
m28_7 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="IBindingToSyntax{T1,T2}.cs", label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m28_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IBindingToSyntax{T1,T2}.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m28_16 [cluster="Unk.Single", file="IBindingToSyntax{T1,T2}.cs", label="Entry Unk.Single", span=""];
m28_17 [cluster="Unk.Create", file="IBindingToSyntax{T1,T2}.cs", label="Entry Unk.Create", span=""];
m28_9 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="IBindingToSyntax{T1,T2}.cs", label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m28_10 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="IBindingToSyntax{T1,T2}.cs", label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37"];
m28_11 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="IBindingToSyntax{T1,T2}.cs", label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m28_12 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="IBindingToSyntax{T1,T2}.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m28_13 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="IBindingToSyntax{T1,T2}.cs", label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       Verb.FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47"];
m28_14 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="IBindingToSyntax{T1,T2}.cs", label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m28_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="IBindingToSyntax{T1,T2}.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m28_18 [file="IBindingToSyntax{T1,T2}.cs", label="CommandLine.Core.Verb", span=""];
m29_0 [cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IBindingToSyntax{T1}.cs", label="Entry Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43"];
m29_1 [cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IBindingToSyntax{T1}.cs", label="Exit Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43"];
m30_10 [cluster="lambda expression", file="IContext.cs", label="Entry lambda expression", span="79-79"];
m30_11 [cluster="lambda expression", color=green, community=0, file="IContext.cs", label="0: ''USAGE:''", span="79-79"];
m30_12 [cluster="lambda expression", file="IContext.cs", label="Exit lambda expression", span="79-79"];
m31_10 [cluster="Unk.Load", file="IKernelConfiguration.cs", label="Entry Unk.Load", span=""];
m31_26 [cluster="System.Reflection.AssemblyName.AssemblyName()", file="IKernelConfiguration.cs", label="Entry System.Reflection.AssemblyName.AssemblyName()", span="0-0"];
m31_30 [cluster="System.AppDomain.Unload(System.AppDomain)", file="IKernelConfiguration.cs", label="Entry System.AppDomain.Unload(System.AppDomain)", span="0-0"];
m31_25 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CreateTemporaryAppDomain()", file="IKernelConfiguration.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.CreateTemporaryAppDomain()", span="95-95"];
m31_31 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CreateTemporaryAppDomain()", file="IKernelConfiguration.cs", label="return AppDomain.CreateDomain(\r\n				''NinjectModuleLoader'',\r\n				AppDomain.CurrentDomain.Evidence,\r\n				AppDomain.CurrentDomain.SetupInformation);", span="97-100"];
m31_32 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CreateTemporaryAppDomain()", file="IKernelConfiguration.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.CreateTemporaryAppDomain()", span="95-95"];
m31_27 [cluster="System.AppDomain.Load(System.Reflection.AssemblyName)", file="IKernelConfiguration.cs", label="Entry System.AppDomain.Load(System.Reflection.AssemblyName)", span="0-0"];
m31_28 [cluster="System.Reflection.Assembly.HasNinjectModules()", file="IKernelConfiguration.cs", label="Entry System.Reflection.Assembly.HasNinjectModules()", span="28-28"];
m31_29 [cluster="System.Reflection.Assembly.GetName()", file="IKernelConfiguration.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m31_5 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="64-64"];
m31_6 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Kernel.Load(FindAssembliesWithModules(filenames).Select(name => Assembly.Load(name)))", span="66-66"];
m31_7 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="64-64"];
m31_0 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="IKernelConfiguration.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", span="54-54"];
m31_1 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="IKernelConfiguration.cs", label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="56-56"];
m31_2 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="IKernelConfiguration.cs", label="Kernel = kernel", span="57-57"];
m31_3 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="IKernelConfiguration.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", span="54-54"];
m31_8 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", span="69-69"];
m31_15 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="AppDomain temporaryDomain = CreateTemporaryAppDomain()", span="71-71"];
m31_22 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="yield return assembly.GetName();", span="89-89"];
m31_16 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label=filenames, span="73-73"];
m31_19 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="assembly = temporaryDomain.Load(name)", span="80-80"];
m31_23 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="AppDomain.Unload(temporaryDomain)", span="92-92"];
m31_17 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Assembly assembly", span="75-75"];
m31_18 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="var name = new AssemblyName { CodeBase = file }", span="79-79"];
m31_20 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label=BadImageFormatException, span="82-82"];
m31_21 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="assembly.HasNinjectModules()", span="88-88"];
m31_24 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", file="IKernelConfiguration.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.FindAssembliesWithModules(System.Collections.Generic.IEnumerable<string>)", span="69-69"];
m31_11 [cluster="lambda expression", file="IKernelConfiguration.cs", label="Entry lambda expression", span="66-66"];
m31_12 [cluster="lambda expression", file="IKernelConfiguration.cs", label="Assembly.Load(name)", span="66-66"];
m31_13 [cluster="lambda expression", file="IKernelConfiguration.cs", label="Exit lambda expression", span="66-66"];
m31_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="IKernelConfiguration.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24"];
m31_33 [cluster="System.AppDomain.CreateDomain(string, System.Security.Policy.Evidence, System.AppDomainSetup)", file="IKernelConfiguration.cs", label="Entry System.AppDomain.CreateDomain(string, System.Security.Policy.Evidence, System.AppDomainSetup)", span="0-0"];
m31_14 [cluster="System.Reflection.Assembly.Load(System.Reflection.AssemblyName)", file="IKernelConfiguration.cs", label="Entry System.Reflection.Assembly.Load(System.Reflection.AssemblyName)", span="0-0"];
m31_9 [cluster="Unk.Select", file="IKernelConfiguration.cs", label="Entry Unk.Select", span=""];
m31_34 [file="IKernelConfiguration.cs", label="Ninject.Modules.CompiledModuleLoaderPlugin", span=""];
m32_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m32_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m32_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161"];
m32_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169"];
m32_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="sut.MaximumDisplayWidth = 40", span="162-162"];
m32_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166"];
m32_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170"];
m32_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m32_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172"];
m32_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173"];
m32_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174"];
m32_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175"];
m32_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m32_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m32_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="IMissingBindingResolver.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m32_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m32_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138"];
m32_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146"];
m32_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="sut.MaximumDisplayWidth = 40", span="139-139"];
m32_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143"];
m32_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147"];
m32_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149"];
m32_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150"];
m32_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151"];
m32_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152"];
m32_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m32_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m32_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m32_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="IMissingBindingResolver.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m32_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m32_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m32_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IMissingBindingResolver.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21"];
m32_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m32_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m32_218 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m32_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m32_165 [cluster="Unk.StartWithEquivalent", file="IMissingBindingResolver.cs", label="Entry Unk.StartWithEquivalent", span=""];
m32_164 [cluster="Unk.Should", file="IMissingBindingResolver.cs", label="Entry Unk.Should", span=""];
m32_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="IMissingBindingResolver.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m32_258 [cluster="System.Type.ToTypeInfo()", file="IMissingBindingResolver.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m32_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="IMissingBindingResolver.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m32_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="IMissingBindingResolver.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m32_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="IMissingBindingResolver.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m32_260 [cluster="Unk.Be", file="IMissingBindingResolver.cs", label="Entry Unk.Be", span=""];
m32_257 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="IMissingBindingResolver.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="20-20"];
m32_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m32_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m32_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m32_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277"];
m32_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280"];
m32_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281"];
m32_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282"];
m32_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283"];
m32_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284"];
m32_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285"];
m32_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286"];
m32_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274"];
m32_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278"];
m32_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279"];
m32_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271"];
m32_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m32_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434"];
m32_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="var text = helpText.ToString()", span="449-449"];
m32_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="450-450"];
m32_249 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="handlers.ResetCulture()", span="446-446"];
m32_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="445-445"];
m32_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="452-452"];
m32_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="453-453"];
m32_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="454-454"];
m32_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="438-441"];
m32_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="437-437"];
m32_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="handlers.ChangeCulture()", span="444-444"];
m32_255 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434"];
m32_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="IMissingBindingResolver.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m32_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m32_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127"];
m32_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129"];
m32_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IMissingBindingResolver.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124"];
m32_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m32_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m32_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188"];
m32_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191"];
m32_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="var sut = new HelpText(''Heading Info.'')", span="184-184"];
m32_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="sut.MaximumDisplayWidth = 40", span="185-185"];
m32_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m32_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m32_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194"];
m32_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195"];
m32_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196"];
m32_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197"];
m32_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m32_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="IMissingBindingResolver.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m32_256 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="IMissingBindingResolver.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m32_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m32_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=green, community=0, file="IMissingBindingResolver.cs", label="0: var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34"];
m32_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37"];
m32_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39"];
m32_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40"];
m32_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41"];
m32_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42"];
m32_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43"];
m32_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44"];
m32_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m32_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m32_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = errorsText.ToNotEmptyLines()", span="249-249"];
m32_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251"];
m32_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252"];
m32_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253"];
m32_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254"];
m32_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255"];
m32_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256"];
m32_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257"];
m32_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246"];
m32_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219"];
m32_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241"];
m32_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243"];
m32_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m32_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="IMissingBindingResolver.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m32_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="IMissingBindingResolver.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m32_191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="IMissingBindingResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m32_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m32_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80"];
m32_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84"];
m32_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85"];
m32_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86"];
m32_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87"];
m32_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88"];
m32_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89"];
m32_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90"];
m32_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91"];
m32_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m32_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IMissingBindingResolver.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m32_127 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="Entry lambda expression", span="220-241"];
m32_128 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="err.Tag", span="222-222"];
m32_130 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225"];
m32_132 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227"];
m32_134 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229"];
m32_136 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231"];
m32_138 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233"];
m32_142 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237"];
m32_129 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.BadFormatTokenError", span="224-224"];
m32_131 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.MissingValueOptionError", span="226-226"];
m32_133 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.UnknownOptionError", span="228-228"];
m32_135 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.MissingRequiredOptionError", span="230-230"];
m32_137 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.SequenceOutOfRangeError", span="232-232"];
m32_139 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.NoVerbSelectedError", span="234-234"];
m32_141 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="ErrorType.BadVerbSelectedError", span="236-236"];
m32_143 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="throw new InvalidOperationException();", span="239-239"];
m32_140 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="return ''ERR no-verb-selected'';", span="235-235"];
m32_144 [cluster="lambda expression", file="IMissingBindingResolver.cs", label="Exit lambda expression", span="220-241"];
m32_192 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="IMissingBindingResolver.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m32_259 [cluster="System.Action.Invoke()", file="IMissingBindingResolver.cs", label="Entry System.Action.Invoke()", span="0-0"];
m32_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m32_21 [cluster="string.ToNotEmptyLines()", file="IMissingBindingResolver.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m32_5 [cluster="Unk.ShouldBeEquivalentTo", file="IMissingBindingResolver.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m32_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370"];
m32_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = text.ToNotEmptyLines()", span="381-381"];
m32_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="384-384"];
m32_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="385-385"];
m32_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="386-386"];
m32_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="387-387"];
m32_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="388-388"];
m32_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="389-389"];
m32_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="390-390"];
m32_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="var text = HelpText.RenderUsageText(result)", span="378-378"];
m32_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="373-375"];
m32_217 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370"];
m32_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m32_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103"];
m32_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107"];
m32_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108"];
m32_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109"];
m32_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110"];
m32_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111"];
m32_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112"];
m32_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113"];
m32_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m32_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m32_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305"];
m32_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="309-309"];
m32_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310"];
m32_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="311-311"];
m32_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="312-312"];
m32_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="313-313"];
m32_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302"];
m32_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307"];
m32_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308"];
m32_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="294-299"];
m32_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m32_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m32_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="IMissingBindingResolver.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m32_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m32_4 [cluster="CommandLine.Text.HelpText.ToString()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m32_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m32_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56"];
m32_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60"];
m32_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61"];
m32_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62"];
m32_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63"];
m32_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64"];
m32_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65"];
m32_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66"];
m32_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67"];
m32_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68"];
m32_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m32_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m32_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345"];
m32_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="349-352"];
m32_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="356-356"];
m32_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="357-357"];
m32_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="358-358"];
m32_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="359-359"];
m32_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="360-360"];
m32_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="361-361"];
m32_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="362-362"];
m32_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="363-363"];
m32_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="364-364"];
m32_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="365-365"];
m32_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345"];
m32_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318"];
m32_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="332-332"];
m32_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="336-336"];
m32_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="337-337"];
m32_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="338-338"];
m32_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="339-339"];
m32_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="340-340"];
m32_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="329-329"];
m32_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="334-334"];
m32_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="335-335"];
m32_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="323-326"];
m32_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="321-322"];
m32_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318"];
m32_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="IMissingBindingResolver.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m32_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394"];
m32_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var text = helpText.ToString()", span="408-408"];
m32_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="409-409"];
m32_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="412-412"];
m32_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="413-413"];
m32_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="414-414"];
m32_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="415-415"];
m32_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="416-416"];
m32_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="417-417"];
m32_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="418-418"];
m32_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="419-419"];
m32_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="420-420"];
m32_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="421-421"];
m32_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="422-422"];
m32_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="423-423"];
m32_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="424-424"];
m32_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="425-425"];
m32_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="426-426"];
m32_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="427-427"];
m32_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="428-428"];
m32_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="405-405"];
m32_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="410-410"];
m32_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="411-411"];
m32_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="397-402"];
m32_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="IMissingBindingResolver.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394"];
m34_0 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="25-25"];
m34_1 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="collection.Count != other.Count", span="27-27"];
m34_4 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="idx < collection.Count", span="30-30"];
m34_5 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="!collection[idx].Equals(other[idx])", span="32-32"];
m34_2 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="return false;", span="28-28"];
m34_3 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="int idx = 0", span="30-30"];
m34_7 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="idx++", span="30-30"];
m34_8 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", color=red, community=0, file="InstanceReference.cs", label="0: return true;", span="36-36"];
m34_6 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="return false;", span="33-33"];
m34_9 [cluster="Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="InstanceReference.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForIList.ElementsEqual<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="25-25"];
m34_10 [cluster="object.Equals(object)", file="InstanceReference.cs", label="Entry object.Equals(object)", span="0-0"];
m35_18 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="IPlan.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m35_37 [cluster="Unk.IsValue", file="IPlan.cs", label="Entry Unk.IsValue", span=""];
m35_16 [cluster="Unk.Partition", file="IPlan.cs", label="Entry Unk.Partition", span=""];
m35_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="IPlan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m35_15 [cluster="Unk.ToList", file="IPlan.cs", label="Entry Unk.ToList", span=""];
m35_20 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="IPlan.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m35_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="IPlan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m35_13 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m35_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m35_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var tokenList = tokens.ToList()", span="16-16"];
m35_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var switches = Switch.Partition(tokenList, typeLookup).ToList()", span="17-17"];
m35_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var scalars = Scalar.Partition(tokensExceptSwitches, typeLookup).ToList()", span="19-19"];
m35_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var sequences = Sequence.Partition(tokensExceptSwitchesAndScalars, typeLookup).ToList()", span="21-21"];
m35_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", span="18-18"];
m35_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="return TokenPartitions.Create(\r\n                    KeyValuePairHelper.ForSwitch(switches)\r\n                        .Concat(KeyValuePairHelper.ForScalar(scalars))\r\n                        .Concat(KeyValuePairHelper.ForSequence(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="26-31"];
m35_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", span="20-20"];
m35_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", span="22-22"];
m35_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", span="23-23"];
m35_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="24-24"];
m35_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="IPlan.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m35_22 [cluster="Unk.Create", file="IPlan.cs", label="Entry Unk.Create", span=""];
m35_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="IPlan.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m35_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="IPlan.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m35_41 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="30-30"];
m35_24 [cluster="lambda expression", file="IPlan.cs", label="!switches.Contains(x)", span="18-18"];
m35_23 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="18-18"];
m35_28 [cluster="lambda expression", file="IPlan.cs", label="!scalars.Contains(x)", span="20-20"];
m35_27 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="20-20"];
m35_32 [cluster="lambda expression", file="IPlan.cs", label="!sequences.Contains(x)", span="22-22"];
m35_31 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="22-22"];
m35_34 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="23-23"];
m35_39 [cluster="lambda expression", file="IPlan.cs", label="!values.Contains(x)", span="24-24"];
m35_38 [cluster="lambda expression", file="IPlan.cs", label="Entry lambda expression", span="24-24"];
m35_25 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="18-18"];
m35_29 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="20-20"];
m35_33 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="22-22"];
m35_35 [cluster="lambda expression", file="IPlan.cs", label="v.IsValue()", span="23-23"];
m35_36 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="23-23"];
m35_40 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="24-24"];
m35_42 [cluster="lambda expression", file="IPlan.cs", label="t.Text", span="30-30"];
m35_43 [cluster="lambda expression", file="IPlan.cs", label="Exit lambda expression", span="30-30"];
m35_14 [cluster="Unk.Where", file="IPlan.cs", label="Entry Unk.Where", span=""];
m35_30 [cluster="Unk.Contains", file="IPlan.cs", label="Entry Unk.Contains", span=""];
m35_21 [cluster="Unk.Select", file="IPlan.cs", label="Entry Unk.Select", span=""];
m35_44 [file="IPlan.cs", label=switches, span=""];
m35_45 [file="IPlan.cs", label=scalars, span=""];
m35_46 [file="IPlan.cs", label=sequences, span=""];
m35_47 [file="IPlan.cs", label=values, span=""];
m37_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="201-201"];
m37_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="204-204"];
m37_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="207-212"];
m37_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="215-215"];
m37_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="201-201"];
m37_384 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="912-912"];
m37_385 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeInterfaceOptions>>(() => new FakeInterfaceOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="915-920"];
m37_386 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeInterfaceOptions>)result).Value.InputFile)", span="923-923"];
m37_387 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="912-912"];
m37_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m37_453 [cluster="System.Uri.Uri(string)", file="KernelBase.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m37_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="601-601"];
m37_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="604-604"];
m37_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="607-612"];
m37_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="615-615"];
m37_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="601-601"];
m37_324 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="822-822"];
m37_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="825-830"];
m37_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Assert.Throws<ApplicationException>(test)", span="833-833"];
m37_327 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="822-822"];
m37_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="KernelBase.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m37_421 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="996-996"];
m37_422 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="KernelBase.cs", label="var expectedResult = new FakeOptions { StringValue=''strval0'', IntSequence=new[] { 9, 7, 8 }, BoolValue = true,  LongValue = 9876543210L }", span="999-999"];
m37_423 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue=strval0'', ''-i'', ''9'', ''7'', ''8'', ''-x'', ''9876543210'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1002-1007"];
m37_424 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="KernelBase.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value)", span="1010-1010"];
m37_425 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="996-996"];
m37_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m37_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="KernelBase.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m37_280 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="705-705"];
m37_281 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="708-708"];
m37_282 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceMinMaxEqual>>(() => new FakeOptionsWithSequenceMinMaxEqual()),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="711-716"];
m37_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithSequenceMinMaxEqual>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="719-719"];
m37_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="705-705"];
m37_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="519-519"];
m37_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="521-525"];
m37_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="527-532"];
m37_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", color=red, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptionsWithRequiredAndSet>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="535-535"];
m37_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="519-519"];
m37_374 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="895-895"];
m37_375 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="898-903"];
m37_376 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="KernelBase.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == expected)", span="906-906"];
m37_377 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="895-895"];
m37_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="377-377"];
m37_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceWithoutRange>>(() => new FakeOptionsWithSequenceWithoutRange()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="382-387"];
m37_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", color=red, community=0, file="KernelBase.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceWithoutRange>)result).Value.LongSequence)", span="390-390"];
m37_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="377-377"];
m37_197 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m37_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new FakeOptionsWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504"];
m37_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="506-511"];
m37_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=red, community=0, file="KernelBase.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredAndSet>)result).Value)", span="514-514"];
m37_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m37_264 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="662-662"];
m37_265 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="KernelBase.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="665-665"];
m37_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="668-673"];
m37_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithRequiredValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="676-676"];
m37_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="662-662"];
m37_186 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="KernelBase.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m37_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m37_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="167-172"];
m37_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", color=red, community=0, file="KernelBase.cs", label="0: ((Parsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="175-175"];
m37_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m37_7 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="KernelBase.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m37_113 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="KernelBase.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m37_366 [cluster="Unk.HaveCount", file="KernelBase.cs", label="Entry Unk.HaveCount", span=""];
m37_296 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4"];
m37_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="267-267"];
m37_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="272-277"];
m37_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithEnum>)result).Value.Colors)", span="280-280"];
m37_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="267-267"];
m37_237 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="KernelBase.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m37_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="43-43"];
m37_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="48-53"];
m37_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="KernelBase.cs", label="((Parsed<FakeOptions>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="56-56"];
m37_20 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="43-43"];
m37_223 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", span="4-4"];
m37_297 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="752-752"];
m37_298 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="757-762"];
m37_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableLong)", span="765-765"];
m37_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="752-752"];
m37_452 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", span="23-23"];
m37_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m37_335 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", span="6-6"];
m37_370 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", span="4-4"];
m37_336 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="837-837"];
m37_337 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="840-845"];
m37_338 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Assert.Throws<ApplicationException>(test)", span="848-848"];
m37_339 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="837-837"];
m37_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="306-306"];
m37_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="KernelBase.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="309-309"];
m37_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="312-317"];
m37_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", color=green, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="320-320"];
m37_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="306-306"];
m37_304 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="773-773"];
m37_305 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="778-783"];
m37_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName.Value)", span="788-788"];
m37_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName))", span="790-790"];
m37_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName != null", span="786-786"];
m37_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="773-773"];
m37_420 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m37_196 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m37_257 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="643-643"];
m37_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="648-653"];
m37_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="KernelBase.cs", label="((Parsed<FakeOptions>)result).Value.StringValue.ShouldBeEquivalentTo(expected)", span="656-656"];
m37_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="643-643"];
m37_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="326-326"];
m37_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", color=green, community=0, file="KernelBase.cs", label="0: var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="329-329"];
m37_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="332-337"];
m37_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", color=green, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="340-340"];
m37_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="326-326"];
m37_10 [cluster="CSharpx.Maybe.Just<T>(T)", file="KernelBase.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m37_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="423-423"];
m37_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="428-433"];
m37_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", color=red, community=0, file="KernelBase.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.StringSequence)", span="436-436"];
m37_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="423-423"];
m37_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="286-286"];
m37_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="289-289"];
m37_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="292-297"];
m37_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="300-300"];
m37_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="286-286"];
m37_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="241-241"];
m37_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="244-244"];
m37_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="247-252"];
m37_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="255-255"];
m37_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="241-241"];
m37_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="139-139"];
m37_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="144-149"];
m37_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="KernelBase.cs", label="((Parsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="152-152"];
m37_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="139-139"];
m37_157 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m37_392 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="934-934"];
m37_393 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequiredAndSets>>(() => new FakeOptionsWithTwoRequiredAndSets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="937-942"];
m37_394 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="type == ParserResultType.NotParsed", span="945-945"];
m37_395 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithTwoRequiredAndSets>)result).Errors.Should().HaveCount(x => x == expected)", span="947-947"];
m37_396 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="type == ParserResultType.Parsed", span="949-949"];
m37_397 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="result.Should().BeOfType<Parsed<FakeOptionsWithTwoRequiredAndSets>>()", span="951-951"];
m37_398 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="934-934"];
m37_182 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="KernelBase.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m37_455 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="1065-1065"];
m37_15 [cluster="lambda expression", file="KernelBase.cs", label=fakeOptions, span="27-27"];
m37_14 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="27-27"];
m37_16 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="27-27"];
m37_21 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="49-49"];
m37_22 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="49-49"];
m37_23 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="49-49"];
m37_28 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="73-73"];
m37_29 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithDouble()", span="73-73"];
m37_30 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="73-73"];
m37_36 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="98-98"];
m37_37 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSequence()", span="98-98"];
m37_38 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="98-98"];
m37_44 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="121-121"];
m37_45 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="121-121"];
m37_46 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="121-121"];
m37_51 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="145-145"];
m37_52 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="145-145"];
m37_53 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="145-145"];
m37_59 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="168-168"];
m37_60 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="168-168"];
m37_61 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="168-168"];
m37_70 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="188-188"];
m37_71 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="188-188"];
m37_72 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="188-188"];
m37_79 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="208-208"];
m37_80 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="208-208"];
m37_81 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="208-208"];
m37_88 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="228-228"];
m37_89 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="228-228"];
m37_90 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="228-228"];
m37_96 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="248-248"];
m37_97 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="248-248"];
m37_98 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="248-248"];
m37_104 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="273-273"];
m37_105 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithEnum()", span="273-273"];
m37_106 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="273-273"];
m37_114 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="293-293"];
m37_115 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithEnum()", span="293-293"];
m37_116 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="293-293"];
m37_122 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="313-313"];
m37_123 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithEnum()", span="313-313"];
m37_124 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="313-313"];
m37_130 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="333-333"];
m37_131 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithEnum()", span="333-333"];
m37_132 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="333-333"];
m37_139 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="359-359"];
m37_140 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithValues()", span="359-359"];
m37_141 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="359-359"];
m37_146 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="383-383"];
m37_147 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSequenceWithoutRange()", span="383-383"];
m37_148 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="383-383"];
m37_154 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="406-406"];
m37_155 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="406-406"];
m37_156 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="406-406"];
m37_162 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="429-429"];
m37_163 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="429-429"];
m37_164 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="429-429"];
m37_172 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="459-459"];
m37_175 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="460-462"];
m37_173 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithValues()", span="459-459"];
m37_174 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="459-459"];
m37_176 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="461-462"];
m37_180 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="462-462"];
m37_184 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="462-462"];
m37_177 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="460-462"];
m37_179 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="462-462"];
m37_181 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="462-462"];
m37_183 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="462-462"];
m37_185 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="462-462"];
m37_193 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="486-486"];
m37_194 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithSets()", span="486-486"];
m37_195 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="486-486"];
m37_203 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="507-507"];
m37_204 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithRequiredAndSet()", span="507-507"];
m37_205 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="507-507"];
m37_212 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="528-528"];
m37_213 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptionsWithRequiredAndSet()", span="528-528"];
m37_214 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="528-528"];
m37_220 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="548-548"];
m37_221 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithRequired()", span="548-548"];
m37_222 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="548-548"];
m37_229 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="568-568"];
m37_230 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptions()", span="568-568"];
m37_231 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="568-568"];
m37_238 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="588-588"];
m37_239 [cluster="lambda expression", color=red, community=0, file="KernelBase.cs", label="0: new FakeOptions()", span="588-588"];
m37_240 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="588-588"];
m37_246 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="608-608"];
m37_247 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="608-608"];
m37_248 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="608-608"];
m37_254 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="628-628"];
m37_255 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="628-628"];
m37_256 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="628-628"];
m37_261 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="649-649"];
m37_262 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="649-649"];
m37_263 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="649-649"];
m37_269 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="669-669"];
m37_270 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithRequiredValue()", span="669-669"];
m37_271 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="669-669"];
m37_277 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="692-692"];
m37_278 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="692-692"];
m37_279 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="692-692"];
m37_285 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="712-712"];
m37_286 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="712-712"];
m37_287 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="712-712"];
m37_293 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="735-735"];
m37_294 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithNullables()", span="735-735"];
m37_295 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="735-735"];
m37_301 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="758-758"];
m37_302 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithNullables()", span="758-758"];
m37_303 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="758-758"];
m37_311 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="779-779"];
m37_312 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithFSharpOption()", span="779-779"];
m37_313 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="779-779"];
m37_321 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="804-804"];
m37_322 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithFSharpOption()", span="804-804"];
m37_323 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="804-804"];
m37_329 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="825-830"];
m37_330 [cluster="lambda expression", file="KernelBase.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="825-830"];
m37_331 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="825-830"];
m37_332 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="826-826"];
m37_333 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithMinZero()", span="826-826"];
m37_334 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="826-826"];
m37_340 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="840-845"];
m37_341 [cluster="lambda expression", file="KernelBase.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="840-845"];
m37_342 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="840-845"];
m37_343 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="841-841"];
m37_344 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithMaxZero()", span="841-841"];
m37_345 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="841-841"];
m37_351 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="855-860"];
m37_352 [cluster="lambda expression", file="KernelBase.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="855-860"];
m37_353 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="855-860"];
m37_354 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="856-856"];
m37_355 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithMinMaxZero()", span="856-856"];
m37_356 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="856-856"];
m37_372 [cluster="lambda expression", file="KernelBase.cs", label="x == expected", span="885-885"];
m37_367 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="876-876"];
m37_371 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="885-885"];
m37_368 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithNamedAndEmptySets()", span="876-876"];
m37_369 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="876-876"];
m37_373 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="885-885"];
m37_382 [cluster="lambda expression", file="KernelBase.cs", label="x == expected", span="906-906"];
m37_378 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="899-899"];
m37_381 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="906-906"];
m37_379 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="899-899"];
m37_380 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="899-899"];
m37_383 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="906-906"];
m37_388 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="916-916"];
m37_389 [cluster="lambda expression", file="KernelBase.cs", label="new FakeInterfaceOptions()", span="916-916"];
m37_390 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="916-916"];
m37_404 [cluster="lambda expression", file="KernelBase.cs", label="x == expected", span="947-947"];
m37_399 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="938-938"];
m37_403 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="947-947"];
m37_400 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithTwoRequiredAndSets()", span="938-938"];
m37_401 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="938-938"];
m37_405 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="947-947"];
m37_410 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="963-963"];
m37_411 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithRequiredValue()", span="963-963"];
m37_412 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="963-963"];
m37_417 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="983-983"];
m37_418 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="983-983"];
m37_419 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="983-983"];
m37_426 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="1003-1003"];
m37_427 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptions()", span="1003-1003"];
m37_428 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="1003-1003"];
m37_440 [cluster="lambda expression", file="KernelBase.cs", label="x == expected", span="1034-1034"];
m37_435 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="1026-1026"];
m37_439 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="1034-1034"];
m37_436 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithTwoRequired()", span="1026-1026"];
m37_437 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="1026-1026"];
m37_441 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="1034-1034"];
m37_456 [cluster="lambda expression", file="KernelBase.cs", label="new FakeOptionsWithSimpleType()", span="1065-1065"];
m37_457 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="1065-1065"];
m37_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="181-181"];
m37_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="KernelBase.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="184-184"];
m37_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="187-192"];
m37_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="195-195"];
m37_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="181-181"];
m37_288 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m37_310 [cluster="Unk.get_IsSome", file="KernelBase.cs", label="Entry Unk.get_IsSome", span=""];
m37_9 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="KernelBase.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m37_13 [cluster="Unk.ShouldBeEquivalentTo", file="KernelBase.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m37_413 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="977-977"];
m37_414 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithScalarValueAndSequenceStringAdjacent>>(() => new FakeOptionsWithScalarValueAndSequenceStringAdjacent()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="982-987"];
m37_415 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithScalarValueAndSequenceStringAdjacent>)result).Value)", span="990-990"];
m37_416 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="977-977"];
m37_149 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m37_454 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m37_8 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="KernelBase.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m37_192 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="KernelBase.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="304-304"];
m37_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="400-400"];
m37_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="405-410"];
m37_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.LongSequence)", span="413-413"];
m37_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="400-400"];
m37_347 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="852-852"];
m37_348 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="855-860"];
m37_349 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Assert.Throws<ApplicationException>(test)", span="863-863"];
m37_350 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="852-852"];
m37_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="798-798"];
m37_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="803-808"];
m37_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset.Value)", span="813-813"];
m37_319 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset))", span="815-815"];
m37_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset != null", span="811-811"];
m37_320 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="798-798"];
m37_447 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1058-1058"];
m37_448 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="KernelBase.cs", label="var expectedResult = new FakeOptionsWithSimpleType { EndPoint = new Uri(''http://localhost/test/''), MyValue = new MySimpleType(''custom-value'') }", span="1061-1061"];
m37_449 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSimpleType>>(() => new FakeOptionsWithSimpleType()),\r\n                new[] { ''--endpoint=http://localhost/test/'', ''custom-value'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1064-1069"];
m37_450 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="KernelBase.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSimpleType>)result).Value)", span="1072-1072"];
m37_451 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1058-1058"];
m37_391 [cluster="CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", span="2-2"];
m37_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="67-67"];
m37_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithDouble>>(() => new FakeOptionsWithDouble()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="72-77"];
m37_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="KernelBase.cs", label="((Parsed<FakeOptionsWithDouble>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="80-80"];
m37_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="67-67"];
m37_346 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", span="6-6"];
m37_272 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m37_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="115-115"];
m37_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="120-125"];
m37_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", color=red, community=0, file="KernelBase.cs", label="0: ((Parsed<FakeOptions>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="128-128"];
m37_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="115-115"];
m37_202 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", span="4-4"];
m37_31 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m37_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m37_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="346-346"];
m37_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="349-355"];
m37_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="358-363"];
m37_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=red, community=0, file="KernelBase.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="366-366"];
m37_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="346-346"];
m37_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="561-561"];
m37_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="564-564"];
m37_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="567-572"];
m37_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", color=red, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="575-575"];
m37_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="561-561"];
m37_273 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="686-686"];
m37_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="691-696"];
m37_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value.StringValue)", span="699-699"];
m37_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="686-686"];
m37_358 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="872-872"];
m37_359 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNamedAndEmptySets>>(() => new FakeOptionsWithNamedAndEmptySets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="875-880"];
m37_360 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="type == ParserResultType.NotParsed", span="883-883"];
m37_361 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithNamedAndEmptySets>)result).Errors.Should().HaveCount(x => x == expected)", span="885-885"];
m37_362 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="type == ParserResultType.Parsed", span="887-887"];
m37_363 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="result.Should().BeOfType<Parsed<FakeOptionsWithNamedAndEmptySets>>()", span="889-889"];
m37_364 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="872-872"];
m37_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="475-475"];
m37_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="478-482"];
m37_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSets>>(() => new FakeOptionsWithSets()),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="485-490"];
m37_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", color=red, community=0, file="KernelBase.cs", label="0: ((NotParsed<FakeOptionsWithSets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="493-493"];
m37_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="475-475"];
m37_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="445-445"];
m37_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="448-454"];
m37_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=red, community=0, file="KernelBase.cs", label="0: var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="455-455"];
m37_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=red, community=0, file="KernelBase.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="469-469"];
m37_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="458-466"];
m37_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="445-445"];
m37_138 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m37_249 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="621-621"];
m37_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="KernelBase.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="624-624"];
m37_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="627-632"];
m37_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="635-635"];
m37_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="621-621"];
m37_289 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="729-729"];
m37_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="734-739"];
m37_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableInt)", span="742-742"];
m37_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="729-729"];
m37_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m37_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="KernelBase.cs", label="var fakeOptions = new FakeOptions()", span="21-21"];
m37_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)), new Error[] { new HelpRequestedError() })", span="22-23"];
m37_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => fakeOptions),\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="26-31"];
m37_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=green, community=0, file="KernelBase.cs", label="0: result.ShouldBeEquivalentTo(expectedResult)", span="34-34"];
m37_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m37_357 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", span="6-6"];
m37_446 [cluster="CSharpx.Maybe.Nothing<T>()", file="KernelBase.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m37_365 [cluster="Unk.Should", file="KernelBase.cs", label="Entry Unk.Should", span=""];
m37_328 [cluster="Unk.>", file="KernelBase.cs", label="Entry Unk.>", span=""];
m37_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m37_178 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="KernelBase.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m37_12 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="KernelBase.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m37_429 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="1022-1022"];
m37_430 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequired>>(() => new FakeOptionsWithTwoRequired()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1025-1030"];
m37_432 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="KernelBase.cs", label="errors.OfType<MissingRequiredOptionError>().Should().HaveCount(x => x == expected)", span="1034-1034"];
m37_431 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="KernelBase.cs", label="var errors = ((NotParsed<FakeOptionsWithTwoRequired>)result).Errors", span="1033-1033"];
m37_433 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="1022-1022"];
m37_232 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="581-581"];
m37_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="584-584"];
m37_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="587-592"];
m37_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="595-595"];
m37_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="581-581"];
m37_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="221-221"];
m37_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="224-224"];
m37_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="227-232"];
m37_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="235-235"];
m37_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="221-221"];
m37_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="541-541"];
m37_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", color=red, community=0, file="KernelBase.cs", label="0: var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="544-544"];
m37_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", color=red, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequired>>(() => new FakeOptionsWithRequired()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="547-552"];
m37_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="KernelBase.cs", label="((NotParsed<FakeOptionsWithRequired>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="555-555"];
m37_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="541-541"];
m37_211 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="KernelBase.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m37_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="KernelBase.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m37_402 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", span="4-4"];
m37_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m37_314 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6"];
m37_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="92-92"];
m37_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", color=green, community=0, file="KernelBase.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequence>>(() => new FakeOptionsWithSequence()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="97-102"];
m37_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="KernelBase.cs", label="((Parsed<FakeOptionsWithSequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="105-105"];
m37_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="92-92"];
m37_434 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="KernelBase.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m37_406 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="957-957"];
m37_407 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="962-967"];
m37_408 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredValue>)result).Value)", span="970-970"];
m37_409 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="957-957"];
m37_107 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m37_171 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="KernelBase.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m37_438 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", file="KernelBase.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", span="4-4"];
m37_442 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="KernelBase.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="1039-1039"];
m37_443 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="KernelBase.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Nothing<Func<FakeImmutableOptions>>(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1044-1049"];
m37_444 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="KernelBase.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeImmutableOptions>)result).Value)", span="1052-1052"];
m37_445 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="KernelBase.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="1039-1039"];
m37_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="KernelBase.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m37_458 [file="KernelBase.cs", label=fakeOptions, span=""];
m37_459 [file="KernelBase.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m37_460 [file="KernelBase.cs", label=int, span=""];
m37_461 [file="KernelBase.cs", label=int, span=""];
m37_462 [file="KernelBase.cs", label=int, span=""];
m37_463 [file="KernelBase.cs", label=int, span=""];
m38_136 [cluster="int.Parse(string, System.IFormatProvider)", file="KernelConfiguration.cs", label="Entry int.Parse(string, System.IFormatProvider)", span="0-0"];
m38_58 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", span="88-88"];
m38_60 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="KernelConfiguration.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="90-90"];
m38_61 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="KernelConfiguration.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="91-91"];
m38_62 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", span="88-88"];
m38_113 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", span="177-177"];
m38_120 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", file="KernelConfiguration.cs", label="return word.Substring(0, 1).ToLowerInvariant() + word.Substring(1);", span="179-179"];
m38_121 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", span="177-177"];
m38_93 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Underscore(string)", span="160-160"];
m38_114 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", file="KernelConfiguration.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''), @''[-\s]'', ''_'').ToLowerInvariant();", span="162-165"];
m38_115 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Underscore(string)", span="160-160"];
m38_150 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="KernelConfiguration.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m38_59 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", span="94-94"];
m38_64 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", file="KernelConfiguration.cs", label="_uncountables.Add(word.ToUpperInvariant())", span="96-96"];
m38_65 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", span="94-94"];
m38_140 [cluster="string.Replace(char, char)", file="KernelConfiguration.cs", label="Entry string.Replace(char, char)", span="0-0"];
m38_89 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", span="223-223"];
m38_145 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="KernelConfiguration.cs", label="!_regex.IsMatch(word)", span="225-225"];
m38_147 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="KernelConfiguration.cs", label="return _regex.Replace(word, _replacement);", span="230-230"];
m38_146 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="KernelConfiguration.cs", label="return null;", span="227-227"];
m38_148 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", span="223-223"];
m38_102 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="KernelConfiguration.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m38_66 [cluster="string.ToUpperInvariant()", file="KernelConfiguration.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m38_88 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="KernelConfiguration.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m38_137 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", span="205-205"];
m38_138 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", file="KernelConfiguration.cs", label="return underscoredWord.Replace('_', '-');", span="207-207"];
m38_139 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", span="205-205"];
m38_103 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", span="170-170"];
m38_117 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", file="KernelConfiguration.cs", label="return word.Substring(0, 1).ToUpperInvariant() + word.Substring(1).ToLowerInvariant();", span="172-172"];
m38_118 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", span="170-170"];
m38_119 [cluster="string.Substring(int, int)", file="KernelConfiguration.cs", label="Entry string.Substring(int, int)", span="0-0"];
m38_94 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Humanize(string)", span="143-143"];
m38_100 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", file="KernelConfiguration.cs", label="return Capitalize(Regex.Replace(lowercaseAndUnderscoredWord, @''_'', '' ''));", span="145-145"];
m38_101 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Humanize(string)", span="143-143"];
m38_73 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", span="109-109"];
m38_74 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", file="KernelConfiguration.cs", label="return ApplyRules(_plurals, word);", span="111-111"];
m38_75 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", span="109-109"];
m38_57 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", span="104-104"];
m38_71 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", file="KernelConfiguration.cs", label="_singulars.Add(new Rule(rule, replacement))", span="106-106"];
m38_72 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", span="104-104"];
m38_99 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="KernelConfiguration.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m38_95 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="KernelConfiguration.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m38_76 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", span="119-119"];
m38_80 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="var result = word", span="121-121"];
m38_81 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="!_uncountables.Contains(word.ToUpperInvariant())", span="123-123"];
m38_82 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="var i = rules.Count - 1", span="125-125"];
m38_84 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="(result = rules[i].Apply(word)) != null", span="127-127"];
m38_86 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="return result;", span="134-134"];
m38_83 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="i >= 0", span="125-125"];
m38_85 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="i--", span="125-125"];
m38_87 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", span="119-119"];
m38_70 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", span="217-217"];
m38_141 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="KernelConfiguration.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="219-219"];
m38_142 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="KernelConfiguration.cs", label="_replacement = replacement", span="220-220"];
m38_143 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", span="217-217"];
m38_107 [cluster="lambda expression", file="KernelConfiguration.cs", label="Entry lambda expression", span="150-150"];
m38_96 [cluster="lambda expression", file="KernelConfiguration.cs", label="Entry lambda expression", span="140-140"];
m38_97 [cluster="lambda expression", file="KernelConfiguration.cs", label="return match.Captures[0].Value.ToUpper(CultureInfo.InvariantCulture);", span="140-140"];
m38_98 [cluster="lambda expression", file="KernelConfiguration.cs", label="Exit lambda expression", span="140-140"];
m38_108 [cluster="lambda expression", file="KernelConfiguration.cs", label="match.Groups[1].Value.ToUpper(CultureInfo.InvariantCulture)", span="150-150"];
m38_109 [cluster="lambda expression", file="KernelConfiguration.cs", label="Exit lambda expression", span="150-150"];
m38_116 [cluster="string.ToLowerInvariant()", file="KernelConfiguration.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m38_0 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Inflector()", span="18-18"];
m38_1 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''$'', ''s'')", span="20-20"];
m38_2 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''s$'', ''s'')", span="21-21"];
m38_3 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(ax|test)is$'', ''$1es'')", span="22-22"];
m38_4 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(octop|vir)us$'', ''$1i'')", span="23-23"];
m38_5 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(alias|status)$'', ''$1es'')", span="24-24"];
m38_6 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(bu)s$'', ''$1ses'')", span="25-25"];
m38_7 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(buffal|tomat)o$'', ''$1oes'')", span="26-26"];
m38_8 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''([ti])um$'', ''$1a'')", span="27-27"];
m38_9 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''sis$'', ''ses'')", span="28-28"];
m38_10 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="29-29"];
m38_11 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(hive)$'', ''$1s'')", span="30-30"];
m38_12 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="31-31"];
m38_13 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="32-32"];
m38_14 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="33-33"];
m38_15 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="34-34"];
m38_16 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''^(ox)$'', ''$1en'')", span="35-35"];
m38_17 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddPlural(''(quiz)$'', ''$1zes'')", span="36-36"];
m38_18 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''s$'', '''')", span="38-38"];
m38_19 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(n)ews$'', ''$1ews'')", span="39-39"];
m38_20 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''([ti])a$'', ''$1um'')", span="40-40"];
m38_21 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="41-41"];
m38_22 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="42-42"];
m38_23 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''([^f])ves$'', ''$1fe'')", span="43-43"];
m38_24 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(hive)s$'', ''$1'')", span="44-44"];
m38_25 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(tive)s$'', ''$1'')", span="45-45"];
m38_26 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''([lr])ves$'', ''$1f'')", span="46-46"];
m38_27 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="47-47"];
m38_28 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(s)eries$'', ''$1eries'')", span="48-48"];
m38_29 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(m)ovies$'', ''$1ovie'')", span="49-49"];
m38_30 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="50-50"];
m38_31 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''([m|l])ice$'', ''$1ouse'')", span="51-51"];
m38_32 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(bus)es$'', ''$1'')", span="52-52"];
m38_33 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(o)es$'', ''$1'')", span="53-53"];
m38_34 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(shoe)s$'', ''$1'')", span="54-54"];
m38_35 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="55-55"];
m38_36 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(octop|vir)i$'', ''$1us'')", span="56-56"];
m38_37 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(alias|status)es$'', ''$1'')", span="57-57"];
m38_38 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''^(ox)en'', ''$1'')", span="58-58"];
m38_39 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="59-59"];
m38_40 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(matr)ices$'', ''$1ix'')", span="60-60"];
m38_41 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", span="61-61"];
m38_42 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddIrregular(''person'', ''people'')", span="63-63"];
m38_43 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddIrregular(''man'', ''men'')", span="64-64"];
m38_44 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddIrregular(''child'', ''children'')", span="65-65"];
m38_45 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddIrregular(''sex'', ''sexes'')", span="66-66"];
m38_46 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddIrregular(''move'', ''moves'')", span="67-67"];
m38_47 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''equipment'')", span="69-69"];
m38_48 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''information'')", span="70-70"];
m38_49 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''rice'')", span="71-71"];
m38_50 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''money'')", span="72-72"];
m38_51 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''species'')", span="73-73"];
m38_52 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''series'')", span="74-74"];
m38_53 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''fish'')", span="75-75"];
m38_54 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="AddUncountable(''sheep'')", span="76-76"];
m38_55 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Inflector()", span="18-18"];
m38_144 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="KernelConfiguration.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m38_149 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="KernelConfiguration.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m38_56 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", span="99-99"];
m38_68 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", file="KernelConfiguration.cs", label="_plurals.Add(new Rule(rule, replacement))", span="101-101"];
m38_69 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", span="99-99"];
m38_67 [cluster="System.Collections.Generic.List<T>.Add(T)", file="KernelConfiguration.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m38_90 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Titleize(string)", span="137-137"];
m38_91 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", file="KernelConfiguration.cs", label="return Regex.Replace(Humanize(Underscore(word)), @''\b([a-z])'',\r\n                                 delegate(Match match) { return match.Captures[0].Value.ToUpper(CultureInfo.InvariantCulture); });", span="139-140"];
m38_92 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Titleize(string)", span="137-137"];
m38_110 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Camelize(string)", span="153-153"];
m38_111 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", file="KernelConfiguration.cs", label="return Uncapitalize(Pascalize(lowercaseAndUnderscoredWord));", span="155-155"];
m38_112 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Camelize(string)", span="153-153"];
m38_122 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", span="182-182"];
m38_123 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="var n = int.Parse(number, CultureInfo.InvariantCulture)", span="184-184"];
m38_126 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="return number + ''th'';", span="189-189"];
m38_129 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="return number + ''st'';", span="195-195"];
m38_131 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="return number + ''nd'';", span="197-197"];
m38_133 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="return number + ''rd'';", span="199-199"];
m38_134 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="return number + ''th'';", span="201-201"];
m38_124 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="var nMod100 = n%100", span="185-185"];
m38_127 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="n%10", span="192-192"];
m38_125 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="nMod100 >= 11 && nMod100 <= 13", span="187-187"];
m38_128 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label=1, span="194-194"];
m38_130 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label=2, span="196-196"];
m38_132 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label=3, span="198-198"];
m38_135 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", span="182-182"];
m38_77 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Singularize(string)", span="114-114"];
m38_78 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", file="KernelConfiguration.cs", label="return ApplyRules(_singulars, word);", span="116-116"];
m38_79 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Singularize(string)", span="114-114"];
m38_104 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", file="KernelConfiguration.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", span="148-148"];
m38_105 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", file="KernelConfiguration.cs", label="return Regex.Replace(lowercaseAndUnderscoredWord, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper(CultureInfo.InvariantCulture));", span="150-150"];
m38_106 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", file="KernelConfiguration.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", span="148-148"];
m38_63 [cluster="string.Substring(int)", file="KernelConfiguration.cs", label="Entry string.Substring(int)", span="0-0"];
m38_151 [file="KernelConfiguration.cs", label="Ninject.Dynamic.Extensions.Inflector.Rule", span=""];
m42_0 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoadingContext.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m42_1 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoadingContext.cs", label="Exit Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m47_66 [cluster="System.Text.StringBuilder.Append(string)", file="Parameter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m47_53 [cluster="Unk.Join", file="Parameter.cs", label="Entry Unk.Join", span=""];
m47_60 [cluster="Unk.JoinTo", file="Parameter.cs", label="Entry Unk.JoinTo", span=""];
m47_44 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Parameter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m47_70 [cluster="System.Text.StringBuilder.ToString()", file="Parameter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m47_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="Parameter.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m47_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="Parameter.cs", label="return new DefaultSentenceBuilder();", span="23-23"];
m47_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="Parameter.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m47_43 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="Parameter.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m47_67 [cluster="string.Substring(int, int)", file="Parameter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m47_52 [cluster="Unk.ToArray", file="Parameter.cs", label="Entry Unk.ToArray", span=""];
m47_65 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Parameter.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m47_62 [cluster="Unk.EndsWith", file="Parameter.cs", label="Entry Unk.EndsWith", span=""];
m47_68 [cluster="System.Text.StringBuilder.Append(char)", file="Parameter.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m47_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Parameter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m47_42 [cluster="string.JoinTo(params string[])", file="Parameter.cs", label="Entry string.JoinTo(params string[])", span="50-50"];
m47_61 [cluster="Unk.Count", file="Parameter.cs", label="Entry Unk.Count", span=""];
m47_69 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="Parameter.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m47_63 [cluster="Unk.Distinct", file="Parameter.cs", label="Entry Unk.Distinct", span=""];
m47_54 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="149-174"];
m47_4 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="69-69"];
m47_5 [cluster="lambda expression", file="Parameter.cs", label="''Required.''", span="69-69"];
m47_6 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="69-69"];
m47_7 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="74-74"];
m47_8 [cluster="lambda expression", file="Parameter.cs", label="''ERROR(S):''", span="74-74"];
m47_9 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="74-74"];
m47_10 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="79-79"];
m47_11 [cluster="lambda expression", file="Parameter.cs", label="''USAGE:''", span="79-79"];
m47_12 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="79-79"];
m47_13 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="86-88"];
m47_14 [cluster="lambda expression", color=red, community=0, file="Parameter.cs", label="0: isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="86-88"];
m47_15 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="86-88"];
m47_16 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="94-94"];
m47_17 [cluster="lambda expression", file="Parameter.cs", label="''Display version information.''", span="94-94"];
m47_18 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="94-94"];
m47_19 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="101-134"];
m47_20 [cluster="lambda expression", file="Parameter.cs", label="error.Tag", span="103-103"];
m47_22 [cluster="lambda expression", file="Parameter.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="106-106"];
m47_24 [cluster="lambda expression", file="Parameter.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="108-109"];
m47_26 [cluster="lambda expression", file="Parameter.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="111-111"];
m47_28 [cluster="lambda expression", file="Parameter.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="113-113"];
m47_31 [cluster="lambda expression", file="Parameter.cs", label="var badFormat = ((BadFormatConversionError)error)", span="118-118"];
m47_34 [cluster="lambda expression", file="Parameter.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="123-123"];
m47_37 [cluster="lambda expression", file="Parameter.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="129-129"];
m47_21 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.BadFormatTokenError", span="105-105"];
m47_23 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.MissingValueOptionError", span="107-107"];
m47_25 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.UnknownOptionError", span="110-110"];
m47_27 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.MissingRequiredOptionError", span="112-112"];
m47_30 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.BadFormatConversionError", span="117-117"];
m47_33 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.SequenceOutOfRangeError", span="122-122"];
m47_36 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.BadVerbSelectedError", span="128-128"];
m47_38 [cluster="lambda expression", file="Parameter.cs", label="ErrorType.NoVerbSelectedError", span="130-130"];
m47_29 [cluster="lambda expression", file="Parameter.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="114-116"];
m47_32 [cluster="lambda expression", file="Parameter.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="119-121"];
m47_35 [cluster="lambda expression", file="Parameter.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with fewer or more items than required.'');", span="124-127"];
m47_39 [cluster="lambda expression", file="Parameter.cs", label="return ''No verb selected.'';", span="131-131"];
m47_40 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="101-134"];
m47_41 [cluster="lambda expression", file="Parameter.cs", label="throw new InvalidOperationException();", span="133-133"];
m47_45 [cluster="lambda expression", file="Parameter.cs", label="Entry lambda expression", span="142-176"];
m47_46 [cluster="lambda expression", file="Parameter.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="144-146"];
m47_47 [cluster="lambda expression", file="Parameter.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="148-174"];
m47_57 [cluster="lambda expression", file="Parameter.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="156-161"];
m47_48 [cluster="lambda expression", file="Parameter.cs", label="return string.Join(Environment.NewLine, msgs);", span="175-175"];
m47_49 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="142-176"];
m47_55 [cluster="lambda expression", file="Parameter.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="151-153"];
m47_56 [cluster="lambda expression", file="Parameter.cs", label="var namesCount = set.Errors.Count()", span="154-154"];
m47_58 [cluster="lambda expression", file="Parameter.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="163-173"];
m47_59 [cluster="lambda expression", file="Parameter.cs", label="Exit lambda expression", span="149-174"];
m47_64 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="Parameter.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m47_51 [cluster="Unk.Select", file="Parameter.cs", label="Entry Unk.Select", span=""];
m47_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="Parameter.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="65-65"];
m47_71 [file="Parameter.cs", label=bySet, span=""];
m49_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m49_23 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="33-33"];
m49_112 [cluster="Unk.nameLookup", file="Plan.cs", label="Entry Unk.nameLookup", span=""];
m49_115 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="83-83"];
m49_116 [cluster="Unk.IsJust", file="Plan.cs", label="Entry Unk.IsJust", span=""];
m49_117 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="88-88"];
m49_113 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="83-83"];
m49_114 [cluster="lambda expression", file="Plan.cs", label="i.IsJust()", span="83-83"];
m49_118 [cluster="lambda expression", file="Plan.cs", label="indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>()", span="88-88"];
m49_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="20-27"];
m49_17 [cluster="Unk.Where", file="Plan.cs", label="Entry Unk.Where", span=""];
m49_18 [cluster="UnknownOptionError.cstr", file="Plan.cs", label="Entry UnknownOptionError.cstr", span=""];
m49_19 [cluster="Unk.Concat", file="Plan.cs", label="Entry Unk.Concat", span=""];
m49_70 [cluster="Unk.Create", file="Plan.cs", label="Entry Unk.Create", span=""];
m49_87 [cluster="System.Func<TResult>.Invoke()", file="Plan.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m49_143 [cluster="char.IsDigit(char)", file="Plan.cs", label="Entry char.IsDigit(char)", span="0-0"];
m49_146 [cluster="string.String(char, int)", file="Plan.cs", label="Entry string.String(char, int)", span="0-0"];
m49_44 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="42-42"];
m49_144 [cluster="CommandLine.Core.Token.Name(string)", file="Plan.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m49_92 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", color=red, community=0, file="Plan.cs", label="0: var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJust()", span="73-84"];
m49_51 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="throw new ArgumentNullException(''args'');", span="131-131"];
m49_52 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=red, community=0, file="Plan.cs", label="0: types == null", span="132-132"];
m49_53 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="throw new ArgumentNullException(''types'');", span="132-132"];
m49_56 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    types,\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture),\r\n                settings);", span="135-142"];
m49_54 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="types.Length == 0", span="133-133"];
m49_55 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="133-133"];
m49_57 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Plan.cs", label="Exit CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="129-129"];
m49_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Plan.cs", label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="44-44"];
m49_36 [cluster="Unk.Select", color=green, community=0, file="Plan.cs", label="0: Entry Unk.Select", span=""];
m49_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m49_37 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", color=green, community=0, file="Plan.cs", label="0: Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m49_38 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="40-40"];
m49_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m49_39 [cluster="lambda expression", color=red, community=0, file="Plan.cs", label="0: arg.EqualsOrdinal(''--'')", span="40-40"];
m49_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="configuration == null", span="38-38"];
m49_88 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="65-65"];
m49_90 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="65-65"];
m49_91 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Plan.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="70-70"];
m49_40 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="40-40"];
m49_85 [cluster="lambda expression", file="Plan.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="62-62"];
m49_86 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="62-62"];
m49_81 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="61-61"];
m49_58 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Plan.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m49_97 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="180-180"];
m49_73 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="58-58"];
m49_78 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="164-164"];
m49_15 [cluster="CommandLine.Core.Token.IsName()", file="Plan.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m49_110 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="80-80"];
m49_20 [cluster="Unk.Succeed", file="Plan.cs", label="Entry Unk.Succeed", span=""];
m49_21 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="33-33"];
m49_22 [cluster="lambda expression", file="Plan.cs", label="!unkTokens.Contains(x)", span="33-33"];
m49_98 [cluster="lambda expression", file="Plan.cs", label="e.Tag != ErrorType.UnknownOptionError", span="180-180"];
m49_16 [cluster="System.Action<T>.Invoke(T)", file="Plan.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m49_105 [cluster="CommandLine.Core.Token.IsValue()", file="Plan.cs", label="Entry CommandLine.Core.Token.IsValue()", span="133-133"];
m49_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m49_49 [cluster="lambda expression", file="Plan.cs", label="tokens.Concat(values)", span="44-44"];
m49_50 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="44-44"];
m49_147 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Plan.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m49_62 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="55-58"];
m49_96 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Plan.cs", label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="70-70"];
m49_106 [cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Plan.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="111-111"];
m49_48 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="44-44"];
m49_71 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="58-58"];
m49_72 [cluster="lambda expression", file="Plan.cs", label="x.Item1 < 0", span="58-58"];
m49_42 [cluster="lambda expression", file="Plan.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture)", span="108-113"];
m49_45 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="110-110"];
m49_43 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="108-113"];
m49_46 [cluster="lambda expression", color=red, community=0, file="Plan.cs", label="0: Tokenize(arguments, optionSpecs, this.settings)", span="110-110"];
m49_47 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="110-110"];
m49_63 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="137-137"];
m49_75 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="163-164"];
m49_74 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m49_68 [cluster="CommandLine.Parser.Dispose()", file="Plan.cs", label="GC.SuppressFinalize(this)", span="152-152"];
m49_64 [cluster="lambda expression", file="Plan.cs", label="Tokenize(arguments, optionSpecs, this.settings)", span="137-137"];
m49_67 [cluster="CommandLine.Parser.Dispose()", file="Plan.cs", label="Dispose(true)", span="150-150"];
m49_69 [cluster="CommandLine.Parser.Dispose()", file="Plan.cs", label="Exit CommandLine.Parser.Dispose()", span="148-148"];
m49_82 [cluster="lambda expression", file="Plan.cs", label="Entry lambda expression", span="165-165"];
m49_76 [cluster="lambda expression", file="Plan.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="164-164"];
m49_84 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="165-165"];
m49_83 [cluster="lambda expression", file="Plan.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="165-165"];
m49_89 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Plan.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="184-184"];
m49_100 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Plan.cs", label="parserResult.Errors.Any()", span="186-186"];
m49_101 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Plan.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="188-188"];
m49_109 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="188-188"];
m49_99 [cluster="lambda expression", file="Plan.cs", label="Exit lambda expression", span="180-180"];
m49_120 [cluster="lambda expression", file="Plan.cs", label="CommandLine.Parser", span=""];
m49_102 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Plan.cs", label="return parserResult;", span="191-191"];
m49_108 [cluster="lambda expression", file="Plan.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", span="188-188"];
m49_119 [cluster="CommandLine.ParserSettings.Dispose()", file="Plan.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m49_121 [cluster="lambda expression", file="Plan.cs", label="System.Func<T>", span=""];
m49_122 [cluster="lambda expression", file="Plan.cs", label="string[]", span=""];
m49_60 [cluster="Unk.SelectMany", file="Plan.cs", label="Entry Unk.SelectMany", span=""];
m49_41 [cluster="string.EqualsOrdinal(string)", file="Plan.cs", label="Entry string.EqualsOrdinal(string)", span="40-40"];
m49_59 [cluster="Unk.SkipWhile", file="Plan.cs", label="Entry Unk.SkipWhile", span=""];
m49_61 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="Plan.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m49_65 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Plan.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m49_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="var errors = new List<Error>()", span="17-17"];
m49_79 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Plan.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m49_77 [cluster="Unk.FirstOrDefault", file="Plan.cs", label="Entry Unk.FirstOrDefault", span=""];
m49_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m49_93 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", color=red, community=0, file="Plan.cs", label="0: var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJust()", span="86-90"];
m49_107 [cluster="CSharpx.Maybe.Nothing<T>()", file="Plan.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m49_95 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Plan.cs", label="return normalized;", span="94-94"];
m49_94 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Plan.cs", label="var normalized = tokens.Except(toExclude)", span="92-92"];
m49_166 [cluster="string.Split(params char[])", file="Plan.cs", label="Entry string.Split(params char[])", span="0-0"];
m49_148 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Plan.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m49_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="var normalized = Normalize(tokens, nameLookup)", span="29-29"];
m49_163 [cluster="string.IndexOf(char)", file="Plan.cs", label="Entry string.IndexOf(char)", span="0-0"];
m49_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="var unkTokens = (from t in normalized where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="31-31"];
m49_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="return Result.Succeed(normalized.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="33-33"];
m49_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m49_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="throw new ArgumentNullException(''configuration'');", span="38-38"];
m49_142 [cluster="string.Substring(int)", file="Plan.cs", label="Entry string.Substring(int)", span="0-0"];
m49_66 [cluster="CommandLine.Parser.Dispose()", file="Plan.cs", label="Entry CommandLine.Parser.Dispose()", span="148-148"];
m49_32 [cluster="Unk.Any", file="Plan.cs", label="Entry Unk.Any", span=""];
m49_164 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Plan.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m49_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m49_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="configuration(this.settings)", span="41-41"];
m49_123 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="string[]", span=""];
m49_126 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="CommandLine.ParserSettings", span=""];
m49_127 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="CommandLine.ParserResult<T>", span=""];
m49_129 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="yield return Token.Name(text);", span="113-113"];
m49_130 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="yield break;", span="114-114"];
m49_132 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="yield return Token.Name(first);", span="118-118"];
m49_138 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="yield return Token.Name(n);", span="128-128"];
m49_140 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="137-137"];
m49_124 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="params System.Type[]", span=""];
m49_128 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="value.Length == 2", span="111-111"];
m49_136 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="!seen.Contains(c) && nameLookup(n)", span="125-125"];
m49_125 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m49_131 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="var first = text.Substring(0, 1)", span="117-117"];
m49_134 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="text.Substring(1)", span="122-122"];
m49_139 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="seen.Count() < text.Length", span="135-135"];
m49_133 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="var seen = new List<char> { first[0] }", span="120-120"];
m49_137 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="seen.Add(c)", span="127-127"];
m49_135 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="var n = new string(c, 1)", span="124-124"];
m49_141 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Plan.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="97-97"];
m49_165 [cluster="System.Action<T>.Invoke(T)", file="Plan.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m49_145 [cluster="string.Substring(int, int)", file="Plan.cs", label="Entry string.Substring(int, int)", span="0-0"];
m49_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0"];
m49_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m49_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Plan.cs", label="Action<Error> onError = errors.Add", span="18-18"];
m49_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m49_111 [cluster="System.IO.TextWriter.Write(string)", file="Plan.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m49_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Plan.cs", label="this.settings = new ParserSettings()", span="40-40"];
m49_150 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="146-146"];
m49_154 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="yield return Token.Name(text);", span="152-152"];
m49_155 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="yield break;", span="153-153"];
m49_158 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="yield break;", span="158-158"];
m49_160 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="yield return Token.Name(parts[0]);", span="161-161"];
m49_161 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="yield return Token.Value(parts[1], true);", span="162-162"];
m49_151 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="var text = value.Substring(2)", span="148-148"];
m49_157 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="onError(new BadFormatTokenError(value))", span="157-157"];
m49_152 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="var equalIndex = text.IndexOf('=')", span="149-149"];
m49_159 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="var parts = text.Split('=')", span="160-160"];
m49_153 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="equalIndex <= 0", span="150-150"];
m49_156 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="equalIndex == 1", span="155-155"];
m49_162 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Plan.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="142-142"];
m49_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Plan.cs", label="0: this.settings.Consumed = true", span="42-42"];
m49_25 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Plan.cs", label="args == null", span="87-87"];
m49_26 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=red, community=0, file="Plan.cs", label="0: throw new ArgumentNullException(''args'');", span="87-87"];
m49_27 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Plan.cs", label="return ParseArguments(() => new T(), args);", span="89-89"];
m49_28 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=red, community=0, file="Plan.cs", label="0: Exit CommandLine.Parser.ParseArguments<T>(string[])", span="84-84"];
m49_30 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Plan.cs", label="return tokenizer(arguments);", span="46-46"];
m49_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Plan.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="36-36"];
m49_167 [cluster="CommandLine.Core.Token.Value(string, bool)", file="Plan.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m49_24 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Plan.cs", label="Entry CommandLine.Parser.ParseArguments<T>(string[])", span="84-84"];
m49_149 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Plan.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m49_168 [file="Plan.cs", label=unkTokens, span=""];
m49_169 [file="Plan.cs", label=values, span=""];
m49_170 [file="Plan.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m49_171 [file="Plan.cs", label=int, span=""];
m49_172 [file="Plan.cs", label=replaces, span=""];
m49_173 [file="Plan.cs", label=int, span=""];
m49_174 [file="Plan.cs", label="CommandLine.Core.Token", span=""];
m49_175 [file="Plan.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m49_176 [file="Plan.cs", label="System.Func<string, bool>", span=""];
m49_177 [file="Plan.cs", label=indexes, span=""];
m51_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m51_40 [cluster="string.Equals(string)", file="PropertyInjectionStrategy.cs", label="Entry string.Equals(string)", span="0-0"];
m51_10 [cluster="System.Collections.Generic.List<T>.List()", file="PropertyInjectionStrategy.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m51_6 [cluster="CommandLine.Core.Token.Name(string)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m51_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="PropertyInjectionStrategy.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m51_15 [cluster="Unk.ShouldBeEquivalentTo", file="PropertyInjectionStrategy.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m51_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m51_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="71-73"];
m51_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="74-75"];
m51_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="90-90"];
m51_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="var result =\r\n                Tokenizer.Normalize(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                    nameLookup)", span="78-87"];
m51_34 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="PropertyInjectionStrategy.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m51_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m51_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24"];
m51_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26"];
m51_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="38-38"];
m51_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-35"];
m51_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m51_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m51_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m51_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="47-48"];
m51_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="49-50"];
m51_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="62-62"];
m51_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="53-59"];
m51_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyInjectionStrategy.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m51_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m51_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="PropertyInjectionStrategy.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m51_37 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Entry lambda expression", span="75-75"];
m51_17 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="35-35"];
m51_16 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Entry lambda expression", span="35-35"];
m51_18 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Exit lambda expression", span="35-35"];
m51_27 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="59-59"];
m51_26 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Entry lambda expression", span="59-59"];
m51_28 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Exit lambda expression", span="59-59"];
m51_38 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="75-75"];
m51_39 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Exit lambda expression", span="75-75"];
m51_7 [cluster="CommandLine.Core.Token.Value(string)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m51_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="PropertyInjectionStrategy.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m51_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PropertyInjectionStrategy.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m51_36 [cluster="CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", span="67-67"];
m51_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="PropertyInjectionStrategy.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m51_41 [file="PropertyInjectionStrategy.cs", label=specs, span=""];
m51_42 [file="PropertyInjectionStrategy.cs", label=specs, span=""];
m54_89 [cluster="Unk.f", file="ReaderWriterLock.cs", label="Entry Unk.f", span=""];
m54_61 [cluster="CommandLine.Core.Specification.IsOption()", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m54_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m54_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="ReaderWriterLock.cs", label="0: return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture,\r\n                nonFatalErrors);", span="21-34"];
m54_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="ReaderWriterLock.cs", label="0: Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m54_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m54_5 [cluster="lambda expression", file="ReaderWriterLock.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="25-25"];
m54_6 [cluster="lambda expression", file="ReaderWriterLock.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="26-28"];
m54_4 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="23-30"];
m54_7 [cluster="lambda expression", file="ReaderWriterLock.cs", label="return explodedTokens;", span="29-29"];
m54_8 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="23-30"];
m54_78 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m54_68 [cluster="Unk.IsMutable", file="ReaderWriterLock.cs", label="Entry Unk.IsMutable", span=""];
m54_80 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="ReaderWriterLock.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m54_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m54_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m54_11 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="25-25"];
m54_56 [cluster="object.GetType()", file="ReaderWriterLock.cs", label="Entry object.GetType()", span="0-0"];
m54_63 [cluster="CommandLine.Core.Specification.IsValue()", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m54_49 [cluster="Unk.ThrowingValidate", file="ReaderWriterLock.cs", label="Entry Unk.ThrowingValidate", span=""];
m54_82 [cluster="Unk.Memorize", file="ReaderWriterLock.cs", label="Entry Unk.Memorize", span=""];
m54_84 [cluster="Unk.Except", file="ReaderWriterLock.cs", label="Entry Unk.Except", span=""];
m54_95 [cluster="CSharpx.Maybe.Nothing<T>()", file="ReaderWriterLock.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m54_57 [cluster="System.Type.ToTypeInfo()", file="ReaderWriterLock.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m54_94 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m54_15 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="28-28"];
m54_101 [cluster="Unk.>", file="ReaderWriterLock.cs", label="Entry Unk.>", span=""];
m54_112 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m54_147 [cluster="System.Type.CreateEmptyArray()", file="ReaderWriterLock.cs", label="Entry System.Type.CreateEmptyArray()", span="125-125"];
m54_134 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="ReaderWriterLock.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334"];
m54_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReaderWriterLock.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m54_66 [cluster="Unk.FromOptionSpecification", file="ReaderWriterLock.cs", label="Entry Unk.FromOptionSpecification", span=""];
m54_70 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReaderWriterLock.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m54_100 [cluster="System.Type.IsMutable()", file="ReaderWriterLock.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m54_146 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ReaderWriterLock.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m54_71 [cluster="Unk.ToArray", file="ReaderWriterLock.cs", label="Entry Unk.ToArray", span=""];
m54_96 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m54_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReaderWriterLock.cs", label="CommandLine.Core.Verb", span=""];
m54_64 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ReaderWriterLock.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m54_67 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ReaderWriterLock.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m54_62 [cluster="Unk.MapValues", file="ReaderWriterLock.cs", label="Entry Unk.MapValues", span=""];
m54_74 [cluster="Unk.ToLower", file="ReaderWriterLock.cs", label="Entry Unk.ToLower", span=""];
m54_12 [cluster="lambda expression", file="ReaderWriterLock.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="25-25"];
m54_13 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="25-25"];
m54_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m54_77 [cluster="Unk.Invoke", file="ReaderWriterLock.cs", label="Entry Unk.Invoke", span=""];
m54_52 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m54_54 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ReaderWriterLock.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m54_145 [cluster="System.Type.GetGenericArguments()", file="ReaderWriterLock.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m54_73 [cluster="Unk.GetParameters", file="ReaderWriterLock.cs", label="Entry Unk.GetParameters", span=""];
m54_85 [cluster="Unk.ToParserResult", file="ReaderWriterLock.cs", label="Entry Unk.ToParserResult", span=""];
m54_50 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ReaderWriterLock.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m54_60 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m54_102 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="58-58"];
m54_16 [cluster="Unk.Single", file="ReaderWriterLock.cs", label="Entry Unk.Single", span=""];
m54_17 [cluster="Unk.Create", file="ReaderWriterLock.cs", label="Entry Unk.Create", span=""];
m54_98 [cluster="lambda expression", file="ReaderWriterLock.cs", label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="57-60"];
m54_106 [cluster="lambda expression", file="ReaderWriterLock.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="77-77"];
m54_110 [cluster="lambda expression", file="ReaderWriterLock.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="82-82"];
m54_114 [cluster="lambda expression", file="ReaderWriterLock.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="88-88"];
m54_117 [cluster="lambda expression", file="ReaderWriterLock.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="92-92"];
m54_86 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="45-45"];
m54_91 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="47-48"];
m54_105 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="77-77"];
m54_109 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="82-82"];
m54_113 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="88-88"];
m54_116 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="92-92"];
m54_120 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="100-100"];
m54_148 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="119-119"];
m54_151 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="120-120"];
m54_123 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="103-103"];
m54_127 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="104-104"];
m54_131 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="106-106"];
m54_135 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="107-107"];
m54_138 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="109-111"];
m54_142 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="112-112"];
m54_87 [cluster="lambda expression", file="ReaderWriterLock.cs", label="f().GetType()", span="45-45"];
m54_88 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="45-45"];
m54_92 [cluster="lambda expression", file="ReaderWriterLock.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="47-48"];
m54_93 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="47-48"];
m54_97 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Entry lambda expression", span="56-60"];
m54_99 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="56-60"];
m54_103 [cluster="lambda expression", file="ReaderWriterLock.cs", label="f()", span="58-58"];
m54_104 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="58-58"];
m54_107 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="77-77"];
m54_111 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="82-82"];
m54_115 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="88-88"];
m54_118 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="92-92"];
m54_121 [cluster="lambda expression", file="ReaderWriterLock.cs", label="f()", span="100-100"];
m54_122 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="100-100"];
m54_124 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Value.IsJust()", span="103-103"];
m54_125 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="103-103"];
m54_128 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Value.FromJust()", span="104-104"];
m54_129 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="104-104"];
m54_132 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="106-106"];
m54_133 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="106-106"];
m54_136 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Specification.DefaultValue.FromJust()", span="107-107"];
m54_137 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="107-107"];
m54_139 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="109-111"];
m54_140 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="109-111"];
m54_143 [cluster="lambda expression", file="ReaderWriterLock.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="112-112"];
m54_144 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="112-112"];
m54_149 [cluster="lambda expression", file="ReaderWriterLock.cs", label=v, span="119-119"];
m54_150 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="119-119"];
m54_152 [cluster="lambda expression", file="ReaderWriterLock.cs", label=d, span="120-120"];
m54_153 [cluster="lambda expression", file="ReaderWriterLock.cs", label="Exit lambda expression", span="120-120"];
m54_76 [cluster="Unk.CreateDefaultForImmutable", file="ReaderWriterLock.cs", label="Entry Unk.CreateDefaultForImmutable", span=""];
m54_83 [cluster="Unk.Contains", file="ReaderWriterLock.cs", label="Entry Unk.Contains", span=""];
m54_141 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ReaderWriterLock.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m54_53 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ReaderWriterLock.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m54_79 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ReaderWriterLock.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m54_69 [cluster="System.Activator.CreateInstance<T>()", file="ReaderWriterLock.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m54_90 [cluster="Unk.GetType", file="ReaderWriterLock.cs", label="Entry Unk.GetType", span=""];
m54_65 [cluster="Unk.Single", file="ReaderWriterLock.cs", label="Entry Unk.Single", span=""];
m54_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="45-45"];
m54_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="56-60"];
m54_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="arguments.Any()", span="62-62"];
m54_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="64-64"];
m54_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="71-71"];
m54_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="75-77"];
m54_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var optionSpecPropsResult = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="79-83"];
m54_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var valueSpecPropsResult = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="85-88"];
m54_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="90-92"];
m54_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="100-100"];
m54_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var warnings =\r\n                from e in allErrors where nonFatalErrors.Contains(e.Tag)\r\n                select e", span="137-139"];
m54_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="47-48"];
m54_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="typeInfo.IsMutable()", span="98-98"];
m54_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="116-116"];
m54_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var specs = from pt in specProps select pt.Specification", span="50-50"];
m54_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="52-54"];
m54_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="return new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), preprocessorErrors);", span="67-67"];
m54_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="preprocessorErrors.Any()", span="65-65"];
m54_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var tokens = tokenizerResult.SucceededWith()", span="73-73"];
m54_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var allErrors =\r\n                tokenizerResult\r\n                    .SuccessfulMessages()\r\n                        .Concat(missingValueErrors)\r\n                        .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(validationErrors)\r\n                    .Memorize()", span="128-135"];
m54_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="125-126"];
m54_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var specPropsWithValue = optionSpecPropsResult.SucceededWith()\r\n                .Concat(valueSpecPropsResult.SucceededWith())", span="94-95"];
m54_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="T instance", span="97-97"];
m54_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="101-112"];
m54_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="117-121"];
m54_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="instance = (T)ctor.Invoke(values)", span="122-122"];
m54_45 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="return allErrors\r\n                .Except(warnings)\r\n                .ToParserResult(instance);", span="141-143"];
m54_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ReaderWriterLock.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m54_48 [cluster="Unk.GetSpecifications", file="ReaderWriterLock.cs", label="Entry Unk.GetSpecifications", span=""];
m54_59 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="ReaderWriterLock.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m54_72 [cluster="Unk.GetConstructor", file="ReaderWriterLock.cs", label="Entry Unk.GetConstructor", span=""];
m54_81 [cluster="Unk.Concat", file="ReaderWriterLock.cs", label="Entry Unk.Concat", span=""];
m54_126 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ReaderWriterLock.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m54_119 [cluster="string.MatchName(string, string, System.StringComparer)", file="ReaderWriterLock.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m54_58 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ReaderWriterLock.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m54_108 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReaderWriterLock.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m54_75 [cluster="string.ToLower()", file="ReaderWriterLock.cs", label="Entry string.ToLower()", span="0-0"];
m54_55 [cluster="System.Func<TResult>.Invoke()", file="ReaderWriterLock.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m54_130 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="ReaderWriterLock.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m54_47 [cluster="Unk.Return", file="ReaderWriterLock.cs", label="Entry Unk.Return", span=""];
m54_154 [file="ReaderWriterLock.cs", label="System.StringComparer", span=""];
m54_155 [file="ReaderWriterLock.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m54_156 [file="ReaderWriterLock.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m54_157 [file="ReaderWriterLock.cs", label=specProps, span=""];
m54_158 [file="ReaderWriterLock.cs", label="System.StringComparer", span=""];
m54_159 [file="ReaderWriterLock.cs", label=optionSpecs, span=""];
m54_160 [file="ReaderWriterLock.cs", label="System.Globalization.CultureInfo", span=""];
m54_161 [file="ReaderWriterLock.cs", label=token, span=""];
m55_49 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="46-46"];
m55_48 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="ReadonlyKernel.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99"];
m55_50 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109"];
m55_45 [cluster="string.Split(char[], int)", file="ReadonlyKernel.cs", label="Entry string.Split(char[], int)", span="0-0"];
m55_47 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67"];
m55_46 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130"];
m55_51 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124"];
m55_2 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="ReadonlyKernel.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38"];
m55_3 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="40-40"];
m55_4 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: var option = map[parts[0]]", span="41-41"];
m55_11 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="53-53"];
m55_13 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: parts.Length == 2", span="56-56"];
m55_15 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: valueSetting = option.SetValue(parts[1], options)", span="60-60"];
m55_21 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: items.Insert(0, parts[1])", span="71-71"];
m55_37 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: parts.Length == 2", span="106-106"];
m55_5 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: var valueSetting = false", span="42-42"];
m55_6 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: option == null", span="44-44"];
m55_8 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: option.IsDefined = true", span="47-47"];
m55_9 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="49-49"];
m55_10 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !option.IsBoolean", span="51-51"];
m55_14 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !option.IsArray", span="58-58"];
m55_17 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="62-62"];
m55_19 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="68-68"];
m55_22 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: valueSetting = option.SetValue(items, options)", span="73-73"];
m55_24 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="75-75"];
m55_26 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !option.IsArray", span="82-82"];
m55_27 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="84-84"];
m55_29 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="86-86"];
m55_31 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="92-92"];
m55_33 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: valueSetting = option.SetValue(items, options)", span="96-96"];
m55_35 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="98-98"];
m55_39 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: valueSetting = option.SetValue(true, options)", span="109-109"];
m55_41 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="111-111"];
m55_12 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ParserState.Failure;", span="54-54"];
m55_16 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !valueSetting", span="61-61"];
m55_18 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="64-64"];
m55_20 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="70-70"];
m55_23 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !valueSetting", span="74-74"];
m55_25 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="77-77"];
m55_28 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !valueSetting", span="85-85"];
m55_30 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="88-88"];
m55_32 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="94-94"];
m55_34 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !valueSetting", span="97-97"];
m55_36 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="100-100"];
m55_40 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: !valueSetting", span="110-110"];
m55_42 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="113-113"];
m55_38 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ParserState.Failure;", span="107-107"];
m55_7 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="ReadonlyKernel.cs", label="0: return ParserState.Failure;", span="45-45"];
m55_43 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="ReadonlyKernel.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38"];
m55_53 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="ReadonlyKernel.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m55_55 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114"];
m55_56 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="ReadonlyKernel.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190"];
m55_54 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="ReadonlyKernel.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110"];
m55_52 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="ReadonlyKernel.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82"];
m55_44 [cluster="string.Substring(int)", file="ReadonlyKernel.cs", label="Entry string.Substring(int)", span="0-0"];
m55_57 [file="ReadonlyKernel.cs", label="CommandLine.LongOptionParser", span=""];
m56_0 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="ReferenceEqualWeakReference.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m56_1 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="ReferenceEqualWeakReference.cs", label="this.value = value", span="14-14"];
m56_2 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="ReferenceEqualWeakReference.cs", label="Exit CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m56_3 [file="ReferenceEqualWeakReference.cs", label="CommandLine.Tests.Fakes.MySimpleType", span=""];
m57_81 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.BuildPlan(System.Type)", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.BuildPlan(System.Type)", span="133-133"];
m57_82 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.BuildPlan(System.Type)", color=red, community=0, file="Request.cs", label="0: throw new NotImplementedException();", span="135-135"];
m57_83 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.BuildPlan(System.Type)", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.BuildPlan(System.Type)", span="133-133"];
m57_34 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", span="55-55"];
m57_35 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="var sword = new Sword()", span="57-57"];
m57_36 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="var swordWeakReference = new WeakReference(sword)", span="58-58"];
m57_38 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="this.Remember(sword, context)", span="61-61"];
m57_37 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="var context = CreateContextMock(new TestObject(42), this.bindingConfigurationMock.Object)", span="59-59"];
m57_40 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="bool swordCollected = !swordWeakReference.IsAlive", span="63-63"];
m57_39 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="GC.Collect()", span="62-62"];
m57_41 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="swordCollected.Should().BeFalse()", span="65-65"];
m57_42 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", span="55-55"];
m57_75 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123"];
m57_76 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="Request.cs", label="return this.scope.Target;", span="125-125"];
m57_77 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123"];
m57_66 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="111-111"];
m57_67 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", color=red, community=0, file="Request.cs", label="0: this.scope = new WeakReference(scope)", span="113-113"];
m57_68 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", color=red, community=0, file="Request.cs", label="0: this.Binding = binding", span="114-114"];
m57_69 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", color=red, community=0, file="Request.cs", label="0: this.GenericArguments = genericArguments", span="115-115"];
m57_70 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="111-111"];
m57_71 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetProvider()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.GetProvider()", span="118-118"];
m57_72 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetProvider()", file="Request.cs", label="throw new NotImplementedException();", span="120-120"];
m57_73 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetProvider()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.GetProvider()", span="118-118"];
m57_31 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="Request.cs", label="Entry Ninject.Activation.Caching.Cache.Prune()", span="181-181"];
m57_32 [cluster="Unk.Should", file="Request.cs", label="Entry Unk.Should", span=""];
m57_44 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="68-68"];
m57_45 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="Request.cs", label="var bindingMock = new Mock<IBinding>()", span="70-70"];
m57_46 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="Request.cs", label="bindingMock.Setup(b => b.BindingConfiguration).Returns(bindingConfiguration)", span="71-71"];
m57_47 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="Request.cs", label="return new ContextMock(scope, bindingMock.Object, genericArguments);", span="72-72"];
m57_48 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="68-68"];
m57_9 [cluster="Mock<IBindingConfiguration>.cstr", file="Request.cs", label="Entry Mock<IBindingConfiguration>.cstr", span=""];
m57_12 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", span="36-36"];
m57_13 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="var sword = new Sword()", span="38-38"];
m57_14 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="var swordWeakReference = new WeakReference(sword)", span="39-39"];
m57_16 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="this.Remember(sword, context)", span="41-41"];
m57_15 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="var context = CreateContextMock(new TestObject(42), this.bindingConfigurationMock.Object)", span="40-40"];
m57_22 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="bool swordCollected = !swordWeakReference.IsAlive", span="49-49"];
m57_17 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="sword = null", span="43-43"];
m57_18 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="context = null", span="44-44"];
m57_19 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="GC.Collect()", span="45-45"];
m57_20 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="cache.Prune()", span="46-46"];
m57_21 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="GC.Collect()", span="48-48"];
m57_23 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="swordCollected.Should().BeTrue()", span="50-50"];
m57_24 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", span="36-36"];
m57_60 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Dispose()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.Dispose()", span="83-83"];
m57_61 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Dispose()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.PipelineMock.Dispose()", span="83-83"];
m57_10 [cluster="Cache.cstr", file="Request.cs", label="Entry Cache.cstr", span=""];
m57_59 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Request.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="91-91"];
m57_74 [cluster="System.NotImplementedException.NotImplementedException()", file="Request.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m57_25 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="Request.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m57_78 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.Resolve()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.Resolve()", span="128-128"];
m57_79 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.Resolve()", color=red, community=0, file="Request.cs", label="0: throw new NotImplementedException();", span="130-130"];
m57_80 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.Resolve()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.Resolve()", span="128-128"];
m57_28 [cluster="Unk.CreateContextMock", file="Request.cs", label="Entry Unk.CreateContextMock", span=""];
m57_43 [cluster="Unk.BeFalse", file="Request.cs", label="Entry Unk.BeFalse", span=""];
m57_50 [cluster="Unk.Setup", file="Request.cs", label="Entry Unk.Setup", span=""];
m57_3 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", span="27-27"];
m57_4 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="Request.cs", label="this.cachePrunerMock = new Mock<ICachePruner>()", span="29-29"];
m57_5 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="Request.cs", label="this.bindingConfigurationMock = new Mock<IBindingConfiguration>()", span="30-30"];
m57_6 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="Request.cs", label="this.cache = new Cache(new PipelineMock(), this.cachePrunerMock.Object)", span="31-31"];
m57_7 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", span="27-27"];
m57_52 [cluster="ContextMock.cstr", file="Request.cs", label="Entry ContextMock.cstr", span=""];
m57_49 [cluster="Mock<IBinding>.cstr", file="Request.cs", label="Entry Mock<IBinding>.cstr", span=""];
m57_58 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="Request.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="31-31"];
m57_53 [cluster="lambda expression", file="Request.cs", label="Entry lambda expression", span="71-71"];
m57_54 [cluster="lambda expression", file="Request.cs", label="b.BindingConfiguration", span="71-71"];
m57_55 [cluster="lambda expression", file="Request.cs", label="Exit lambda expression", span="71-71"];
m57_30 [cluster="System.GC.Collect()", file="Request.cs", label="Entry System.GC.Collect()", span="0-0"];
m57_64 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="97-97"];
m57_65 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.PipelineMock.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="97-97"];
m57_0 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", span="22-22"];
m57_1 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="Request.cs", label="this.SetUp()", span="24-24"];
m57_2 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", span="22-22"];
m57_27 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="Request.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m57_33 [cluster="Unk.BeTrue", file="Request.cs", label="Entry Unk.BeTrue", span=""];
m57_26 [cluster="System.WeakReference.WeakReference(object)", file="Request.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m57_51 [cluster="Unk.Returns", file="Request.cs", label="Entry Unk.Returns", span=""];
m57_62 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="93-93"];
m57_63 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.PipelineMock.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="93-93"];
m57_29 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75"];
m57_56 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="Request.cs", label="this.cache.Remember(context, new InstanceReference { Instance = sword })", span="77-77"];
m57_57 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="Request.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75"];
m57_11 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", file="Request.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", span="81-81"];
m57_8 [cluster="Mock<ICachePruner>.cstr", file="Request.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m57_84 [file="Request.cs", label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", span=""];
m57_85 [file="Request.cs", label="Ninject.Tests.Unit.CacheTests.ContextMock", span=""];
m59_22 [cluster="Unk.SequenceEqual", file="SharedAssemblyInfo.cs", label="Entry Unk.SequenceEqual", span=""];
m59_37 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SharedAssemblyInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m59_23 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m59_24 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SharedAssemblyInfo.cs", label="return ParserResult.Create(tag, instance, errors, Maybe.Nothing<IEnumerable<Type>>());", span="102-102"];
m59_25 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m59_41 [cluster="System.Func<T, TResult>.Invoke(T)", file="SharedAssemblyInfo.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m59_26 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SharedAssemblyInfo.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m59_17 [cluster="object.GetHashCode()", file="SharedAssemblyInfo.cs", label="Entry object.GetHashCode()", span="0-0"];
m59_36 [cluster="object.Equals(object, object)", file="SharedAssemblyInfo.cs", label="Entry object.Equals(object, object)", span="0-0"];
m59_13 [cluster="object.Equals(object)", file="SharedAssemblyInfo.cs", label="Entry object.Equals(object)", span="0-0"];
m59_14 [cluster="CommandLine.ParserResult<T>.GetHashCode()", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult<T>.GetHashCode()", span="77-77"];
m59_15 [cluster="CommandLine.ParserResult<T>.GetHashCode()", file="SharedAssemblyInfo.cs", label="return new { this.Value, this.Errors }.GetHashCode();", span="79-79"];
m59_16 [cluster="CommandLine.ParserResult<T>.GetHashCode()", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult<T>.GetHashCode()", span="77-77"];
m59_6 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult<T>.Equals(object)", span="62-62"];
m59_7 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="var other = obj as ParserResult<T>", span="64-64"];
m59_10 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="return base.Equals(obj);", span="70-70"];
m59_8 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="other != null", span="65-65"];
m59_9 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="return this.Equals(other);", span="67-67"];
m59_11 [cluster="CommandLine.ParserResult<T>.Equals(object)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult<T>.Equals(object)", span="62-62"];
m59_38 [cluster="CommandLine.ParserResult.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="114-114"];
m59_39 [cluster="CommandLine.ParserResult.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="SharedAssemblyInfo.cs", label="return new ParserResult<T>(parserResult.Tag, parserResult.Value, func(parserResult.Errors), parserResult.VerbTypes);", span="118-118"];
m59_40 [cluster="CommandLine.ParserResult.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="114-114"];
m59_12 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m59_18 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="SharedAssemblyInfo.cs", label="other == null", span="89-89"];
m59_20 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="SharedAssemblyInfo.cs", label="return this.Value.Equals(other.Value) && this.Errors.SequenceEqual(other.Errors);", span="94-94"];
m59_19 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="SharedAssemblyInfo.cs", label="return false;", span="91-91"];
m59_21 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m59_27 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="105-105"];
m59_28 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="object.Equals(instance, default(T))", span="107-107"];
m59_30 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="errors == null", span="108-108"];
m59_32 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="verbTypes == null", span="109-109"];
m59_34 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="return new ParserResult<T>(tag, instance, errors, verbTypes);", span="111-111"];
m59_29 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="throw new ArgumentNullException(''instance'');", span="107-107"];
m59_31 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="throw new ArgumentNullException(''errors'');", span="108-108"];
m59_33 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="throw new ArgumentNullException(''verbTypes'');", span="109-109"];
m59_35 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="105-105"];
m59_0 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m59_1 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="this.tag = tag", span="25-25"];
m59_2 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="this.value = value", span="26-26"];
m59_3 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="this.errors = errors", span="27-27"];
m59_4 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="this.verbTypes = verbTypes", span="28-28"];
m59_5 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SharedAssemblyInfo.cs", label="Exit CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m59_42 [file="SharedAssemblyInfo.cs", label="CommandLine.ParserResult<T>", span=""];
m60_0 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="22-22"];
m60_1 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="return assembly.GetExportedTypes().Any(IsLoadableModule);", span="24-24"];
m60_2 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="22-22"];
m60_5 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="27-27"];
m60_6 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="assembly.GetExportedTypes().Where(IsLoadableModule)", span="29-29"];
m60_7 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="yield return Activator.CreateInstance(type) as INinjectModule;", span="30-30"];
m60_8 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="StandardBindingResolver.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="27-27"];
m60_4 [cluster="Unk.Any", file="StandardBindingResolver.cs", label="Entry Unk.Any", span=""];
m60_3 [cluster="System.Reflection.Assembly.GetExportedTypes()", file="StandardBindingResolver.cs", label="Entry System.Reflection.Assembly.GetExportedTypes()", span="0-0"];
m60_15 [cluster="System.Type.GetConstructor(System.Type[])", file="StandardBindingResolver.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m60_11 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="StandardBindingResolver.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="33-33"];
m60_12 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="StandardBindingResolver.cs", label="return typeof(INinjectModule).IsAssignableFrom(type)\r\n				&& !type.IsAbstract\r\n				&& !type.IsInterface\r\n				&& type.GetConstructor(Type.EmptyTypes) != null;", span="35-38"];
m60_13 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="StandardBindingResolver.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="33-33"];
m60_14 [cluster="System.Type.IsAssignableFrom(System.Type)", file="StandardBindingResolver.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m60_10 [cluster="System.Activator.CreateInstance(System.Type)", file="StandardBindingResolver.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m60_9 [cluster="Unk.Where", file="StandardBindingResolver.cs", label="Entry Unk.Where", span=""];
m63_49 [cluster="Unk.Any", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Any", span=""];
m63_41 [cluster="Unk.Never", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Never", span=""];
m63_21 [cluster="Unk.Should", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Should", span=""];
m63_30 [cluster="Unk.Load", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Load", span=""];
m63_19 [cluster="Unk.>", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.>", span=""];
m63_24 [cluster="Unk.Be", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Be", span=""];
m63_7 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="30-30"];
m63_8 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="var expected = Assembly.LoadFrom(this.moduleFilename).GetName().Name", span="32-32"];
m63_9 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="IEnumerable<Assembly> actual = null", span="34-34"];
m63_14 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="actual.Where(a => a.GetName().Name == expected).Should().NotBeEmpty()", span="41-41"];
m63_10 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="this.kernelMock.Setup(x => x.Load(It.IsAny<IEnumerable<Assembly>>()))\r\n                      .Callback<IEnumerable<Assembly>>(m => actual = m)", span="35-36"];
m63_11 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="this.loaderPlugin.LoadModules(new[] { this.moduleFilename })", span="38-38"];
m63_12 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="actual.Should().NotBeNull()", span="39-39"];
m63_13 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="actual.Count().Should().Be(1)", span="40-40"];
m63_15 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="TypeMatchingConstructorArgument.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="30-30"];
m63_16 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="TypeMatchingConstructorArgument.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m63_20 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="TypeMatchingConstructorArgument.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="63-63"];
m63_26 [cluster="Unk.NotBeEmpty", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.NotBeEmpty", span=""];
m63_25 [cluster="Unk.Where", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Where", span=""];
m63_6 [cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="TypeMatchingConstructorArgument.cs", label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="20-20"];
m63_18 [cluster="Unk.Setup", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Setup", span=""];
m63_37 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="TypeMatchingConstructorArgument.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="45-45"];
m63_38 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="TypeMatchingConstructorArgument.cs", label="this.loaderPlugin.LoadModules(new[] { this.assemblyFilename })", span="47-47"];
m63_39 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="TypeMatchingConstructorArgument.cs", label="this.kernelMock.Verify(k => k.Load(It.Is<IEnumerable<Assembly>>(p => p.Any())), Times.Never())", span="48-48"];
m63_40 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="TypeMatchingConstructorArgument.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="45-45"];
m63_0 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="TypeMatchingConstructorArgument.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="20-20"];
m63_1 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="TypeMatchingConstructorArgument.cs", label="this.kernelMock = new Mock<IKernel>()", span="22-22"];
m63_2 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="TypeMatchingConstructorArgument.cs", label="this.loaderPlugin = new CompiledModuleLoaderPlugin(this.kernelMock.Object, new AssemblyNameRetriever())", span="23-23"];
m63_3 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="TypeMatchingConstructorArgument.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="20-20"];
m63_22 [cluster="Unk.NotBeNull", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.NotBeNull", span=""];
m63_17 [cluster="System.Reflection.Assembly.GetName()", file="TypeMatchingConstructorArgument.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m63_46 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Entry lambda expression", span="48-48"];
m63_35 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="a.GetName().Name == expected", span="41-41"];
m63_27 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Entry lambda expression", span="35-35"];
m63_31 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Entry lambda expression", span="36-36"];
m63_34 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Entry lambda expression", span="41-41"];
m63_28 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="x.Load(It.IsAny<IEnumerable<Assembly>>())", span="35-35"];
m63_29 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Exit lambda expression", span="35-35"];
m63_32 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="actual = m", span="36-36"];
m63_33 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Exit lambda expression", span="36-36"];
m63_36 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Exit lambda expression", span="41-41"];
m63_43 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Entry lambda expression", span="48-48"];
m63_44 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="k.Load(It.Is<IEnumerable<Assembly>>(p => p.Any()))", span="48-48"];
m63_45 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Exit lambda expression", span="48-48"];
m63_47 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="p.Any()", span="48-48"];
m63_48 [cluster="lambda expression", file="TypeMatchingConstructorArgument.cs", label="Exit lambda expression", span="48-48"];
m63_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="TypeMatchingConstructorArgument.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m63_4 [cluster="Mock<IKernel>.cstr", file="TypeMatchingConstructorArgument.cs", label="Entry Mock<IKernel>.cstr", span=""];
m63_5 [cluster="CompiledModuleLoaderPlugin.cstr", file="TypeMatchingConstructorArgument.cs", label="Entry CompiledModuleLoaderPlugin.cstr", span=""];
m63_42 [cluster="Unk.Verify", file="TypeMatchingConstructorArgument.cs", label="Entry Unk.Verify", span=""];
m63_50 [file="TypeMatchingConstructorArgument.cs", label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", span=""];
m63_51 [file="TypeMatchingConstructorArgument.cs", label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", span=""];
m63_52 [file="TypeMatchingConstructorArgument.cs", label=expected, span=""];
m64_0 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="WeakReferenceEqualityComparer.cs", label="Entry Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", span="18-18"];
m64_1 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="WeakReferenceEqualityComparer.cs", label="return x.Equals(y);", span="20-20"];
m64_2 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="WeakReferenceEqualityComparer.cs", label="Exit Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", span="18-18"];
m64_9 [cluster="System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", file="WeakReferenceEqualityComparer.cs", label="Entry System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", span="0-0"];
m64_8 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", file="WeakReferenceEqualityComparer.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", span="81-81"];
m64_3 [cluster="object.Equals(object)", file="WeakReferenceEqualityComparer.cs", label="Entry object.Equals(object)", span="0-0"];
m64_4 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="WeakReferenceEqualityComparer.cs", label="Entry Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", span="28-28"];
m64_5 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="WeakReferenceEqualityComparer.cs", label="var weakReference = obj as ReferenceEqualWeakReference", span="30-30"];
m64_6 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", color=red, community=0, file="WeakReferenceEqualityComparer.cs", label="0: return weakReference != null ? weakReference.GetHashCode() : \r\n#if !NETCF\r\n                RuntimeHelpers.GetHashCode(obj);", span="31-33"];
m64_7 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="WeakReferenceEqualityComparer.cs", label="Exit Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", span="28-28"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m7_19 -> m7_21  [color=green, key=1, label="Ninject.Activation.IRequest", style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_14  [color=green, key=2, style=dotted];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_13  [key=2, style=dotted];
m7_22 -> m7_19  [color=blue, key=0, style=bold];
m7_15 -> m7_17  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m7_15 -> m7_16  [key=0, style=solid];
m7_17 -> m7_14  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_13  [key=2, style=dotted];
m7_18 -> m7_15  [color=blue, key=0, style=bold];
m7_9 -> m7_11  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_11 -> m7_14  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_12 -> m7_9  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_0  [color=blue, key=0, style=bold];
m7_23 -> m7_21  [color=green, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_1  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_2  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_3  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_4  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_5  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_11  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m7_23 -> m7_17  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
m12_0 -> m12_1  [color=green, key=0, style=solid];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_3  [color=green, key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_4  [color=blue, key=0, style=bold];
m12_7 -> m12_1  [color=green, key=1, label="Ninject.NinjectSettings", style=dashed];
m12_7 -> m12_5  [color=darkseagreen4, key=1, label="Ninject.NinjectSettings", style=dashed];
m14_48 -> m14_64  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_76  [color=darkorchid, key=3, label="method methodReturn object Get", style=bold];
m14_48 -> m14_54  [key=0, style=solid];
m14_48 -> m14_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_48 -> m14_66  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_56 -> m14_68  [key=0, style=solid];
m14_58 -> m14_68  [key=0, style=solid];
m14_63 -> m14_68  [key=0, style=solid];
m14_63 -> m14_52  [key=2, style=dotted];
m14_63 -> m14_72  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_73  [key=2, style=dotted];
m14_64 -> m14_67  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_76  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_57  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_59  [key=0, style=solid];
m14_61 -> m14_63  [color=darkseagreen4, key=1, label=argument, style=dashed];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_70  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_64  [key=0, style=solid];
m14_62 -> m14_71  [key=2, style=dotted];
m14_59 -> m14_64  [key=0, style=solid];
m14_59 -> m14_60  [key=0, style=solid];
m14_65 -> m14_67  [key=0, style=solid];
m14_65 -> m14_66  [key=0, style=solid];
m14_66 -> m14_74  [key=2, style=dotted];
m14_66 -> m14_68  [key=0, style=solid];
m14_66 -> m14_75  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_43  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_62  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m14_60 -> m14_69  [key=2, style=dotted];
m14_68 -> m14_48  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_15  [key=2, style=dotted];
m14_14 -> m14_12  [color=blue, key=0, style=bold];
m14_52 -> m14_78  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_52 -> m14_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_52 -> m14_77  [key=0, style=solid];
m14_52 -> m14_61  [color=darkorchid, key=3, label="Parameter variable System.Type component", style=bold];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_80  [key=2, style=dotted];
m14_78 -> m14_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_43  [key=2, style=dotted];
m14_79 -> m14_52  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_31 -> m14_32  [color=green, key=0, style=solid];
m14_31 -> m14_35  [color=green, key=2, style=dotted];
m14_30 -> m14_31  [color=green, key=0, style=solid];
m14_30 -> m14_34  [key=2, style=dotted];
m14_28 -> m14_30  [key=0, style=solid];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_33  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_8  [key=2, style=dotted];
m14_27 -> m14_30  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m14_32 -> m14_26  [color=blue, key=0, style=bold];
m14_87 -> m14_88  [color=green, key=0, style=solid];
m14_87 -> m14_92  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_87 -> m14_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_87 -> m14_76  [color=darkorchid, key=3, label="Parameter variable System.Type implementation", style=bold];
m14_87 -> m14_90  [color=darkorchid, key=3, label="method methodReturn object CreateNewInstance", style=bold];
m14_87 -> m14_97  [color=darkorchid, key=3, label="method methodReturn object CreateNewInstance", style=bold];
m14_88 -> m14_89  [color=green, key=0, style=solid];
m14_88 -> m14_99  [color=green, key=2, style=dotted];
m14_88 -> m14_90  [color=green, key=1, label=constructor, style=dashed];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_100  [key=2, style=dotted];
m14_89 -> m14_80  [key=2, style=dotted];
m14_89 -> m14_101  [key=2, style=dotted];
m14_89 -> m14_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_102  [key=2, style=dotted];
m14_90 -> m14_93  [color=darkseagreen4, key=1, label=instance, style=dashed];
m14_90 -> m14_94  [color=darkseagreen4, key=1, label=instance, style=dashed];
m14_91 -> m14_92  [key=0, style=solid];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_94  [key=0, style=solid];
m14_92 -> m14_20  [key=2, style=dotted];
m14_92 -> m14_103  [key=2, style=dotted];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_104  [key=2, style=dotted];
m14_97 -> m14_98  [key=0, style=solid];
m14_94 -> m14_98  [key=0, style=solid];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_105  [key=2, style=dotted];
m14_95 -> m14_96  [key=0, style=solid];
m14_98 -> m14_87  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_6  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_9  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_11  [key=2, style=dotted];
m14_3 -> m14_2  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_7 -> m14_0  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_12  [key=2, style=dotted];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_21  [key=2, style=dotted];
m14_19 -> m14_16  [color=blue, key=0, style=bold];
m14_99 -> m14_87  [color=darkorchid, key=3, label="Parameter variable System.Type implementation", style=bold];
m14_99 -> m14_109  [key=0, style=solid];
m14_99 -> m14_111  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_110 -> m14_111  [color=green, key=0, style=solid];
m14_110 -> m14_112  [color=green, key=0, style=solid];
m14_109 -> m14_110  [color=green, key=0, style=solid];
m14_109 -> m14_114  [key=2, style=dotted];
m14_109 -> m14_115  [key=2, style=dotted];
m14_109 -> m14_73  [key=2, style=dotted];
m14_109 -> m14_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_109 -> m14_112  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m14_111 -> m14_113  [key=0, style=solid];
m14_111 -> m14_74  [key=2, style=dotted];
m14_111 -> m14_116  [key=2, style=dotted];
m14_112 -> m14_113  [key=0, style=solid];
m14_113 -> m14_99  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_52  [key=2, style=dotted];
m14_50 -> m14_53  [key=2, style=dotted];
m14_51 -> m14_49  [color=blue, key=0, style=bold];
m14_81 -> m14_82  [key=0, style=solid];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_76  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_48  [key=2, style=dotted];
m14_106 -> m14_107  [key=0, style=solid];
m14_117 -> m14_118  [key=0, style=solid];
m14_83 -> m14_81  [color=blue, key=0, style=bold];
m14_108 -> m14_106  [color=blue, key=0, style=bold];
m14_118 -> m14_100  [key=2, style=dotted];
m14_118 -> m14_119  [key=0, style=solid];
m14_119 -> m14_117  [color=blue, key=0, style=bold];
m14_22 -> m14_23  [key=0, style=solid];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=2, style=dotted];
m14_24 -> m14_22  [color=blue, key=0, style=bold];
m14_76 -> m14_64  [color=darkorchid, key=3, label="Parameter variable System.Type implementation", style=bold];
m14_76 -> m14_78  [color=darkorchid, key=3, label="Parameter variable System.Type implementation", style=bold];
m14_76 -> m14_84  [key=0, style=solid];
m14_76 -> m14_85  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_76 -> m14_48  [color=darkorchid, key=3, label="Parameter variable System.Type component", style=bold];
m14_76 -> m14_52  [color=darkorchid, key=3, label="Parameter variable System.Type component", style=bold];
m14_84 -> m14_85  [key=0, style=solid];
m14_85 -> m14_87  [key=2, style=dotted];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_33  [key=2, style=dotted];
m14_86 -> m14_76  [color=blue, key=0, style=bold];
m14_25 -> m14_37  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_25 -> m14_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_25 -> m14_36  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_41  [key=0, style=solid];
m14_37 -> m14_39  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m14_37 -> m14_40  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [key=0, style=solid];
m14_38 -> m14_33  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_8  [key=2, style=dotted];
m14_40 -> m14_37  [key=0, style=solid];
m14_40 -> m14_34  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_44  [key=2, style=dotted];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_43  [key=2, style=dotted];
m14_42 -> m14_25  [color=blue, key=0, style=bold];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_48  [color=darkorchid, key=3, label="method methodReturn T Get", style=bold];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_48  [key=2, style=dotted];
m14_47 -> m14_45  [color=blue, key=0, style=bold];
m14_120 -> m14_31  [color=green, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_1  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_2  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_4  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_5  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_6  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_13  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_17  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_18  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_23  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_28  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_29  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_30  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_37  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_38  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_39  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_40  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_41  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_46  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_50  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_56  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_58  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_63  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_64  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_67  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_78  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_82  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_84  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_85  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_89  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_107  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_91  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_92  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_120 -> m14_93  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m14_121 -> m14_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m16_14 -> m16_12  [color=blue, key=0, style=bold];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_73  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_140  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_130 -> m16_145  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_130 -> m16_135  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_130 -> m16_146  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_130 -> m16_148  [key=2, style=dotted];
m16_130 -> m16_137  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_137  [key=2, style=dotted];
m16_131 -> m16_135  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_131 -> m16_142  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_131 -> m16_134  [key=0, style=solid];
m16_131 -> m16_149  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_46  [key=2, style=dotted];
m16_132 -> m16_16  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_23  [key=2, style=dotted];
m16_135 -> m16_111  [key=2, style=dotted];
m16_135 -> m16_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_135 -> m16_150  [key=2, style=dotted];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_9  [key=2, style=dotted];
m16_133 -> m16_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_23  [key=2, style=dotted];
m16_134 -> m16_110  [key=2, style=dotted];
m16_134 -> m16_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_134 -> m16_137  [key=0, style=solid];
m16_136 -> m16_130  [color=blue, key=0, style=bold];
m16_136 -> m16_137  [key=0, style=solid];
m16_81 -> m16_82  [color=green, key=0, style=solid];
m16_81 -> m16_83  [color=green, key=2, style=dotted];
m16_81 -> m16_84  [color=green, key=2, style=dotted];
m16_81 -> m16_85  [color=green, key=2, style=dotted];
m16_81 -> m16_86  [color=green, key=2, style=dotted];
m16_81 -> m16_72  [color=green, key=2, style=dotted];
m16_81 -> m16_87  [color=green, key=1, label="lambda expression", style=dashed];
m16_81 -> m16_90  [color=green, key=1, label="lambda expression", style=dashed];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_23  [key=2, style=dotted];
m16_152 -> m16_156  [key=2, style=dotted];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_23  [key=2, style=dotted];
m16_149 -> m16_126  [key=2, style=dotted];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_154  [key=2, style=dotted];
m16_150 -> m16_155  [key=2, style=dotted];
m16_150 -> m16_152  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_23  [key=2, style=dotted];
m16_20 -> m16_24  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m16_57 -> m16_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m16_57 -> m16_62  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m16_57 -> m16_55  [color=blue, key=0, style=bold];
m16_60 -> m16_61  [color=green, key=0, style=solid];
m16_60 -> m16_42  [color=green, key=2, style=dotted];
m16_60 -> m16_80  [color=green, key=1, label="lambda expression", style=dashed];
m16_60 -> m16_8  [key=2, style=dotted];
m16_60 -> m16_68  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_58 -> m16_60  [color=green, key=1, label=tokens, style=dashed];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_64  [key=2, style=dotted];
m16_59 -> m16_60  [color=green, key=0, style=solid];
m16_59 -> m16_81  [color=green, key=1, label=replaces, style=dashed];
m16_59 -> m16_42  [key=2, style=dotted];
m16_59 -> m16_65  [key=2, style=dotted];
m16_59 -> m16_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_59 -> m16_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_59 -> m16_63  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_66  [key=2, style=dotted];
m16_61 -> m16_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_61 -> m16_22  [key=2, style=dotted];
m16_61 -> m16_63  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_67  [key=2, style=dotted];
m16_62 -> m16_26  [key=2, style=dotted];
m16_62 -> m16_66  [key=2, style=dotted];
m16_63 -> m16_57  [color=blue, key=0, style=bold];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_47  [key=2, style=dotted];
m16_63 -> m16_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_15 -> m16_16  [key=0, style=solid];
m16_236 -> m16_237  [key=0, style=solid];
m16_237 -> m16_238  [key=0, style=solid];
m16_237 -> m16_7  [key=2, style=dotted];
m16_237 -> m16_244  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_237 -> m16_240  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_238 -> m16_239  [key=0, style=solid];
m16_238 -> m16_8  [key=2, style=dotted];
m16_238 -> m16_244  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_10  [key=2, style=dotted];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_35  [key=2, style=dotted];
m16_241 -> m16_242  [key=0, style=solid];
m16_241 -> m16_23  [key=2, style=dotted];
m16_241 -> m16_126  [key=2, style=dotted];
m16_242 -> m16_236  [color=blue, key=0, style=bold];
m16_284 -> m16_285  [key=0, style=solid];
m16_284 -> m16_286  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m16_284 -> m16_288  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.CommitOptions", style=dashed];
m16_284 -> m16_294  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.CommitOptions", style=dashed];
m16_285 -> m16_286  [key=0, style=solid];
m16_285 -> m16_8  [key=2, style=dotted];
m16_285 -> m16_291  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_286 -> m16_287  [key=0, style=solid];
m16_286 -> m16_35  [key=2, style=dotted];
m16_286 -> m16_288  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_288 -> m16_289  [key=0, style=solid];
m16_288 -> m16_277  [key=2, style=dotted];
m16_288 -> m16_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_287 -> m16_288  [key=0, style=solid];
m16_287 -> m16_47  [key=2, style=dotted];
m16_289 -> m16_284  [color=blue, key=0, style=bold];
m16_163 -> m16_164  [key=0, style=solid];
m16_163 -> m16_170  [key=2, style=dotted];
m16_163 -> m16_171  [key=2, style=dotted];
m16_164 -> m16_165  [key=0, style=solid];
m16_164 -> m16_7  [key=2, style=dotted];
m16_164 -> m16_181  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_164 -> m16_167  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_165 -> m16_166  [key=0, style=solid];
m16_165 -> m16_8  [key=2, style=dotted];
m16_165 -> m16_181  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_165 -> m16_167  [color=darkseagreen4, key=1, label=parts, style=dashed];
m16_165 -> m16_172  [key=2, style=dotted];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_10  [key=2, style=dotted];
m16_167 -> m16_169  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_167 -> m16_173  [key=2, style=dotted];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_35  [key=2, style=dotted];
m16_166 -> m16_150  [key=2, style=dotted];
m16_168 -> m16_169  [key=0, style=solid];
m16_168 -> m16_23  [key=2, style=dotted];
m16_168 -> m16_126  [key=2, style=dotted];
m16_168 -> m16_17  [color=blue, key=0, style=bold];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_154  [key=2, style=dotted];
m16_169 -> m16_155  [key=2, style=dotted];
m16_169 -> m16_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_23  [key=2, style=dotted];
m16_170 -> m16_156  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_47  [key=2, style=dotted];
m16_172 -> m16_173  [key=0, style=solid];
m16_172 -> m16_47  [key=2, style=dotted];
m16_173 -> m16_174  [key=0, style=solid];
m16_173 -> m16_47  [key=2, style=dotted];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_47  [key=2, style=dotted];
m16_174 -> m16_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_47  [key=2, style=dotted];
m16_175 -> m16_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m16_176 -> m16_177  [key=0, style=solid];
m16_176 -> m16_47  [key=2, style=dotted];
m16_176 -> m16_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m16_177 -> m16_178  [key=0, style=solid];
m16_177 -> m16_47  [key=2, style=dotted];
m16_177 -> m16_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_47  [key=2, style=dotted];
m16_178 -> m16_81  [color=green, key=1, label=replaces, style=dashed];
m16_179 -> m16_163  [color=blue, key=0, style=bold];
m16_179 -> m16_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_9  [color=darkseagreen4, key=1, label=arg, style=dashed];
m16_9 -> m16_15  [key=2, style=dotted];
m16_9 -> m16_16  [key=2, style=dotted];
m16_9 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_18  [key=2, style=dotted];
m16_9 -> m16_19  [key=2, style=dotted];
m16_7 -> m16_12  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_14  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_103 -> m16_104  [key=0, style=solid];
m16_103 -> m16_109  [key=2, style=dotted];
m16_103 -> m16_107  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_103 -> m16_116  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_95 -> m16_96  [key=0, style=solid];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_101  [key=2, style=dotted];
m16_96 -> m16_99  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m16_96 -> m16_94  [color=blue, key=0, style=bold];
m16_97 -> m16_98  [color=green, key=0, style=solid];
m16_97 -> m16_46  [key=2, style=dotted];
m16_97 -> m16_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m16_97 -> m16_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_97 -> m16_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_97 -> m16_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m16_97 -> m16_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_47  [key=2, style=dotted];
m16_99 -> m16_42  [key=2, style=dotted];
m16_99 -> m16_99  [color=darkseagreen4, key=1, label=t, style=dashed];
m16_99 -> m16_23  [key=2, style=dotted];
m16_99 -> m16_103  [key=2, style=dotted];
m16_99 -> m16_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_99 -> m16_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_98 -> m16_99  [color=green, key=0, style=solid];
m16_98 -> m16_9  [key=2, style=dotted];
m16_98 -> m16_98  [color=green, key=1, label=i, style=dashed];
m16_98 -> m16_42  [color=green, key=2, style=dotted];
m16_98 -> m16_23  [color=green, key=2, style=dotted];
m16_98 -> m16_103  [color=green, key=2, style=dotted];
m16_98 -> m16_105  [color=green, key=1, label="lambda expression", style=dashed];
m16_98 -> m16_119  [color=green, key=1, label="lambda expression", style=dashed];
m16_98 -> m16_124  [color=green, key=1, label=indexes, style=dashed];
m16_100 -> m16_95  [color=blue, key=0, style=bold];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_104  [key=2, style=dotted];
m16_85 -> m16_86  [key=0, style=solid];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_81  [key=2, style=dotted];
m16_86 -> m16_90  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_46  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_47  [key=2, style=dotted];
m16_90 -> m16_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_35  [key=2, style=dotted];
m16_88 -> m16_90  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_66  [key=2, style=dotted];
m16_89 -> m16_87  [color=blue, key=0, style=bold];
m16_91 -> m16_85  [color=blue, key=0, style=bold];
m16_91 -> m16_42  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_93  [key=2, style=dotted];
m16_84 -> m16_82  [color=blue, key=0, style=bold];
m16_156 -> m16_15  [key=2, style=dotted];
m16_156 -> m16_157  [key=0, style=solid];
m16_156 -> m16_168  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_46  [key=2, style=dotted];
m16_153 -> m16_144  [color=blue, key=0, style=bold];
m16_112 -> m16_113  [key=0, style=solid];
m16_3 -> m16_7  [key=0, style=solid];
m16_3 -> m16_10  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m16_3 -> m16_11  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_3 -> m16_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_12 -> m16_23  [key=2, style=dotted];
m16_12 -> m16_12  [color=darkseagreen4, key=1, label=t, style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_24  [key=2, style=dotted];
m16_12 -> m16_25  [key=2, style=dotted];
m16_12 -> m16_26  [key=2, style=dotted];
m16_12 -> m16_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_10 -> m16_12  [color=darkseagreen4, key=1, label=normalized, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_20  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_22  [key=2, style=dotted];
m16_11 -> m16_11  [color=darkseagreen4, key=1, label=t, style=dashed];
m16_11 -> m16_21  [key=2, style=dotted];
m16_11 -> m16_19  [key=2, style=dotted];
m16_11 -> m16_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m16_8 -> m16_9  [key=0, style=solid];
m16_13 -> m16_3  [color=blue, key=0, style=bold];
m16_13 -> m16_14  [key=0, style=solid];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_76  [key=2, style=dotted];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_81  [key=2, style=dotted];
m16_75 -> m16_79  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m16_75 -> m16_73  [color=blue, key=0, style=bold];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_46  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_47  [key=2, style=dotted];
m16_79 -> m16_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_79 -> m16_77  [color=blue, key=0, style=bold];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_22  [key=2, style=dotted];
m16_77 -> m16_79  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_66  [key=2, style=dotted];
m16_80 -> m16_74  [color=blue, key=0, style=bold];
m16_80 -> m16_81  [color=green, key=0, style=solid];
m16_80 -> m16_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_80 -> m16_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m16_21 -> m16_15  [color=blue, key=0, style=bold];
m16_246 -> m16_247  [key=0, style=solid];
m16_247 -> m16_248  [key=0, style=solid];
m16_247 -> m16_7  [key=2, style=dotted];
m16_247 -> m16_269  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_247 -> m16_250  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_248 -> m16_249  [key=0, style=solid];
m16_248 -> m16_8  [key=2, style=dotted];
m16_248 -> m16_269  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_250 -> m16_251  [key=0, style=solid];
m16_250 -> m16_10  [key=2, style=dotted];
m16_249 -> m16_250  [key=0, style=solid];
m16_249 -> m16_35  [key=2, style=dotted];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_154  [key=2, style=dotted];
m16_251 -> m16_155  [key=2, style=dotted];
m16_251 -> m16_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_254  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_255  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_256  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_257  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_258  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_259  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_260  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_261  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_262  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_263  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_264  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_265  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_251 -> m16_266  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_252 -> m16_253  [key=0, style=solid];
m16_252 -> m16_23  [key=2, style=dotted];
m16_252 -> m16_156  [key=2, style=dotted];
m16_253 -> m16_254  [key=0, style=solid];
m16_253 -> m16_47  [key=2, style=dotted];
m16_254 -> m16_255  [key=0, style=solid];
m16_254 -> m16_47  [key=2, style=dotted];
m16_255 -> m16_256  [key=0, style=solid];
m16_255 -> m16_47  [key=2, style=dotted];
m16_256 -> m16_257  [key=0, style=solid];
m16_256 -> m16_47  [key=2, style=dotted];
m16_257 -> m16_258  [key=0, style=solid];
m16_257 -> m16_47  [key=2, style=dotted];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_47  [key=2, style=dotted];
m16_259 -> m16_260  [key=0, style=solid];
m16_259 -> m16_47  [key=2, style=dotted];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_47  [key=2, style=dotted];
m16_261 -> m16_262  [key=0, style=solid];
m16_261 -> m16_47  [key=2, style=dotted];
m16_262 -> m16_263  [key=0, style=solid];
m16_262 -> m16_47  [key=2, style=dotted];
m16_263 -> m16_264  [key=0, style=solid];
m16_263 -> m16_47  [key=2, style=dotted];
m16_264 -> m16_265  [key=0, style=solid];
m16_264 -> m16_47  [key=2, style=dotted];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_47  [key=2, style=dotted];
m16_266 -> m16_267  [key=0, style=solid];
m16_266 -> m16_47  [key=2, style=dotted];
m16_267 -> m16_246  [color=blue, key=0, style=bold];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_10  [key=2, style=dotted];
m16_27 -> m16_25  [color=blue, key=0, style=bold];
m16_27 -> m16_28  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_31  [color=blue, key=0, style=bold];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_22  [key=2, style=dotted];
m16_38 -> m16_36  [color=blue, key=0, style=bold];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_54  [color=blue, key=0, style=bold];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_25  [key=2, style=dotted];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_68  [color=blue, key=0, style=bold];
m16_67 -> m16_68  [key=0, style=solid];
m16_69 -> m16_67  [color=blue, key=0, style=bold];
m16_69 -> m16_72  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_22  [key=2, style=dotted];
m16_69 -> m16_71  [key=2, style=dotted];
m16_69 -> m16_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_73  [key=2, style=dotted];
m16_72 -> m16_70  [color=blue, key=0, style=bold];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_80  [color=blue, key=0, style=bold];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_73  [key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_90  [color=blue, key=0, style=bold];
m16_94 -> m16_92  [color=blue, key=0, style=bold];
m16_94 -> m16_95  [key=0, style=solid];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_118  [key=2, style=dotted];
m16_116 -> m16_114  [color=blue, key=0, style=bold];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_117  [key=2, style=dotted];
m16_115 -> m16_118  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_114 -> m16_112  [color=blue, key=0, style=bold];
m16_114 -> m16_115  [key=0, style=solid];
m16_117 -> m16_115  [color=blue, key=0, style=bold];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_126  [color=blue, key=0, style=bold];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_122  [key=2, style=dotted];
m16_129 -> m16_127  [color=blue, key=0, style=bold];
m16_129 -> m16_147  [key=0, style=solid];
m16_129 -> m16_130  [key=0, style=solid];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_118  [key=2, style=dotted];
m16_142 -> m16_22  [key=2, style=dotted];
m16_142 -> m16_145  [key=0, style=solid];
m16_142 -> m16_153  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_150  [key=2, style=dotted];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_152  [key=2, style=dotted];
m16_141 -> m16_144  [color=darkseagreen4, key=1, label=n, style=dashed];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_142  [color=darkseagreen4, key=1, label=seen, style=dashed];
m16_139 -> m16_14  [key=2, style=dotted];
m16_139 -> m16_143  [color=darkseagreen4, key=1, label=seen, style=dashed];
m16_139 -> m16_145  [color=darkseagreen4, key=1, label=seen, style=dashed];
m16_139 -> m16_146  [color=darkseagreen4, key=1, label=seen, style=dashed];
m16_140 -> m16_138  [color=blue, key=0, style=bold];
m16_140 -> m16_142  [color=darkseagreen4, key=1, label=c, style=dashed];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_145  [key=0, style=solid];
m16_140 -> m16_148  [key=2, style=dotted];
m16_140 -> m16_143  [color=darkseagreen4, key=1, label=c, style=dashed];
m16_143 -> m16_141  [color=blue, key=0, style=bold];
m16_143 -> m16_144  [key=0, style=solid];
m16_143 -> m16_154  [key=2, style=dotted];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_162  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m16_158 -> m16_169  [key=2, style=dotted];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_150  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_148  [key=2, style=dotted];
m16_157 -> m16_160  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_157 -> m16_165  [color=darkseagreen4, key=1, label=text, style=dashed];
m16_159 -> m16_157  [color=blue, key=0, style=bold];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_162  [key=0, style=solid];
m16_161 -> m16_162  [key=0, style=solid];
m16_162 -> m16_160  [color=blue, key=0, style=bold];
m16_162 -> m16_163  [key=0, style=solid];
m16_162 -> m16_165  [key=0, style=solid];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m16_182 -> m16_180  [color=blue, key=0, style=bold];
m16_182 -> m16_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_182 -> m16_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_198 -> m16_199  [key=0, style=solid];
m16_197 -> m16_198  [key=0, style=solid];
m16_199 -> m16_197  [color=blue, key=0, style=bold];
m16_211 -> m16_212  [key=0, style=solid];
m16_213 -> m16_214  [key=0, style=solid];
m16_210 -> m16_211  [key=0, style=solid];
m16_212 -> m16_210  [color=blue, key=0, style=bold];
m16_214 -> m16_215  [key=0, style=solid];
m16_215 -> m16_213  [color=blue, key=0, style=bold];
m16_234 -> m16_235  [key=0, style=solid];
m16_233 -> m16_234  [key=0, style=solid];
m16_235 -> m16_233  [color=blue, key=0, style=bold];
m16_244 -> m16_245  [key=0, style=solid];
m16_243 -> m16_244  [key=0, style=solid];
m16_245 -> m16_243  [color=blue, key=0, style=bold];
m16_269 -> m16_270  [key=0, style=solid];
m16_268 -> m16_269  [key=0, style=solid];
m16_270 -> m16_268  [color=blue, key=0, style=bold];
m16_282 -> m16_283  [key=0, style=solid];
m16_282 -> m16_47  [key=2, style=dotted];
m16_279 -> m16_280  [key=0, style=solid];
m16_281 -> m16_282  [key=0, style=solid];
m16_278 -> m16_279  [key=0, style=solid];
m16_280 -> m16_278  [color=blue, key=0, style=bold];
m16_283 -> m16_281  [color=blue, key=0, style=bold];
m16_294 -> m16_295  [key=0, style=solid];
m16_294 -> m16_47  [key=2, style=dotted];
m16_291 -> m16_292  [key=0, style=solid];
m16_293 -> m16_294  [key=0, style=solid];
m16_290 -> m16_291  [key=0, style=solid];
m16_292 -> m16_290  [color=blue, key=0, style=bold];
m16_295 -> m16_293  [color=blue, key=0, style=bold];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_107  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_105 -> m16_9  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_30  [key=2, style=dotted];
m16_124 -> m16_112  [key=2, style=dotted];
m16_124 -> m16_113  [key=2, style=dotted];
m16_124 -> m16_23  [key=2, style=dotted];
m16_124 -> m16_126  [key=2, style=dotted];
m16_107 -> m16_72  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_111  [key=2, style=dotted];
m16_107 -> m16_112  [key=2, style=dotted];
m16_107 -> m16_113  [key=2, style=dotted];
m16_107 -> m16_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_107 -> m16_23  [key=2, style=dotted];
m16_107 -> m16_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_109  [key=2, style=dotted];
m16_106 -> m16_110  [key=2, style=dotted];
m16_106 -> m16_23  [key=2, style=dotted];
m16_106 -> m16_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_10  [key=2, style=dotted];
m16_126 -> m16_127  [key=0, style=solid];
m16_108 -> m16_105  [color=blue, key=0, style=bold];
m16_108 -> m16_102  [color=blue, key=0, style=bold];
m16_121 -> m16_119  [color=blue, key=0, style=bold];
m16_121 -> m16_122  [key=0, style=solid];
m16_121 -> m16_8  [key=2, style=dotted];
m16_121 -> m16_128  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_122  [key=2, style=dotted];
m16_120 -> m16_7  [key=2, style=dotted];
m16_120 -> m16_128  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_120 -> m16_123  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_125 -> m16_123  [color=blue, key=0, style=bold];
m16_125 -> m16_119  [color=blue, key=0, style=bold];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_9  [key=2, style=dotted];
m16_73 -> m16_74  [key=0, style=solid];
m16_28 -> m16_30  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_48 -> m16_49  [color=red, key=0, style=solid];
m16_54 -> m16_55  [key=0, style=solid];
m16_53 -> m16_51  [color=blue, key=0, style=bold];
m16_53 -> m16_48  [color=blue, key=0, style=bold];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_47  [key=2, style=dotted];
m16_29 -> m16_27  [color=blue, key=0, style=bold];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_7  [key=2, style=dotted];
m16_29 -> m16_37  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_39  [color=blue, key=0, style=bold];
m16_50 -> m16_48  [color=blue, key=0, style=bold];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_8  [key=2, style=dotted];
m16_50 -> m16_56  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_49 -> m16_50  [color=red, key=0, style=solid];
m16_49 -> m16_47  [key=2, style=dotted];
m16_49 -> m16_54  [color=red, key=2, style=dotted];
m16_49 -> m16_52  [color=red, key=1, label=expectedOptions, style=dashed];
m16_46 -> m16_44  [color=blue, key=0, style=bold];
m16_45 -> m16_47  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_11  [key=2, style=dotted];
m16_6 -> m16_4  [color=blue, key=0, style=bold];
m16_6 -> m16_0  [color=blue, key=0, style=bold];
m16_101 -> m16_102  [key=0, style=solid];
m16_144 -> m16_145  [key=0, style=solid];
m16_144 -> m16_140  [key=0, style=solid];
m16_144 -> m16_150  [key=2, style=dotted];
m16_145 -> m16_146  [key=0, style=solid];
m16_145 -> m16_7  [key=2, style=dotted];
m16_145 -> m16_158  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_145 -> m16_148  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_145 -> m16_147  [key=0, style=solid];
m16_145 -> m16_155  [key=2, style=dotted];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_8  [key=2, style=dotted];
m16_146 -> m16_158  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_146 -> m16_16  [key=2, style=dotted];
m16_146 -> m16_155  [key=2, style=dotted];
m16_146 -> m16_148  [key=2, style=dotted];
m16_148 -> m16_149  [key=0, style=solid];
m16_148 -> m16_10  [key=2, style=dotted];
m16_148 -> m16_150  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_9  [key=2, style=dotted];
m16_147 -> m16_18  [color=blue, key=0, style=bold];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_23  [key=2, style=dotted];
m16_151 -> m16_110  [key=2, style=dotted];
m16_151 -> m16_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_9  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_7  [key=2, style=dotted];
m16_16 -> m16_26  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_16 -> m16_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_8  [key=2, style=dotted];
m16_17 -> m16_26  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_17 -> m16_156  [key=0, style=solid];
m16_17 -> m16_160  [color=crimson, key=0, style=bold];
m16_17 -> m16_161  [color=crimson, key=0, style=bold];
m16_17 -> m16_164  [color=crimson, key=0, style=bold];
m16_17 -> m16_166  [color=crimson, key=0, style=bold];
m16_17 -> m16_167  [color=crimson, key=0, style=bold];
m16_17 -> m16_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_17 -> m16_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_10  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_22  [key=2, style=dotted];
m16_18 -> m16_142  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m16_18 -> m16_129  [key=0, style=solid];
m16_18 -> m16_132  [color=crimson, key=0, style=bold];
m16_18 -> m16_133  [color=crimson, key=0, style=bold];
m16_18 -> m16_135  [color=crimson, key=0, style=bold];
m16_18 -> m16_136  [color=crimson, key=0, style=bold];
m16_18 -> m16_138  [color=crimson, key=0, style=bold];
m16_18 -> m16_144  [color=crimson, key=0, style=bold];
m16_18 -> m16_146  [color=crimson, key=0, style=bold];
m16_18 -> m16_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_18 -> m16_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_64 -> m16_58  [color=blue, key=0, style=bold];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_7  [key=2, style=dotted];
m16_201 -> m16_211  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_201 -> m16_204  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_203 -> m16_204  [key=0, style=solid];
m16_203 -> m16_35  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_202 -> m16_8  [key=2, style=dotted];
m16_202 -> m16_211  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_204 -> m16_205  [key=0, style=solid];
m16_204 -> m16_10  [key=2, style=dotted];
m16_204 -> m16_206  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_23  [key=2, style=dotted];
m16_205 -> m16_126  [key=2, style=dotted];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> m16_154  [key=2, style=dotted];
m16_206 -> m16_155  [key=2, style=dotted];
m16_206 -> m16_208  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_207 -> m16_208  [key=0, style=solid];
m16_207 -> m16_23  [key=2, style=dotted];
m16_207 -> m16_110  [key=2, style=dotted];
m16_207 -> m16_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_23  [key=2, style=dotted];
m16_208 -> m16_156  [key=2, style=dotted];
m16_209 -> m16_200  [color=blue, key=0, style=bold];
m16_102 -> m16_103  [key=0, style=solid];
m16_102 -> m16_97  [color=blue, key=0, style=bold];
m16_137 -> m16_139  [color=darkseagreen4, key=1, label=first, style=dashed];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_151  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_45  [key=2, style=dotted];
m16_40 -> m16_43  [color=red, key=1, label=expectedOptions, style=dashed];
m16_183 -> m16_184  [key=0, style=solid];
m16_183 -> m16_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_7  [key=2, style=dotted];
m16_184 -> m16_198  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_184 -> m16_187  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_8  [key=2, style=dotted];
m16_185 -> m16_198  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_10  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_35  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_188 -> m16_154  [key=2, style=dotted];
m16_188 -> m16_155  [key=2, style=dotted];
m16_188 -> m16_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_188 -> m16_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_188 -> m16_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_188 -> m16_193  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_188 -> m16_194  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_188 -> m16_195  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_189 -> m16_190  [key=0, style=solid];
m16_189 -> m16_23  [key=2, style=dotted];
m16_189 -> m16_156  [key=2, style=dotted];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_47  [key=2, style=dotted];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_47  [key=2, style=dotted];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_47  [key=2, style=dotted];
m16_193 -> m16_194  [key=0, style=solid];
m16_193 -> m16_47  [key=2, style=dotted];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_47  [key=2, style=dotted];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_47  [key=2, style=dotted];
m16_196 -> m16_183  [color=blue, key=0, style=bold];
m16_216 -> m16_217  [key=0, style=solid];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_7  [key=2, style=dotted];
m16_217 -> m16_234  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_217 -> m16_220  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_218 -> m16_219  [key=0, style=solid];
m16_218 -> m16_8  [key=2, style=dotted];
m16_218 -> m16_234  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_220 -> m16_221  [key=0, style=solid];
m16_220 -> m16_10  [key=2, style=dotted];
m16_219 -> m16_220  [key=0, style=solid];
m16_219 -> m16_9  [key=2, style=dotted];
m16_221 -> m16_222  [key=0, style=solid];
m16_221 -> m16_154  [key=2, style=dotted];
m16_221 -> m16_155  [key=2, style=dotted];
m16_221 -> m16_223  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_221 -> m16_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_23  [key=2, style=dotted];
m16_222 -> m16_156  [key=2, style=dotted];
m16_223 -> m16_224  [key=0, style=solid];
m16_223 -> m16_47  [key=2, style=dotted];
m16_224 -> m16_225  [key=0, style=solid];
m16_224 -> m16_47  [key=2, style=dotted];
m16_225 -> m16_226  [key=0, style=solid];
m16_225 -> m16_47  [key=2, style=dotted];
m16_226 -> m16_227  [key=0, style=solid];
m16_226 -> m16_47  [key=2, style=dotted];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_47  [key=2, style=dotted];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_47  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_47  [key=2, style=dotted];
m16_230 -> m16_231  [key=0, style=solid];
m16_230 -> m16_47  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_231 -> m16_47  [key=2, style=dotted];
m16_232 -> m16_216  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_1 -> m16_7  [key=2, style=dotted];
m16_1 -> m16_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_8  [key=2, style=dotted];
m16_2 -> m16_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_39 -> m16_40  [key=0, style=solid];
m16_41 -> m16_42  [color=red, key=0, style=solid];
m16_41 -> m16_46  [key=2, style=dotted];
m16_43 -> m16_44  [color=red, key=0, style=solid];
m16_43 -> m16_47  [color=red, key=2, style=dotted];
m16_42 -> m16_43  [color=red, key=0, style=solid];
m16_42 -> m16_9  [color=red, key=2, style=dotted];
m16_271 -> m16_272  [key=0, style=solid];
m16_271 -> m16_273  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m16_271 -> m16_275  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptions", style=dashed];
m16_271 -> m16_282  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptions", style=dashed];
m16_272 -> m16_273  [key=0, style=solid];
m16_272 -> m16_8  [key=2, style=dotted];
m16_272 -> m16_279  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_273 -> m16_274  [key=0, style=solid];
m16_273 -> m16_9  [key=2, style=dotted];
m16_273 -> m16_275  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_275 -> m16_276  [key=0, style=solid];
m16_275 -> m16_277  [key=2, style=dotted];
m16_275 -> m16_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_274 -> m16_275  [key=0, style=solid];
m16_274 -> m16_47  [key=2, style=dotted];
m16_276 -> m16_271  [color=blue, key=0, style=bold];
m16_31 -> m16_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m16_31 -> m16_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m16_31 -> m16_35  [key=2, style=dotted];
m16_34 -> m16_42  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_40  [key=2, style=dotted];
m16_34 -> m16_41  [key=2, style=dotted];
m16_34 -> m16_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_34 -> m16_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m16_34 -> m16_28  [color=blue, key=0, style=bold];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_39  [key=2, style=dotted];
m16_33 -> m16_22  [key=2, style=dotted];
m16_33 -> m16_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_33 -> m16_35  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m16_33 -> m16_23  [key=2, style=dotted];
m16_33 -> m16_24  [key=2, style=dotted];
m16_35 -> m16_37  [key=0, style=solid];
m16_35 -> m16_43  [key=2, style=dotted];
m16_35 -> m16_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_36  [key=0, style=solid];
m16_32 -> m16_38  [key=2, style=dotted];
m16_32 -> m16_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_32 -> m16_10  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_8  [key=2, style=dotted];
m16_30 -> m16_37  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m16_296 -> m16_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_297 -> m16_26  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_298 -> m16_37  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_299 -> m16_116  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_300 -> m16_128  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_301 -> m16_142  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m16_302 -> m16_158  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_303 -> m16_181  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_304 -> m16_198  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_305 -> m16_211  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_306 -> m16_234  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_307 -> m16_244  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_308 -> m16_269  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_309 -> m16_282  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptions", style=dashed];
m16_310 -> m16_294  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.CommitOptions", style=dashed];
m19_79 -> m19_80  [key=0, style=solid];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_9  [key=2, style=dotted];
m19_80 -> m19_82  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_80 -> m19_83  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_80 -> m19_84  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_80 -> m19_85  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_80 -> m19_86  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_89  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_10  [key=2, style=dotted];
m19_82 -> m19_90  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_10  [key=2, style=dotted];
m19_83 -> m19_11  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_10  [key=2, style=dotted];
m19_84 -> m19_91  [key=2, style=dotted];
m19_84 -> m19_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_92  [key=2, style=dotted];
m19_85 -> m19_93  [key=2, style=dotted];
m19_85 -> m19_94  [key=2, style=dotted];
m19_85 -> m19_87  [color=darkseagreen4, key=1, label=testActivationStrategy, style=dashed];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_13  [key=2, style=dotted];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_95  [key=2, style=dotted];
m19_88 -> m19_79  [color=blue, key=0, style=bold];
m19_22 -> m19_23  [key=0, style=solid];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_9  [key=2, style=dotted];
m19_23 -> m19_25  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_10  [key=2, style=dotted];
m19_24 -> m19_11  [key=2, style=dotted];
m19_24 -> m19_31  [key=2, style=dotted];
m19_24 -> m19_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_13  [key=2, style=dotted];
m19_25 -> m19_27  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_25 -> m19_28  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_25 -> m19_29  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_14  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_15  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_14  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_15  [key=2, style=dotted];
m19_30 -> m19_22  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_9  [key=2, style=dotted];
m19_1 -> m19_3  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_10  [key=2, style=dotted];
m19_2 -> m19_11  [key=2, style=dotted];
m19_2 -> m19_12  [key=2, style=dotted];
m19_2 -> m19_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_13  [key=2, style=dotted];
m19_3 -> m19_5  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_3 -> m19_6  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_3 -> m19_7  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_14  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_15  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_14  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_15  [key=2, style=dotted];
m19_8 -> m19_0  [color=blue, key=0, style=bold];
m19_99 -> m19_100  [key=0, style=solid];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_108  [key=2, style=dotted];
m19_100 -> m19_109  [key=2, style=dotted];
m19_100 -> m19_102  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_100 -> m19_103  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_100 -> m19_104  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_100 -> m19_105  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_89  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_10  [key=2, style=dotted];
m19_102 -> m19_90  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_10  [key=2, style=dotted];
m19_103 -> m19_110  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_92  [key=2, style=dotted];
m19_104 -> m19_93  [key=2, style=dotted];
m19_104 -> m19_94  [key=2, style=dotted];
m19_104 -> m19_106  [color=darkseagreen4, key=1, label=testActivationStrategy, style=dashed];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_13  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_95  [key=2, style=dotted];
m19_107 -> m19_99  [color=blue, key=0, style=bold];
m19_96 -> m19_97  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_18  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_20  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_21  [key=2, style=dotted];
m19_19 -> m19_16  [color=blue, key=0, style=bold];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_20  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_21  [key=2, style=dotted];
m19_35 -> m19_32  [color=blue, key=0, style=bold];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_20  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_21  [key=2, style=dotted];
m19_54 -> m19_51  [color=blue, key=0, style=bold];
m19_56 -> m19_57  [key=0, style=solid];
m19_57 -> m19_58  [key=0, style=solid];
m19_58 -> m19_55  [color=blue, key=0, style=bold];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_73  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_77  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_20  [key=2, style=dotted];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_21  [key=2, style=dotted];
m19_74 -> m19_71  [color=blue, key=0, style=bold];
m19_76 -> m19_77  [key=0, style=solid];
m19_77 -> m19_78  [key=0, style=solid];
m19_78 -> m19_75  [color=blue, key=0, style=bold];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_13  [key=2, style=dotted];
m19_98 -> m19_96  [color=blue, key=0, style=bold];
m19_36 -> m19_37  [key=0, style=solid];
m19_37 -> m19_38  [key=0, style=solid];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_9  [key=2, style=dotted];
m19_38 -> m19_40  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_10  [key=2, style=dotted];
m19_39 -> m19_11  [key=2, style=dotted];
m19_39 -> m19_48  [key=2, style=dotted];
m19_39 -> m19_12  [key=2, style=dotted];
m19_39 -> m19_49  [key=2, style=dotted];
m19_39 -> m19_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_39 -> m19_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_13  [key=2, style=dotted];
m19_40 -> m19_42  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_40 -> m19_43  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_40 -> m19_44  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_40 -> m19_45  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_40 -> m19_46  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_14  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_15  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_14  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_15  [key=2, style=dotted];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_50  [key=2, style=dotted];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_50  [key=2, style=dotted];
m19_47 -> m19_36  [color=blue, key=0, style=bold];
m19_59 -> m19_60  [key=0, style=solid];
m19_60 -> m19_61  [key=0, style=solid];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_9  [key=2, style=dotted];
m19_61 -> m19_63  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_10  [key=2, style=dotted];
m19_62 -> m19_11  [key=2, style=dotted];
m19_62 -> m19_48  [key=2, style=dotted];
m19_62 -> m19_31  [key=2, style=dotted];
m19_62 -> m19_49  [key=2, style=dotted];
m19_62 -> m19_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_62 -> m19_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_13  [key=2, style=dotted];
m19_63 -> m19_65  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_63 -> m19_66  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_63 -> m19_67  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_63 -> m19_68  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_63 -> m19_69  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_14  [key=2, style=dotted];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_15  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_14  [key=2, style=dotted];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_15  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_50  [key=2, style=dotted];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_50  [key=2, style=dotted];
m19_70 -> m19_59  [color=blue, key=0, style=bold];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_113  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m19_112 -> m19_113  [key=0, style=solid];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_115  [key=2, style=dotted];
m19_114 -> m19_111  [color=blue, key=0, style=bold];
m19_116 -> m19_112  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy", style=dashed];
m19_116 -> m19_113  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ActivationStrategyTests.TestActivationStrategy", style=dashed];
m21_73 -> m21_74  [key=0, style=solid];
m21_74 -> m21_75  [key=0, style=solid];
m21_74 -> m21_78  [key=2, style=dotted];
m21_74 -> m21_76  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_75 -> m21_76  [key=0, style=solid];
m21_75 -> m21_9  [key=2, style=dotted];
m21_75 -> m21_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_76 -> m21_77  [key=0, style=solid];
m21_76 -> m21_35  [key=2, style=dotted];
m21_76 -> m21_11  [key=2, style=dotted];
m21_77 -> m21_73  [color=blue, key=0, style=bold];
m21_258 -> m21_259  [key=0, style=solid];
m21_259 -> m21_260  [key=0, style=solid];
m21_259 -> m21_246  [key=2, style=dotted];
m21_259 -> m21_261  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_260 -> m21_261  [key=0, style=solid];
m21_260 -> m21_9  [key=2, style=dotted];
m21_260 -> m21_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_261 -> m21_262  [key=0, style=solid];
m21_261 -> m21_35  [key=2, style=dotted];
m21_261 -> m21_11  [key=2, style=dotted];
m21_262 -> m21_258  [color=blue, key=0, style=bold];
m21_250 -> m21_251  [key=0, style=solid];
m21_251 -> m21_252  [key=0, style=solid];
m21_251 -> m21_246  [key=2, style=dotted];
m21_251 -> m21_253  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_252 -> m21_253  [key=0, style=solid];
m21_252 -> m21_9  [key=2, style=dotted];
m21_252 -> m21_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_253 -> m21_254  [key=0, style=solid];
m21_253 -> m21_35  [key=2, style=dotted];
m21_253 -> m21_11  [key=2, style=dotted];
m21_254 -> m21_250  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_6  [key=2, style=dotted];
m21_1 -> m21_3  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m21_1 -> m21_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_7  [key=2, style=dotted];
m21_2 -> m21_8  [key=2, style=dotted];
m21_2 -> m21_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_9  [key=2, style=dotted];
m21_3 -> m21_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_10  [key=2, style=dotted];
m21_4 -> m21_11  [key=2, style=dotted];
m21_5 -> m21_0  [color=blue, key=0, style=bold];
m21_118 -> m21_119  [key=0, style=solid];
m21_119 -> m21_120  [key=0, style=solid];
m21_119 -> m21_114  [key=2, style=dotted];
m21_119 -> m21_69  [key=2, style=dotted];
m21_119 -> m21_121  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_120 -> m21_121  [key=0, style=solid];
m21_120 -> m21_9  [key=2, style=dotted];
m21_120 -> m21_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_121 -> m21_122  [key=0, style=solid];
m21_121 -> m21_35  [key=2, style=dotted];
m21_121 -> m21_11  [key=2, style=dotted];
m21_122 -> m21_118  [color=blue, key=0, style=bold];
m21_151 -> m21_152  [key=0, style=solid];
m21_151 -> m21_153  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m21_152 -> m21_153  [key=0, style=solid];
m21_152 -> m21_9  [key=2, style=dotted];
m21_152 -> m21_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_153 -> m21_154  [key=0, style=solid];
m21_153 -> m21_104  [key=2, style=dotted];
m21_154 -> m21_151  [color=blue, key=0, style=bold];
m21_290 -> m21_291  [key=0, style=solid];
m21_291 -> m21_292  [key=0, style=solid];
m21_291 -> m21_78  [key=2, style=dotted];
m21_291 -> m21_293  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_292 -> m21_293  [key=0, style=solid];
m21_292 -> m21_9  [key=2, style=dotted];
m21_292 -> m21_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_293 -> m21_294  [key=0, style=solid];
m21_293 -> m21_35  [key=2, style=dotted];
m21_293 -> m21_11  [key=2, style=dotted];
m21_294 -> m21_290  [color=blue, key=0, style=bold];
m21_266 -> m21_267  [key=0, style=solid];
m21_266 -> m21_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_267 -> m21_268  [key=0, style=solid];
m21_267 -> m21_9  [key=2, style=dotted];
m21_267 -> m21_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_268 -> m21_269  [key=0, style=solid];
m21_268 -> m21_270  [key=2, style=dotted];
m21_268 -> m21_11  [key=2, style=dotted];
m21_269 -> m21_266  [color=blue, key=0, style=bold];
m21_126 -> m21_127  [key=0, style=solid];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_114  [key=2, style=dotted];
m21_127 -> m21_69  [key=2, style=dotted];
m21_127 -> m21_129  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_128 -> m21_129  [key=0, style=solid];
m21_128 -> m21_9  [key=2, style=dotted];
m21_128 -> m21_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_35  [key=2, style=dotted];
m21_129 -> m21_11  [key=2, style=dotted];
m21_130 -> m21_126  [color=blue, key=0, style=bold];
m21_215 -> m21_216  [key=0, style=solid];
m21_216 -> m21_217  [key=0, style=solid];
m21_216 -> m21_220  [key=2, style=dotted];
m21_216 -> m21_69  [key=2, style=dotted];
m21_216 -> m21_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_217 -> m21_218  [key=0, style=solid];
m21_217 -> m21_9  [key=2, style=dotted];
m21_217 -> m21_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_218 -> m21_219  [key=0, style=solid];
m21_218 -> m21_35  [key=2, style=dotted];
m21_218 -> m21_11  [key=2, style=dotted];
m21_219 -> m21_215  [color=blue, key=0, style=bold];
m21_241 -> m21_242  [key=0, style=solid];
m21_242 -> m21_243  [key=0, style=solid];
m21_242 -> m21_246  [key=2, style=dotted];
m21_242 -> m21_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_243 -> m21_244  [key=0, style=solid];
m21_243 -> m21_9  [key=2, style=dotted];
m21_243 -> m21_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_244 -> m21_245  [key=0, style=solid];
m21_244 -> m21_35  [key=2, style=dotted];
m21_244 -> m21_11  [key=2, style=dotted];
m21_245 -> m21_241  [color=blue, key=0, style=bold];
m21_83 -> m21_84  [key=0, style=solid];
m21_84 -> m21_85  [key=0, style=solid];
m21_84 -> m21_78  [key=2, style=dotted];
m21_84 -> m21_69  [key=2, style=dotted];
m21_84 -> m21_86  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_9  [key=2, style=dotted];
m21_85 -> m21_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_35  [key=2, style=dotted];
m21_86 -> m21_11  [key=2, style=dotted];
m21_87 -> m21_83  [color=blue, key=0, style=bold];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_145  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m21_144 -> m21_145  [key=0, style=solid];
m21_144 -> m21_9  [key=2, style=dotted];
m21_144 -> m21_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_145 -> m21_146  [key=0, style=solid];
m21_145 -> m21_104  [key=2, style=dotted];
m21_146 -> m21_143  [color=blue, key=0, style=bold];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m21_160 -> m21_161  [key=0, style=solid];
m21_160 -> m21_9  [key=2, style=dotted];
m21_160 -> m21_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_161 -> m21_162  [key=0, style=solid];
m21_161 -> m21_104  [key=2, style=dotted];
m21_162 -> m21_159  [color=blue, key=0, style=bold];
m21_224 -> m21_225  [key=0, style=solid];
m21_225 -> m21_226  [key=0, style=solid];
m21_225 -> m21_220  [key=2, style=dotted];
m21_225 -> m21_69  [key=2, style=dotted];
m21_225 -> m21_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_226 -> m21_227  [key=0, style=solid];
m21_226 -> m21_9  [key=2, style=dotted];
m21_226 -> m21_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_227 -> m21_228  [key=0, style=solid];
m21_227 -> m21_35  [key=2, style=dotted];
m21_227 -> m21_11  [key=2, style=dotted];
m21_228 -> m21_224  [color=blue, key=0, style=bold];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [color=red, key=1, label=double, style=dashed];
m21_24 -> m21_25  [color=red, key=0, style=solid];
m21_24 -> m21_9  [key=2, style=dotted];
m21_24 -> m21_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_25 -> m21_26  [color=red, key=0, style=solid];
m21_25 -> m21_19  [color=red, key=2, style=dotted];
m21_26 -> m21_23  [color=blue, key=0, style=bold];
m21_109 -> m21_110  [key=0, style=solid];
m21_110 -> m21_111  [key=0, style=solid];
m21_110 -> m21_114  [key=2, style=dotted];
m21_110 -> m21_69  [key=2, style=dotted];
m21_110 -> m21_112  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_111 -> m21_112  [key=0, style=solid];
m21_111 -> m21_9  [key=2, style=dotted];
m21_111 -> m21_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_35  [key=2, style=dotted];
m21_112 -> m21_11  [key=2, style=dotted];
m21_113 -> m21_109  [color=blue, key=0, style=bold];
m21_207 -> m21_208  [key=0, style=solid];
m21_208 -> m21_209  [key=0, style=solid];
m21_208 -> m21_203  [key=2, style=dotted];
m21_208 -> m21_210  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_209 -> m21_210  [key=0, style=solid];
m21_209 -> m21_9  [key=2, style=dotted];
m21_209 -> m21_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_210 -> m21_211  [key=0, style=solid];
m21_210 -> m21_104  [key=2, style=dotted];
m21_211 -> m21_207  [color=blue, key=0, style=bold];
m21_306 -> m21_307  [key=0, style=solid];
m21_306 -> m21_308  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m21_307 -> m21_308  [key=0, style=solid];
m21_307 -> m21_9  [key=2, style=dotted];
m21_307 -> m21_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_308 -> m21_309  [key=0, style=solid];
m21_308 -> m21_104  [key=2, style=dotted];
m21_309 -> m21_306  [color=blue, key=0, style=bold];
m21_274 -> m21_275  [key=0, style=solid];
m21_275 -> m21_276  [key=0, style=solid];
m21_275 -> m21_220  [key=2, style=dotted];
m21_275 -> m21_277  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_276 -> m21_277  [key=0, style=solid];
m21_276 -> m21_9  [key=2, style=dotted];
m21_276 -> m21_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_277 -> m21_278  [key=0, style=solid];
m21_277 -> m21_35  [key=2, style=dotted];
m21_277 -> m21_11  [key=2, style=dotted];
m21_278 -> m21_274  [color=blue, key=0, style=bold];
m21_198 -> m21_199  [key=0, style=solid];
m21_199 -> m21_200  [key=0, style=solid];
m21_199 -> m21_203  [key=2, style=dotted];
m21_199 -> m21_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_200 -> m21_201  [key=0, style=solid];
m21_200 -> m21_9  [key=2, style=dotted];
m21_200 -> m21_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_201 -> m21_202  [key=0, style=solid];
m21_201 -> m21_104  [key=2, style=dotted];
m21_202 -> m21_198  [color=blue, key=0, style=bold];
m21_55 -> m21_56  [key=0, style=solid];
m21_55 -> m21_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_9  [key=2, style=dotted];
m21_56 -> m21_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_35  [key=2, style=dotted];
m21_57 -> m21_11  [key=2, style=dotted];
m21_58 -> m21_55  [color=blue, key=0, style=bold];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_33  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_9  [key=2, style=dotted];
m21_32 -> m21_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_32 -> m21_1  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_35  [key=2, style=dotted];
m21_33 -> m21_11  [key=2, style=dotted];
m21_34 -> m21_31  [color=blue, key=0, style=bold];
m21_47 -> m21_48  [key=0, style=solid];
m21_47 -> m21_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_9  [key=2, style=dotted];
m21_48 -> m21_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_48 -> m21_1  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_35  [key=2, style=dotted];
m21_49 -> m21_11  [key=2, style=dotted];
m21_50 -> m21_47  [color=blue, key=0, style=bold];
m21_91 -> m21_92  [key=0, style=solid];
m21_92 -> m21_93  [key=0, style=solid];
m21_92 -> m21_78  [key=2, style=dotted];
m21_92 -> m21_94  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_93 -> m21_94  [key=0, style=solid];
m21_93 -> m21_9  [key=2, style=dotted];
m21_93 -> m21_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_94 -> m21_95  [key=0, style=solid];
m21_94 -> m21_35  [key=2, style=dotted];
m21_94 -> m21_11  [key=2, style=dotted];
m21_95 -> m21_91  [color=blue, key=0, style=bold];
m21_310 -> m21_311  [key=0, style=solid];
m21_13 -> m21_14  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_14 -> m21_12  [color=blue, key=0, style=bold];
m21_20 -> m21_21  [key=0, style=solid];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_6  [key=2, style=dotted];
m21_22 -> m21_20  [color=blue, key=0, style=bold];
m21_27 -> m21_28  [key=0, style=solid];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_30  [key=2, style=dotted];
m21_29 -> m21_27  [color=blue, key=0, style=bold];
m21_36 -> m21_37  [key=0, style=solid];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_39  [key=2, style=dotted];
m21_38 -> m21_36  [color=blue, key=0, style=bold];
m21_44 -> m21_45  [key=0, style=solid];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_6  [key=2, style=dotted];
m21_46 -> m21_44  [color=blue, key=0, style=bold];
m21_51 -> m21_52  [key=0, style=solid];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_54  [key=2, style=dotted];
m21_53 -> m21_51  [color=blue, key=0, style=bold];
m21_59 -> m21_60  [key=0, style=solid];
m21_60 -> m21_61  [key=0, style=solid];
m21_60 -> m21_62  [key=2, style=dotted];
m21_61 -> m21_59  [color=blue, key=0, style=bold];
m21_70 -> m21_71  [key=0, style=solid];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_54  [key=2, style=dotted];
m21_72 -> m21_70  [color=blue, key=0, style=bold];
m21_79 -> m21_80  [key=0, style=solid];
m21_80 -> m21_81  [key=0, style=solid];
m21_80 -> m21_82  [key=2, style=dotted];
m21_81 -> m21_79  [color=blue, key=0, style=bold];
m21_88 -> m21_89  [key=0, style=solid];
m21_89 -> m21_90  [key=0, style=solid];
m21_89 -> m21_62  [key=2, style=dotted];
m21_90 -> m21_88  [color=blue, key=0, style=bold];
m21_96 -> m21_97  [key=0, style=solid];
m21_97 -> m21_98  [key=0, style=solid];
m21_97 -> m21_99  [key=2, style=dotted];
m21_98 -> m21_96  [color=blue, key=0, style=bold];
m21_105 -> m21_106  [key=0, style=solid];
m21_106 -> m21_107  [key=0, style=solid];
m21_106 -> m21_108  [key=2, style=dotted];
m21_107 -> m21_105  [color=blue, key=0, style=bold];
m21_115 -> m21_116  [key=0, style=solid];
m21_116 -> m21_117  [key=0, style=solid];
m21_116 -> m21_108  [key=2, style=dotted];
m21_117 -> m21_115  [color=blue, key=0, style=bold];
m21_123 -> m21_124  [key=0, style=solid];
m21_124 -> m21_125  [key=0, style=solid];
m21_124 -> m21_108  [key=2, style=dotted];
m21_125 -> m21_123  [color=blue, key=0, style=bold];
m21_131 -> m21_132  [key=0, style=solid];
m21_132 -> m21_133  [key=0, style=solid];
m21_132 -> m21_108  [key=2, style=dotted];
m21_133 -> m21_131  [color=blue, key=0, style=bold];
m21_140 -> m21_141  [key=0, style=solid];
m21_141 -> m21_142  [key=0, style=solid];
m21_141 -> m21_139  [key=2, style=dotted];
m21_142 -> m21_140  [color=blue, key=0, style=bold];
m21_147 -> m21_148  [key=0, style=solid];
m21_148 -> m21_149  [key=0, style=solid];
m21_148 -> m21_150  [key=2, style=dotted];
m21_149 -> m21_147  [color=blue, key=0, style=bold];
m21_155 -> m21_156  [key=0, style=solid];
m21_156 -> m21_157  [key=0, style=solid];
m21_156 -> m21_158  [key=2, style=dotted];
m21_157 -> m21_155  [color=blue, key=0, style=bold];
m21_163 -> m21_164  [key=0, style=solid];
m21_164 -> m21_165  [key=0, style=solid];
m21_164 -> m21_158  [key=2, style=dotted];
m21_165 -> m21_163  [color=blue, key=0, style=bold];
m21_173 -> m21_174  [key=0, style=solid];
m21_176 -> m21_177  [key=0, style=solid];
m21_176 -> m21_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m21_176 -> m21_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m21_174 -> m21_175  [key=0, style=solid];
m21_174 -> m21_139  [key=2, style=dotted];
m21_175 -> m21_173  [color=blue, key=0, style=bold];
m21_177 -> m21_178  [key=0, style=solid];
m21_177 -> m21_179  [key=2, style=dotted];
m21_177 -> m21_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_181 -> m21_182  [key=0, style=solid];
m21_181 -> m21_183  [key=2, style=dotted];
m21_181 -> m21_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_185 -> m21_186  [key=0, style=solid];
m21_185 -> m21_187  [key=2, style=dotted];
m21_178 -> m21_176  [color=blue, key=0, style=bold];
m21_180 -> m21_181  [key=0, style=solid];
m21_182 -> m21_180  [color=blue, key=0, style=bold];
m21_184 -> m21_185  [key=0, style=solid];
m21_186 -> m21_184  [color=blue, key=0, style=bold];
m21_194 -> m21_195  [key=0, style=solid];
m21_195 -> m21_196  [key=0, style=solid];
m21_195 -> m21_197  [key=2, style=dotted];
m21_196 -> m21_194  [color=blue, key=0, style=bold];
m21_204 -> m21_205  [key=0, style=solid];
m21_205 -> m21_206  [key=0, style=solid];
m21_205 -> m21_203  [key=2, style=dotted];
m21_206 -> m21_204  [color=blue, key=0, style=bold];
m21_212 -> m21_213  [key=0, style=solid];
m21_213 -> m21_214  [key=0, style=solid];
m21_213 -> m21_203  [key=2, style=dotted];
m21_214 -> m21_212  [color=blue, key=0, style=bold];
m21_221 -> m21_222  [key=0, style=solid];
m21_222 -> m21_223  [key=0, style=solid];
m21_222 -> m21_203  [key=2, style=dotted];
m21_223 -> m21_221  [color=blue, key=0, style=bold];
m21_229 -> m21_230  [key=0, style=solid];
m21_230 -> m21_231  [key=0, style=solid];
m21_230 -> m21_232  [key=2, style=dotted];
m21_231 -> m21_229  [color=blue, key=0, style=bold];
m21_238 -> m21_239  [key=0, style=solid];
m21_239 -> m21_240  [key=0, style=solid];
m21_239 -> m21_6  [key=2, style=dotted];
m21_240 -> m21_238  [color=blue, key=0, style=bold];
m21_247 -> m21_248  [key=0, style=solid];
m21_248 -> m21_249  [key=0, style=solid];
m21_248 -> m21_6  [key=2, style=dotted];
m21_249 -> m21_247  [color=blue, key=0, style=bold];
m21_255 -> m21_256  [key=0, style=solid];
m21_256 -> m21_257  [key=0, style=solid];
m21_256 -> m21_6  [key=2, style=dotted];
m21_257 -> m21_255  [color=blue, key=0, style=bold];
m21_263 -> m21_264  [key=0, style=solid];
m21_264 -> m21_265  [key=0, style=solid];
m21_264 -> m21_6  [key=2, style=dotted];
m21_265 -> m21_263  [color=blue, key=0, style=bold];
m21_271 -> m21_272  [key=0, style=solid];
m21_272 -> m21_273  [key=0, style=solid];
m21_272 -> m21_6  [key=2, style=dotted];
m21_273 -> m21_271  [color=blue, key=0, style=bold];
m21_279 -> m21_280  [key=0, style=solid];
m21_280 -> m21_281  [key=0, style=solid];
m21_280 -> m21_282  [key=2, style=dotted];
m21_281 -> m21_279  [color=blue, key=0, style=bold];
m21_287 -> m21_288  [key=0, style=solid];
m21_288 -> m21_289  [key=0, style=solid];
m21_288 -> m21_6  [key=2, style=dotted];
m21_289 -> m21_287  [color=blue, key=0, style=bold];
m21_295 -> m21_296  [key=0, style=solid];
m21_296 -> m21_297  [key=0, style=solid];
m21_296 -> m21_298  [key=2, style=dotted];
m21_297 -> m21_295  [color=blue, key=0, style=bold];
m21_303 -> m21_304  [key=0, style=solid];
m21_304 -> m21_305  [key=0, style=solid];
m21_304 -> m21_282  [key=2, style=dotted];
m21_305 -> m21_303  [color=blue, key=0, style=bold];
m21_311 -> m21_312  [key=0, style=solid];
m21_311 -> m21_313  [key=2, style=dotted];
m21_312 -> m21_310  [color=blue, key=0, style=bold];
m21_299 -> m21_300  [key=0, style=solid];
m21_299 -> m21_301  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m21_300 -> m21_301  [key=0, style=solid];
m21_300 -> m21_9  [key=2, style=dotted];
m21_300 -> m21_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_301 -> m21_302  [key=0, style=solid];
m21_301 -> m21_104  [key=2, style=dotted];
m21_302 -> m21_299  [color=blue, key=0, style=bold];
m21_63 -> m21_64  [key=0, style=solid];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_68  [key=2, style=dotted];
m21_64 -> m21_69  [key=2, style=dotted];
m21_64 -> m21_66  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_9  [key=2, style=dotted];
m21_65 -> m21_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_35  [key=2, style=dotted];
m21_66 -> m21_11  [key=2, style=dotted];
m21_67 -> m21_63  [color=blue, key=0, style=bold];
m21_100 -> m21_101  [key=0, style=solid];
m21_100 -> m21_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m21_101 -> m21_102  [key=0, style=solid];
m21_101 -> m21_9  [key=2, style=dotted];
m21_101 -> m21_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_102 -> m21_103  [key=0, style=solid];
m21_102 -> m21_104  [key=2, style=dotted];
m21_102 -> m21_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m21_103 -> m21_100  [color=blue, key=0, style=bold];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_42  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_9  [key=2, style=dotted];
m21_41 -> m21_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_35  [key=2, style=dotted];
m21_42 -> m21_11  [key=2, style=dotted];
m21_43 -> m21_40  [color=blue, key=0, style=bold];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_17  [color=darkseagreen4, key=1, label=long, style=dashed];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_9  [key=2, style=dotted];
m21_16 -> m21_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=2, style=dotted];
m21_18 -> m21_15  [color=blue, key=0, style=bold];
m21_134 -> m21_135  [key=0, style=solid];
m21_135 -> m21_136  [key=0, style=solid];
m21_135 -> m21_139  [key=2, style=dotted];
m21_135 -> m21_137  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_136 -> m21_137  [key=0, style=solid];
m21_136 -> m21_9  [key=2, style=dotted];
m21_136 -> m21_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_137 -> m21_138  [key=0, style=solid];
m21_137 -> m21_104  [key=2, style=dotted];
m21_138 -> m21_134  [color=blue, key=0, style=bold];
m21_233 -> m21_234  [key=0, style=solid];
m21_234 -> m21_235  [key=0, style=solid];
m21_234 -> m21_78  [key=2, style=dotted];
m21_234 -> m21_69  [key=2, style=dotted];
m21_234 -> m21_236  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_235 -> m21_236  [key=0, style=solid];
m21_235 -> m21_9  [key=2, style=dotted];
m21_235 -> m21_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_236 -> m21_237  [key=0, style=solid];
m21_236 -> m21_35  [key=2, style=dotted];
m21_236 -> m21_11  [key=2, style=dotted];
m21_237 -> m21_233  [color=blue, key=0, style=bold];
m21_283 -> m21_284  [key=0, style=solid];
m21_283 -> m21_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_284 -> m21_285  [key=0, style=solid];
m21_284 -> m21_9  [key=2, style=dotted];
m21_284 -> m21_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_285 -> m21_286  [key=0, style=solid];
m21_285 -> m21_104  [key=2, style=dotted];
m21_286 -> m21_283  [color=blue, key=0, style=bold];
m21_188 -> m21_189  [key=0, style=solid];
m21_189 -> m21_190  [key=0, style=solid];
m21_189 -> m21_193  [key=2, style=dotted];
m21_189 -> m21_69  [key=2, style=dotted];
m21_189 -> m21_191  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_190 -> m21_191  [key=0, style=solid];
m21_190 -> m21_9  [key=2, style=dotted];
m21_190 -> m21_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_191 -> m21_192  [key=0, style=solid];
m21_191 -> m21_35  [key=2, style=dotted];
m21_191 -> m21_11  [key=2, style=dotted];
m21_192 -> m21_188  [color=blue, key=0, style=bold];
m21_166 -> m21_167  [key=0, style=solid];
m21_167 -> m21_168  [key=0, style=solid];
m21_167 -> m21_139  [key=2, style=dotted];
m21_167 -> m21_170  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m21_168 -> m21_169  [key=0, style=solid];
m21_170 -> m21_171  [key=0, style=solid];
m21_170 -> m21_104  [key=2, style=dotted];
m21_169 -> m21_170  [key=0, style=solid];
m21_169 -> m21_172  [key=2, style=dotted];
m21_169 -> m21_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_169 -> m21_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_171 -> m21_166  [color=blue, key=0, style=bold];
m21_314 -> m21_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m21_315 -> m21_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m21_315 -> m21_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m23_78 -> m23_79  [key=0, style=solid];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_65  [key=2, style=dotted];
m23_79 -> m23_17  [key=2, style=dotted];
m23_79 -> m23_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_79 -> m23_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_80 -> m23_81  [key=0, style=solid];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_34  [key=2, style=dotted];
m23_81 -> m23_35  [key=2, style=dotted];
m23_81 -> m23_36  [key=2, style=dotted];
m23_81 -> m23_37  [key=2, style=dotted];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_4  [key=2, style=dotted];
m23_82 -> m23_21  [key=2, style=dotted];
m23_82 -> m23_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_82 -> m23_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_82 -> m23_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_82 -> m23_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_82 -> m23_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_5  [key=2, style=dotted];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_5  [key=2, style=dotted];
m23_85 -> m23_86  [key=0, style=solid];
m23_85 -> m23_5  [key=2, style=dotted];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_5  [key=2, style=dotted];
m23_87 -> m23_88  [key=0, style=solid];
m23_87 -> m23_5  [key=2, style=dotted];
m23_88 -> m23_89  [key=0, style=solid];
m23_88 -> m23_5  [key=2, style=dotted];
m23_89 -> m23_78  [color=blue, key=0, style=bold];
m23_66 -> m23_67  [key=0, style=solid];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_65  [key=2, style=dotted];
m23_67 -> m23_17  [key=2, style=dotted];
m23_67 -> m23_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_67 -> m23_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_68 -> m23_69  [key=0, style=solid];
m23_69 -> m23_70  [key=0, style=solid];
m23_69 -> m23_34  [key=2, style=dotted];
m23_69 -> m23_35  [key=2, style=dotted];
m23_69 -> m23_36  [key=2, style=dotted];
m23_69 -> m23_37  [key=2, style=dotted];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_4  [key=2, style=dotted];
m23_70 -> m23_77  [key=2, style=dotted];
m23_70 -> m23_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_70 -> m23_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_70 -> m23_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_70 -> m23_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_5  [key=2, style=dotted];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_5  [key=2, style=dotted];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_5  [key=2, style=dotted];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_5  [key=2, style=dotted];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_5  [key=2, style=dotted];
m23_76 -> m23_66  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [key=2, style=dotted];
m23_1 -> m23_4  [key=2, style=dotted];
m23_1 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_177 -> m23_178  [key=0, style=solid];
m23_178 -> m23_179  [key=0, style=solid];
m23_178 -> m23_36  [key=2, style=dotted];
m23_178 -> m23_190  [key=2, style=dotted];
m23_179 -> m23_180  [key=0, style=solid];
m23_179 -> m23_34  [key=2, style=dotted];
m23_179 -> m23_191  [key=2, style=dotted];
m23_179 -> m23_125  [key=2, style=dotted];
m23_180 -> m23_181  [key=0, style=solid];
m23_180 -> m23_163  [key=2, style=dotted];
m23_181 -> m23_182  [key=0, style=solid];
m23_181 -> m23_4  [key=2, style=dotted];
m23_181 -> m23_21  [key=2, style=dotted];
m23_181 -> m23_38  [key=2, style=dotted];
m23_181 -> m23_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_181 -> m23_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_181 -> m23_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_181 -> m23_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_181 -> m23_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_181 -> m23_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_182 -> m23_183  [key=0, style=solid];
m23_182 -> m23_164  [key=2, style=dotted];
m23_182 -> m23_165  [key=2, style=dotted];
m23_183 -> m23_184  [key=0, style=solid];
m23_183 -> m23_164  [key=2, style=dotted];
m23_183 -> m23_165  [key=2, style=dotted];
m23_184 -> m23_185  [key=0, style=solid];
m23_184 -> m23_5  [key=2, style=dotted];
m23_185 -> m23_186  [key=0, style=solid];
m23_185 -> m23_5  [key=2, style=dotted];
m23_186 -> m23_187  [key=0, style=solid];
m23_186 -> m23_5  [key=2, style=dotted];
m23_187 -> m23_188  [key=0, style=solid];
m23_187 -> m23_5  [key=2, style=dotted];
m23_188 -> m23_189  [key=0, style=solid];
m23_188 -> m23_5  [key=2, style=dotted];
m23_189 -> m23_177  [color=blue, key=0, style=bold];
m23_149 -> m23_150  [key=0, style=solid];
m23_150 -> m23_151  [key=0, style=solid];
m23_150 -> m23_34  [key=2, style=dotted];
m23_150 -> m23_35  [key=2, style=dotted];
m23_150 -> m23_116  [key=2, style=dotted];
m23_150 -> m23_121  [key=2, style=dotted];
m23_150 -> m23_118  [key=2, style=dotted];
m23_151 -> m23_152  [key=0, style=solid];
m23_151 -> m23_163  [key=2, style=dotted];
m23_152 -> m23_153  [key=0, style=solid];
m23_152 -> m23_4  [key=2, style=dotted];
m23_152 -> m23_21  [key=2, style=dotted];
m23_152 -> m23_38  [key=2, style=dotted];
m23_152 -> m23_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_152 -> m23_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_153 -> m23_154  [key=0, style=solid];
m23_153 -> m23_164  [key=2, style=dotted];
m23_153 -> m23_165  [key=2, style=dotted];
m23_154 -> m23_155  [key=0, style=solid];
m23_154 -> m23_164  [key=2, style=dotted];
m23_154 -> m23_165  [key=2, style=dotted];
m23_155 -> m23_156  [key=0, style=solid];
m23_155 -> m23_5  [key=2, style=dotted];
m23_156 -> m23_157  [key=0, style=solid];
m23_156 -> m23_5  [key=2, style=dotted];
m23_157 -> m23_158  [key=0, style=solid];
m23_157 -> m23_5  [key=2, style=dotted];
m23_158 -> m23_159  [key=0, style=solid];
m23_158 -> m23_5  [key=2, style=dotted];
m23_159 -> m23_160  [key=0, style=solid];
m23_159 -> m23_5  [key=2, style=dotted];
m23_160 -> m23_161  [key=0, style=solid];
m23_160 -> m23_5  [key=2, style=dotted];
m23_161 -> m23_162  [key=0, style=solid];
m23_161 -> m23_5  [key=2, style=dotted];
m23_162 -> m23_149  [color=blue, key=0, style=bold];
m23_243 -> m23_244  [key=0, style=solid];
m23_244 -> m23_245  [key=0, style=solid];
m23_244 -> m23_255  [key=2, style=dotted];
m23_244 -> m23_256  [key=2, style=dotted];
m23_244 -> m23_246  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m23_244 -> m23_248  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m23_245 -> m23_246  [key=0, style=solid];
m23_245 -> m23_34  [key=2, style=dotted];
m23_245 -> m23_257  [key=2, style=dotted];
m23_245 -> m23_116  [key=2, style=dotted];
m23_245 -> m23_247  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m23_246 -> m23_247  [key=0, style=solid];
m23_246 -> m23_258  [key=2, style=dotted];
m23_248 -> m23_249  [key=0, style=solid];
m23_248 -> m23_258  [key=2, style=dotted];
m23_247 -> m23_248  [key=0, style=solid];
m23_247 -> m23_163  [key=2, style=dotted];
m23_247 -> m23_249  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m23_249 -> m23_250  [key=0, style=solid];
m23_249 -> m23_4  [key=2, style=dotted];
m23_250 -> m23_251  [key=0, style=solid];
m23_250 -> m23_21  [key=2, style=dotted];
m23_250 -> m23_38  [key=2, style=dotted];
m23_250 -> m23_252  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_250 -> m23_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_251 -> m23_252  [key=0, style=solid];
m23_251 -> m23_164  [key=2, style=dotted];
m23_251 -> m23_259  [key=2, style=dotted];
m23_252 -> m23_253  [key=0, style=solid];
m23_252 -> m23_164  [key=2, style=dotted];
m23_252 -> m23_259  [key=2, style=dotted];
m23_253 -> m23_254  [key=0, style=solid];
m23_253 -> m23_164  [key=2, style=dotted];
m23_253 -> m23_259  [key=2, style=dotted];
m23_254 -> m23_243  [color=blue, key=0, style=bold];
m23_60 -> m23_61  [key=0, style=solid];
m23_61 -> m23_62  [key=0, style=solid];
m23_61 -> m23_65  [key=2, style=dotted];
m23_61 -> m23_34  [key=2, style=dotted];
m23_61 -> m23_35  [key=2, style=dotted];
m23_61 -> m23_36  [key=2, style=dotted];
m23_61 -> m23_37  [key=2, style=dotted];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_4  [key=2, style=dotted];
m23_62 -> m23_21  [key=2, style=dotted];
m23_62 -> m23_38  [key=2, style=dotted];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_5  [key=2, style=dotted];
m23_64 -> m23_60  [color=blue, key=0, style=bold];
m23_90 -> m23_91  [key=0, style=solid];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_65  [key=2, style=dotted];
m23_91 -> m23_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_91 -> m23_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m23_92 -> m23_93  [key=0, style=solid];
m23_93 -> m23_94  [key=0, style=solid];
m23_93 -> m23_19  [key=2, style=dotted];
m23_93 -> m23_34  [key=2, style=dotted];
m23_93 -> m23_35  [key=2, style=dotted];
m23_93 -> m23_36  [key=2, style=dotted];
m23_93 -> m23_37  [key=2, style=dotted];
m23_93 -> m23_20  [key=2, style=dotted];
m23_94 -> m23_95  [key=0, style=solid];
m23_94 -> m23_4  [key=2, style=dotted];
m23_94 -> m23_21  [key=2, style=dotted];
m23_94 -> m23_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_94 -> m23_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_94 -> m23_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_94 -> m23_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_94 -> m23_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_5  [key=2, style=dotted];
m23_96 -> m23_97  [key=0, style=solid];
m23_96 -> m23_5  [key=2, style=dotted];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_5  [key=2, style=dotted];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_5  [key=2, style=dotted];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_5  [key=2, style=dotted];
m23_100 -> m23_101  [key=0, style=solid];
m23_100 -> m23_5  [key=2, style=dotted];
m23_101 -> m23_90  [color=blue, key=0, style=bold];
m23_218 -> m23_219  [key=0, style=solid];
m23_219 -> m23_220  [key=0, style=solid];
m23_219 -> m23_34  [key=2, style=dotted];
m23_219 -> m23_35  [key=2, style=dotted];
m23_219 -> m23_116  [key=2, style=dotted];
m23_220 -> m23_221  [key=0, style=solid];
m23_220 -> m23_163  [key=2, style=dotted];
m23_221 -> m23_222  [key=0, style=solid];
m23_221 -> m23_4  [key=2, style=dotted];
m23_222 -> m23_223  [key=0, style=solid];
m23_222 -> m23_21  [key=2, style=dotted];
m23_222 -> m23_38  [key=2, style=dotted];
m23_222 -> m23_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_222 -> m23_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_223 -> m23_224  [key=0, style=solid];
m23_223 -> m23_164  [key=2, style=dotted];
m23_223 -> m23_165  [key=2, style=dotted];
m23_224 -> m23_225  [key=0, style=solid];
m23_224 -> m23_164  [key=2, style=dotted];
m23_224 -> m23_165  [key=2, style=dotted];
m23_225 -> m23_226  [key=0, style=solid];
m23_225 -> m23_5  [key=2, style=dotted];
m23_226 -> m23_227  [key=0, style=solid];
m23_226 -> m23_5  [key=2, style=dotted];
m23_227 -> m23_228  [key=0, style=solid];
m23_227 -> m23_5  [key=2, style=dotted];
m23_228 -> m23_229  [key=0, style=solid];
m23_228 -> m23_5  [key=2, style=dotted];
m23_229 -> m23_230  [key=0, style=solid];
m23_229 -> m23_5  [key=2, style=dotted];
m23_230 -> m23_231  [key=0, style=solid];
m23_230 -> m23_5  [key=2, style=dotted];
m23_231 -> m23_232  [key=0, style=solid];
m23_231 -> m23_5  [key=2, style=dotted];
m23_232 -> m23_233  [key=0, style=solid];
m23_232 -> m23_5  [key=2, style=dotted];
m23_233 -> m23_234  [key=0, style=solid];
m23_233 -> m23_5  [key=2, style=dotted];
m23_234 -> m23_235  [key=0, style=solid];
m23_234 -> m23_5  [key=2, style=dotted];
m23_235 -> m23_236  [key=0, style=solid];
m23_235 -> m23_5  [key=2, style=dotted];
m23_236 -> m23_237  [key=0, style=solid];
m23_236 -> m23_5  [key=2, style=dotted];
m23_237 -> m23_238  [key=0, style=solid];
m23_237 -> m23_5  [key=2, style=dotted];
m23_238 -> m23_239  [key=0, style=solid];
m23_238 -> m23_5  [key=2, style=dotted];
m23_239 -> m23_240  [key=0, style=solid];
m23_239 -> m23_5  [key=2, style=dotted];
m23_240 -> m23_241  [key=0, style=solid];
m23_240 -> m23_5  [key=2, style=dotted];
m23_241 -> m23_242  [key=0, style=solid];
m23_241 -> m23_5  [key=2, style=dotted];
m23_242 -> m23_218  [color=blue, key=0, style=bold];
m23_6 -> m23_7  [key=0, style=solid];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_16  [key=2, style=dotted];
m23_7 -> m23_17  [key=2, style=dotted];
m23_7 -> m23_18  [key=2, style=dotted];
m23_7 -> m23_19  [key=2, style=dotted];
m23_7 -> m23_20  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_4  [key=2, style=dotted];
m23_8 -> m23_21  [key=2, style=dotted];
m23_8 -> m23_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_8 -> m23_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_8 -> m23_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_8 -> m23_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_8 -> m23_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_5  [key=2, style=dotted];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_5  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_5  [key=2, style=dotted];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_5  [key=2, style=dotted];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_5  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_5  [key=2, style=dotted];
m23_15 -> m23_6  [color=blue, key=0, style=bold];
m23_102 -> m23_103  [key=0, style=solid];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_34  [key=2, style=dotted];
m23_103 -> m23_35  [key=2, style=dotted];
m23_103 -> m23_116  [key=2, style=dotted];
m23_103 -> m23_117  [key=2, style=dotted];
m23_103 -> m23_118  [key=2, style=dotted];
m23_103 -> m23_119  [key=2, style=dotted];
m23_103 -> m23_120  [key=2, style=dotted];
m23_103 -> m23_121  [key=2, style=dotted];
m23_103 -> m23_122  [key=2, style=dotted];
m23_103 -> m23_123  [key=2, style=dotted];
m23_103 -> m23_124  [key=2, style=dotted];
m23_103 -> m23_125  [key=2, style=dotted];
m23_103 -> m23_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m23_104 -> m23_105  [key=0, style=solid];
m23_104 -> m23_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_104 -> m23_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m23_106 -> m23_107  [key=0, style=solid];
m23_106 -> m23_126  [key=2, style=dotted];
m23_105 -> m23_106  [key=0, style=solid];
m23_107 -> m23_108  [key=0, style=solid];
m23_107 -> m23_21  [key=2, style=dotted];
m23_107 -> m23_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_107 -> m23_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_107 -> m23_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_107 -> m23_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_107 -> m23_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_107 -> m23_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_108 -> m23_109  [key=0, style=solid];
m23_108 -> m23_5  [key=2, style=dotted];
m23_109 -> m23_110  [key=0, style=solid];
m23_109 -> m23_5  [key=2, style=dotted];
m23_110 -> m23_111  [key=0, style=solid];
m23_110 -> m23_5  [key=2, style=dotted];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_5  [key=2, style=dotted];
m23_112 -> m23_113  [key=0, style=solid];
m23_112 -> m23_5  [key=2, style=dotted];
m23_113 -> m23_114  [key=0, style=solid];
m23_113 -> m23_5  [key=2, style=dotted];
m23_114 -> m23_115  [key=0, style=solid];
m23_114 -> m23_5  [key=2, style=dotted];
m23_115 -> m23_102  [color=blue, key=0, style=bold];
m23_39 -> m23_40  [key=0, style=solid];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_3  [key=2, style=dotted];
m23_40 -> m23_19  [key=2, style=dotted];
m23_40 -> m23_34  [key=2, style=dotted];
m23_40 -> m23_35  [key=2, style=dotted];
m23_40 -> m23_36  [key=2, style=dotted];
m23_40 -> m23_37  [key=2, style=dotted];
m23_40 -> m23_20  [key=2, style=dotted];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_4  [key=2, style=dotted];
m23_41 -> m23_21  [key=2, style=dotted];
m23_41 -> m23_38  [key=2, style=dotted];
m23_41 -> m23_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_41 -> m23_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_41 -> m23_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_41 -> m23_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_41 -> m23_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_41 -> m23_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_5  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_5  [key=2, style=dotted];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_5  [key=2, style=dotted];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_5  [key=2, style=dotted];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_5  [key=2, style=dotted];
m23_47 -> m23_48  [key=0, style=solid];
m23_47 -> m23_5  [key=2, style=dotted];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_5  [key=2, style=dotted];
m23_49 -> m23_39  [color=blue, key=0, style=bold];
m23_146 -> m23_147  [key=0, style=solid];
m23_128 -> m23_129  [key=0, style=solid];
m23_128 -> m23_131  [key=0, style=solid];
m23_128 -> m23_133  [key=0, style=solid];
m23_128 -> m23_135  [key=0, style=solid];
m23_128 -> m23_137  [key=0, style=solid];
m23_128 -> m23_139  [key=0, style=solid];
m23_128 -> m23_141  [key=0, style=solid];
m23_128 -> m23_143  [key=0, style=solid];
m23_130 -> m23_144  [key=0, style=solid];
m23_132 -> m23_144  [key=0, style=solid];
m23_134 -> m23_144  [key=0, style=solid];
m23_136 -> m23_144  [key=0, style=solid];
m23_138 -> m23_144  [key=0, style=solid];
m23_142 -> m23_144  [key=0, style=solid];
m23_127 -> m23_128  [key=0, style=solid];
m23_127 -> m23_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_127 -> m23_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_127 -> m23_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_127 -> m23_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_127 -> m23_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_127 -> m23_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m23_129 -> m23_130  [key=0, style=solid];
m23_131 -> m23_132  [key=0, style=solid];
m23_133 -> m23_134  [key=0, style=solid];
m23_135 -> m23_136  [key=0, style=solid];
m23_137 -> m23_138  [key=0, style=solid];
m23_139 -> m23_140  [key=0, style=solid];
m23_141 -> m23_142  [key=0, style=solid];
m23_143 -> m23_144  [key=0, style=solid];
m23_143 -> m23_145  [key=2, style=dotted];
m23_140 -> m23_144  [key=0, style=solid];
m23_144 -> m23_127  [color=blue, key=0, style=bold];
m23_147 -> m23_148  [key=0, style=solid];
m23_148 -> m23_146  [color=blue, key=0, style=bold];
m23_50 -> m23_51  [color=red, key=0, style=solid];
m23_51 -> m23_52  [color=red, key=0, style=solid];
m23_51 -> m23_3  [color=red, key=2, style=dotted];
m23_51 -> m23_19  [color=red, key=2, style=dotted];
m23_51 -> m23_34  [color=red, key=2, style=dotted];
m23_51 -> m23_35  [color=red, key=2, style=dotted];
m23_51 -> m23_36  [color=red, key=2, style=dotted];
m23_51 -> m23_37  [color=red, key=2, style=dotted];
m23_51 -> m23_20  [color=red, key=2, style=dotted];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_4  [key=2, style=dotted];
m23_52 -> m23_21  [key=2, style=dotted];
m23_52 -> m23_38  [key=2, style=dotted];
m23_52 -> m23_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_52 -> m23_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_52 -> m23_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_52 -> m23_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_52 -> m23_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_5  [key=2, style=dotted];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_5  [key=2, style=dotted];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_5  [key=2, style=dotted];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_5  [key=2, style=dotted];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_5  [key=2, style=dotted];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_5  [key=2, style=dotted];
m23_59 -> m23_50  [color=blue, key=0, style=bold];
m23_166 -> m23_167  [key=0, style=solid];
m23_167 -> m23_168  [key=0, style=solid];
m23_167 -> m23_34  [key=2, style=dotted];
m23_167 -> m23_35  [key=2, style=dotted];
m23_167 -> m23_125  [key=2, style=dotted];
m23_168 -> m23_169  [key=0, style=solid];
m23_168 -> m23_163  [key=2, style=dotted];
m23_169 -> m23_170  [key=0, style=solid];
m23_169 -> m23_4  [key=2, style=dotted];
m23_169 -> m23_21  [key=2, style=dotted];
m23_169 -> m23_38  [key=2, style=dotted];
m23_169 -> m23_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_169 -> m23_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_169 -> m23_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_169 -> m23_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_169 -> m23_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_170 -> m23_171  [key=0, style=solid];
m23_170 -> m23_164  [key=2, style=dotted];
m23_170 -> m23_165  [key=2, style=dotted];
m23_171 -> m23_172  [key=0, style=solid];
m23_171 -> m23_164  [key=2, style=dotted];
m23_171 -> m23_165  [key=2, style=dotted];
m23_172 -> m23_173  [key=0, style=solid];
m23_172 -> m23_5  [key=2, style=dotted];
m23_173 -> m23_174  [key=0, style=solid];
m23_173 -> m23_5  [key=2, style=dotted];
m23_174 -> m23_175  [key=0, style=solid];
m23_174 -> m23_5  [key=2, style=dotted];
m23_175 -> m23_176  [key=0, style=solid];
m23_175 -> m23_5  [key=2, style=dotted];
m23_176 -> m23_166  [color=blue, key=0, style=bold];
m23_205 -> m23_206  [key=0, style=solid];
m23_206 -> m23_207  [key=0, style=solid];
m23_206 -> m23_34  [key=2, style=dotted];
m23_206 -> m23_35  [key=2, style=dotted];
m23_206 -> m23_36  [key=2, style=dotted];
m23_207 -> m23_208  [key=0, style=solid];
m23_207 -> m23_217  [key=2, style=dotted];
m23_208 -> m23_209  [key=0, style=solid];
m23_208 -> m23_21  [key=2, style=dotted];
m23_208 -> m23_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_208 -> m23_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_208 -> m23_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_208 -> m23_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_208 -> m23_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_208 -> m23_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_209 -> m23_210  [key=0, style=solid];
m23_209 -> m23_5  [key=2, style=dotted];
m23_210 -> m23_211  [key=0, style=solid];
m23_210 -> m23_5  [key=2, style=dotted];
m23_211 -> m23_212  [key=0, style=solid];
m23_211 -> m23_5  [key=2, style=dotted];
m23_212 -> m23_213  [key=0, style=solid];
m23_212 -> m23_5  [key=2, style=dotted];
m23_213 -> m23_214  [key=0, style=solid];
m23_213 -> m23_5  [key=2, style=dotted];
m23_214 -> m23_215  [key=0, style=solid];
m23_214 -> m23_5  [key=2, style=dotted];
m23_215 -> m23_216  [key=0, style=solid];
m23_215 -> m23_5  [key=2, style=dotted];
m23_216 -> m23_205  [color=blue, key=0, style=bold];
m23_22 -> m23_23  [key=0, style=solid];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_3  [key=2, style=dotted];
m23_23 -> m23_19  [key=2, style=dotted];
m23_23 -> m23_34  [key=2, style=dotted];
m23_23 -> m23_35  [key=2, style=dotted];
m23_23 -> m23_36  [key=2, style=dotted];
m23_23 -> m23_37  [key=2, style=dotted];
m23_23 -> m23_20  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_4  [key=2, style=dotted];
m23_24 -> m23_21  [key=2, style=dotted];
m23_24 -> m23_38  [key=2, style=dotted];
m23_24 -> m23_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_24 -> m23_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_5  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_5  [key=2, style=dotted];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_5  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_5  [key=2, style=dotted];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_5  [key=2, style=dotted];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_5  [key=2, style=dotted];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_5  [key=2, style=dotted];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_5  [key=2, style=dotted];
m23_33 -> m23_22  [color=blue, key=0, style=bold];
m23_192 -> m23_193  [key=0, style=solid];
m23_193 -> m23_194  [key=0, style=solid];
m23_193 -> m23_3  [key=2, style=dotted];
m23_193 -> m23_19  [key=2, style=dotted];
m23_193 -> m23_34  [key=2, style=dotted];
m23_193 -> m23_35  [key=2, style=dotted];
m23_193 -> m23_36  [key=2, style=dotted];
m23_193 -> m23_37  [key=2, style=dotted];
m23_193 -> m23_20  [key=2, style=dotted];
m23_194 -> m23_195  [key=0, style=solid];
m23_194 -> m23_4  [key=2, style=dotted];
m23_194 -> m23_21  [key=2, style=dotted];
m23_194 -> m23_38  [key=2, style=dotted];
m23_194 -> m23_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_194 -> m23_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m23_195 -> m23_196  [key=0, style=solid];
m23_195 -> m23_5  [key=2, style=dotted];
m23_196 -> m23_197  [key=0, style=solid];
m23_196 -> m23_5  [key=2, style=dotted];
m23_197 -> m23_198  [key=0, style=solid];
m23_197 -> m23_5  [key=2, style=dotted];
m23_198 -> m23_199  [key=0, style=solid];
m23_198 -> m23_5  [key=2, style=dotted];
m23_199 -> m23_200  [key=0, style=solid];
m23_199 -> m23_5  [key=2, style=dotted];
m23_200 -> m23_201  [key=0, style=solid];
m23_200 -> m23_5  [key=2, style=dotted];
m23_201 -> m23_202  [key=0, style=solid];
m23_201 -> m23_5  [key=2, style=dotted];
m23_202 -> m23_203  [key=0, style=solid];
m23_202 -> m23_5  [key=2, style=dotted];
m23_203 -> m23_204  [key=0, style=solid];
m23_203 -> m23_5  [key=2, style=dotted];
m23_204 -> m23_192  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=0, style=solid];
m26_1 -> m26_5  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_2 -> m26_4  [key=0, style=solid];
m26_2 -> m26_6  [key=2, style=dotted];
m26_4 -> m26_0  [color=blue, key=0, style=bold];
m26_7 -> m26_3  [color=darkseagreen4, key=1, label="CommandLine.VerbAttribute", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_0 -> m28_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_0 -> m28_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=0, style=solid];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_5  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_2 -> m28_7  [key=0, style=solid];
m28_2 -> m28_8  [key=2, style=dotted];
m28_4 -> m28_7  [key=0, style=solid];
m28_4 -> m28_8  [key=2, style=dotted];
m28_7 -> m28_0  [color=blue, key=0, style=bold];
m28_9 -> m28_10  [key=0, style=solid];
m28_10 -> m28_11  [key=0, style=solid];
m28_10 -> m28_0  [key=2, style=dotted];
m28_11 -> m28_9  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [key=2, style=dotted];
m28_13 -> m28_16  [key=2, style=dotted];
m28_13 -> m28_9  [key=2, style=dotted];
m28_13 -> m28_17  [key=2, style=dotted];
m28_13 -> m28_13  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_14 -> m28_12  [color=blue, key=0, style=bold];
m28_18 -> m28_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
m28_18 -> m28_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [color=blue, key=0, style=bold];
m30_10 -> m30_11  [color=green, key=0, style=solid];
m30_11 -> m30_12  [color=green, key=0, style=solid];
m30_12 -> m30_10  [color=blue, key=0, style=bold];
m31_25 -> m31_31  [key=0, style=solid];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_33  [key=2, style=dotted];
m31_32 -> m31_25  [color=blue, key=0, style=bold];
m31_5 -> m31_6  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_8  [key=2, style=dotted];
m31_6 -> m31_9  [key=2, style=dotted];
m31_6 -> m31_10  [key=2, style=dotted];
m31_6 -> m31_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_7 -> m31_5  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_2  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_4  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_0  [color=blue, key=0, style=bold];
m31_8 -> m31_15  [key=0, style=solid];
m31_8 -> m31_22  [color=crimson, key=0, style=bold];
m31_8 -> m31_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_25  [key=2, style=dotted];
m31_15 -> m31_19  [color=darkseagreen4, key=1, label=temporaryDomain, style=dashed];
m31_15 -> m31_23  [color=darkseagreen4, key=1, label=temporaryDomain, style=dashed];
m31_22 -> m31_16  [key=0, style=solid];
m31_22 -> m31_29  [key=2, style=dotted];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_23  [key=0, style=solid];
m31_16 -> m31_18  [color=darkseagreen4, key=1, label=file, style=dashed];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_21  [key=0, style=solid];
m31_19 -> m31_27  [key=2, style=dotted];
m31_19 -> m31_22  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_30  [key=2, style=dotted];
m31_17 -> m31_18  [key=0, style=solid];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_26  [key=2, style=dotted];
m31_20 -> m31_16  [key=0, style=solid];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_16  [key=0, style=solid];
m31_21 -> m31_28  [key=2, style=dotted];
m31_24 -> m31_8  [color=blue, key=0, style=bold];
m31_11 -> m31_12  [key=0, style=solid];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_14  [key=2, style=dotted];
m31_13 -> m31_11  [color=blue, key=0, style=bold];
m31_34 -> m31_2  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m31_34 -> m31_6  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m32_78 -> m32_79  [key=0, style=solid];
m32_79 -> m32_17  [key=2, style=dotted];
m32_79 -> m32_80  [key=0, style=solid];
m32_79 -> m32_65  [key=2, style=dotted];
m32_79 -> m32_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_79 -> m32_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_82 -> m32_4  [key=2, style=dotted];
m32_82 -> m32_21  [key=2, style=dotted];
m32_82 -> m32_83  [key=0, style=solid];
m32_82 -> m32_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_80 -> m32_81  [key=0, style=solid];
m32_81 -> m32_82  [key=0, style=solid];
m32_81 -> m32_34  [key=2, style=dotted];
m32_81 -> m32_35  [key=2, style=dotted];
m32_81 -> m32_36  [key=2, style=dotted];
m32_81 -> m32_37  [key=2, style=dotted];
m32_83 -> m32_5  [key=2, style=dotted];
m32_83 -> m32_84  [key=0, style=solid];
m32_84 -> m32_5  [key=2, style=dotted];
m32_84 -> m32_85  [key=0, style=solid];
m32_85 -> m32_5  [key=2, style=dotted];
m32_85 -> m32_86  [key=0, style=solid];
m32_86 -> m32_5  [key=2, style=dotted];
m32_86 -> m32_87  [key=0, style=solid];
m32_87 -> m32_5  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_88 -> m32_5  [key=2, style=dotted];
m32_88 -> m32_89  [key=0, style=solid];
m32_89 -> m32_78  [color=blue, key=0, style=bold];
m32_66 -> m32_67  [key=0, style=solid];
m32_67 -> m32_17  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_65  [key=2, style=dotted];
m32_67 -> m32_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_67 -> m32_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_70 -> m32_4  [key=2, style=dotted];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_77  [key=2, style=dotted];
m32_70 -> m32_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_68 -> m32_69  [key=0, style=solid];
m32_69 -> m32_70  [key=0, style=solid];
m32_69 -> m32_34  [key=2, style=dotted];
m32_69 -> m32_35  [key=2, style=dotted];
m32_69 -> m32_36  [key=2, style=dotted];
m32_69 -> m32_37  [key=2, style=dotted];
m32_71 -> m32_5  [key=2, style=dotted];
m32_71 -> m32_72  [key=0, style=solid];
m32_72 -> m32_5  [key=2, style=dotted];
m32_72 -> m32_73  [key=0, style=solid];
m32_73 -> m32_5  [key=2, style=dotted];
m32_73 -> m32_74  [key=0, style=solid];
m32_74 -> m32_5  [key=2, style=dotted];
m32_74 -> m32_75  [key=0, style=solid];
m32_75 -> m32_5  [key=2, style=dotted];
m32_75 -> m32_76  [key=0, style=solid];
m32_76 -> m32_66  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_4  [key=2, style=dotted];
m32_1 -> m32_5  [key=2, style=dotted];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=2, style=dotted];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_149 -> m32_150  [key=0, style=solid];
m32_152 -> m32_4  [key=2, style=dotted];
m32_152 -> m32_21  [key=2, style=dotted];
m32_152 -> m32_153  [key=0, style=solid];
m32_152 -> m32_38  [key=2, style=dotted];
m32_152 -> m32_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_155 -> m32_5  [key=2, style=dotted];
m32_155 -> m32_156  [key=0, style=solid];
m32_156 -> m32_5  [key=2, style=dotted];
m32_156 -> m32_157  [key=0, style=solid];
m32_157 -> m32_5  [key=2, style=dotted];
m32_157 -> m32_158  [key=0, style=solid];
m32_158 -> m32_5  [key=2, style=dotted];
m32_158 -> m32_159  [key=0, style=solid];
m32_159 -> m32_5  [key=2, style=dotted];
m32_159 -> m32_160  [key=0, style=solid];
m32_160 -> m32_5  [key=2, style=dotted];
m32_160 -> m32_161  [key=0, style=solid];
m32_161 -> m32_5  [key=2, style=dotted];
m32_161 -> m32_162  [key=0, style=solid];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_163  [key=2, style=dotted];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_164  [key=2, style=dotted];
m32_153 -> m32_165  [key=2, style=dotted];
m32_154 -> m32_155  [key=0, style=solid];
m32_154 -> m32_164  [key=2, style=dotted];
m32_154 -> m32_165  [key=2, style=dotted];
m32_150 -> m32_34  [key=2, style=dotted];
m32_150 -> m32_35  [key=2, style=dotted];
m32_150 -> m32_151  [key=0, style=solid];
m32_150 -> m32_116  [key=2, style=dotted];
m32_150 -> m32_121  [key=2, style=dotted];
m32_150 -> m32_118  [key=2, style=dotted];
m32_162 -> m32_149  [color=blue, key=0, style=bold];
m32_244 -> m32_245  [key=0, style=solid];
m32_250 -> m32_4  [key=2, style=dotted];
m32_250 -> m32_251  [key=0, style=solid];
m32_251 -> m32_21  [key=2, style=dotted];
m32_251 -> m32_252  [key=0, style=solid];
m32_251 -> m32_38  [key=2, style=dotted];
m32_251 -> m32_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_251 -> m32_254  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_249 -> m32_250  [key=0, style=solid];
m32_249 -> m32_259  [key=2, style=dotted];
m32_248 -> m32_250  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m32_248 -> m32_249  [key=0, style=solid];
m32_248 -> m32_163  [key=2, style=dotted];
m32_252 -> m32_253  [key=0, style=solid];
m32_252 -> m32_164  [key=2, style=dotted];
m32_252 -> m32_260  [key=2, style=dotted];
m32_253 -> m32_254  [key=0, style=solid];
m32_253 -> m32_164  [key=2, style=dotted];
m32_253 -> m32_260  [key=2, style=dotted];
m32_254 -> m32_255  [key=0, style=solid];
m32_254 -> m32_164  [key=2, style=dotted];
m32_254 -> m32_260  [key=2, style=dotted];
m32_246 -> m32_34  [key=2, style=dotted];
m32_246 -> m32_248  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m32_246 -> m32_247  [key=0, style=solid];
m32_246 -> m32_258  [key=2, style=dotted];
m32_246 -> m32_116  [key=2, style=dotted];
m32_245 -> m32_249  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m32_245 -> m32_246  [key=0, style=solid];
m32_245 -> m32_256  [key=2, style=dotted];
m32_245 -> m32_257  [key=2, style=dotted];
m32_245 -> m32_247  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m32_247 -> m32_248  [key=0, style=solid];
m32_247 -> m32_259  [key=2, style=dotted];
m32_255 -> m32_244  [color=blue, key=0, style=bold];
m32_60 -> m32_61  [key=0, style=solid];
m32_62 -> m32_4  [key=2, style=dotted];
m32_62 -> m32_21  [key=2, style=dotted];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_38  [key=2, style=dotted];
m32_63 -> m32_5  [key=2, style=dotted];
m32_63 -> m32_64  [key=0, style=solid];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_65  [key=2, style=dotted];
m32_61 -> m32_34  [key=2, style=dotted];
m32_61 -> m32_35  [key=2, style=dotted];
m32_61 -> m32_36  [key=2, style=dotted];
m32_61 -> m32_37  [key=2, style=dotted];
m32_64 -> m32_60  [color=blue, key=0, style=bold];
m32_90 -> m32_91  [key=0, style=solid];
m32_93 -> m32_19  [key=2, style=dotted];
m32_93 -> m32_20  [key=2, style=dotted];
m32_93 -> m32_94  [key=0, style=solid];
m32_93 -> m32_34  [key=2, style=dotted];
m32_93 -> m32_35  [key=2, style=dotted];
m32_93 -> m32_36  [key=2, style=dotted];
m32_93 -> m32_37  [key=2, style=dotted];
m32_94 -> m32_4  [key=2, style=dotted];
m32_94 -> m32_21  [key=2, style=dotted];
m32_94 -> m32_95  [key=0, style=solid];
m32_94 -> m32_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_91 -> m32_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_91 -> m32_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_91 -> m32_65  [key=2, style=dotted];
m32_91 -> m32_92  [key=0, style=solid];
m32_92 -> m32_93  [key=0, style=solid];
m32_95 -> m32_5  [key=2, style=dotted];
m32_95 -> m32_96  [key=0, style=solid];
m32_96 -> m32_5  [key=2, style=dotted];
m32_96 -> m32_97  [key=0, style=solid];
m32_97 -> m32_5  [key=2, style=dotted];
m32_97 -> m32_98  [key=0, style=solid];
m32_98 -> m32_5  [key=2, style=dotted];
m32_98 -> m32_99  [key=0, style=solid];
m32_99 -> m32_5  [key=2, style=dotted];
m32_99 -> m32_100  [key=0, style=solid];
m32_100 -> m32_5  [key=2, style=dotted];
m32_100 -> m32_101  [key=0, style=solid];
m32_101 -> m32_90  [color=blue, key=0, style=bold];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_7 -> m32_8  [color=green, key=0, style=solid];
m32_7 -> m32_16  [color=green, key=2, style=dotted];
m32_7 -> m32_17  [color=green, key=2, style=dotted];
m32_7 -> m32_18  [color=green, key=2, style=dotted];
m32_7 -> m32_19  [color=green, key=2, style=dotted];
m32_7 -> m32_20  [color=green, key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_4  [key=2, style=dotted];
m32_8 -> m32_21  [key=2, style=dotted];
m32_8 -> m32_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_5  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_5  [key=2, style=dotted];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_5  [key=2, style=dotted];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_5  [key=2, style=dotted];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_5  [key=2, style=dotted];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_5  [key=2, style=dotted];
m32_15 -> m32_6  [color=blue, key=0, style=bold];
m32_102 -> m32_103  [key=0, style=solid];
m32_107 -> m32_21  [key=2, style=dotted];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_108 -> m32_5  [key=2, style=dotted];
m32_108 -> m32_109  [key=0, style=solid];
m32_109 -> m32_5  [key=2, style=dotted];
m32_109 -> m32_110  [key=0, style=solid];
m32_110 -> m32_5  [key=2, style=dotted];
m32_110 -> m32_111  [key=0, style=solid];
m32_111 -> m32_5  [key=2, style=dotted];
m32_111 -> m32_112  [key=0, style=solid];
m32_112 -> m32_5  [key=2, style=dotted];
m32_112 -> m32_113  [key=0, style=solid];
m32_113 -> m32_5  [key=2, style=dotted];
m32_113 -> m32_114  [key=0, style=solid];
m32_114 -> m32_5  [key=2, style=dotted];
m32_114 -> m32_115  [key=0, style=solid];
m32_106 -> m32_107  [key=0, style=solid];
m32_106 -> m32_126  [key=2, style=dotted];
m32_103 -> m32_34  [key=2, style=dotted];
m32_103 -> m32_35  [key=2, style=dotted];
m32_103 -> m32_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_116  [key=2, style=dotted];
m32_103 -> m32_117  [key=2, style=dotted];
m32_103 -> m32_118  [key=2, style=dotted];
m32_103 -> m32_119  [key=2, style=dotted];
m32_103 -> m32_120  [key=2, style=dotted];
m32_103 -> m32_121  [key=2, style=dotted];
m32_103 -> m32_122  [key=2, style=dotted];
m32_103 -> m32_123  [key=2, style=dotted];
m32_103 -> m32_124  [key=2, style=dotted];
m32_103 -> m32_125  [key=2, style=dotted];
m32_104 -> m32_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m32_104 -> m32_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m32_104 -> m32_105  [key=0, style=solid];
m32_104 -> m32_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m32_115 -> m32_102  [color=blue, key=0, style=bold];
m32_39 -> m32_40  [key=0, style=solid];
m32_40 -> m32_19  [key=2, style=dotted];
m32_40 -> m32_20  [key=2, style=dotted];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_3  [key=2, style=dotted];
m32_40 -> m32_34  [key=2, style=dotted];
m32_40 -> m32_35  [key=2, style=dotted];
m32_40 -> m32_36  [key=2, style=dotted];
m32_40 -> m32_37  [key=2, style=dotted];
m32_41 -> m32_4  [key=2, style=dotted];
m32_41 -> m32_21  [key=2, style=dotted];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_38  [key=2, style=dotted];
m32_41 -> m32_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_42 -> m32_5  [key=2, style=dotted];
m32_42 -> m32_43  [key=0, style=solid];
m32_43 -> m32_5  [key=2, style=dotted];
m32_43 -> m32_44  [key=0, style=solid];
m32_44 -> m32_5  [key=2, style=dotted];
m32_44 -> m32_45  [key=0, style=solid];
m32_45 -> m32_5  [key=2, style=dotted];
m32_45 -> m32_46  [key=0, style=solid];
m32_46 -> m32_5  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_47 -> m32_5  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_48 -> m32_5  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_49 -> m32_39  [color=blue, key=0, style=bold];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_128 -> m32_129  [key=0, style=solid];
m32_128 -> m32_131  [key=0, style=solid];
m32_128 -> m32_133  [key=0, style=solid];
m32_128 -> m32_135  [key=0, style=solid];
m32_128 -> m32_137  [key=0, style=solid];
m32_128 -> m32_139  [key=0, style=solid];
m32_128 -> m32_141  [key=0, style=solid];
m32_128 -> m32_143  [key=0, style=solid];
m32_130 -> m32_144  [key=0, style=solid];
m32_132 -> m32_144  [key=0, style=solid];
m32_134 -> m32_144  [key=0, style=solid];
m32_136 -> m32_144  [key=0, style=solid];
m32_138 -> m32_144  [key=0, style=solid];
m32_142 -> m32_144  [key=0, style=solid];
m32_129 -> m32_130  [key=0, style=solid];
m32_131 -> m32_132  [key=0, style=solid];
m32_133 -> m32_134  [key=0, style=solid];
m32_135 -> m32_136  [key=0, style=solid];
m32_137 -> m32_138  [key=0, style=solid];
m32_139 -> m32_140  [key=0, style=solid];
m32_141 -> m32_142  [key=0, style=solid];
m32_143 -> m32_144  [key=0, style=solid];
m32_143 -> m32_145  [key=2, style=dotted];
m32_140 -> m32_144  [key=0, style=solid];
m32_144 -> m32_127  [color=blue, key=0, style=bold];
m32_206 -> m32_207  [key=0, style=solid];
m32_209 -> m32_21  [key=2, style=dotted];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_216  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_210 -> m32_5  [key=2, style=dotted];
m32_210 -> m32_211  [key=0, style=solid];
m32_211 -> m32_5  [key=2, style=dotted];
m32_211 -> m32_212  [key=0, style=solid];
m32_212 -> m32_5  [key=2, style=dotted];
m32_212 -> m32_213  [key=0, style=solid];
m32_213 -> m32_5  [key=2, style=dotted];
m32_213 -> m32_214  [key=0, style=solid];
m32_214 -> m32_5  [key=2, style=dotted];
m32_214 -> m32_215  [key=0, style=solid];
m32_215 -> m32_5  [key=2, style=dotted];
m32_215 -> m32_216  [key=0, style=solid];
m32_216 -> m32_5  [key=2, style=dotted];
m32_216 -> m32_217  [key=0, style=solid];
m32_208 -> m32_209  [key=0, style=solid];
m32_208 -> m32_218  [key=2, style=dotted];
m32_207 -> m32_34  [key=2, style=dotted];
m32_207 -> m32_35  [key=2, style=dotted];
m32_207 -> m32_36  [key=2, style=dotted];
m32_207 -> m32_208  [key=0, style=solid];
m32_217 -> m32_206  [color=blue, key=0, style=bold];
m32_50 -> m32_51  [key=0, style=solid];
m32_51 -> m32_19  [key=2, style=dotted];
m32_51 -> m32_20  [key=2, style=dotted];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_3  [key=2, style=dotted];
m32_51 -> m32_34  [key=2, style=dotted];
m32_51 -> m32_35  [key=2, style=dotted];
m32_51 -> m32_36  [key=2, style=dotted];
m32_51 -> m32_37  [key=2, style=dotted];
m32_52 -> m32_4  [key=2, style=dotted];
m32_52 -> m32_21  [key=2, style=dotted];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_38  [key=2, style=dotted];
m32_52 -> m32_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_53 -> m32_5  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_54 -> m32_5  [key=2, style=dotted];
m32_54 -> m32_55  [key=0, style=solid];
m32_55 -> m32_5  [key=2, style=dotted];
m32_55 -> m32_56  [key=0, style=solid];
m32_56 -> m32_5  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_57 -> m32_5  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_58 -> m32_5  [key=2, style=dotted];
m32_58 -> m32_59  [key=0, style=solid];
m32_59 -> m32_50  [color=blue, key=0, style=bold];
m32_166 -> m32_167  [key=0, style=solid];
m32_169 -> m32_4  [key=2, style=dotted];
m32_169 -> m32_21  [key=2, style=dotted];
m32_169 -> m32_170  [key=0, style=solid];
m32_169 -> m32_38  [key=2, style=dotted];
m32_169 -> m32_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_172 -> m32_5  [key=2, style=dotted];
m32_172 -> m32_173  [key=0, style=solid];
m32_173 -> m32_5  [key=2, style=dotted];
m32_173 -> m32_174  [key=0, style=solid];
m32_174 -> m32_5  [key=2, style=dotted];
m32_174 -> m32_175  [key=0, style=solid];
m32_175 -> m32_5  [key=2, style=dotted];
m32_175 -> m32_176  [key=0, style=solid];
m32_176 -> m32_5  [key=2, style=dotted];
m32_176 -> m32_177  [key=0, style=solid];
m32_168 -> m32_169  [key=0, style=solid];
m32_168 -> m32_163  [key=2, style=dotted];
m32_170 -> m32_171  [key=0, style=solid];
m32_170 -> m32_164  [key=2, style=dotted];
m32_170 -> m32_165  [key=2, style=dotted];
m32_171 -> m32_172  [key=0, style=solid];
m32_171 -> m32_164  [key=2, style=dotted];
m32_171 -> m32_165  [key=2, style=dotted];
m32_167 -> m32_34  [key=2, style=dotted];
m32_167 -> m32_35  [key=2, style=dotted];
m32_167 -> m32_168  [key=0, style=solid];
m32_167 -> m32_125  [key=2, style=dotted];
m32_177 -> m32_166  [color=blue, key=0, style=bold];
m32_22 -> m32_23  [key=0, style=solid];
m32_23 -> m32_19  [key=2, style=dotted];
m32_23 -> m32_20  [key=2, style=dotted];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_3  [key=2, style=dotted];
m32_23 -> m32_34  [key=2, style=dotted];
m32_23 -> m32_35  [key=2, style=dotted];
m32_23 -> m32_36  [key=2, style=dotted];
m32_23 -> m32_37  [key=2, style=dotted];
m32_24 -> m32_4  [key=2, style=dotted];
m32_24 -> m32_21  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_38  [key=2, style=dotted];
m32_24 -> m32_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_25 -> m32_5  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_5  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_27 -> m32_5  [key=2, style=dotted];
m32_27 -> m32_28  [key=0, style=solid];
m32_28 -> m32_5  [key=2, style=dotted];
m32_28 -> m32_29  [key=0, style=solid];
m32_29 -> m32_5  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_30 -> m32_5  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_31 -> m32_5  [key=2, style=dotted];
m32_31 -> m32_32  [key=0, style=solid];
m32_32 -> m32_5  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_33 -> m32_22  [color=blue, key=0, style=bold];
m32_193 -> m32_194  [key=0, style=solid];
m32_194 -> m32_19  [key=2, style=dotted];
m32_194 -> m32_20  [key=2, style=dotted];
m32_194 -> m32_195  [key=0, style=solid];
m32_194 -> m32_3  [key=2, style=dotted];
m32_194 -> m32_34  [key=2, style=dotted];
m32_194 -> m32_35  [key=2, style=dotted];
m32_194 -> m32_36  [key=2, style=dotted];
m32_194 -> m32_37  [key=2, style=dotted];
m32_195 -> m32_4  [key=2, style=dotted];
m32_195 -> m32_21  [key=2, style=dotted];
m32_195 -> m32_196  [key=0, style=solid];
m32_195 -> m32_38  [key=2, style=dotted];
m32_195 -> m32_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_204  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_196 -> m32_5  [key=2, style=dotted];
m32_196 -> m32_197  [key=0, style=solid];
m32_197 -> m32_5  [key=2, style=dotted];
m32_197 -> m32_198  [key=0, style=solid];
m32_198 -> m32_5  [key=2, style=dotted];
m32_198 -> m32_199  [key=0, style=solid];
m32_199 -> m32_5  [key=2, style=dotted];
m32_199 -> m32_200  [key=0, style=solid];
m32_200 -> m32_5  [key=2, style=dotted];
m32_200 -> m32_201  [key=0, style=solid];
m32_201 -> m32_5  [key=2, style=dotted];
m32_201 -> m32_202  [key=0, style=solid];
m32_202 -> m32_5  [key=2, style=dotted];
m32_202 -> m32_203  [key=0, style=solid];
m32_203 -> m32_5  [key=2, style=dotted];
m32_203 -> m32_204  [key=0, style=solid];
m32_204 -> m32_5  [key=2, style=dotted];
m32_204 -> m32_205  [key=0, style=solid];
m32_205 -> m32_193  [color=blue, key=0, style=bold];
m32_178 -> m32_179  [key=0, style=solid];
m32_182 -> m32_4  [key=2, style=dotted];
m32_182 -> m32_21  [key=2, style=dotted];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_38  [key=2, style=dotted];
m32_182 -> m32_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_185 -> m32_5  [key=2, style=dotted];
m32_185 -> m32_186  [key=0, style=solid];
m32_186 -> m32_5  [key=2, style=dotted];
m32_186 -> m32_187  [key=0, style=solid];
m32_187 -> m32_5  [key=2, style=dotted];
m32_187 -> m32_188  [key=0, style=solid];
m32_188 -> m32_5  [key=2, style=dotted];
m32_188 -> m32_189  [key=0, style=solid];
m32_189 -> m32_5  [key=2, style=dotted];
m32_189 -> m32_190  [key=0, style=solid];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_163  [key=2, style=dotted];
m32_183 -> m32_184  [key=0, style=solid];
m32_183 -> m32_164  [key=2, style=dotted];
m32_183 -> m32_165  [key=2, style=dotted];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_164  [key=2, style=dotted];
m32_184 -> m32_165  [key=2, style=dotted];
m32_180 -> m32_34  [key=2, style=dotted];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_192  [key=2, style=dotted];
m32_180 -> m32_125  [key=2, style=dotted];
m32_179 -> m32_36  [key=2, style=dotted];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_191  [key=2, style=dotted];
m32_190 -> m32_178  [color=blue, key=0, style=bold];
m32_219 -> m32_220  [key=0, style=solid];
m32_222 -> m32_4  [key=2, style=dotted];
m32_222 -> m32_223  [key=0, style=solid];
m32_223 -> m32_21  [key=2, style=dotted];
m32_223 -> m32_224  [key=0, style=solid];
m32_223 -> m32_38  [key=2, style=dotted];
m32_223 -> m32_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_242  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_226 -> m32_5  [key=2, style=dotted];
m32_226 -> m32_227  [key=0, style=solid];
m32_227 -> m32_5  [key=2, style=dotted];
m32_227 -> m32_228  [key=0, style=solid];
m32_228 -> m32_5  [key=2, style=dotted];
m32_228 -> m32_229  [key=0, style=solid];
m32_229 -> m32_5  [key=2, style=dotted];
m32_229 -> m32_230  [key=0, style=solid];
m32_230 -> m32_5  [key=2, style=dotted];
m32_230 -> m32_231  [key=0, style=solid];
m32_231 -> m32_5  [key=2, style=dotted];
m32_231 -> m32_232  [key=0, style=solid];
m32_232 -> m32_5  [key=2, style=dotted];
m32_232 -> m32_233  [key=0, style=solid];
m32_233 -> m32_5  [key=2, style=dotted];
m32_233 -> m32_234  [key=0, style=solid];
m32_234 -> m32_5  [key=2, style=dotted];
m32_234 -> m32_235  [key=0, style=solid];
m32_235 -> m32_5  [key=2, style=dotted];
m32_235 -> m32_236  [key=0, style=solid];
m32_236 -> m32_5  [key=2, style=dotted];
m32_236 -> m32_237  [key=0, style=solid];
m32_237 -> m32_5  [key=2, style=dotted];
m32_237 -> m32_238  [key=0, style=solid];
m32_238 -> m32_5  [key=2, style=dotted];
m32_238 -> m32_239  [key=0, style=solid];
m32_239 -> m32_5  [key=2, style=dotted];
m32_239 -> m32_240  [key=0, style=solid];
m32_240 -> m32_5  [key=2, style=dotted];
m32_240 -> m32_241  [key=0, style=solid];
m32_241 -> m32_5  [key=2, style=dotted];
m32_241 -> m32_242  [key=0, style=solid];
m32_242 -> m32_5  [key=2, style=dotted];
m32_242 -> m32_243  [key=0, style=solid];
m32_221 -> m32_222  [key=0, style=solid];
m32_221 -> m32_163  [key=2, style=dotted];
m32_224 -> m32_225  [key=0, style=solid];
m32_224 -> m32_164  [key=2, style=dotted];
m32_224 -> m32_165  [key=2, style=dotted];
m32_225 -> m32_226  [key=0, style=solid];
m32_225 -> m32_164  [key=2, style=dotted];
m32_225 -> m32_165  [key=2, style=dotted];
m32_220 -> m32_34  [key=2, style=dotted];
m32_220 -> m32_35  [key=2, style=dotted];
m32_220 -> m32_221  [key=0, style=solid];
m32_220 -> m32_116  [key=2, style=dotted];
m32_243 -> m32_219  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m34_0 -> m34_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=0, style=solid];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_8  [color=red, key=0, style=solid];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_7  [key=0, style=solid];
m34_5 -> m34_10  [key=2, style=dotted];
m34_2 -> m34_9  [key=0, style=solid];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_5  [color=darkseagreen4, key=1, label=idx, style=dashed];
m34_3 -> m34_7  [color=darkseagreen4, key=1, label=idx, style=dashed];
m34_7 -> m34_4  [key=0, style=solid];
m34_7 -> m34_7  [color=darkseagreen4, key=1, label=idx, style=dashed];
m34_8 -> m34_9  [color=red, key=0, style=solid];
m34_6 -> m34_9  [key=0, style=solid];
m34_9 -> m34_0  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_2  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m35_0 -> m35_4  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m35_0 -> m35_6  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_12  [key=2, style=dotted];
m35_1 -> m35_3  [color=darkseagreen4, key=1, label=tokenList, style=dashed];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_13  [key=2, style=dotted];
m35_2 -> m35_12  [key=2, style=dotted];
m35_2 -> m35_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m35_2 -> m35_10  [color=darkseagreen4, key=1, label=switches, style=dashed];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_16  [key=2, style=dotted];
m35_4 -> m35_12  [key=2, style=dotted];
m35_4 -> m35_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m35_4 -> m35_10  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_16  [key=2, style=dotted];
m35_6 -> m35_12  [key=2, style=dotted];
m35_6 -> m35_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m35_6 -> m35_10  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_14  [key=2, style=dotted];
m35_3 -> m35_15  [key=2, style=dotted];
m35_3 -> m35_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_3 -> m35_5  [color=darkseagreen4, key=1, label=tokensExceptSwitches, style=dashed];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_17  [key=2, style=dotted];
m35_10 -> m35_18  [key=2, style=dotted];
m35_10 -> m35_19  [key=2, style=dotted];
m35_10 -> m35_20  [key=2, style=dotted];
m35_10 -> m35_21  [key=2, style=dotted];
m35_10 -> m35_22  [key=2, style=dotted];
m35_10 -> m35_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_14  [key=2, style=dotted];
m35_5 -> m35_15  [key=2, style=dotted];
m35_5 -> m35_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_5 -> m35_7  [color=darkseagreen4, key=1, label=tokensExceptSwitchesAndScalars, style=dashed];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_14  [key=2, style=dotted];
m35_7 -> m35_15  [key=2, style=dotted];
m35_7 -> m35_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_7 -> m35_9  [color=darkseagreen4, key=1, label=tokensExceptSwitchesAndScalarsAndSeq, style=dashed];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_14  [key=2, style=dotted];
m35_8 -> m35_15  [key=2, style=dotted];
m35_8 -> m35_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_8 -> m35_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m35_8 -> m35_10  [color=darkseagreen4, key=1, label=values, style=dashed];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_14  [key=2, style=dotted];
m35_9 -> m35_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_11 -> m35_0  [color=blue, key=0, style=bold];
m35_41 -> m35_42  [key=0, style=solid];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_26  [key=2, style=dotted];
m35_23 -> m35_24  [key=0, style=solid];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_30  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_30  [key=2, style=dotted];
m35_31 -> m35_32  [key=0, style=solid];
m35_34 -> m35_35  [key=0, style=solid];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_30  [key=2, style=dotted];
m35_38 -> m35_39  [key=0, style=solid];
m35_25 -> m35_23  [color=blue, key=0, style=bold];
m35_29 -> m35_27  [color=blue, key=0, style=bold];
m35_33 -> m35_31  [color=blue, key=0, style=bold];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_37  [key=2, style=dotted];
m35_36 -> m35_34  [color=blue, key=0, style=bold];
m35_40 -> m35_38  [color=blue, key=0, style=bold];
m35_42 -> m35_43  [key=0, style=solid];
m35_43 -> m35_41  [color=blue, key=0, style=bold];
m35_44 -> m35_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m35_45 -> m35_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m35_46 -> m35_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m35_47 -> m35_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m37_73 -> m37_74  [key=0, style=solid];
m37_74 -> m37_75  [color=green, key=0, style=solid];
m37_74 -> m37_78  [key=2, style=dotted];
m37_74 -> m37_76  [color=green, key=1, label=expectedResult, style=dashed];
m37_75 -> m37_76  [color=green, key=0, style=solid];
m37_75 -> m37_10  [color=green, key=2, style=dotted];
m37_75 -> m37_11  [color=green, key=2, style=dotted];
m37_75 -> m37_12  [color=green, key=2, style=dotted];
m37_75 -> m37_79  [color=green, key=1, label="lambda expression", style=dashed];
m37_76 -> m37_77  [color=green, key=0, style=solid];
m37_76 -> m37_13  [color=green, key=2, style=dotted];
m37_77 -> m37_73  [color=blue, key=0, style=bold];
m37_384 -> m37_385  [key=0, style=solid];
m37_384 -> m37_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_385 -> m37_386  [key=0, style=solid];
m37_385 -> m37_10  [key=2, style=dotted];
m37_385 -> m37_11  [key=2, style=dotted];
m37_385 -> m37_12  [key=2, style=dotted];
m37_385 -> m37_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_386 -> m37_387  [key=0, style=solid];
m37_386 -> m37_13  [key=2, style=dotted];
m37_387 -> m37_384  [color=blue, key=0, style=bold];
m37_241 -> m37_242  [key=0, style=solid];
m37_242 -> m37_243  [key=0, style=solid];
m37_242 -> m37_237  [key=2, style=dotted];
m37_242 -> m37_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_243 -> m37_244  [key=0, style=solid];
m37_243 -> m37_10  [key=2, style=dotted];
m37_243 -> m37_11  [key=2, style=dotted];
m37_243 -> m37_12  [key=2, style=dotted];
m37_243 -> m37_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_244 -> m37_245  [key=0, style=solid];
m37_244 -> m37_13  [key=2, style=dotted];
m37_245 -> m37_241  [color=blue, key=0, style=bold];
m37_324 -> m37_325  [key=0, style=solid];
m37_325 -> m37_326  [key=0, style=solid];
m37_325 -> m37_325  [color=green, key=3, label="Local variable System.Action test", style=bold];
m37_326 -> m37_327  [key=0, style=solid];
m37_326 -> m37_328  [key=2, style=dotted];
m37_327 -> m37_324  [color=blue, key=0, style=bold];
m37_421 -> m37_422  [key=0, style=solid];
m37_422 -> m37_423  [key=0, style=solid];
m37_422 -> m37_6  [key=2, style=dotted];
m37_422 -> m37_424  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_423 -> m37_424  [key=0, style=solid];
m37_423 -> m37_10  [key=2, style=dotted];
m37_423 -> m37_11  [key=2, style=dotted];
m37_423 -> m37_12  [key=2, style=dotted];
m37_423 -> m37_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_424 -> m37_425  [key=0, style=solid];
m37_424 -> m37_13  [key=2, style=dotted];
m37_425 -> m37_421  [color=blue, key=0, style=bold];
m37_280 -> m37_281  [key=0, style=solid];
m37_281 -> m37_282  [key=0, style=solid];
m37_281 -> m37_78  [key=2, style=dotted];
m37_281 -> m37_283  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_282 -> m37_283  [key=0, style=solid];
m37_282 -> m37_10  [key=2, style=dotted];
m37_282 -> m37_11  [key=2, style=dotted];
m37_282 -> m37_12  [key=2, style=dotted];
m37_282 -> m37_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_283 -> m37_284  [key=0, style=solid];
m37_283 -> m37_13  [key=2, style=dotted];
m37_284 -> m37_280  [color=blue, key=0, style=bold];
m37_206 -> m37_207  [color=red, key=0, style=solid];
m37_207 -> m37_208  [color=red, key=0, style=solid];
m37_207 -> m37_211  [color=red, key=2, style=dotted];
m37_207 -> m37_69  [color=red, key=2, style=dotted];
m37_207 -> m37_209  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_208 -> m37_209  [color=red, key=0, style=solid];
m37_208 -> m37_10  [color=red, key=2, style=dotted];
m37_208 -> m37_11  [color=red, key=2, style=dotted];
m37_208 -> m37_12  [color=red, key=2, style=dotted];
m37_208 -> m37_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_209 -> m37_210  [color=red, key=0, style=solid];
m37_209 -> m37_13  [color=red, key=2, style=dotted];
m37_210 -> m37_206  [color=blue, key=0, style=bold];
m37_374 -> m37_375  [key=0, style=solid];
m37_374 -> m37_376  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_374 -> m37_382  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_375 -> m37_376  [key=0, style=solid];
m37_375 -> m37_10  [key=2, style=dotted];
m37_375 -> m37_11  [key=2, style=dotted];
m37_375 -> m37_12  [key=2, style=dotted];
m37_375 -> m37_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_376 -> m37_377  [key=0, style=solid];
m37_376 -> m37_365  [key=2, style=dotted];
m37_376 -> m37_366  [key=2, style=dotted];
m37_376 -> m37_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_377 -> m37_374  [color=blue, key=0, style=bold];
m37_142 -> m37_143  [color=red, key=0, style=solid];
m37_142 -> m37_144  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m37_143 -> m37_144  [color=red, key=0, style=solid];
m37_143 -> m37_10  [color=red, key=2, style=dotted];
m37_143 -> m37_11  [color=red, key=2, style=dotted];
m37_143 -> m37_12  [color=red, key=2, style=dotted];
m37_143 -> m37_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_144 -> m37_145  [color=red, key=0, style=solid];
m37_144 -> m37_13  [color=red, key=2, style=dotted];
m37_145 -> m37_142  [color=blue, key=0, style=bold];
m37_197 -> m37_198  [color=red, key=0, style=solid];
m37_198 -> m37_199  [color=red, key=0, style=solid];
m37_198 -> m37_202  [color=red, key=2, style=dotted];
m37_198 -> m37_200  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_199 -> m37_200  [color=red, key=0, style=solid];
m37_199 -> m37_10  [color=red, key=2, style=dotted];
m37_199 -> m37_11  [color=red, key=2, style=dotted];
m37_199 -> m37_12  [color=red, key=2, style=dotted];
m37_199 -> m37_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_200 -> m37_201  [color=red, key=0, style=solid];
m37_200 -> m37_13  [color=red, key=2, style=dotted];
m37_201 -> m37_197  [color=blue, key=0, style=bold];
m37_264 -> m37_265  [key=0, style=solid];
m37_265 -> m37_266  [key=0, style=solid];
m37_265 -> m37_211  [key=2, style=dotted];
m37_265 -> m37_267  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_266 -> m37_267  [key=0, style=solid];
m37_266 -> m37_10  [key=2, style=dotted];
m37_266 -> m37_11  [key=2, style=dotted];
m37_266 -> m37_12  [key=2, style=dotted];
m37_266 -> m37_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_267 -> m37_268  [key=0, style=solid];
m37_267 -> m37_13  [key=2, style=dotted];
m37_268 -> m37_264  [color=blue, key=0, style=bold];
m37_55 -> m37_56  [color=red, key=0, style=solid];
m37_55 -> m37_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m37_56 -> m37_57  [color=red, key=0, style=solid];
m37_56 -> m37_10  [color=red, key=2, style=dotted];
m37_56 -> m37_11  [color=red, key=2, style=dotted];
m37_56 -> m37_12  [color=red, key=2, style=dotted];
m37_56 -> m37_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_57 -> m37_58  [color=red, key=0, style=solid];
m37_57 -> m37_13  [color=red, key=2, style=dotted];
m37_58 -> m37_55  [color=blue, key=0, style=bold];
m37_100 -> m37_101  [color=green, key=0, style=solid];
m37_100 -> m37_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m37_101 -> m37_102  [color=green, key=0, style=solid];
m37_101 -> m37_10  [color=green, key=2, style=dotted];
m37_101 -> m37_11  [color=green, key=2, style=dotted];
m37_101 -> m37_12  [color=green, key=2, style=dotted];
m37_101 -> m37_104  [color=green, key=1, label="lambda expression", style=dashed];
m37_102 -> m37_103  [key=0, style=solid];
m37_102 -> m37_13  [key=2, style=dotted];
m37_102 -> m37_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m37_103 -> m37_100  [color=blue, key=0, style=bold];
m37_17 -> m37_18  [key=0, style=solid];
m37_17 -> m37_19  [color=darkseagreen4, key=1, label=long, style=dashed];
m37_18 -> m37_19  [key=0, style=solid];
m37_18 -> m37_10  [key=2, style=dotted];
m37_18 -> m37_11  [key=2, style=dotted];
m37_18 -> m37_12  [key=2, style=dotted];
m37_18 -> m37_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_19 -> m37_20  [key=0, style=solid];
m37_19 -> m37_13  [key=2, style=dotted];
m37_20 -> m37_17  [color=blue, key=0, style=bold];
m37_297 -> m37_298  [key=0, style=solid];
m37_297 -> m37_299  [color=darkseagreen4, key=1, label="long?", style=dashed];
m37_298 -> m37_299  [key=0, style=solid];
m37_298 -> m37_10  [key=2, style=dotted];
m37_298 -> m37_11  [key=2, style=dotted];
m37_298 -> m37_12  [key=2, style=dotted];
m37_298 -> m37_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_299 -> m37_300  [key=0, style=solid];
m37_299 -> m37_13  [key=2, style=dotted];
m37_300 -> m37_297  [color=blue, key=0, style=bold];
m37_336 -> m37_337  [key=0, style=solid];
m37_337 -> m37_338  [key=0, style=solid];
m37_337 -> m37_337  [color=green, key=3, label="Local variable System.Action test", style=bold];
m37_338 -> m37_339  [key=0, style=solid];
m37_338 -> m37_328  [key=2, style=dotted];
m37_339 -> m37_336  [color=blue, key=0, style=bold];
m37_117 -> m37_118  [key=0, style=solid];
m37_118 -> m37_119  [color=green, key=0, style=solid];
m37_118 -> m37_113  [key=2, style=dotted];
m37_118 -> m37_69  [key=2, style=dotted];
m37_118 -> m37_120  [color=green, key=1, label=expectedResult, style=dashed];
m37_119 -> m37_120  [color=green, key=0, style=solid];
m37_119 -> m37_10  [color=green, key=2, style=dotted];
m37_119 -> m37_11  [color=green, key=2, style=dotted];
m37_119 -> m37_12  [color=green, key=2, style=dotted];
m37_119 -> m37_122  [color=green, key=1, label="lambda expression", style=dashed];
m37_120 -> m37_121  [color=green, key=0, style=solid];
m37_120 -> m37_13  [color=green, key=2, style=dotted];
m37_121 -> m37_117  [color=blue, key=0, style=bold];
m37_304 -> m37_305  [key=0, style=solid];
m37_304 -> m37_307  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_304 -> m37_308  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_305 -> m37_306  [key=0, style=solid];
m37_305 -> m37_10  [key=2, style=dotted];
m37_305 -> m37_11  [key=2, style=dotted];
m37_305 -> m37_12  [key=2, style=dotted];
m37_305 -> m37_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_305 -> m37_307  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_305 -> m37_308  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_307 -> m37_308  [key=0, style=solid];
m37_307 -> m37_13  [key=2, style=dotted];
m37_308 -> m37_309  [key=0, style=solid];
m37_308 -> m37_310  [key=2, style=dotted];
m37_308 -> m37_13  [key=2, style=dotted];
m37_306 -> m37_307  [key=0, style=solid];
m37_306 -> m37_308  [key=0, style=solid];
m37_309 -> m37_304  [color=blue, key=0, style=bold];
m37_257 -> m37_258  [key=0, style=solid];
m37_257 -> m37_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_258 -> m37_259  [key=0, style=solid];
m37_258 -> m37_10  [key=2, style=dotted];
m37_258 -> m37_11  [key=2, style=dotted];
m37_258 -> m37_12  [key=2, style=dotted];
m37_258 -> m37_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_259 -> m37_260  [key=0, style=solid];
m37_259 -> m37_13  [key=2, style=dotted];
m37_260 -> m37_257  [color=blue, key=0, style=bold];
m37_125 -> m37_126  [color=green, key=0, style=solid];
m37_126 -> m37_127  [color=green, key=0, style=solid];
m37_126 -> m37_113  [color=green, key=2, style=dotted];
m37_126 -> m37_69  [color=green, key=2, style=dotted];
m37_126 -> m37_128  [color=green, key=1, label=expectedResult, style=dashed];
m37_127 -> m37_128  [color=green, key=0, style=solid];
m37_127 -> m37_10  [color=green, key=2, style=dotted];
m37_127 -> m37_11  [color=green, key=2, style=dotted];
m37_127 -> m37_12  [color=green, key=2, style=dotted];
m37_127 -> m37_130  [color=green, key=1, label="lambda expression", style=dashed];
m37_128 -> m37_129  [color=green, key=0, style=solid];
m37_128 -> m37_13  [color=green, key=2, style=dotted];
m37_129 -> m37_125  [color=blue, key=0, style=bold];
m37_158 -> m37_159  [color=red, key=0, style=solid];
m37_158 -> m37_160  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m37_159 -> m37_160  [color=red, key=0, style=solid];
m37_159 -> m37_10  [color=red, key=2, style=dotted];
m37_159 -> m37_11  [color=red, key=2, style=dotted];
m37_159 -> m37_12  [color=red, key=2, style=dotted];
m37_159 -> m37_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_160 -> m37_161  [color=red, key=0, style=solid];
m37_160 -> m37_13  [color=red, key=2, style=dotted];
m37_161 -> m37_158  [color=blue, key=0, style=bold];
m37_108 -> m37_109  [color=red, key=0, style=solid];
m37_109 -> m37_110  [color=red, key=0, style=solid];
m37_109 -> m37_113  [color=red, key=2, style=dotted];
m37_109 -> m37_69  [color=red, key=2, style=dotted];
m37_109 -> m37_111  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_110 -> m37_111  [color=red, key=0, style=solid];
m37_110 -> m37_10  [color=red, key=2, style=dotted];
m37_110 -> m37_11  [color=red, key=2, style=dotted];
m37_110 -> m37_12  [color=red, key=2, style=dotted];
m37_110 -> m37_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_111 -> m37_112  [key=0, style=solid];
m37_111 -> m37_13  [key=2, style=dotted];
m37_112 -> m37_108  [color=blue, key=0, style=bold];
m37_91 -> m37_92  [key=0, style=solid];
m37_92 -> m37_93  [color=green, key=0, style=solid];
m37_92 -> m37_78  [key=2, style=dotted];
m37_92 -> m37_94  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_93 -> m37_94  [color=green, key=0, style=solid];
m37_93 -> m37_10  [color=green, key=2, style=dotted];
m37_93 -> m37_11  [color=green, key=2, style=dotted];
m37_93 -> m37_12  [color=green, key=2, style=dotted];
m37_93 -> m37_96  [color=green, key=1, label="lambda expression", style=dashed];
m37_94 -> m37_95  [key=0, style=solid];
m37_94 -> m37_13  [key=2, style=dotted];
m37_95 -> m37_91  [color=blue, key=0, style=bold];
m37_47 -> m37_48  [color=green, key=0, style=solid];
m37_47 -> m37_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m37_48 -> m37_49  [color=green, key=0, style=solid];
m37_48 -> m37_10  [color=green, key=2, style=dotted];
m37_48 -> m37_11  [color=green, key=2, style=dotted];
m37_48 -> m37_12  [color=green, key=2, style=dotted];
m37_48 -> m37_51  [color=green, key=1, label="lambda expression", style=dashed];
m37_49 -> m37_50  [key=0, style=solid];
m37_49 -> m37_13  [key=2, style=dotted];
m37_50 -> m37_47  [color=blue, key=0, style=bold];
m37_392 -> m37_393  [key=0, style=solid];
m37_392 -> m37_394  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m37_392 -> m37_395  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_392 -> m37_404  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_392 -> m37_396  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m37_393 -> m37_394  [key=0, style=solid];
m37_393 -> m37_10  [key=2, style=dotted];
m37_393 -> m37_11  [key=2, style=dotted];
m37_393 -> m37_12  [key=2, style=dotted];
m37_393 -> m37_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_393 -> m37_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_393 -> m37_397  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_394 -> m37_395  [key=0, style=solid];
m37_394 -> m37_396  [key=0, style=solid];
m37_395 -> m37_398  [key=0, style=solid];
m37_395 -> m37_365  [key=2, style=dotted];
m37_395 -> m37_366  [key=2, style=dotted];
m37_395 -> m37_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_396 -> m37_397  [key=0, style=solid];
m37_396 -> m37_398  [key=0, style=solid];
m37_397 -> m37_398  [key=0, style=solid];
m37_397 -> m37_365  [key=2, style=dotted];
m37_397 -> m37_328  [key=2, style=dotted];
m37_398 -> m37_392  [color=blue, key=0, style=bold];
m37_455 -> m37_456  [key=0, style=solid];
m37_15 -> m37_16  [key=0, style=solid];
m37_14 -> m37_15  [key=0, style=solid];
m37_16 -> m37_14  [color=blue, key=0, style=bold];
m37_21 -> m37_22  [key=0, style=solid];
m37_22 -> m37_23  [key=0, style=solid];
m37_22 -> m37_6  [key=2, style=dotted];
m37_23 -> m37_21  [color=blue, key=0, style=bold];
m37_28 -> m37_29  [color=green, key=0, style=solid];
m37_29 -> m37_30  [color=green, key=0, style=solid];
m37_29 -> m37_31  [color=green, key=2, style=dotted];
m37_30 -> m37_28  [color=blue, key=0, style=bold];
m37_36 -> m37_37  [color=red, key=0, style=solid];
m37_37 -> m37_38  [color=red, key=0, style=solid];
m37_37 -> m37_39  [color=red, key=2, style=dotted];
m37_38 -> m37_36  [color=blue, key=0, style=bold];
m37_44 -> m37_45  [key=0, style=solid];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_6  [key=2, style=dotted];
m37_46 -> m37_44  [color=blue, key=0, style=bold];
m37_51 -> m37_52  [color=red, key=0, style=solid];
m37_51 -> m37_71  [color=green, key=0, style=solid];
m37_52 -> m37_53  [color=red, key=0, style=solid];
m37_52 -> m37_54  [color=red, key=2, style=dotted];
m37_53 -> m37_51  [color=blue, key=0, style=bold];
m37_59 -> m37_60  [key=0, style=solid];
m37_60 -> m37_61  [key=0, style=solid];
m37_60 -> m37_62  [key=2, style=dotted];
m37_61 -> m37_59  [color=blue, key=0, style=bold];
m37_70 -> m37_71  [color=red, key=0, style=solid];
m37_71 -> m37_72  [color=red, key=0, style=solid];
m37_71 -> m37_54  [key=2, style=dotted];
m37_71 -> m37_53  [color=green, key=0, style=solid];
m37_72 -> m37_70  [color=blue, key=0, style=bold];
m37_79 -> m37_80  [color=green, key=0, style=solid];
m37_80 -> m37_81  [color=green, key=0, style=solid];
m37_80 -> m37_82  [color=green, key=2, style=dotted];
m37_81 -> m37_79  [color=blue, key=0, style=bold];
m37_88 -> m37_89  [color=red, key=0, style=solid];
m37_89 -> m37_90  [color=red, key=0, style=solid];
m37_89 -> m37_62  [color=red, key=2, style=dotted];
m37_90 -> m37_88  [color=blue, key=0, style=bold];
m37_96 -> m37_97  [key=0, style=solid];
m37_97 -> m37_98  [key=0, style=solid];
m37_97 -> m37_99  [key=2, style=dotted];
m37_98 -> m37_96  [color=blue, key=0, style=bold];
m37_104 -> m37_105  [key=0, style=solid];
m37_105 -> m37_106  [key=0, style=solid];
m37_105 -> m37_107  [key=2, style=dotted];
m37_106 -> m37_104  [color=blue, key=0, style=bold];
m37_114 -> m37_115  [color=red, key=0, style=solid];
m37_114 -> m37_123  [color=green, key=0, style=solid];
m37_115 -> m37_116  [color=red, key=0, style=solid];
m37_115 -> m37_107  [color=red, key=2, style=dotted];
m37_116 -> m37_114  [color=blue, key=0, style=bold];
m37_122 -> m37_123  [color=green, key=0, style=solid];
m37_123 -> m37_124  [color=green, key=0, style=solid];
m37_123 -> m37_107  [color=green, key=2, style=dotted];
m37_123 -> m37_116  [color=green, key=0, style=solid];
m37_124 -> m37_122  [color=blue, key=0, style=bold];
m37_130 -> m37_131  [color=green, key=0, style=solid];
m37_131 -> m37_132  [color=green, key=0, style=solid];
m37_131 -> m37_107  [color=green, key=2, style=dotted];
m37_132 -> m37_130  [color=blue, key=0, style=bold];
m37_139 -> m37_140  [color=red, key=0, style=solid];
m37_140 -> m37_141  [color=red, key=0, style=solid];
m37_140 -> m37_138  [color=red, key=2, style=dotted];
m37_141 -> m37_139  [color=blue, key=0, style=bold];
m37_146 -> m37_147  [color=red, key=0, style=solid];
m37_147 -> m37_148  [color=red, key=0, style=solid];
m37_147 -> m37_149  [color=red, key=2, style=dotted];
m37_148 -> m37_146  [color=blue, key=0, style=bold];
m37_154 -> m37_155  [key=0, style=solid];
m37_155 -> m37_156  [key=0, style=solid];
m37_155 -> m37_157  [key=2, style=dotted];
m37_156 -> m37_154  [color=blue, key=0, style=bold];
m37_162 -> m37_163  [key=0, style=solid];
m37_163 -> m37_164  [key=0, style=solid];
m37_163 -> m37_157  [key=2, style=dotted];
m37_164 -> m37_162  [color=blue, key=0, style=bold];
m37_172 -> m37_173  [color=red, key=0, style=solid];
m37_175 -> m37_176  [color=red, key=0, style=solid];
m37_175 -> m37_180  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m37_175 -> m37_184  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m37_173 -> m37_174  [color=red, key=0, style=solid];
m37_173 -> m37_138  [color=red, key=2, style=dotted];
m37_174 -> m37_172  [color=blue, key=0, style=bold];
m37_176 -> m37_177  [color=red, key=0, style=solid];
m37_176 -> m37_178  [color=red, key=2, style=dotted];
m37_176 -> m37_179  [color=red, key=1, label="lambda expression", style=dashed];
m37_180 -> m37_181  [color=red, key=0, style=solid];
m37_180 -> m37_182  [color=red, key=2, style=dotted];
m37_180 -> m37_183  [color=red, key=1, label="lambda expression", style=dashed];
m37_184 -> m37_185  [color=red, key=0, style=solid];
m37_184 -> m37_186  [color=red, key=2, style=dotted];
m37_177 -> m37_175  [color=blue, key=0, style=bold];
m37_179 -> m37_180  [color=red, key=0, style=solid];
m37_181 -> m37_179  [color=blue, key=0, style=bold];
m37_183 -> m37_184  [color=red, key=0, style=solid];
m37_185 -> m37_183  [color=blue, key=0, style=bold];
m37_193 -> m37_194  [color=red, key=0, style=solid];
m37_194 -> m37_195  [color=red, key=0, style=solid];
m37_194 -> m37_196  [color=red, key=2, style=dotted];
m37_195 -> m37_193  [color=blue, key=0, style=bold];
m37_203 -> m37_204  [color=red, key=0, style=solid];
m37_204 -> m37_205  [color=red, key=0, style=solid];
m37_204 -> m37_202  [color=red, key=2, style=dotted];
m37_205 -> m37_203  [color=blue, key=0, style=bold];
m37_212 -> m37_213  [color=red, key=0, style=solid];
m37_213 -> m37_214  [color=red, key=0, style=solid];
m37_213 -> m37_202  [color=red, key=2, style=dotted];
m37_214 -> m37_212  [color=blue, key=0, style=bold];
m37_220 -> m37_221  [key=0, style=solid];
m37_221 -> m37_222  [key=0, style=solid];
m37_221 -> m37_223  [key=2, style=dotted];
m37_222 -> m37_220  [color=blue, key=0, style=bold];
m37_229 -> m37_230  [color=red, key=0, style=solid];
m37_229 -> m37_247  [color=green, key=0, style=solid];
m37_230 -> m37_231  [color=red, key=0, style=solid];
m37_230 -> m37_6  [color=red, key=2, style=dotted];
m37_231 -> m37_229  [color=blue, key=0, style=bold];
m37_238 -> m37_239  [color=red, key=0, style=solid];
m37_238 -> m37_255  [color=green, key=0, style=solid];
m37_239 -> m37_240  [color=red, key=0, style=solid];
m37_239 -> m37_6  [color=red, key=2, style=dotted];
m37_240 -> m37_238  [color=blue, key=0, style=bold];
m37_246 -> m37_247  [color=red, key=0, style=solid];
m37_246 -> m37_262  [color=green, key=0, style=solid];
m37_247 -> m37_248  [color=red, key=0, style=solid];
m37_247 -> m37_6  [key=2, style=dotted];
m37_247 -> m37_231  [color=green, key=0, style=solid];
m37_248 -> m37_246  [color=blue, key=0, style=bold];
m37_254 -> m37_255  [color=red, key=0, style=solid];
m37_254 -> m37_278  [color=green, key=0, style=solid];
m37_255 -> m37_256  [color=red, key=0, style=solid];
m37_255 -> m37_6  [key=2, style=dotted];
m37_255 -> m37_240  [color=green, key=0, style=solid];
m37_256 -> m37_254  [color=blue, key=0, style=bold];
m37_261 -> m37_262  [color=red, key=0, style=solid];
m37_261 -> m37_379  [color=green, key=0, style=solid];
m37_262 -> m37_263  [color=red, key=0, style=solid];
m37_262 -> m37_6  [key=2, style=dotted];
m37_262 -> m37_248  [color=green, key=0, style=solid];
m37_263 -> m37_261  [color=blue, key=0, style=bold];
m37_269 -> m37_270  [key=0, style=solid];
m37_270 -> m37_271  [key=0, style=solid];
m37_270 -> m37_272  [key=2, style=dotted];
m37_271 -> m37_269  [color=blue, key=0, style=bold];
m37_277 -> m37_278  [color=red, key=0, style=solid];
m37_277 -> m37_427  [color=green, key=0, style=solid];
m37_278 -> m37_279  [color=red, key=0, style=solid];
m37_278 -> m37_6  [key=2, style=dotted];
m37_278 -> m37_256  [color=green, key=0, style=solid];
m37_279 -> m37_277  [color=blue, key=0, style=bold];
m37_285 -> m37_286  [key=0, style=solid];
m37_286 -> m37_287  [key=0, style=solid];
m37_286 -> m37_288  [key=2, style=dotted];
m37_287 -> m37_285  [color=blue, key=0, style=bold];
m37_293 -> m37_294  [key=0, style=solid];
m37_294 -> m37_295  [key=0, style=solid];
m37_294 -> m37_296  [key=2, style=dotted];
m37_295 -> m37_293  [color=blue, key=0, style=bold];
m37_301 -> m37_302  [key=0, style=solid];
m37_302 -> m37_303  [key=0, style=solid];
m37_302 -> m37_296  [key=2, style=dotted];
m37_303 -> m37_301  [color=blue, key=0, style=bold];
m37_311 -> m37_312  [key=0, style=solid];
m37_312 -> m37_313  [key=0, style=solid];
m37_312 -> m37_314  [key=2, style=dotted];
m37_313 -> m37_311  [color=blue, key=0, style=bold];
m37_321 -> m37_322  [key=0, style=solid];
m37_322 -> m37_323  [key=0, style=solid];
m37_322 -> m37_314  [key=2, style=dotted];
m37_323 -> m37_321  [color=blue, key=0, style=bold];
m37_329 -> m37_330  [key=0, style=solid];
m37_330 -> m37_331  [key=0, style=solid];
m37_330 -> m37_10  [key=2, style=dotted];
m37_330 -> m37_11  [key=2, style=dotted];
m37_330 -> m37_12  [key=2, style=dotted];
m37_330 -> m37_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_331 -> m37_329  [color=blue, key=0, style=bold];
m37_332 -> m37_333  [key=0, style=solid];
m37_333 -> m37_334  [key=0, style=solid];
m37_333 -> m37_335  [key=2, style=dotted];
m37_334 -> m37_332  [color=blue, key=0, style=bold];
m37_340 -> m37_341  [key=0, style=solid];
m37_341 -> m37_342  [key=0, style=solid];
m37_341 -> m37_10  [key=2, style=dotted];
m37_341 -> m37_11  [key=2, style=dotted];
m37_341 -> m37_12  [key=2, style=dotted];
m37_341 -> m37_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_342 -> m37_340  [color=blue, key=0, style=bold];
m37_343 -> m37_344  [key=0, style=solid];
m37_344 -> m37_345  [key=0, style=solid];
m37_344 -> m37_346  [key=2, style=dotted];
m37_345 -> m37_343  [color=blue, key=0, style=bold];
m37_351 -> m37_352  [key=0, style=solid];
m37_352 -> m37_353  [key=0, style=solid];
m37_352 -> m37_10  [key=2, style=dotted];
m37_352 -> m37_11  [key=2, style=dotted];
m37_352 -> m37_12  [key=2, style=dotted];
m37_352 -> m37_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_353 -> m37_351  [color=blue, key=0, style=bold];
m37_354 -> m37_355  [key=0, style=solid];
m37_355 -> m37_356  [key=0, style=solid];
m37_355 -> m37_357  [key=2, style=dotted];
m37_356 -> m37_354  [color=blue, key=0, style=bold];
m37_372 -> m37_373  [key=0, style=solid];
m37_367 -> m37_368  [key=0, style=solid];
m37_371 -> m37_372  [key=0, style=solid];
m37_368 -> m37_369  [key=0, style=solid];
m37_368 -> m37_370  [key=2, style=dotted];
m37_369 -> m37_367  [color=blue, key=0, style=bold];
m37_373 -> m37_371  [color=blue, key=0, style=bold];
m37_382 -> m37_383  [key=0, style=solid];
m37_378 -> m37_379  [color=red, key=0, style=solid];
m37_381 -> m37_382  [key=0, style=solid];
m37_379 -> m37_380  [color=red, key=0, style=solid];
m37_379 -> m37_6  [key=2, style=dotted];
m37_379 -> m37_263  [color=green, key=0, style=solid];
m37_380 -> m37_378  [color=blue, key=0, style=bold];
m37_383 -> m37_381  [color=blue, key=0, style=bold];
m37_388 -> m37_389  [key=0, style=solid];
m37_389 -> m37_390  [key=0, style=solid];
m37_389 -> m37_391  [key=2, style=dotted];
m37_390 -> m37_388  [color=blue, key=0, style=bold];
m37_404 -> m37_405  [key=0, style=solid];
m37_399 -> m37_400  [key=0, style=solid];
m37_403 -> m37_404  [key=0, style=solid];
m37_400 -> m37_401  [key=0, style=solid];
m37_400 -> m37_402  [key=2, style=dotted];
m37_401 -> m37_399  [color=blue, key=0, style=bold];
m37_405 -> m37_403  [color=blue, key=0, style=bold];
m37_410 -> m37_411  [key=0, style=solid];
m37_411 -> m37_412  [key=0, style=solid];
m37_411 -> m37_272  [key=2, style=dotted];
m37_412 -> m37_410  [color=blue, key=0, style=bold];
m37_417 -> m37_418  [key=0, style=solid];
m37_418 -> m37_419  [key=0, style=solid];
m37_418 -> m37_420  [key=2, style=dotted];
m37_419 -> m37_417  [color=blue, key=0, style=bold];
m37_426 -> m37_427  [color=red, key=0, style=solid];
m37_427 -> m37_428  [color=red, key=0, style=solid];
m37_427 -> m37_6  [key=2, style=dotted];
m37_427 -> m37_279  [color=green, key=0, style=solid];
m37_428 -> m37_426  [color=blue, key=0, style=bold];
m37_440 -> m37_441  [key=0, style=solid];
m37_435 -> m37_436  [key=0, style=solid];
m37_439 -> m37_440  [key=0, style=solid];
m37_436 -> m37_437  [key=0, style=solid];
m37_436 -> m37_438  [key=2, style=dotted];
m37_437 -> m37_435  [color=blue, key=0, style=bold];
m37_441 -> m37_439  [color=blue, key=0, style=bold];
m37_456 -> m37_457  [key=0, style=solid];
m37_456 -> m37_452  [key=2, style=dotted];
m37_457 -> m37_455  [color=blue, key=0, style=bold];
m37_63 -> m37_64  [key=0, style=solid];
m37_64 -> m37_65  [color=green, key=0, style=solid];
m37_64 -> m37_68  [key=2, style=dotted];
m37_64 -> m37_69  [key=2, style=dotted];
m37_64 -> m37_66  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_65 -> m37_66  [color=green, key=0, style=solid];
m37_65 -> m37_10  [color=green, key=2, style=dotted];
m37_65 -> m37_11  [color=green, key=2, style=dotted];
m37_65 -> m37_12  [color=green, key=2, style=dotted];
m37_65 -> m37_70  [color=green, key=1, label="lambda expression", style=dashed];
m37_66 -> m37_67  [key=0, style=solid];
m37_66 -> m37_13  [key=2, style=dotted];
m37_67 -> m37_63  [color=blue, key=0, style=bold];
m37_413 -> m37_414  [key=0, style=solid];
m37_413 -> m37_415  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m37_414 -> m37_415  [key=0, style=solid];
m37_414 -> m37_10  [key=2, style=dotted];
m37_414 -> m37_11  [key=2, style=dotted];
m37_414 -> m37_12  [key=2, style=dotted];
m37_414 -> m37_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_415 -> m37_416  [key=0, style=solid];
m37_415 -> m37_13  [key=2, style=dotted];
m37_416 -> m37_413  [color=blue, key=0, style=bold];
m37_150 -> m37_151  [color=red, key=0, style=solid];
m37_150 -> m37_152  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m37_151 -> m37_152  [color=red, key=0, style=solid];
m37_151 -> m37_10  [color=red, key=2, style=dotted];
m37_151 -> m37_11  [color=red, key=2, style=dotted];
m37_151 -> m37_12  [color=red, key=2, style=dotted];
m37_151 -> m37_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_152 -> m37_153  [key=0, style=solid];
m37_152 -> m37_13  [key=2, style=dotted];
m37_153 -> m37_150  [color=blue, key=0, style=bold];
m37_347 -> m37_348  [key=0, style=solid];
m37_348 -> m37_349  [key=0, style=solid];
m37_348 -> m37_348  [color=green, key=3, label="Local variable System.Action test", style=bold];
m37_349 -> m37_350  [key=0, style=solid];
m37_349 -> m37_328  [key=2, style=dotted];
m37_350 -> m37_347  [color=blue, key=0, style=bold];
m37_315 -> m37_316  [key=0, style=solid];
m37_315 -> m37_318  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_315 -> m37_319  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_316 -> m37_317  [key=0, style=solid];
m37_316 -> m37_10  [key=2, style=dotted];
m37_316 -> m37_11  [key=2, style=dotted];
m37_316 -> m37_12  [key=2, style=dotted];
m37_316 -> m37_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_316 -> m37_318  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_316 -> m37_319  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_318 -> m37_319  [key=0, style=solid];
m37_318 -> m37_13  [key=2, style=dotted];
m37_319 -> m37_320  [key=0, style=solid];
m37_319 -> m37_310  [key=2, style=dotted];
m37_319 -> m37_13  [key=2, style=dotted];
m37_317 -> m37_318  [key=0, style=solid];
m37_317 -> m37_319  [key=0, style=solid];
m37_320 -> m37_315  [color=blue, key=0, style=bold];
m37_447 -> m37_448  [key=0, style=solid];
m37_448 -> m37_449  [key=0, style=solid];
m37_448 -> m37_452  [key=2, style=dotted];
m37_448 -> m37_453  [key=2, style=dotted];
m37_448 -> m37_454  [key=2, style=dotted];
m37_448 -> m37_450  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_449 -> m37_450  [key=0, style=solid];
m37_449 -> m37_10  [key=2, style=dotted];
m37_449 -> m37_11  [key=2, style=dotted];
m37_449 -> m37_12  [key=2, style=dotted];
m37_449 -> m37_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_450 -> m37_451  [key=0, style=solid];
m37_450 -> m37_13  [key=2, style=dotted];
m37_451 -> m37_447  [color=blue, key=0, style=bold];
m37_24 -> m37_25  [color=green, key=0, style=solid];
m37_24 -> m37_26  [color=darkseagreen4, key=1, label=double, style=dashed];
m37_25 -> m37_26  [color=green, key=0, style=solid];
m37_25 -> m37_10  [color=green, key=2, style=dotted];
m37_25 -> m37_11  [color=green, key=2, style=dotted];
m37_25 -> m37_12  [color=green, key=2, style=dotted];
m37_25 -> m37_28  [color=green, key=1, label="lambda expression", style=dashed];
m37_26 -> m37_27  [key=0, style=solid];
m37_26 -> m37_13  [key=2, style=dotted];
m37_27 -> m37_24  [color=blue, key=0, style=bold];
m37_40 -> m37_41  [color=red, key=0, style=solid];
m37_40 -> m37_42  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m37_41 -> m37_42  [color=red, key=0, style=solid];
m37_41 -> m37_10  [color=red, key=2, style=dotted];
m37_41 -> m37_11  [color=red, key=2, style=dotted];
m37_41 -> m37_12  [color=red, key=2, style=dotted];
m37_41 -> m37_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_42 -> m37_43  [color=red, key=0, style=solid];
m37_42 -> m37_13  [color=red, key=2, style=dotted];
m37_43 -> m37_40  [color=blue, key=0, style=bold];
m37_133 -> m37_134  [color=red, key=0, style=solid];
m37_134 -> m37_135  [color=red, key=0, style=solid];
m37_134 -> m37_138  [color=red, key=2, style=dotted];
m37_134 -> m37_136  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_135 -> m37_136  [color=red, key=0, style=solid];
m37_135 -> m37_10  [color=red, key=2, style=dotted];
m37_135 -> m37_11  [color=red, key=2, style=dotted];
m37_135 -> m37_12  [color=red, key=2, style=dotted];
m37_135 -> m37_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_136 -> m37_137  [color=red, key=0, style=solid];
m37_136 -> m37_13  [color=red, key=2, style=dotted];
m37_137 -> m37_133  [color=blue, key=0, style=bold];
m37_224 -> m37_225  [key=0, style=solid];
m37_225 -> m37_226  [color=red, key=0, style=solid];
m37_225 -> m37_78  [key=2, style=dotted];
m37_225 -> m37_69  [key=2, style=dotted];
m37_225 -> m37_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_226 -> m37_227  [color=red, key=0, style=solid];
m37_226 -> m37_10  [color=red, key=2, style=dotted];
m37_226 -> m37_11  [color=red, key=2, style=dotted];
m37_226 -> m37_12  [color=red, key=2, style=dotted];
m37_226 -> m37_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_227 -> m37_228  [color=red, key=0, style=solid];
m37_227 -> m37_13  [color=red, key=2, style=dotted];
m37_228 -> m37_224  [color=blue, key=0, style=bold];
m37_273 -> m37_274  [key=0, style=solid];
m37_273 -> m37_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_274 -> m37_275  [key=0, style=solid];
m37_274 -> m37_10  [key=2, style=dotted];
m37_274 -> m37_11  [key=2, style=dotted];
m37_274 -> m37_12  [key=2, style=dotted];
m37_274 -> m37_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_275 -> m37_276  [key=0, style=solid];
m37_275 -> m37_13  [key=2, style=dotted];
m37_276 -> m37_273  [color=blue, key=0, style=bold];
m37_358 -> m37_359  [key=0, style=solid];
m37_358 -> m37_360  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m37_358 -> m37_361  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_358 -> m37_372  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_358 -> m37_362  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m37_359 -> m37_360  [key=0, style=solid];
m37_359 -> m37_10  [key=2, style=dotted];
m37_359 -> m37_11  [key=2, style=dotted];
m37_359 -> m37_12  [key=2, style=dotted];
m37_359 -> m37_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_359 -> m37_361  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_359 -> m37_363  [color=darkseagreen4, key=1, label=result, style=dashed];
m37_360 -> m37_361  [key=0, style=solid];
m37_360 -> m37_362  [key=0, style=solid];
m37_361 -> m37_364  [key=0, style=solid];
m37_361 -> m37_365  [key=2, style=dotted];
m37_361 -> m37_366  [key=2, style=dotted];
m37_361 -> m37_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_362 -> m37_363  [key=0, style=solid];
m37_362 -> m37_364  [key=0, style=solid];
m37_363 -> m37_364  [key=0, style=solid];
m37_363 -> m37_365  [key=2, style=dotted];
m37_363 -> m37_328  [key=2, style=dotted];
m37_364 -> m37_358  [color=blue, key=0, style=bold];
m37_187 -> m37_188  [color=red, key=0, style=solid];
m37_188 -> m37_189  [color=red, key=0, style=solid];
m37_188 -> m37_192  [color=red, key=2, style=dotted];
m37_188 -> m37_69  [color=red, key=2, style=dotted];
m37_188 -> m37_190  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_189 -> m37_190  [color=red, key=0, style=solid];
m37_189 -> m37_10  [color=red, key=2, style=dotted];
m37_189 -> m37_11  [color=red, key=2, style=dotted];
m37_189 -> m37_12  [color=red, key=2, style=dotted];
m37_189 -> m37_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_190 -> m37_191  [color=red, key=0, style=solid];
m37_190 -> m37_13  [color=red, key=2, style=dotted];
m37_191 -> m37_187  [color=blue, key=0, style=bold];
m37_165 -> m37_166  [color=red, key=0, style=solid];
m37_166 -> m37_167  [color=red, key=0, style=solid];
m37_166 -> m37_138  [color=red, key=2, style=dotted];
m37_166 -> m37_169  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_167 -> m37_168  [color=red, key=0, style=solid];
m37_169 -> m37_170  [color=red, key=0, style=solid];
m37_169 -> m37_13  [color=red, key=2, style=dotted];
m37_168 -> m37_169  [color=red, key=0, style=solid];
m37_168 -> m37_10  [color=red, key=2, style=dotted];
m37_168 -> m37_11  [color=red, key=2, style=dotted];
m37_168 -> m37_171  [color=red, key=2, style=dotted];
m37_168 -> m37_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_168 -> m37_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_170 -> m37_165  [color=blue, key=0, style=bold];
m37_249 -> m37_250  [key=0, style=solid];
m37_250 -> m37_251  [key=0, style=solid];
m37_250 -> m37_237  [key=2, style=dotted];
m37_250 -> m37_252  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_251 -> m37_252  [key=0, style=solid];
m37_251 -> m37_10  [key=2, style=dotted];
m37_251 -> m37_11  [key=2, style=dotted];
m37_251 -> m37_12  [key=2, style=dotted];
m37_251 -> m37_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_252 -> m37_253  [key=0, style=solid];
m37_252 -> m37_13  [key=2, style=dotted];
m37_253 -> m37_249  [color=blue, key=0, style=bold];
m37_289 -> m37_290  [key=0, style=solid];
m37_289 -> m37_291  [color=darkseagreen4, key=1, label="int?", style=dashed];
m37_290 -> m37_291  [key=0, style=solid];
m37_290 -> m37_10  [key=2, style=dotted];
m37_290 -> m37_11  [key=2, style=dotted];
m37_290 -> m37_12  [key=2, style=dotted];
m37_290 -> m37_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_291 -> m37_292  [key=0, style=solid];
m37_291 -> m37_13  [key=2, style=dotted];
m37_292 -> m37_289  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [color=red, key=0, style=solid];
m37_1 -> m37_6  [key=2, style=dotted];
m37_1 -> m37_3  [color=green, key=1, label=fakeOptions, style=dashed];
m37_1 -> m37_15  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m37_2 -> m37_3  [color=green, key=0, style=solid];
m37_2 -> m37_7  [color=red, key=2, style=dotted];
m37_2 -> m37_8  [color=red, key=2, style=dotted];
m37_2 -> m37_9  [color=red, key=2, style=dotted];
m37_2 -> m37_4  [color=green, key=1, label=expectedResult, style=dashed];
m37_3 -> m37_4  [color=green, key=0, style=solid];
m37_3 -> m37_10  [color=green, key=2, style=dotted];
m37_3 -> m37_11  [color=green, key=2, style=dotted];
m37_3 -> m37_12  [color=green, key=2, style=dotted];
m37_3 -> m37_14  [color=green, key=1, label="lambda expression", style=dashed];
m37_4 -> m37_5  [color=green, key=0, style=solid];
m37_4 -> m37_13  [color=green, key=2, style=dotted];
m37_5 -> m37_0  [color=blue, key=0, style=bold];
m37_429 -> m37_430  [key=0, style=solid];
m37_429 -> m37_432  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_429 -> m37_440  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_430 -> m37_431  [key=0, style=solid];
m37_430 -> m37_10  [key=2, style=dotted];
m37_430 -> m37_11  [key=2, style=dotted];
m37_430 -> m37_12  [key=2, style=dotted];
m37_430 -> m37_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_432 -> m37_433  [key=0, style=solid];
m37_432 -> m37_434  [key=2, style=dotted];
m37_432 -> m37_365  [key=2, style=dotted];
m37_432 -> m37_366  [key=2, style=dotted];
m37_432 -> m37_439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_431 -> m37_432  [key=0, style=solid];
m37_433 -> m37_429  [color=blue, key=0, style=bold];
m37_232 -> m37_233  [color=red, key=0, style=solid];
m37_233 -> m37_234  [color=red, key=0, style=solid];
m37_233 -> m37_237  [color=red, key=2, style=dotted];
m37_233 -> m37_235  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_234 -> m37_235  [color=red, key=0, style=solid];
m37_234 -> m37_10  [color=red, key=2, style=dotted];
m37_234 -> m37_11  [color=red, key=2, style=dotted];
m37_234 -> m37_12  [color=red, key=2, style=dotted];
m37_234 -> m37_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_235 -> m37_236  [key=0, style=solid];
m37_235 -> m37_13  [key=2, style=dotted];
m37_236 -> m37_232  [color=blue, key=0, style=bold];
m37_83 -> m37_84  [color=red, key=0, style=solid];
m37_84 -> m37_85  [color=green, key=0, style=solid];
m37_84 -> m37_78  [color=red, key=2, style=dotted];
m37_84 -> m37_69  [color=red, key=2, style=dotted];
m37_84 -> m37_86  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_85 -> m37_86  [color=green, key=0, style=solid];
m37_85 -> m37_10  [color=green, key=2, style=dotted];
m37_85 -> m37_11  [color=green, key=2, style=dotted];
m37_85 -> m37_12  [color=green, key=2, style=dotted];
m37_85 -> m37_88  [color=green, key=1, label="lambda expression", style=dashed];
m37_86 -> m37_87  [key=0, style=solid];
m37_86 -> m37_13  [key=2, style=dotted];
m37_87 -> m37_83  [color=blue, key=0, style=bold];
m37_215 -> m37_216  [color=red, key=0, style=solid];
m37_216 -> m37_217  [color=red, key=0, style=solid];
m37_216 -> m37_211  [color=red, key=2, style=dotted];
m37_216 -> m37_69  [color=red, key=2, style=dotted];
m37_216 -> m37_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m37_217 -> m37_218  [color=red, key=0, style=solid];
m37_217 -> m37_10  [color=red, key=2, style=dotted];
m37_217 -> m37_11  [color=red, key=2, style=dotted];
m37_217 -> m37_12  [color=red, key=2, style=dotted];
m37_217 -> m37_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_218 -> m37_219  [key=0, style=solid];
m37_218 -> m37_13  [key=2, style=dotted];
m37_219 -> m37_215  [color=blue, key=0, style=bold];
m37_32 -> m37_33  [color=green, key=0, style=solid];
m37_32 -> m37_34  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m37_33 -> m37_34  [color=green, key=0, style=solid];
m37_33 -> m37_10  [color=green, key=2, style=dotted];
m37_33 -> m37_11  [color=green, key=2, style=dotted];
m37_33 -> m37_12  [color=green, key=2, style=dotted];
m37_33 -> m37_36  [color=green, key=1, label="lambda expression", style=dashed];
m37_34 -> m37_35  [key=0, style=solid];
m37_34 -> m37_13  [key=2, style=dotted];
m37_35 -> m37_32  [color=blue, key=0, style=bold];
m37_406 -> m37_407  [key=0, style=solid];
m37_406 -> m37_408  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m37_407 -> m37_408  [key=0, style=solid];
m37_407 -> m37_10  [key=2, style=dotted];
m37_407 -> m37_11  [key=2, style=dotted];
m37_407 -> m37_12  [key=2, style=dotted];
m37_407 -> m37_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_408 -> m37_409  [key=0, style=solid];
m37_408 -> m37_13  [key=2, style=dotted];
m37_409 -> m37_406  [color=blue, key=0, style=bold];
m37_442 -> m37_443  [key=0, style=solid];
m37_442 -> m37_444  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m37_443 -> m37_444  [key=0, style=solid];
m37_443 -> m37_446  [key=2, style=dotted];
m37_443 -> m37_11  [key=2, style=dotted];
m37_443 -> m37_12  [key=2, style=dotted];
m37_444 -> m37_445  [key=0, style=solid];
m37_444 -> m37_13  [key=2, style=dotted];
m37_445 -> m37_442  [color=blue, key=0, style=bold];
m37_458 -> m37_15  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m37_459 -> m37_180  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m37_459 -> m37_184  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m37_460 -> m37_372  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_461 -> m37_382  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_462 -> m37_404  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_463 -> m37_440  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_58 -> m38_60  [key=0, style=solid];
m38_58 -> m38_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_63  [key=2, style=dotted];
m38_60 -> m38_56  [key=2, style=dotted];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_63  [key=2, style=dotted];
m38_61 -> m38_57  [key=2, style=dotted];
m38_62 -> m38_58  [color=blue, key=0, style=bold];
m38_113 -> m38_120  [key=0, style=solid];
m38_120 -> m38_121  [key=0, style=solid];
m38_120 -> m38_119  [key=2, style=dotted];
m38_120 -> m38_116  [key=2, style=dotted];
m38_120 -> m38_63  [key=2, style=dotted];
m38_121 -> m38_113  [color=blue, key=0, style=bold];
m38_93 -> m38_114  [key=0, style=solid];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_102  [key=2, style=dotted];
m38_114 -> m38_116  [key=2, style=dotted];
m38_115 -> m38_93  [color=blue, key=0, style=bold];
m38_59 -> m38_64  [key=0, style=solid];
m38_64 -> m38_65  [key=0, style=solid];
m38_64 -> m38_66  [key=2, style=dotted];
m38_64 -> m38_67  [key=2, style=dotted];
m38_65 -> m38_59  [color=blue, key=0, style=bold];
m38_89 -> m38_145  [key=0, style=solid];
m38_89 -> m38_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_147  [key=0, style=solid];
m38_145 -> m38_149  [key=2, style=dotted];
m38_147 -> m38_148  [key=0, style=solid];
m38_147 -> m38_150  [key=2, style=dotted];
m38_146 -> m38_148  [key=0, style=solid];
m38_148 -> m38_89  [color=blue, key=0, style=bold];
m38_137 -> m38_138  [key=0, style=solid];
m38_138 -> m38_139  [key=0, style=solid];
m38_138 -> m38_140  [key=2, style=dotted];
m38_139 -> m38_137  [color=blue, key=0, style=bold];
m38_103 -> m38_117  [key=0, style=solid];
m38_117 -> m38_118  [key=0, style=solid];
m38_117 -> m38_119  [key=2, style=dotted];
m38_117 -> m38_66  [key=2, style=dotted];
m38_117 -> m38_63  [key=2, style=dotted];
m38_117 -> m38_116  [key=2, style=dotted];
m38_118 -> m38_103  [color=blue, key=0, style=bold];
m38_94 -> m38_100  [key=0, style=solid];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_102  [key=2, style=dotted];
m38_100 -> m38_103  [key=2, style=dotted];
m38_101 -> m38_94  [color=blue, key=0, style=bold];
m38_73 -> m38_74  [key=0, style=solid];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_76  [key=2, style=dotted];
m38_75 -> m38_73  [color=blue, key=0, style=bold];
m38_57 -> m38_71  [key=0, style=solid];
m38_71 -> m38_72  [key=0, style=solid];
m38_71 -> m38_70  [key=2, style=dotted];
m38_71 -> m38_67  [key=2, style=dotted];
m38_72 -> m38_57  [color=blue, key=0, style=bold];
m38_76 -> m38_80  [key=0, style=solid];
m38_76 -> m38_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_76 -> m38_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>", style=dashed];
m38_76 -> m38_84  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>", style=dashed];
m38_80 -> m38_81  [key=0, style=solid];
m38_80 -> m38_86  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_81 -> m38_82  [key=0, style=solid];
m38_81 -> m38_86  [key=0, style=solid];
m38_81 -> m38_66  [key=2, style=dotted];
m38_81 -> m38_88  [key=2, style=dotted];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_84  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_82 -> m38_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_84 -> m38_85  [key=0, style=solid];
m38_84 -> m38_86  [key=0, style=solid];
m38_84 -> m38_89  [key=2, style=dotted];
m38_86 -> m38_87  [key=0, style=solid];
m38_83 -> m38_84  [key=0, style=solid];
m38_83 -> m38_86  [key=0, style=solid];
m38_85 -> m38_83  [key=0, style=solid];
m38_85 -> m38_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_87 -> m38_76  [color=blue, key=0, style=bold];
m38_70 -> m38_141  [key=0, style=solid];
m38_70 -> m38_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_141 -> m38_142  [key=0, style=solid];
m38_141 -> m38_144  [key=2, style=dotted];
m38_142 -> m38_143  [key=0, style=solid];
m38_143 -> m38_70  [color=blue, key=0, style=bold];
m38_107 -> m38_108  [key=0, style=solid];
m38_96 -> m38_97  [key=0, style=solid];
m38_97 -> m38_98  [key=0, style=solid];
m38_97 -> m38_99  [key=2, style=dotted];
m38_98 -> m38_96  [color=blue, key=0, style=bold];
m38_108 -> m38_109  [key=0, style=solid];
m38_108 -> m38_99  [key=2, style=dotted];
m38_109 -> m38_107  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_56  [key=2, style=dotted];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_56  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_56  [key=2, style=dotted];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_56  [key=2, style=dotted];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_56  [key=2, style=dotted];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_56  [key=2, style=dotted];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_56  [key=2, style=dotted];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_56  [key=2, style=dotted];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_56  [key=2, style=dotted];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_56  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_56  [key=2, style=dotted];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_56  [key=2, style=dotted];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_56  [key=2, style=dotted];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_56  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_56  [key=2, style=dotted];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_56  [key=2, style=dotted];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_56  [key=2, style=dotted];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_57  [key=2, style=dotted];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_57  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_57  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_57  [key=2, style=dotted];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_57  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_57  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_57  [key=2, style=dotted];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_57  [key=2, style=dotted];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_57  [key=2, style=dotted];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_57  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_57  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_57  [key=2, style=dotted];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_57  [key=2, style=dotted];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_57  [key=2, style=dotted];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_57  [key=2, style=dotted];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_57  [key=2, style=dotted];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_57  [key=2, style=dotted];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_57  [key=2, style=dotted];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_57  [key=2, style=dotted];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_57  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_57  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_57  [key=2, style=dotted];
m38_40 -> m38_41  [key=0, style=solid];
m38_40 -> m38_57  [key=2, style=dotted];
m38_41 -> m38_42  [key=0, style=solid];
m38_41 -> m38_57  [key=2, style=dotted];
m38_42 -> m38_43  [key=0, style=solid];
m38_42 -> m38_58  [key=2, style=dotted];
m38_43 -> m38_44  [key=0, style=solid];
m38_43 -> m38_58  [key=2, style=dotted];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_58  [key=2, style=dotted];
m38_45 -> m38_46  [key=0, style=solid];
m38_45 -> m38_58  [key=2, style=dotted];
m38_46 -> m38_47  [key=0, style=solid];
m38_46 -> m38_58  [key=2, style=dotted];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_59  [key=2, style=dotted];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_59  [key=2, style=dotted];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_59  [key=2, style=dotted];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_59  [key=2, style=dotted];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_59  [key=2, style=dotted];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_59  [key=2, style=dotted];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_59  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_59  [key=2, style=dotted];
m38_55 -> m38_0  [color=blue, key=0, style=bold];
m38_56 -> m38_68  [key=0, style=solid];
m38_68 -> m38_69  [key=0, style=solid];
m38_68 -> m38_70  [key=2, style=dotted];
m38_68 -> m38_67  [key=2, style=dotted];
m38_69 -> m38_56  [color=blue, key=0, style=bold];
m38_90 -> m38_91  [key=0, style=solid];
m38_91 -> m38_92  [key=0, style=solid];
m38_91 -> m38_93  [key=2, style=dotted];
m38_91 -> m38_94  [key=2, style=dotted];
m38_91 -> m38_95  [key=2, style=dotted];
m38_91 -> m38_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_92 -> m38_90  [color=blue, key=0, style=bold];
m38_110 -> m38_111  [key=0, style=solid];
m38_111 -> m38_112  [key=0, style=solid];
m38_111 -> m38_104  [key=2, style=dotted];
m38_111 -> m38_113  [key=2, style=dotted];
m38_112 -> m38_110  [color=blue, key=0, style=bold];
m38_122 -> m38_123  [key=0, style=solid];
m38_122 -> m38_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_122 -> m38_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_122 -> m38_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_122 -> m38_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_122 -> m38_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_123 -> m38_124  [key=0, style=solid];
m38_123 -> m38_136  [key=2, style=dotted];
m38_123 -> m38_127  [color=darkseagreen4, key=1, label=n, style=dashed];
m38_126 -> m38_135  [key=0, style=solid];
m38_129 -> m38_135  [key=0, style=solid];
m38_131 -> m38_135  [key=0, style=solid];
m38_133 -> m38_135  [key=0, style=solid];
m38_134 -> m38_135  [key=0, style=solid];
m38_124 -> m38_125  [key=0, style=solid];
m38_127 -> m38_128  [key=0, style=solid];
m38_127 -> m38_130  [key=0, style=solid];
m38_127 -> m38_132  [key=0, style=solid];
m38_127 -> m38_134  [key=0, style=solid];
m38_125 -> m38_126  [key=0, style=solid];
m38_125 -> m38_127  [key=0, style=solid];
m38_128 -> m38_129  [key=0, style=solid];
m38_130 -> m38_131  [key=0, style=solid];
m38_132 -> m38_133  [key=0, style=solid];
m38_135 -> m38_122  [color=blue, key=0, style=bold];
m38_77 -> m38_78  [key=0, style=solid];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_76  [key=2, style=dotted];
m38_79 -> m38_77  [color=blue, key=0, style=bold];
m38_104 -> m38_105  [key=0, style=solid];
m38_105 -> m38_106  [key=0, style=solid];
m38_105 -> m38_95  [key=2, style=dotted];
m38_105 -> m38_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_106 -> m38_104  [color=blue, key=0, style=bold];
m38_151 -> m38_141  [color=darkseagreen4, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m38_151 -> m38_142  [color=darkseagreen4, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m38_151 -> m38_145  [color=darkseagreen4, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m38_151 -> m38_147  [color=darkseagreen4, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_3  [key=2, style=dotted];
m47_2 -> m47_0  [color=blue, key=0, style=bold];
m47_54 -> m47_55  [key=0, style=solid];
m47_54 -> m47_56  [color=darkseagreen4, key=1, label="?", style=dashed];
m47_54 -> m47_57  [color=darkseagreen4, key=1, label="?", style=dashed];
m47_4 -> m47_5  [key=0, style=solid];
m47_5 -> m47_6  [key=0, style=solid];
m47_6 -> m47_4  [color=blue, key=0, style=bold];
m47_7 -> m47_8  [key=0, style=solid];
m47_8 -> m47_9  [key=0, style=solid];
m47_9 -> m47_7  [color=blue, key=0, style=bold];
m47_10 -> m47_11  [key=0, style=solid];
m47_11 -> m47_12  [key=0, style=solid];
m47_12 -> m47_10  [color=blue, key=0, style=bold];
m47_13 -> m47_14  [color=red, key=0, style=solid];
m47_14 -> m47_15  [color=red, key=0, style=solid];
m47_15 -> m47_13  [color=blue, key=0, style=bold];
m47_16 -> m47_17  [key=0, style=solid];
m47_17 -> m47_18  [key=0, style=solid];
m47_18 -> m47_16  [color=blue, key=0, style=bold];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_22  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_24  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_26  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_37  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m47_19 -> m47_19  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_23  [key=0, style=solid];
m47_20 -> m47_25  [key=0, style=solid];
m47_20 -> m47_27  [key=0, style=solid];
m47_20 -> m47_30  [key=0, style=solid];
m47_20 -> m47_33  [key=0, style=solid];
m47_20 -> m47_36  [key=0, style=solid];
m47_20 -> m47_38  [key=0, style=solid];
m47_22 -> m47_40  [key=0, style=solid];
m47_22 -> m47_42  [key=2, style=dotted];
m47_24 -> m47_40  [key=0, style=solid];
m47_24 -> m47_42  [key=2, style=dotted];
m47_26 -> m47_40  [key=0, style=solid];
m47_26 -> m47_42  [key=2, style=dotted];
m47_28 -> m47_29  [key=0, style=solid];
m47_31 -> m47_32  [key=0, style=solid];
m47_34 -> m47_35  [key=0, style=solid];
m47_37 -> m47_40  [key=0, style=solid];
m47_37 -> m47_42  [key=2, style=dotted];
m47_21 -> m47_22  [key=0, style=solid];
m47_23 -> m47_24  [key=0, style=solid];
m47_25 -> m47_26  [key=0, style=solid];
m47_27 -> m47_28  [key=0, style=solid];
m47_30 -> m47_31  [key=0, style=solid];
m47_33 -> m47_34  [key=0, style=solid];
m47_36 -> m47_37  [key=0, style=solid];
m47_38 -> m47_39  [key=0, style=solid];
m47_29 -> m47_40  [key=0, style=solid];
m47_29 -> m47_43  [key=2, style=dotted];
m47_29 -> m47_42  [key=2, style=dotted];
m47_32 -> m47_40  [key=0, style=solid];
m47_32 -> m47_43  [key=2, style=dotted];
m47_32 -> m47_42  [key=2, style=dotted];
m47_35 -> m47_40  [key=0, style=solid];
m47_35 -> m47_43  [key=2, style=dotted];
m47_35 -> m47_42  [key=2, style=dotted];
m47_39 -> m47_40  [key=0, style=solid];
m47_40 -> m47_19  [color=blue, key=0, style=bold];
m47_41 -> m47_40  [key=0, style=solid];
m47_41 -> m47_44  [key=2, style=dotted];
m47_45 -> m47_46  [key=0, style=solid];
m47_46 -> m47_47  [key=0, style=solid];
m47_46 -> m47_50  [key=2, style=dotted];
m47_46 -> m47_46  [color=darkseagreen4, key=1, label=e, style=dashed];
m47_46 -> m47_57  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m47_47 -> m47_48  [key=0, style=solid];
m47_47 -> m47_51  [key=2, style=dotted];
m47_47 -> m47_52  [key=2, style=dotted];
m47_47 -> m47_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_57 -> m47_58  [key=0, style=solid];
m47_57 -> m47_62  [key=2, style=dotted];
m47_57 -> m47_63  [key=2, style=dotted];
m47_57 -> m47_60  [key=2, style=dotted];
m47_57 -> m47_52  [key=2, style=dotted];
m47_57 -> m47_53  [key=2, style=dotted];
m47_57 -> m47_57  [color=darkseagreen4, key=1, label=s, style=dashed];
m47_48 -> m47_49  [key=0, style=solid];
m47_48 -> m47_53  [key=2, style=dotted];
m47_49 -> m47_45  [color=blue, key=0, style=bold];
m47_55 -> m47_56  [key=0, style=solid];
m47_55 -> m47_60  [key=2, style=dotted];
m47_55 -> m47_52  [key=2, style=dotted];
m47_55 -> m47_53  [key=2, style=dotted];
m47_55 -> m47_55  [color=darkseagreen4, key=1, label=e, style=dashed];
m47_55 -> m47_58  [color=darkseagreen4, key=1, label=names, style=dashed];
m47_56 -> m47_57  [key=0, style=solid];
m47_56 -> m47_61  [key=2, style=dotted];
m47_56 -> m47_58  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m47_58 -> m47_59  [key=0, style=solid];
m47_58 -> m47_64  [key=2, style=dotted];
m47_58 -> m47_65  [key=2, style=dotted];
m47_58 -> m47_66  [key=2, style=dotted];
m47_58 -> m47_67  [key=2, style=dotted];
m47_58 -> m47_68  [key=2, style=dotted];
m47_58 -> m47_69  [key=2, style=dotted];
m47_58 -> m47_70  [key=2, style=dotted];
m47_59 -> m47_54  [color=blue, key=0, style=bold];
m47_71 -> m47_57  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m49_8 -> m49_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m49_8 -> m49_9  [key=0, style=solid];
m49_23 -> m49_112  [key=0, style=solid];
m49_23 -> m49_114  [color=darkseagreen4, key=1, label=bool, style=dashed];
m49_23 -> m49_21  [color=blue, key=0, style=bold];
m49_112 -> m49_113  [key=0, style=solid];
m49_112 -> m49_114  [key=0, style=solid];
m49_115 -> m49_116  [key=0, style=solid];
m49_115 -> m49_117  [key=0, style=solid];
m49_115 -> m49_113  [color=blue, key=0, style=bold];
m49_116 -> m49_117  [key=0, style=solid];
m49_116 -> m49_119  [key=2, style=dotted];
m49_117 -> m49_118  [key=0, style=solid];
m49_113 -> m49_118  [key=0, style=solid];
m49_113 -> m49_114  [key=0, style=solid];
m49_114 -> m49_115  [key=0, style=solid];
m49_114 -> m49_118  [key=0, style=solid];
m49_114 -> m49_116  [key=2, style=dotted];
m49_118 -> m49_23  [color=blue, key=0, style=bold];
m49_118 -> m49_119  [key=0, style=solid];
m49_118 -> m49_24  [key=2, style=dotted];
m49_118 -> m49_106  [key=2, style=dotted];
m49_118 -> m49_107  [key=2, style=dotted];
m49_3 -> m49_17  [key=0, style=solid];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_9  [key=2, style=dotted];
m49_3 -> m49_10  [key=2, style=dotted];
m49_3 -> m49_11  [key=2, style=dotted];
m49_3 -> m49_12  [key=2, style=dotted];
m49_3 -> m49_13  [key=2, style=dotted];
m49_3 -> m49_3  [color=darkseagreen4, key=1, label=arg, style=dashed];
m49_17 -> m49_18  [key=0, style=solid];
m49_18 -> m49_19  [key=0, style=solid];
m49_19 -> m49_3  [color=blue, key=0, style=bold];
m49_44 -> m49_42  [color=blue, key=0, style=bold];
m49_92 -> m49_93  [color=red, key=0, style=solid];
m49_92 -> m49_36  [color=red, key=2, style=dotted];
m49_92 -> m49_17  [color=red, key=2, style=dotted];
m49_92 -> m49_97  [color=red, key=2, style=dotted];
m49_92 -> m49_99  [color=red, key=1, label="lambda expression", style=dashed];
m49_92 -> m49_113  [color=red, key=1, label="lambda expression", style=dashed];
m49_92 -> m49_92  [color=red, key=1, label=i, style=dashed];
m49_92 -> m49_118  [color=red, key=1, label=indexes, style=dashed];
m49_51 -> m49_52  [color=red, key=0, style=solid];
m49_51 -> m49_53  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m49_51 -> m49_63  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m49_51 -> m49_56  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m49_51 -> m49_15  [key=2, style=dotted];
m49_51 -> m49_57  [key=0, style=solid];
m49_52 -> m49_53  [color=red, key=0, style=solid];
m49_52 -> m49_58  [color=red, key=2, style=dotted];
m49_52 -> m49_54  [color=red, key=1, label=tokens, style=dashed];
m49_53 -> m49_54  [key=0, style=solid];
m49_53 -> m49_36  [key=2, style=dotted];
m49_53 -> m49_59  [key=2, style=dotted];
m49_53 -> m49_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_53 -> m49_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_53 -> m49_75  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m49_53 -> m49_15  [key=2, style=dotted];
m49_53 -> m49_57  [key=0, style=solid];
m49_56 -> m49_57  [key=0, style=solid];
m49_56 -> m49_61  [key=2, style=dotted];
m49_56 -> m49_20  [key=2, style=dotted];
m49_56 -> m49_40  [key=2, style=dotted];
m49_56 -> m49_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_54 -> m49_55  [key=0, style=solid];
m49_54 -> m49_36  [key=2, style=dotted];
m49_54 -> m49_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_54 -> m49_56  [key=0, style=solid];
m49_55 -> m49_56  [key=0, style=solid];
m49_55 -> m49_60  [key=2, style=dotted];
m49_55 -> m49_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_55 -> m49_57  [key=0, style=solid];
m49_55 -> m49_58  [key=2, style=dotted];
m49_57 -> m49_51  [color=blue, key=0, style=bold];
m49_57 -> m49_49  [color=blue, key=0, style=bold];
m49_29 -> m49_36  [color=green, key=1, label="string[]", style=dashed];
m49_29 -> m49_34  [key=0, style=solid];
m49_29 -> m49_38  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m49_29 -> m49_42  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m49_29 -> m49_31  [key=0, style=solid];
m49_29 -> m49_37  [key=2, style=dotted];
m49_29 -> m49_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_36 -> m49_37  [color=green, key=0, style=solid];
m49_36 -> m49_38  [color=green, key=0, style=solid];
m49_34 -> m49_36  [color=green, key=0, style=solid];
m49_34 -> m49_35  [key=0, style=solid];
m49_37 -> m49_39  [color=green, key=0, style=solid];
m49_37 -> m49_15  [color=green, key=2, style=dotted];
m49_38 -> m49_39  [color=red, key=0, style=solid];
m49_38 -> m49_40  [key=2, style=dotted];
m49_38 -> m49_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_38 -> m49_1  [key=0, style=solid];
m49_35 -> m49_39  [key=0, style=solid];
m49_35 -> m49_15  [key=2, style=dotted];
m49_39 -> m49_29  [color=blue, key=0, style=bold];
m49_39 -> m49_40  [color=red, key=0, style=solid];
m49_39 -> m49_41  [color=red, key=2, style=dotted];
m49_9 -> m49_11  [key=0, style=solid];
m49_9 -> m49_10  [key=0, style=solid];
m49_88 -> m49_90  [key=0, style=solid];
m49_88 -> m49_89  [key=0, style=solid];
m49_90 -> m49_91  [key=0, style=solid];
m49_90 -> m49_92  [key=2, style=dotted];
m49_90 -> m49_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_90 -> m49_88  [color=blue, key=0, style=bold];
m49_91 -> m49_88  [color=blue, key=0, style=bold];
m49_91 -> m49_92  [color=red, key=0, style=solid];
m49_91 -> m49_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m49_91 -> m49_101  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_91 -> m49_109  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_91 -> m49_93  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m49_91 -> m49_94  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m49_40 -> m49_85  [key=0, style=solid];
m49_40 -> m49_38  [color=blue, key=0, style=bold];
m49_85 -> m49_86  [key=0, style=solid];
m49_85 -> m49_87  [key=2, style=dotted];
m49_85 -> m49_88  [key=2, style=dotted];
m49_85 -> m49_89  [key=2, style=dotted];
m49_85 -> m49_36  [key=2, style=dotted];
m49_86 -> m49_40  [color=blue, key=0, style=bold];
m49_86 -> m49_84  [color=blue, key=0, style=bold];
m49_81 -> m49_82  [key=0, style=solid];
m49_97 -> m49_98  [key=0, style=solid];
m49_73 -> m49_71  [color=blue, key=0, style=bold];
m49_78 -> m49_79  [key=0, style=solid];
m49_110 -> m49_108  [color=blue, key=0, style=bold];
m49_20 -> m49_21  [key=0, style=solid];
m49_21 -> m49_22  [key=0, style=solid];
m49_21 -> m49_23  [key=2, style=dotted];
m49_22 -> m49_20  [color=blue, key=0, style=bold];
m49_22 -> m49_23  [key=0, style=solid];
m49_22 -> m49_24  [key=2, style=dotted];
m49_98 -> m49_99  [key=0, style=solid];
m49_49 -> m49_56  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m49_49 -> m49_60  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m49_49 -> m49_50  [key=0, style=solid];
m49_49 -> m49_52  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m49_49 -> m49_54  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m49_49 -> m49_19  [key=2, style=dotted];
m49_50 -> m49_51  [key=0, style=solid];
m49_50 -> m49_52  [key=0, style=solid];
m49_50 -> m49_48  [color=blue, key=0, style=bold];
m49_62 -> m49_63  [key=0, style=solid];
m49_62 -> m49_68  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_96 -> m49_91  [color=blue, key=0, style=bold];
m49_48 -> m49_71  [key=0, style=solid];
m49_48 -> m49_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_48 -> m49_79  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_48 -> m49_83  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_48 -> m49_49  [key=0, style=solid];
m49_71 -> m49_72  [key=0, style=solid];
m49_71 -> m49_73  [key=2, style=dotted];
m49_71 -> m49_74  [key=2, style=dotted];
m49_71 -> m49_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_71 -> m49_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_72 -> m49_48  [color=blue, key=0, style=bold];
m49_72 -> m49_73  [key=0, style=solid];
m49_42 -> m49_43  [key=0, style=solid];
m49_42 -> m49_44  [key=2, style=dotted];
m49_42 -> m49_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_45 -> m49_46  [color=red, key=0, style=solid];
m49_43 -> m49_44  [key=0, style=solid];
m49_43 -> m49_41  [key=2, style=dotted];
m49_46 -> m49_47  [color=red, key=0, style=solid];
m49_46 -> m49_41  [color=red, key=2, style=dotted];
m49_46 -> m49_48  [key=2, style=dotted];
m49_47 -> m49_45  [color=blue, key=0, style=bold];
m49_63 -> m49_64  [key=0, style=solid];
m49_63 -> m49_16  [key=2, style=dotted];
m49_63 -> m49_65  [key=2, style=dotted];
m49_63 -> m49_66  [key=2, style=dotted];
m49_63 -> m49_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_75 -> m49_76  [key=0, style=solid];
m49_75 -> m49_77  [key=2, style=dotted];
m49_75 -> m49_78  [key=2, style=dotted];
m49_75 -> m49_79  [key=2, style=dotted];
m49_75 -> m49_80  [key=2, style=dotted];
m49_75 -> m49_66  [key=2, style=dotted];
m49_75 -> m49_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_75 -> m49_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_74 -> m49_75  [key=0, style=solid];
m49_74 -> m49_82  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_74 -> m49_85  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m49_68 -> m49_69  [key=0, style=solid];
m49_68 -> m49_70  [key=2, style=dotted];
m49_68 -> m49_62  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.Error> onError", style=bold];
m49_64 -> m49_62  [color=blue, key=0, style=bold];
m49_64 -> m49_65  [key=0, style=solid];
m49_64 -> m49_48  [key=2, style=dotted];
m49_67 -> m49_68  [key=0, style=solid];
m49_67 -> m49_23  [key=2, style=dotted];
m49_69 -> m49_67  [color=blue, key=0, style=bold];
m49_69 -> m49_66  [color=blue, key=0, style=bold];
m49_82 -> m49_83  [key=0, style=solid];
m49_76 -> m49_74  [color=blue, key=0, style=bold];
m49_76 -> m49_77  [key=0, style=solid];
m49_76 -> m49_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_84 -> m49_85  [key=0, style=solid];
m49_84 -> m49_82  [color=blue, key=0, style=bold];
m49_83 -> m49_81  [color=blue, key=0, style=bold];
m49_83 -> m49_84  [key=0, style=solid];
m49_89 -> m49_90  [key=0, style=solid];
m49_89 -> m49_100  [key=0, style=solid];
m49_89 -> m49_101  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m49_89 -> m49_108  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m49_89 -> m49_102  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m49_100 -> m49_101  [key=0, style=solid];
m49_100 -> m49_103  [key=2, style=dotted];
m49_100 -> m49_104  [key=2, style=dotted];
m49_100 -> m49_102  [key=0, style=solid];
m49_101 -> m49_102  [key=0, style=solid];
m49_101 -> m49_105  [key=2, style=dotted];
m49_101 -> m49_66  [key=2, style=dotted];
m49_101 -> m49_106  [key=2, style=dotted];
m49_101 -> m49_107  [key=2, style=dotted];
m49_101 -> m49_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_109 -> m49_110  [key=0, style=solid];
m49_109 -> m49_111  [key=2, style=dotted];
m49_109 -> m49_112  [key=2, style=dotted];
m49_109 -> m49_107  [color=blue, key=0, style=bold];
m49_99 -> m49_100  [key=0, style=solid];
m49_99 -> m49_101  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m49_99 -> m49_97  [color=blue, key=0, style=bold];
m49_120 -> m49_121  [key=0, style=solid];
m49_120 -> m49_13  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_6  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_11  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_18  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_27  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_38  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_42  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_46  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_56  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_60  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_64  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_67  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_68  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_112  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_115  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_116  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_120 -> m49_117  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m49_102 -> m49_99  [color=blue, key=0, style=bold];
m49_102 -> m49_103  [key=0, style=solid];
m49_108 -> m49_109  [key=0, style=solid];
m49_108 -> m49_110  [key=2, style=dotted];
m49_108 -> m49_111  [key=2, style=dotted];
m49_119 -> m49_117  [color=blue, key=0, style=bold];
m49_121 -> m49_122  [key=0, style=solid];
m49_121 -> m49_116  [key=2, style=dotted];
m49_121 -> m49_42  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m49_122 -> m49_120  [color=blue, key=0, style=bold];
m49_122 -> m49_42  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_62  [key=2, style=dotted];
m49_60 -> m49_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_41 -> m49_42  [key=0, style=solid];
m49_59 -> m49_60  [key=0, style=solid];
m49_61 -> m49_59  [color=blue, key=0, style=bold];
m49_65 -> m49_63  [color=blue, key=0, style=bold];
m49_1 -> m49_4  [key=2, style=dotted];
m49_1 -> m49_3  [key=2, style=dotted];
m49_1 -> m49_40  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_8  [key=2, style=dotted];
m49_1 -> m49_6  [color=darkseagreen4, key=1, label=errors, style=dashed];
m49_79 -> m49_80  [key=0, style=solid];
m49_79 -> m49_81  [key=2, style=dotted];
m49_77 -> m49_75  [color=blue, key=0, style=bold];
m49_80 -> m49_78  [color=blue, key=0, style=bold];
m49_93 -> m49_94  [color=red, key=0, style=solid];
m49_93 -> m49_36  [color=red, key=2, style=dotted];
m49_93 -> m49_17  [color=red, key=2, style=dotted];
m49_93 -> m49_97  [color=red, key=2, style=dotted];
m49_93 -> m49_117  [color=red, key=1, label="lambda expression", style=dashed];
m49_93 -> m49_120  [color=red, key=1, label="lambda expression", style=dashed];
m49_93 -> m49_93  [color=red, key=1, label=t, style=dashed];
m49_107 -> m49_108  [key=0, style=solid];
m49_95 -> m49_93  [color=blue, key=0, style=bold];
m49_95 -> m49_96  [key=0, style=solid];
m49_94 -> m49_95  [key=0, style=solid];
m49_94 -> m49_96  [key=2, style=dotted];
m49_94 -> m49_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_94 -> m49_98  [key=2, style=dotted];
m49_4 -> m49_5  [key=0, style=solid];
m49_4 -> m49_14  [key=2, style=dotted];
m49_4 -> m49_6  [color=darkseagreen4, key=1, label=normalized, style=dashed];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_15  [key=2, style=dotted];
m49_5 -> m49_16  [key=2, style=dotted];
m49_5 -> m49_13  [key=2, style=dotted];
m49_5 -> m49_5  [color=darkseagreen4, key=1, label=t, style=dashed];
m49_5 -> m49_22  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m49_6 -> m49_7  [key=0, style=solid];
m49_6 -> m49_4  [key=2, style=dotted];
m49_6 -> m49_17  [key=2, style=dotted];
m49_6 -> m49_18  [key=2, style=dotted];
m49_6 -> m49_19  [key=2, style=dotted];
m49_6 -> m49_20  [key=2, style=dotted];
m49_6 -> m49_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_6 -> m49_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m49_7 -> m49_5  [color=blue, key=0, style=bold];
m49_7 -> m49_0  [color=blue, key=0, style=bold];
m49_10 -> m49_14  [key=0, style=solid];
m49_10 -> m49_15  [key=2, style=dotted];
m49_66 -> m49_67  [key=0, style=solid];
m49_14 -> m49_8  [color=blue, key=0, style=bold];
m49_12 -> m49_123  [key=0, style=solid];
m49_12 -> m49_126  [color=crimson, key=0, style=bold];
m49_12 -> m49_127  [color=crimson, key=0, style=bold];
m49_12 -> m49_129  [color=crimson, key=0, style=bold];
m49_12 -> m49_130  [color=crimson, key=0, style=bold];
m49_12 -> m49_132  [color=crimson, key=0, style=bold];
m49_12 -> m49_138  [color=crimson, key=0, style=bold];
m49_12 -> m49_140  [color=crimson, key=0, style=bold];
m49_12 -> m49_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_12 -> m49_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_12 -> m49_136  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_12 -> m49_13  [color=green, key=0, style=solid];
m49_12 -> m49_16  [key=2, style=dotted];
m49_123 -> m49_124  [key=0, style=solid];
m49_123 -> m49_141  [key=0, style=solid];
m49_123 -> m49_60  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m49_126 -> m49_127  [key=0, style=solid];
m49_126 -> m49_10  [key=2, style=dotted];
m49_126 -> m49_76  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m49_126 -> m49_79  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m49_126 -> m49_83  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m49_127 -> m49_128  [key=0, style=solid];
m49_127 -> m49_108  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m49_129 -> m49_130  [key=0, style=solid];
m49_129 -> m49_144  [key=2, style=dotted];
m49_130 -> m49_131  [key=0, style=solid];
m49_132 -> m49_133  [key=0, style=solid];
m49_132 -> m49_144  [key=2, style=dotted];
m49_138 -> m49_134  [key=0, style=solid];
m49_138 -> m49_144  [key=2, style=dotted];
m49_140 -> m49_141  [key=0, style=solid];
m49_140 -> m49_149  [key=2, style=dotted];
m49_140 -> m49_142  [key=2, style=dotted];
m49_140 -> m49_10  [key=2, style=dotted];
m49_124 -> m49_125  [key=0, style=solid];
m49_124 -> m49_142  [key=2, style=dotted];
m49_124 -> m49_129  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_124 -> m49_131  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_124 -> m49_134  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_124 -> m49_139  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_124 -> m49_140  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_124 -> m49_60  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m49_128 -> m49_129  [key=0, style=solid];
m49_128 -> m49_131  [key=0, style=solid];
m49_136 -> m49_137  [key=0, style=solid];
m49_136 -> m49_139  [key=0, style=solid];
m49_136 -> m49_147  [key=2, style=dotted];
m49_136 -> m49_16  [key=2, style=dotted];
m49_125 -> m49_126  [key=0, style=solid];
m49_125 -> m49_128  [key=0, style=solid];
m49_125 -> m49_143  [key=2, style=dotted];
m49_125 -> m49_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_125 -> m49_79  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_125 -> m49_83  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_131 -> m49_132  [key=0, style=solid];
m49_131 -> m49_145  [key=2, style=dotted];
m49_131 -> m49_133  [color=darkseagreen4, key=1, label=first, style=dashed];
m49_134 -> m49_135  [key=0, style=solid];
m49_134 -> m49_139  [key=0, style=solid];
m49_134 -> m49_142  [key=2, style=dotted];
m49_134 -> m49_136  [color=darkseagreen4, key=1, label=c, style=dashed];
m49_134 -> m49_137  [color=darkseagreen4, key=1, label=c, style=dashed];
m49_139 -> m49_140  [key=0, style=solid];
m49_139 -> m49_141  [key=0, style=solid];
m49_139 -> m49_149  [key=2, style=dotted];
m49_133 -> m49_134  [key=0, style=solid];
m49_133 -> m49_8  [key=2, style=dotted];
m49_133 -> m49_136  [color=darkseagreen4, key=1, label=seen, style=dashed];
m49_133 -> m49_137  [color=darkseagreen4, key=1, label=seen, style=dashed];
m49_133 -> m49_139  [color=darkseagreen4, key=1, label=seen, style=dashed];
m49_133 -> m49_140  [color=darkseagreen4, key=1, label=seen, style=dashed];
m49_137 -> m49_138  [key=0, style=solid];
m49_137 -> m49_148  [key=2, style=dotted];
m49_135 -> m49_136  [key=0, style=solid];
m49_135 -> m49_146  [key=2, style=dotted];
m49_135 -> m49_138  [color=darkseagreen4, key=1, label=n, style=dashed];
m49_141 -> m49_12  [color=blue, key=0, style=bold];
m49_103 -> m49_89  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [key=0, style=solid];
m49_0 -> m49_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_0 -> m49_4  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_0 -> m49_5  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_2 -> m49_3  [key=0, style=solid];
m49_11 -> m49_150  [key=0, style=solid];
m49_11 -> m49_154  [color=crimson, key=0, style=bold];
m49_11 -> m49_155  [color=crimson, key=0, style=bold];
m49_11 -> m49_158  [color=crimson, key=0, style=bold];
m49_11 -> m49_160  [color=crimson, key=0, style=bold];
m49_11 -> m49_161  [color=crimson, key=0, style=bold];
m49_11 -> m49_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_11 -> m49_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_11 -> m49_12  [key=0, style=solid];
m49_11 -> m49_4  [key=2, style=dotted];
m49_150 -> m49_151  [key=0, style=solid];
m49_150 -> m49_162  [key=0, style=solid];
m49_150 -> m49_9  [key=2, style=dotted];
m49_154 -> m49_155  [key=0, style=solid];
m49_154 -> m49_144  [key=2, style=dotted];
m49_155 -> m49_156  [key=0, style=solid];
m49_158 -> m49_159  [key=0, style=solid];
m49_160 -> m49_161  [key=0, style=solid];
m49_160 -> m49_144  [key=2, style=dotted];
m49_161 -> m49_162  [key=0, style=solid];
m49_161 -> m49_167  [key=2, style=dotted];
m49_151 -> m49_152  [key=0, style=solid];
m49_151 -> m49_142  [key=2, style=dotted];
m49_151 -> m49_154  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_151 -> m49_159  [color=darkseagreen4, key=1, label=text, style=dashed];
m49_157 -> m49_158  [key=0, style=solid];
m49_157 -> m49_164  [key=2, style=dotted];
m49_157 -> m49_165  [key=2, style=dotted];
m49_152 -> m49_153  [key=0, style=solid];
m49_152 -> m49_163  [key=2, style=dotted];
m49_152 -> m49_156  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m49_159 -> m49_160  [key=0, style=solid];
m49_159 -> m49_166  [key=2, style=dotted];
m49_159 -> m49_161  [color=darkseagreen4, key=1, label=parts, style=dashed];
m49_153 -> m49_154  [key=0, style=solid];
m49_153 -> m49_156  [key=0, style=solid];
m49_156 -> m49_157  [key=0, style=solid];
m49_156 -> m49_159  [key=0, style=solid];
m49_162 -> m49_11  [color=blue, key=0, style=bold];
m49_13 -> m49_14  [color=green, key=0, style=solid];
m49_25 -> m49_26  [color=red, key=0, style=solid];
m49_25 -> m49_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_25 -> m49_28  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_25 -> m49_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_26 -> m49_27  [color=red, key=0, style=solid];
m49_26 -> m49_30  [color=red, key=0, style=solid];
m49_26 -> m49_32  [color=red, key=2, style=dotted];
m49_26 -> m49_38  [color=red, key=1, label="lambda expression", style=dashed];
m49_26 -> m49_15  [key=2, style=dotted];
m49_26 -> m49_28  [key=0, style=solid];
m49_27 -> m49_28  [color=red, key=0, style=solid];
m49_27 -> m49_33  [key=2, style=dotted];
m49_27 -> m49_16  [key=2, style=dotted];
m49_27 -> m49_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_27 -> m49_29  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m49_27 -> m49_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_28 -> m49_29  [color=red, key=0, style=solid];
m49_28 -> m49_34  [color=red, key=2, style=dotted];
m49_28 -> m49_35  [color=red, key=2, style=dotted];
m49_28 -> m49_36  [color=red, key=2, style=dotted];
m49_28 -> m49_45  [color=red, key=1, label="lambda expression", style=dashed];
m49_28 -> m49_49  [color=red, key=1, label=values, style=dashed];
m49_28 -> m49_24  [color=blue, key=0, style=bold];
m49_30 -> m49_31  [key=0, style=solid];
m49_30 -> m49_16  [key=2, style=dotted];
m49_31 -> m49_25  [color=blue, key=0, style=bold];
m49_24 -> m49_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m49_24 -> m49_25  [key=0, style=solid];
m49_168 -> m49_22  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m49_169 -> m49_49  [color=darkseagreen4, key=1, label=values, style=dashed];
m49_170 -> m49_63  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m49_171 -> m49_68  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_172 -> m49_75  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m49_173 -> m49_82  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_174 -> m49_85  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m49_175 -> m49_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m49_176 -> m49_101  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_176 -> m49_109  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m49_177 -> m49_118  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m51_29 -> m51_30  [key=0, style=solid];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_6  [key=2, style=dotted];
m51_30 -> m51_7  [key=2, style=dotted];
m51_30 -> m51_33  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_31 -> m51_31  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> nameLookup", style=bold];
m51_33 -> m51_34  [key=0, style=solid];
m51_33 -> m51_15  [key=2, style=dotted];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_11  [key=2, style=dotted];
m51_32 -> m51_6  [key=2, style=dotted];
m51_32 -> m51_7  [key=2, style=dotted];
m51_32 -> m51_35  [key=2, style=dotted];
m51_32 -> m51_12  [key=2, style=dotted];
m51_32 -> m51_13  [key=2, style=dotted];
m51_32 -> m51_36  [key=2, style=dotted];
m51_34 -> m51_29  [color=blue, key=0, style=bold];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_6  [key=2, style=dotted];
m51_1 -> m51_7  [key=2, style=dotted];
m51_1 -> m51_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m51_2 -> m51_3  [key=0, style=solid];
m51_2 -> m51_8  [key=2, style=dotted];
m51_2 -> m51_9  [key=2, style=dotted];
m51_2 -> m51_10  [key=2, style=dotted];
m51_2 -> m51_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m51_4 -> m51_5  [key=0, style=solid];
m51_4 -> m51_15  [key=2, style=dotted];
m51_3 -> m51_4  [key=0, style=solid];
m51_3 -> m51_11  [key=2, style=dotted];
m51_3 -> m51_6  [key=2, style=dotted];
m51_3 -> m51_7  [key=2, style=dotted];
m51_3 -> m51_12  [key=2, style=dotted];
m51_3 -> m51_13  [key=2, style=dotted];
m51_3 -> m51_14  [key=2, style=dotted];
m51_3 -> m51_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_5 -> m51_0  [color=blue, key=0, style=bold];
m51_20 -> m51_21  [key=0, style=solid];
m51_21 -> m51_22  [key=0, style=solid];
m51_21 -> m51_6  [key=2, style=dotted];
m51_21 -> m51_7  [key=2, style=dotted];
m51_21 -> m51_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m51_22 -> m51_23  [key=0, style=solid];
m51_22 -> m51_8  [key=2, style=dotted];
m51_22 -> m51_9  [key=2, style=dotted];
m51_22 -> m51_10  [key=2, style=dotted];
m51_22 -> m51_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_15  [key=2, style=dotted];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_11  [key=2, style=dotted];
m51_23 -> m51_6  [key=2, style=dotted];
m51_23 -> m51_7  [key=2, style=dotted];
m51_23 -> m51_12  [key=2, style=dotted];
m51_23 -> m51_13  [key=2, style=dotted];
m51_23 -> m51_14  [key=2, style=dotted];
m51_23 -> m51_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_25 -> m51_20  [color=blue, key=0, style=bold];
m51_37 -> m51_38  [key=0, style=solid];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_19  [key=2, style=dotted];
m51_16 -> m51_17  [key=0, style=solid];
m51_18 -> m51_16  [color=blue, key=0, style=bold];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_19  [key=2, style=dotted];
m51_26 -> m51_27  [key=0, style=solid];
m51_28 -> m51_26  [color=blue, key=0, style=bold];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_40  [key=2, style=dotted];
m51_39 -> m51_37  [color=blue, key=0, style=bold];
m51_41 -> m51_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m51_42 -> m51_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m54_0 -> m54_1  [color=green, key=0, style=solid];
m54_0 -> m54_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m54_0 -> m54_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_0 -> m54_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_0 -> m54_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_0 -> m54_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_1 -> m54_2  [color=green, key=0, style=solid];
m54_1 -> m54_3  [color=green, key=0, style=solid];
m54_1 -> m54_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_2 -> m54_7  [color=green, key=0, style=solid];
m54_2 -> m54_8  [color=green, key=2, style=dotted];
m54_2 -> m54_0  [color=blue, key=0, style=bold];
m54_3 -> m54_4  [key=0, style=solid];
m54_3 -> m54_5  [key=0, style=solid];
m54_3 -> m54_19  [key=0, style=solid];
m54_3 -> m54_23  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m54_3 -> m54_98  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m54_3 -> m54_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m54_3 -> m54_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m54_3 -> m54_28  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m54_3 -> m54_30  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_3 -> m54_106  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_3 -> m54_31  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_3 -> m54_110  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m54_3 -> m54_32  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m54_3 -> m54_114  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m54_3 -> m54_33  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_3 -> m54_117  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_3 -> m54_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m54_3 -> m54_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m54_5 -> m54_6  [key=0, style=solid];
m54_5 -> m54_9  [key=2, style=dotted];
m54_5 -> m54_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_6 -> m54_7  [key=0, style=solid];
m54_6 -> m54_10  [key=2, style=dotted];
m54_6 -> m54_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_4 -> m54_7  [key=0, style=solid];
m54_4 -> m54_8  [key=2, style=dotted];
m54_4 -> m54_5  [key=0, style=solid];
m54_4 -> m54_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m54_4 -> m54_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m54_4 -> m54_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m54_7 -> m54_0  [color=blue, key=0, style=bold];
m54_7 -> m54_8  [key=0, style=solid];
m54_8 -> m54_4  [color=blue, key=0, style=bold];
m54_9 -> m54_10  [key=0, style=solid];
m54_10 -> m54_0  [key=2, style=dotted];
m54_10 -> m54_11  [key=0, style=solid];
m54_11 -> m54_9  [color=blue, key=0, style=bold];
m54_11 -> m54_12  [key=0, style=solid];
m54_15 -> m54_16  [key=0, style=solid];
m54_18 -> m54_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
m54_18 -> m54_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
m54_12 -> m54_3  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> arguments", style=bold];
m54_12 -> m54_13  [key=0, style=solid];
m54_12 -> m54_14  [key=2, style=dotted];
m54_13 -> m54_5  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo parsingCulture", style=bold];
m54_13 -> m54_6  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.ErrorType> nonFatalErrors", style=bold];
m54_13 -> m54_9  [key=2, style=dotted];
m54_13 -> m54_13  [color=darkseagreen4, key=1, label=type, style=dashed];
m54_13 -> m54_14  [key=0, style=solid];
m54_13 -> m54_15  [key=2, style=dotted];
m54_13 -> m54_16  [key=2, style=dotted];
m54_13 -> m54_17  [key=2, style=dotted];
m54_13 -> m54_11  [color=blue, key=0, style=bold];
m54_14 -> m54_12  [color=blue, key=0, style=bold];
m54_102 -> m54_103  [key=0, style=solid];
m54_16 -> m54_17  [key=0, style=solid];
m54_16 -> m54_18  [key=2, style=dotted];
m54_17 -> m54_15  [color=blue, key=0, style=bold];
m54_98 -> m54_99  [key=0, style=solid];
m54_98 -> m54_100  [key=2, style=dotted];
m54_98 -> m54_69  [key=2, style=dotted];
m54_98 -> m54_47  [key=2, style=dotted];
m54_98 -> m54_71  [key=2, style=dotted];
m54_98 -> m54_101  [key=2, style=dotted];
m54_98 -> m54_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_98 -> m54_98  [color=darkseagreen4, key=1, label=p, style=dashed];
m54_106 -> m54_107  [key=0, style=solid];
m54_106 -> m54_108  [key=2, style=dotted];
m54_110 -> m54_111  [key=0, style=solid];
m54_110 -> m54_112  [key=2, style=dotted];
m54_114 -> m54_115  [key=0, style=solid];
m54_114 -> m54_112  [key=2, style=dotted];
m54_117 -> m54_118  [key=0, style=solid];
m54_117 -> m54_119  [key=2, style=dotted];
m54_86 -> m54_87  [key=0, style=solid];
m54_91 -> m54_92  [key=0, style=solid];
m54_105 -> m54_106  [key=0, style=solid];
m54_109 -> m54_110  [key=0, style=solid];
m54_113 -> m54_114  [key=0, style=solid];
m54_116 -> m54_117  [key=0, style=solid];
m54_120 -> m54_121  [key=0, style=solid];
m54_148 -> m54_149  [key=0, style=solid];
m54_151 -> m54_152  [key=0, style=solid];
m54_123 -> m54_124  [key=0, style=solid];
m54_127 -> m54_128  [key=0, style=solid];
m54_131 -> m54_132  [key=0, style=solid];
m54_135 -> m54_136  [key=0, style=solid];
m54_138 -> m54_139  [key=0, style=solid];
m54_142 -> m54_143  [key=0, style=solid];
m54_87 -> m54_88  [key=0, style=solid];
m54_87 -> m54_89  [key=2, style=dotted];
m54_87 -> m54_90  [key=2, style=dotted];
m54_88 -> m54_86  [color=blue, key=0, style=bold];
m54_92 -> m54_93  [key=0, style=solid];
m54_92 -> m54_94  [key=2, style=dotted];
m54_92 -> m54_95  [key=2, style=dotted];
m54_92 -> m54_96  [key=2, style=dotted];
m54_93 -> m54_91  [color=blue, key=0, style=bold];
m54_97 -> m54_98  [key=0, style=solid];
m54_99 -> m54_97  [color=blue, key=0, style=bold];
m54_103 -> m54_104  [key=0, style=solid];
m54_103 -> m54_89  [key=2, style=dotted];
m54_104 -> m54_102  [color=blue, key=0, style=bold];
m54_107 -> m54_105  [color=blue, key=0, style=bold];
m54_111 -> m54_109  [color=blue, key=0, style=bold];
m54_115 -> m54_113  [color=blue, key=0, style=bold];
m54_118 -> m54_116  [color=blue, key=0, style=bold];
m54_121 -> m54_122  [key=0, style=solid];
m54_121 -> m54_89  [key=2, style=dotted];
m54_122 -> m54_120  [color=blue, key=0, style=bold];
m54_124 -> m54_125  [key=0, style=solid];
m54_124 -> m54_126  [key=2, style=dotted];
m54_125 -> m54_123  [color=blue, key=0, style=bold];
m54_128 -> m54_129  [key=0, style=solid];
m54_128 -> m54_130  [key=2, style=dotted];
m54_129 -> m54_127  [color=blue, key=0, style=bold];
m54_132 -> m54_133  [key=0, style=solid];
m54_132 -> m54_134  [key=2, style=dotted];
m54_132 -> m54_126  [key=2, style=dotted];
m54_133 -> m54_131  [color=blue, key=0, style=bold];
m54_136 -> m54_137  [key=0, style=solid];
m54_136 -> m54_130  [key=2, style=dotted];
m54_137 -> m54_135  [color=blue, key=0, style=bold];
m54_139 -> m54_140  [key=0, style=solid];
m54_139 -> m54_134  [key=2, style=dotted];
m54_139 -> m54_141  [key=2, style=dotted];
m54_140 -> m54_138  [color=blue, key=0, style=bold];
m54_143 -> m54_144  [key=0, style=solid];
m54_143 -> m54_145  [key=2, style=dotted];
m54_143 -> m54_146  [key=2, style=dotted];
m54_143 -> m54_147  [key=2, style=dotted];
m54_144 -> m54_142  [color=blue, key=0, style=bold];
m54_149 -> m54_150  [key=0, style=solid];
m54_150 -> m54_148  [color=blue, key=0, style=bold];
m54_152 -> m54_153  [key=0, style=solid];
m54_153 -> m54_151  [color=blue, key=0, style=bold];
m54_19 -> m54_20  [key=0, style=solid];
m54_19 -> m54_47  [key=2, style=dotted];
m54_19 -> m54_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_19 -> m54_36  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m54_19 -> m54_39  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m54_23 -> m54_24  [key=0, style=solid];
m54_23 -> m54_27  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m54_24 -> m54_25  [key=0, style=solid];
m54_24 -> m54_28  [key=0, style=solid];
m54_24 -> m54_51  [key=2, style=dotted];
m54_25 -> m54_26  [key=0, style=solid];
m54_25 -> m54_52  [key=2, style=dotted];
m54_25 -> m54_53  [key=2, style=dotted];
m54_25 -> m54_27  [color=darkseagreen4, key=1, label=preprocessorErrors, style=dashed];
m54_28 -> m54_29  [key=0, style=solid];
m54_28 -> m54_58  [key=2, style=dotted];
m54_28 -> m54_43  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m54_30 -> m54_31  [key=0, style=solid];
m54_30 -> m54_60  [key=2, style=dotted];
m54_30 -> m54_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_30 -> m54_32  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m54_30 -> m54_33  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m54_31 -> m54_32  [key=0, style=solid];
m54_31 -> m54_61  [key=2, style=dotted];
m54_31 -> m54_62  [key=2, style=dotted];
m54_31 -> m54_31  [color=darkseagreen4, key=1, label=pt, style=dashed];
m54_31 -> m54_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_31 -> m54_34  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m54_31 -> m54_43  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m54_32 -> m54_33  [key=0, style=solid];
m54_32 -> m54_63  [key=2, style=dotted];
m54_32 -> m54_62  [key=2, style=dotted];
m54_32 -> m54_32  [color=darkseagreen4, key=1, label=pt, style=dashed];
m54_32 -> m54_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_32 -> m54_34  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m54_32 -> m54_43  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m54_33 -> m54_34  [key=0, style=solid];
m54_33 -> m54_64  [key=2, style=dotted];
m54_33 -> m54_65  [key=2, style=dotted];
m54_33 -> m54_66  [key=2, style=dotted];
m54_33 -> m54_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m54_33 -> m54_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_33 -> m54_117  [color=darkseagreen4, key=1, label=token, style=dashed];
m54_33 -> m54_43  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m54_37 -> m54_38  [key=0, style=solid];
m54_37 -> m54_69  [key=2, style=dotted];
m54_37 -> m54_47  [key=2, style=dotted];
m54_37 -> m54_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_44 -> m54_45  [key=0, style=solid];
m54_44 -> m54_83  [key=2, style=dotted];
m54_44 -> m54_44  [color=darkseagreen4, key=1, label=e, style=dashed];
m54_20 -> m54_21  [key=0, style=solid];
m54_20 -> m54_48  [key=2, style=dotted];
m54_20 -> m54_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_20 -> m54_23  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_20 -> m54_98  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_20 -> m54_31  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_20 -> m54_32  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_20 -> m54_39  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_36 -> m54_37  [key=0, style=solid];
m54_36 -> m54_39  [key=0, style=solid];
m54_36 -> m54_68  [key=2, style=dotted];
m54_39 -> m54_40  [key=0, style=solid];
m54_39 -> m54_71  [key=2, style=dotted];
m54_39 -> m54_72  [key=2, style=dotted];
m54_39 -> m54_39  [color=darkseagreen4, key=1, label=sp, style=dashed];
m54_39 -> m54_41  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m54_21 -> m54_22  [key=0, style=solid];
m54_21 -> m54_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m54_22 -> m54_23  [key=0, style=solid];
m54_22 -> m54_49  [key=2, style=dotted];
m54_22 -> m54_50  [key=2, style=dotted];
m54_22 -> m54_28  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m54_22 -> m54_30  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m54_22 -> m54_106  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m54_22 -> m54_33  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m54_27 -> m54_46  [key=0, style=solid];
m54_27 -> m54_54  [key=2, style=dotted];
m54_27 -> m54_55  [key=2, style=dotted];
m54_27 -> m54_56  [key=2, style=dotted];
m54_27 -> m54_57  [key=2, style=dotted];
m54_26 -> m54_27  [key=0, style=solid];
m54_26 -> m54_28  [key=0, style=solid];
m54_26 -> m54_51  [key=2, style=dotted];
m54_29 -> m54_30  [key=0, style=solid];
m54_29 -> m54_59  [key=2, style=dotted];
m54_29 -> m54_42  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m54_43 -> m54_44  [key=0, style=solid];
m54_43 -> m54_80  [key=2, style=dotted];
m54_43 -> m54_81  [key=2, style=dotted];
m54_43 -> m54_82  [key=2, style=dotted];
m54_43 -> m54_45  [color=darkseagreen4, key=1, label=allErrors, style=dashed];
m54_42 -> m54_43  [key=0, style=solid];
m54_42 -> m54_78  [key=2, style=dotted];
m54_42 -> m54_79  [key=2, style=dotted];
m54_34 -> m54_35  [key=0, style=solid];
m54_34 -> m54_59  [key=2, style=dotted];
m54_34 -> m54_67  [key=2, style=dotted];
m54_34 -> m54_38  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m54_34 -> m54_40  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m54_34 -> m54_42  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m54_35 -> m54_36  [key=0, style=solid];
m54_38 -> m54_42  [key=0, style=solid];
m54_38 -> m54_70  [key=2, style=dotted];
m54_38 -> m54_38  [color=darkseagreen4, key=1, label=instance, style=dashed];
m54_38 -> m54_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_38 -> m54_45  [color=darkseagreen4, key=1, label=instance, style=dashed];
m54_40 -> m54_41  [key=0, style=solid];
m54_40 -> m54_73  [key=2, style=dotted];
m54_40 -> m54_74  [key=2, style=dotted];
m54_40 -> m54_75  [key=2, style=dotted];
m54_40 -> m54_76  [key=2, style=dotted];
m54_40 -> m54_47  [key=2, style=dotted];
m54_40 -> m54_71  [key=2, style=dotted];
m54_40 -> m54_40  [color=darkseagreen4, key=1, label=prms, style=dashed];
m54_40 -> m54_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_40 -> m54_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_41 -> m54_42  [key=0, style=solid];
m54_41 -> m54_77  [key=2, style=dotted];
m54_41 -> m54_45  [color=darkseagreen4, key=1, label=instance, style=dashed];
m54_45 -> m54_46  [key=0, style=solid];
m54_45 -> m54_84  [key=2, style=dotted];
m54_45 -> m54_85  [key=2, style=dotted];
m54_46 -> m54_3  [color=blue, key=0, style=bold];
m54_154 -> m54_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_154 -> m54_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_154 -> m54_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_154 -> m54_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_155 -> m54_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m54_155 -> m54_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m54_156 -> m54_98  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m54_157 -> m54_98  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m54_158 -> m54_106  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_158 -> m54_117  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m54_159 -> m54_106  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m54_160 -> m54_110  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m54_160 -> m54_114  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m54_161 -> m54_117  [color=darkseagreen4, key=1, label=token, style=dashed];
m55_2 -> m55_3  [color=green, key=0, style=solid];
m55_2 -> m55_4  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m55_2 -> m55_11  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m55_2 -> m55_15  [color=green, key=1, label=object, style=dashed];
m55_2 -> m55_20  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m55_2 -> m55_22  [color=green, key=1, label=object, style=dashed];
m55_2 -> m55_27  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m55_2 -> m55_32  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m55_2 -> m55_33  [color=green, key=1, label=object, style=dashed];
m55_2 -> m55_39  [color=green, key=1, label=object, style=dashed];
m55_2 -> m55_7  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m55_3 -> m55_4  [color=green, key=0, style=solid];
m55_3 -> m55_44  [color=green, key=2, style=dotted];
m55_3 -> m55_45  [color=green, key=2, style=dotted];
m55_3 -> m55_11  [color=green, key=1, label=parts, style=dashed];
m55_3 -> m55_13  [color=green, key=1, label=parts, style=dashed];
m55_3 -> m55_15  [color=green, key=1, label=parts, style=dashed];
m55_3 -> m55_21  [color=green, key=1, label=parts, style=dashed];
m55_3 -> m55_37  [color=green, key=1, label=parts, style=dashed];
m55_4 -> m55_5  [color=green, key=0, style=solid];
m55_4 -> m55_6  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_8  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_9  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_10  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_14  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_15  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_17  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_19  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_22  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_24  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_26  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_27  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_29  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_31  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_33  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_35  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_39  [color=green, key=1, label=option, style=dashed];
m55_4 -> m55_41  [color=green, key=1, label=option, style=dashed];
m55_11 -> m55_12  [color=green, key=0, style=solid];
m55_11 -> m55_13  [color=green, key=0, style=solid];
m55_11 -> m55_47  [color=green, key=2, style=dotted];
m55_13 -> m55_14  [color=green, key=0, style=solid];
m55_13 -> m55_26  [color=green, key=0, style=solid];
m55_15 -> m55_16  [color=green, key=0, style=solid];
m55_15 -> m55_48  [color=green, key=2, style=dotted];
m55_15 -> m55_18  [color=green, key=1, label=valueSetting, style=dashed];
m55_21 -> m55_22  [color=green, key=0, style=solid];
m55_21 -> m55_53  [color=green, key=2, style=dotted];
m55_37 -> m55_39  [color=green, key=0, style=solid];
m55_37 -> m55_38  [color=green, key=0, style=solid];
m55_5 -> m55_5  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
m55_5 -> m55_6  [color=green, key=0, style=solid];
m55_6 -> m55_7  [color=green, key=0, style=solid];
m55_6 -> m55_8  [color=green, key=0, style=solid];
m55_8 -> m55_9  [color=green, key=0, style=solid];
m55_9 -> m55_10  [color=green, key=0, style=solid];
m55_9 -> m55_46  [color=green, key=2, style=dotted];
m55_10 -> m55_11  [color=green, key=0, style=solid];
m55_10 -> m55_37  [color=green, key=0, style=solid];
m55_14 -> m55_15  [color=green, key=0, style=solid];
m55_14 -> m55_19  [color=green, key=0, style=solid];
m55_17 -> m55_18  [color=green, key=0, style=solid];
m55_17 -> m55_49  [color=green, key=2, style=dotted];
m55_19 -> m55_20  [color=green, key=0, style=solid];
m55_19 -> m55_51  [color=green, key=2, style=dotted];
m55_22 -> m55_23  [color=green, key=0, style=solid];
m55_22 -> m55_54  [color=green, key=2, style=dotted];
m55_22 -> m55_25  [color=green, key=1, label=valueSetting, style=dashed];
m55_24 -> m55_25  [color=green, key=0, style=solid];
m55_24 -> m55_49  [color=green, key=2, style=dotted];
m55_26 -> m55_27  [color=green, key=0, style=solid];
m55_26 -> m55_31  [color=green, key=0, style=solid];
m55_27 -> m55_28  [color=green, key=0, style=solid];
m55_27 -> m55_48  [color=green, key=2, style=dotted];
m55_27 -> m55_30  [color=green, key=1, label=valueSetting, style=dashed];
m55_29 -> m55_30  [color=green, key=0, style=solid];
m55_29 -> m55_49  [color=green, key=2, style=dotted];
m55_31 -> m55_32  [color=green, key=0, style=solid];
m55_31 -> m55_51  [color=green, key=2, style=dotted];
m55_33 -> m55_34  [color=green, key=0, style=solid];
m55_33 -> m55_54  [color=green, key=2, style=dotted];
m55_33 -> m55_36  [color=green, key=1, label=valueSetting, style=dashed];
m55_35 -> m55_36  [color=green, key=0, style=solid];
m55_35 -> m55_49  [color=green, key=2, style=dotted];
m55_39 -> m55_40  [color=green, key=0, style=solid];
m55_39 -> m55_56  [color=green, key=2, style=dotted];
m55_39 -> m55_42  [color=green, key=1, label=valueSetting, style=dashed];
m55_41 -> m55_42  [color=green, key=0, style=solid];
m55_41 -> m55_49  [color=green, key=2, style=dotted];
m55_12 -> m55_43  [color=green, key=0, style=solid];
m55_16 -> m55_17  [color=green, key=0, style=solid];
m55_16 -> m55_18  [color=green, key=0, style=solid];
m55_18 -> m55_43  [color=green, key=0, style=solid];
m55_18 -> m55_50  [color=green, key=2, style=dotted];
m55_20 -> m55_21  [color=green, key=0, style=solid];
m55_20 -> m55_52  [color=green, key=2, style=dotted];
m55_20 -> m55_22  [color=green, key=1, label=items, style=dashed];
m55_23 -> m55_24  [color=green, key=0, style=solid];
m55_23 -> m55_25  [color=green, key=0, style=solid];
m55_25 -> m55_43  [color=green, key=0, style=solid];
m55_25 -> m55_50  [color=green, key=2, style=dotted];
m55_28 -> m55_29  [color=green, key=0, style=solid];
m55_28 -> m55_30  [color=green, key=0, style=solid];
m55_30 -> m55_43  [color=green, key=0, style=solid];
m55_30 -> m55_55  [color=green, key=2, style=dotted];
m55_32 -> m55_33  [color=green, key=0, style=solid];
m55_32 -> m55_52  [color=green, key=2, style=dotted];
m55_34 -> m55_35  [color=green, key=0, style=solid];
m55_34 -> m55_36  [color=green, key=0, style=solid];
m55_36 -> m55_43  [color=green, key=0, style=solid];
m55_36 -> m55_55  [color=green, key=2, style=dotted];
m55_40 -> m55_41  [color=green, key=0, style=solid];
m55_40 -> m55_42  [color=green, key=0, style=solid];
m55_42 -> m55_43  [color=green, key=0, style=solid];
m55_42 -> m55_50  [color=green, key=2, style=dotted];
m55_38 -> m55_43  [color=green, key=0, style=solid];
m55_7 -> m55_43  [color=green, key=0, style=solid];
m55_43 -> m55_2  [color=blue, key=0, style=bold];
m55_57 -> m55_17  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m55_57 -> m55_24  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m55_57 -> m55_29  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m55_57 -> m55_35  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m55_57 -> m55_41  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_2  [key=0, style=solid];
m56_2 -> m56_0  [color=blue, key=0, style=bold];
m56_3 -> m56_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.MySimpleType", style=dashed];
m57_81 -> m57_82  [color=red, key=0, style=solid];
m57_82 -> m57_83  [color=red, key=0, style=solid];
m57_82 -> m57_74  [color=red, key=2, style=dotted];
m57_83 -> m57_81  [color=blue, key=0, style=bold];
m57_34 -> m57_35  [key=0, style=solid];
m57_35 -> m57_36  [key=0, style=solid];
m57_35 -> m57_25  [key=2, style=dotted];
m57_35 -> m57_38  [color=darkseagreen4, key=1, label=sword, style=dashed];
m57_36 -> m57_37  [key=0, style=solid];
m57_36 -> m57_26  [key=2, style=dotted];
m57_36 -> m57_40  [color=darkseagreen4, key=1, label=swordWeakReference, style=dashed];
m57_38 -> m57_39  [key=0, style=solid];
m57_38 -> m57_29  [key=2, style=dotted];
m57_37 -> m57_38  [key=0, style=solid];
m57_37 -> m57_27  [key=2, style=dotted];
m57_37 -> m57_28  [key=2, style=dotted];
m57_40 -> m57_41  [key=0, style=solid];
m57_39 -> m57_40  [key=0, style=solid];
m57_39 -> m57_30  [key=2, style=dotted];
m57_41 -> m57_42  [key=0, style=solid];
m57_41 -> m57_32  [key=2, style=dotted];
m57_41 -> m57_43  [key=2, style=dotted];
m57_42 -> m57_34  [color=blue, key=0, style=bold];
m57_75 -> m57_76  [key=0, style=solid];
m57_76 -> m57_77  [key=0, style=solid];
m57_77 -> m57_75  [color=blue, key=0, style=bold];
m57_66 -> m57_67  [color=red, key=0, style=solid];
m57_66 -> m57_68  [color=red, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m57_66 -> m57_69  [color=red, key=1, label="System.Type[]", style=dashed];
m57_67 -> m57_68  [color=red, key=0, style=solid];
m57_67 -> m57_26  [color=red, key=2, style=dotted];
m57_68 -> m57_69  [color=red, key=0, style=solid];
m57_69 -> m57_70  [color=red, key=0, style=solid];
m57_70 -> m57_66  [color=blue, key=0, style=bold];
m57_71 -> m57_72  [key=0, style=solid];
m57_72 -> m57_73  [key=0, style=solid];
m57_72 -> m57_74  [key=2, style=dotted];
m57_73 -> m57_71  [color=blue, key=0, style=bold];
m57_44 -> m57_45  [key=0, style=solid];
m57_44 -> m57_46  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingConfiguration", style=dashed];
m57_44 -> m57_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m57_45 -> m57_46  [key=0, style=solid];
m57_45 -> m57_49  [key=2, style=dotted];
m57_45 -> m57_47  [color=darkseagreen4, key=1, label=bindingMock, style=dashed];
m57_46 -> m57_47  [key=0, style=solid];
m57_46 -> m57_50  [key=2, style=dotted];
m57_46 -> m57_51  [key=2, style=dotted];
m57_46 -> m57_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m57_47 -> m57_48  [key=0, style=solid];
m57_47 -> m57_52  [key=2, style=dotted];
m57_48 -> m57_44  [color=blue, key=0, style=bold];
m57_12 -> m57_13  [key=0, style=solid];
m57_13 -> m57_14  [key=0, style=solid];
m57_13 -> m57_25  [key=2, style=dotted];
m57_13 -> m57_16  [color=darkseagreen4, key=1, label=sword, style=dashed];
m57_14 -> m57_15  [key=0, style=solid];
m57_14 -> m57_26  [key=2, style=dotted];
m57_14 -> m57_22  [color=darkseagreen4, key=1, label=swordWeakReference, style=dashed];
m57_16 -> m57_17  [key=0, style=solid];
m57_16 -> m57_29  [key=2, style=dotted];
m57_15 -> m57_16  [key=0, style=solid];
m57_15 -> m57_27  [key=2, style=dotted];
m57_15 -> m57_28  [key=2, style=dotted];
m57_22 -> m57_23  [key=0, style=solid];
m57_17 -> m57_18  [key=0, style=solid];
m57_18 -> m57_19  [key=0, style=solid];
m57_19 -> m57_20  [key=0, style=solid];
m57_19 -> m57_30  [key=2, style=dotted];
m57_20 -> m57_21  [key=0, style=solid];
m57_20 -> m57_31  [key=2, style=dotted];
m57_21 -> m57_22  [key=0, style=solid];
m57_21 -> m57_30  [key=2, style=dotted];
m57_23 -> m57_24  [key=0, style=solid];
m57_23 -> m57_32  [key=2, style=dotted];
m57_23 -> m57_33  [key=2, style=dotted];
m57_24 -> m57_12  [color=blue, key=0, style=bold];
m57_60 -> m57_61  [key=0, style=solid];
m57_61 -> m57_60  [color=blue, key=0, style=bold];
m57_78 -> m57_79  [color=red, key=0, style=solid];
m57_79 -> m57_80  [color=red, key=0, style=solid];
m57_79 -> m57_74  [color=red, key=2, style=dotted];
m57_80 -> m57_78  [color=blue, key=0, style=bold];
m57_3 -> m57_4  [key=0, style=solid];
m57_4 -> m57_5  [key=0, style=solid];
m57_4 -> m57_8  [key=2, style=dotted];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_9  [key=2, style=dotted];
m57_6 -> m57_7  [key=0, style=solid];
m57_6 -> m57_10  [key=2, style=dotted];
m57_6 -> m57_11  [key=2, style=dotted];
m57_7 -> m57_3  [color=blue, key=0, style=bold];
m57_53 -> m57_54  [key=0, style=solid];
m57_54 -> m57_55  [key=0, style=solid];
m57_55 -> m57_53  [color=blue, key=0, style=bold];
m57_64 -> m57_65  [key=0, style=solid];
m57_65 -> m57_64  [color=blue, key=0, style=bold];
m57_0 -> m57_1  [key=0, style=solid];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_3  [key=2, style=dotted];
m57_2 -> m57_0  [color=blue, key=0, style=bold];
m57_62 -> m57_63  [key=0, style=solid];
m57_63 -> m57_62  [color=blue, key=0, style=bold];
m57_29 -> m57_56  [key=0, style=solid];
m57_56 -> m57_57  [key=0, style=solid];
m57_56 -> m57_58  [key=2, style=dotted];
m57_56 -> m57_59  [key=2, style=dotted];
m57_57 -> m57_29  [color=blue, key=0, style=bold];
m57_84 -> m57_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_37  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_84 -> m57_56  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m57_85 -> m57_67  [color=red, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m57_85 -> m57_68  [color=red, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m57_85 -> m57_69  [color=red, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m57_85 -> m57_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m59_23 -> m59_24  [key=0, style=solid];
m59_24 -> m59_25  [key=0, style=solid];
m59_24 -> m59_26  [key=2, style=dotted];
m59_24 -> m59_27  [key=2, style=dotted];
m59_25 -> m59_23  [color=blue, key=0, style=bold];
m59_14 -> m59_15  [key=0, style=solid];
m59_15 -> m59_16  [key=0, style=solid];
m59_15 -> m59_17  [key=2, style=dotted];
m59_16 -> m59_14  [color=blue, key=0, style=bold];
m59_6 -> m59_7  [key=0, style=solid];
m59_6 -> m59_10  [color=darkseagreen4, key=1, label=object, style=dashed];
m59_7 -> m59_8  [key=0, style=solid];
m59_7 -> m59_9  [color=darkseagreen4, key=1, label=other, style=dashed];
m59_10 -> m59_11  [key=0, style=solid];
m59_10 -> m59_13  [key=2, style=dotted];
m59_8 -> m59_9  [key=0, style=solid];
m59_8 -> m59_10  [key=0, style=solid];
m59_9 -> m59_11  [key=0, style=solid];
m59_9 -> m59_12  [key=2, style=dotted];
m59_11 -> m59_6  [color=blue, key=0, style=bold];
m59_38 -> m59_39  [key=0, style=solid];
m59_39 -> m59_40  [key=0, style=solid];
m59_39 -> m59_0  [key=2, style=dotted];
m59_39 -> m59_41  [key=2, style=dotted];
m59_40 -> m59_38  [color=blue, key=0, style=bold];
m59_12 -> m59_18  [key=0, style=solid];
m59_12 -> m59_20  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_18 -> m59_19  [key=0, style=solid];
m59_18 -> m59_20  [key=0, style=solid];
m59_20 -> m59_21  [key=0, style=solid];
m59_20 -> m59_13  [key=2, style=dotted];
m59_20 -> m59_22  [key=2, style=dotted];
m59_19 -> m59_21  [key=0, style=solid];
m59_21 -> m59_12  [color=blue, key=0, style=bold];
m59_27 -> m59_28  [key=0, style=solid];
m59_27 -> m59_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m59_27 -> m59_32  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>", style=dashed];
m59_27 -> m59_34  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m59_28 -> m59_29  [key=0, style=solid];
m59_28 -> m59_30  [key=0, style=solid];
m59_28 -> m59_36  [key=2, style=dotted];
m59_30 -> m59_31  [key=0, style=solid];
m59_30 -> m59_32  [key=0, style=solid];
m59_32 -> m59_33  [key=0, style=solid];
m59_32 -> m59_34  [key=0, style=solid];
m59_34 -> m59_35  [key=0, style=solid];
m59_34 -> m59_0  [key=2, style=dotted];
m59_29 -> m59_35  [key=0, style=solid];
m59_29 -> m59_37  [key=2, style=dotted];
m59_31 -> m59_35  [key=0, style=solid];
m59_31 -> m59_37  [key=2, style=dotted];
m59_33 -> m59_35  [key=0, style=solid];
m59_33 -> m59_37  [key=2, style=dotted];
m59_35 -> m59_27  [color=blue, key=0, style=bold];
m59_0 -> m59_1  [key=0, style=solid];
m59_0 -> m59_2  [color=darkseagreen4, key=1, label=T, style=dashed];
m59_0 -> m59_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m59_0 -> m59_4  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>", style=dashed];
m59_1 -> m59_2  [key=0, style=solid];
m59_2 -> m59_3  [key=0, style=solid];
m59_3 -> m59_4  [key=0, style=solid];
m59_4 -> m59_5  [key=0, style=solid];
m59_5 -> m59_0  [color=blue, key=0, style=bold];
m59_42 -> m59_1  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_2  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_3  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_4  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_9  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_10  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_15  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m59_42 -> m59_20  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m60_0 -> m60_1  [key=0, style=solid];
m60_1 -> m60_2  [key=0, style=solid];
m60_1 -> m60_3  [key=2, style=dotted];
m60_1 -> m60_4  [key=2, style=dotted];
m60_2 -> m60_0  [color=blue, key=0, style=bold];
m60_5 -> m60_6  [key=0, style=solid];
m60_5 -> m60_7  [color=crimson, key=0, style=bold];
m60_6 -> m60_7  [key=0, style=solid];
m60_6 -> m60_8  [key=0, style=solid];
m60_6 -> m60_3  [key=2, style=dotted];
m60_6 -> m60_9  [key=2, style=dotted];
m60_7 -> m60_6  [key=0, style=solid];
m60_7 -> m60_10  [key=2, style=dotted];
m60_8 -> m60_5  [color=blue, key=0, style=bold];
m60_11 -> m60_12  [key=0, style=solid];
m60_12 -> m60_13  [key=0, style=solid];
m60_12 -> m60_14  [key=2, style=dotted];
m60_12 -> m60_15  [key=2, style=dotted];
m60_13 -> m60_11  [color=blue, key=0, style=bold];
m63_7 -> m63_8  [key=0, style=solid];
m63_8 -> m63_9  [key=0, style=solid];
m63_8 -> m63_16  [key=2, style=dotted];
m63_8 -> m63_17  [key=2, style=dotted];
m63_8 -> m63_14  [color=darkseagreen4, key=1, label=expected, style=dashed];
m63_8 -> m63_35  [color=darkseagreen4, key=1, label=expected, style=dashed];
m63_9 -> m63_10  [key=0, style=solid];
m63_14 -> m63_15  [key=0, style=solid];
m63_14 -> m63_25  [key=2, style=dotted];
m63_14 -> m63_21  [key=2, style=dotted];
m63_14 -> m63_26  [key=2, style=dotted];
m63_14 -> m63_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_10 -> m63_11  [key=0, style=solid];
m63_10 -> m63_18  [key=2, style=dotted];
m63_10 -> m63_19  [key=2, style=dotted];
m63_10 -> m63_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_10 -> m63_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_10 -> m63_12  [color=darkseagreen4, key=1, label=actual, style=dashed];
m63_10 -> m63_13  [color=darkseagreen4, key=1, label=actual, style=dashed];
m63_10 -> m63_14  [color=darkseagreen4, key=1, label=actual, style=dashed];
m63_11 -> m63_12  [key=0, style=solid];
m63_11 -> m63_20  [key=2, style=dotted];
m63_12 -> m63_13  [key=0, style=solid];
m63_12 -> m63_21  [key=2, style=dotted];
m63_12 -> m63_22  [key=2, style=dotted];
m63_13 -> m63_14  [key=0, style=solid];
m63_13 -> m63_23  [key=2, style=dotted];
m63_13 -> m63_21  [key=2, style=dotted];
m63_13 -> m63_24  [key=2, style=dotted];
m63_15 -> m63_7  [color=blue, key=0, style=bold];
m63_37 -> m63_38  [key=0, style=solid];
m63_38 -> m63_39  [key=0, style=solid];
m63_38 -> m63_20  [key=2, style=dotted];
m63_39 -> m63_40  [key=0, style=solid];
m63_39 -> m63_41  [key=2, style=dotted];
m63_39 -> m63_42  [key=2, style=dotted];
m63_39 -> m63_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_40 -> m63_37  [color=blue, key=0, style=bold];
m63_0 -> m63_1  [key=0, style=solid];
m63_1 -> m63_2  [key=0, style=solid];
m63_1 -> m63_4  [key=2, style=dotted];
m63_2 -> m63_3  [key=0, style=solid];
m63_2 -> m63_5  [key=2, style=dotted];
m63_2 -> m63_6  [key=2, style=dotted];
m63_3 -> m63_0  [color=blue, key=0, style=bold];
m63_46 -> m63_47  [key=0, style=solid];
m63_35 -> m63_36  [key=0, style=solid];
m63_35 -> m63_17  [key=2, style=dotted];
m63_27 -> m63_28  [key=0, style=solid];
m63_31 -> m63_32  [key=0, style=solid];
m63_34 -> m63_35  [key=0, style=solid];
m63_28 -> m63_29  [key=0, style=solid];
m63_28 -> m63_19  [key=2, style=dotted];
m63_28 -> m63_30  [key=2, style=dotted];
m63_29 -> m63_27  [color=blue, key=0, style=bold];
m63_32 -> m63_33  [key=0, style=solid];
m63_33 -> m63_31  [color=blue, key=0, style=bold];
m63_36 -> m63_34  [color=blue, key=0, style=bold];
m63_43 -> m63_44  [key=0, style=solid];
m63_44 -> m63_45  [key=0, style=solid];
m63_44 -> m63_19  [key=2, style=dotted];
m63_44 -> m63_30  [key=2, style=dotted];
m63_44 -> m63_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_45 -> m63_43  [color=blue, key=0, style=bold];
m63_47 -> m63_48  [key=0, style=solid];
m63_47 -> m63_49  [key=2, style=dotted];
m63_48 -> m63_46  [color=blue, key=0, style=bold];
m63_50 -> m63_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", style=dashed];
m63_50 -> m63_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", style=dashed];
m63_51 -> m63_8  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m63_51 -> m63_10  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m63_51 -> m63_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m63_51 -> m63_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m63_51 -> m63_39  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m63_52 -> m63_35  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_0 -> m64_1  [key=0, style=solid];
m64_1 -> m64_2  [key=0, style=solid];
m64_1 -> m64_3  [key=2, style=dotted];
m64_2 -> m64_0  [color=blue, key=0, style=bold];
m64_4 -> m64_5  [key=0, style=solid];
m64_4 -> m64_6  [color=red, key=1, label=object, style=dashed];
m64_5 -> m64_6  [color=red, key=0, style=solid];
m64_6 -> m64_7  [color=red, key=0, style=solid];
m64_6 -> m64_8  [color=red, key=2, style=dotted];
m64_6 -> m64_9  [color=red, key=2, style=dotted];
m64_7 -> m64_4  [color=blue, key=0, style=bold];
}
