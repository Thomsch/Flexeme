digraph  {
d1 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="window = new UIWindow(UIScreen.MainScreen.Bounds)", prediction=0, span="31-31"];
d17 [label="Ninject.iOS.Tests.AppDelegate", span=""];
d0 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", label="Entry Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", span="28-28"];
d2 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="runner = new TouchRunner(window)", prediction=1, span="32-32"];
d9 [cluster="UIWindow.cstr", label="Entry UIWindow.cstr", span=""];
d3 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="runner.AddExecutionAssembly(typeof(ExtensibilityPointFactory).Assembly)", prediction=2, span="35-35"];
d10 [cluster="TouchRunner.cstr", label="Entry TouchRunner.cstr", span=""];
d4 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="runner.Add(Assembly.GetExecutingAssembly())", prediction=2, span="38-38"];
d11 [cluster="Unk.AddExecutionAssembly", label="Entry Unk.AddExecutionAssembly", span=""];
d5 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="window.RootViewController = new UINavigationController(runner.GetViewController())", prediction=4, span="51-51"];
d12 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
d13 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d6 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="window.MakeKeyAndVisible()", prediction=2, span="54-54"];
d14 [cluster="UINavigationController.cstr", label="Entry UINavigationController.cstr", span=""];
d15 [cluster="Unk.GetViewController", label="Entry Unk.GetViewController", span=""];
d7 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", color=green, community=0, label="return true;", prediction=6, span="56-56"];
d16 [cluster="Unk.MakeKeyAndVisible", label="Entry Unk.MakeKeyAndVisible", span=""];
d8 [cluster="Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", label="Exit Ninject.iOS.Tests.AppDelegate.FinishedLaunching(UIApplication, NSDictionary)", span="28-28"];
m1_31 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
m1_33 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", span="108-108"];
m1_34 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="var dynamicMethod = new DynamicMethod(GetAnonymousMethodName(), typeof(void), new[] { typeof(object), typeof(object[]) }, true)", span="116-116"];
m1_37 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitUnboxOrCast(il, method.DeclaringType)", span="122-122"];
m1_38 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitLoadMethodArguments(il, method)", span="124-124"];
m1_39 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitMethodCall(il, method)", span="125-125"];
m1_40 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="method.ReturnType != typeof(void)", span="127-127"];
m1_35 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="ILGenerator il = dynamicMethod.GetILGenerator()", span="119-119"];
m1_43 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="return (MethodInjector) dynamicMethod.CreateDelegate(typeof(MethodInjector));", span="132-132"];
m1_36 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ldarg_0)", span="121-121"];
m1_41 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Pop)", span="128-128"];
m1_42 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ret)", span="130-130"];
m1_44 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", span="108-108"];
m1_66 [cluster="System.Guid.NewGuid()", file="DynamicMethodInjectorFactory.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m1_67 [cluster="System.Guid.ToString(string)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Guid.ToString(string)", span="0-0"];
m1_12 [cluster="System.Reflection.Emit.DynamicMethod.GetILGenerator()", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.DynamicMethod.GetILGenerator()", span="0-0"];
m1_13 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", span="137-137"];
m1_45 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="ParameterInfo[] parameters = targetMethod.GetParameters()", span="139-139"];
m1_46 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="OpCode ldargOpcode = targetMethod is ConstructorInfo ? OpCodes.Ldarg_0 : OpCodes.Ldarg_1", span="140-140"];
m1_49 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(ldargOpcode)", span="144-144"];
m1_50 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ldc_I4, idx)", span="145-145"];
m1_51 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ldelem_Ref)", span="146-146"];
m1_52 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="EmitUnboxOrCast(il, parameters[idx].ParameterType)", span="148-148"];
m1_48 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="idx < parameters.Length", span="142-142"];
m1_47 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="int idx = 0", span="142-142"];
m1_53 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="idx++", span="142-142"];
m1_54 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.EmitLoadMethodArguments(System.Reflection.Emit.ILGenerator, System.Reflection.MethodBase)", span="137-137"];
m1_18 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", span="65-65"];
m1_19 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="var dynamicMethod = new DynamicMethod(GetAnonymousMethodName(), typeof(void), new[] { typeof(object), typeof(object) }, true)", span="73-73"];
m1_22 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitUnboxOrCast(il, property.DeclaringType)", span="79-79"];
m1_24 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitUnboxOrCast(il, property.PropertyType)", span="82-82"];
m1_26 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitMethodCall(il, \r\n#if !WINRT\r\n                property.GetSetMethod(injectNonPublic)\r\n#else\r\n                property.SetMethod\r\n#endif\r\n                )", span="90-96"];
m1_20 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="ILGenerator il = dynamicMethod.GetILGenerator()", span="76-76"];
m1_28 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="return (PropertyInjector) dynamicMethod.CreateDelegate(typeof(PropertyInjector));", span="99-99"];
m1_21 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ldarg_0)", span="78-78"];
m1_23 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ldarg_1)", span="81-81"];
m1_27 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ret)", span="97-97"];
m1_25 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="bool injectNonPublic = Settings.InjectNonPublic", span="85-85"];
m1_29 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", span="65-65"];
m1_0 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="31-31"];
m1_1 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="var dynamicMethod = new DynamicMethod(GetAnonymousMethodName(), typeof(object), new[] { typeof(object[]) }, true)", span="39-39"];
m1_3 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="EmitLoadMethodArguments(il, constructor)", span="44-44"];
m1_4 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Newobj, constructor)", span="45-45"];
m1_5 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="constructor.ReflectedType.IsValueType", span="48-48"];
m1_6 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Box, constructor.ReflectedType)", span="49-49"];
m1_2 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="ILGenerator il = dynamicMethod.GetILGenerator()", span="42-42"];
m1_8 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="return (ConstructorInjector) dynamicMethod.CreateDelegate(typeof(ConstructorInjector));", span="56-56"];
m1_7 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(OpCodes.Ret)", span="54-54"];
m1_9 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="31-31"];
m1_15 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", span="0-0"];
m1_56 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, int)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, int)", span="0-0"];
m1_10 [cluster="System.Reflection.Emit.DynamicMethod.DynamicMethod(string, System.Type, System.Type[], bool)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.DynamicMethod.DynamicMethod(string, System.Type, System.Type[], bool)", span="0-0"];
m1_17 [cluster="System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)", span="0-0"];
m1_11 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.GetAnonymousMethodName()", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.GetAnonymousMethodName()", span="168-168"];
m1_64 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.GetAnonymousMethodName()", file="DynamicMethodInjectorFactory.cs", label="return ''DynamicInjector'' + Guid.NewGuid().ToString(''N'');", span="170-170"];
m1_65 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.GetAnonymousMethodName()", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.GetAnonymousMethodName()", span="168-168"];
m1_32 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", span="152-152"];
m1_57 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="OpCode opCode = method.IsFinal ? OpCodes.Call : OpCodes.Callvirt", span="154-154"];
m1_58 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(opCode, method)", span="155-155"];
m1_59 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.EmitMethodCall(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", span="152-152"];
m1_16 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", span="0-0"];
m1_60 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", span="0-0"];
m1_55 [cluster="System.Reflection.MethodBase.GetParameters()", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_30 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", file="DynamicMethodInjectorFactory.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", span="158-158"];
m1_61 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", file="DynamicMethodInjectorFactory.cs", label="OpCode opCode = type\r\n#if WINRT\r\n                .GetTypeInfo()\r\n#endif\r\n                .IsValueType ? OpCodes.Unbox_Any : OpCodes.Castclass", span="160-164"];
m1_62 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", file="DynamicMethodInjectorFactory.cs", label="il.Emit(opCode, type)", span="165-165"];
m1_63 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", file="DynamicMethodInjectorFactory.cs", label="Exit Ninject.Injection.DynamicMethodInjectorFactory.EmitUnboxOrCast(System.Reflection.Emit.ILGenerator, System.Type)", span="158-158"];
m1_14 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactory.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.ConstructorInfo)", span="0-0"];
m1_68 [file="DynamicMethodInjectorFactory.cs", label="Ninject.Injection.DynamicMethodInjectorFactory", span=""];
m2_0 [cluster="Ninject.iOS.Tests.Application.Main(string[])", file="Main.cs", label="Entry Ninject.iOS.Tests.Application.Main(string[])", span="12-12"];
m2_1 [cluster="Ninject.iOS.Tests.Application.Main(string[])", color=green, community=0, file="Main.cs", label="UIApplication.Main(args, null, ''AppDelegate'')", prediction=7, span="16-16"];
m2_2 [cluster="Ninject.iOS.Tests.Application.Main(string[])", file="Main.cs", label="Exit Ninject.iOS.Tests.Application.Main(string[])", span="12-12"];
m2_3 [cluster="Unk.Main", file="Main.cs", label="Entry Unk.Main", span=""];
d17 -> d3  [color=green, key=1, label="Ninject.iOS.Tests.AppDelegate", style=dashed];
d17 -> d4  [color=green, key=1, label="Ninject.iOS.Tests.AppDelegate", style=dashed];
d17 -> d6  [color=green, key=1, label="Ninject.iOS.Tests.AppDelegate", style=dashed];
m1_33 -> m1_37  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m1_33 -> m1_38  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m1_33 -> m1_39  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m1_33 -> m1_40  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m1_34 -> m1_43  [color=darkseagreen4, key=1, label=dynamicMethod, style=dashed];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_35 -> m1_39  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_35 -> m1_41  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_35 -> m1_42  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_13 -> m1_49  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m1_13 -> m1_50  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m1_13 -> m1_51  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m1_13 -> m1_52  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m1_45 -> m1_48  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_45 -> m1_52  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_46 -> m1_49  [color=darkseagreen4, key=1, label=ldargOpcode, style=dashed];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label=idx, style=dashed];
m1_47 -> m1_52  [color=darkseagreen4, key=1, label=idx, style=dashed];
m1_47 -> m1_53  [color=darkseagreen4, key=1, label=idx, style=dashed];
m1_53 -> m1_53  [color=darkseagreen4, key=1, label=idx, style=dashed];
m1_18 -> m1_22  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m1_18 -> m1_24  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m1_18 -> m1_26  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m1_19 -> m1_28  [color=darkseagreen4, key=1, label=dynamicMethod, style=dashed];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_20 -> m1_24  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_20 -> m1_26  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_20 -> m1_27  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m1_1 -> m1_8  [color=darkseagreen4, key=1, label=dynamicMethod, style=dashed];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_2 -> m1_6  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_2 -> m1_7  [color=darkseagreen4, key=1, label=il, style=dashed];
m1_32 -> m1_58  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m1_30 -> m1_62  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
}
