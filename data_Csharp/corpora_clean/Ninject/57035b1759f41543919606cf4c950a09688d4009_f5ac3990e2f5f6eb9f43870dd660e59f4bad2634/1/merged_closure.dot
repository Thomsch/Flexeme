digraph  {
m0_8 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="AssemblyStreamContentProvider.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="54-54"];
m0_3 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", file="AssemblyStreamContentProvider.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", span="18-18"];
m0_4 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", color=green, community=0, file="AssemblyStreamContentProvider.cs", label="var settings = new NinjectSettings { CachePruningInterval = TimeSpan.MaxValue }", prediction=0, span="20-20"];
m0_5 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", color=green, community=0, file="AssemblyStreamContentProvider.cs", label="this.kernel = new StandardKernel(settings)", prediction=1, span="21-21"];
m0_6 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", file="AssemblyStreamContentProvider.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.SetUp()", span="18-18"];
m0_7 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="AssemblyStreamContentProvider.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="19-19"];
m0_0 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="AssemblyStreamContentProvider.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="13-13"];
m0_1 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", color=green, community=0, file="AssemblyStreamContentProvider.cs", label="this.SetUp()", prediction=2, span="15-15"];
m0_2 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="AssemblyStreamContentProvider.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="13-13"];
m0_75 [file="AssemblyStreamContentProvider.cs", label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext", span=""];
m2_4 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="IDictionaryExtensions.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m2_0 [cluster="Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", file="IDictionaryExtensions.cs", label="Entry Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", span="11-11"];
m2_1 [cluster="Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", color=green, community=0, file="IDictionaryExtensions.cs", label="dictionary.Keys", prediction=3, span="13-13"];
m2_2 [cluster="Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", color=green, community=0, file="IDictionaryExtensions.cs", label="iterator(key, dictionary[key])", prediction=4, span="15-15"];
m2_3 [cluster="Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", file="IDictionaryExtensions.cs", label="Exit Ninject.Dynamic.Extensions.IDictionaryExtensions.ForEach(System.Collections.IDictionary, System.Action<object, object>)", span="11-11"];
m4_136 [cluster="int.Parse(string, System.IFormatProvider)", file="Inflector.cs", label="Entry int.Parse(string, System.IFormatProvider)", span="0-0"];
m4_58 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", span="88-88"];
m4_60 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", color=green, community=0, file="Inflector.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", prediction=5, span="90-90"];
m4_61 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", color=green, community=0, file="Inflector.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", prediction=6, span="91-91"];
m4_62 [cluster="Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddIrregular(string, string)", span="88-88"];
m4_113 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", span="177-177"];
m4_120 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", color=green, community=0, file="Inflector.cs", label="return word.Substring(0, 1).ToLowerInvariant() + word.Substring(1);", prediction=7, span="179-179"];
m4_121 [cluster="Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Uncapitalize(string)", span="177-177"];
m4_93 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Underscore(string)", span="160-160"];
m4_114 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", color=green, community=1, file="Inflector.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''), @''[-\s]'', ''_'').ToLowerInvariant();", prediction=8, span="162-165"];
m4_115 [cluster="Ninject.Dynamic.Extensions.Inflector.Underscore(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Underscore(string)", span="160-160"];
m4_150 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="Inflector.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m4_59 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", span="94-94"];
m4_64 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", color=green, community=0, file="Inflector.cs", label="_uncountables.Add(word.ToUpperInvariant())", prediction=9, span="96-96"];
m4_65 [cluster="Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddUncountable(string)", span="94-94"];
m4_140 [cluster="string.Replace(char, char)", file="Inflector.cs", label="Entry string.Replace(char, char)", span="0-0"];
m4_89 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", span="223-223"];
m4_145 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", color=green, community=0, file="Inflector.cs", label="!_regex.IsMatch(word)", prediction=10, span="225-225"];
m4_146 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", color=green, community=0, file="Inflector.cs", label="return null;", prediction=11, span="227-227"];
m4_147 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", color=green, community=0, file="Inflector.cs", label="return _regex.Replace(word, _replacement);", prediction=10, span="230-230"];
m4_148 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Rule.Apply(string)", span="223-223"];
m4_102 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="Inflector.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m4_66 [cluster="string.ToUpperInvariant()", file="Inflector.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m4_88 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Inflector.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m4_137 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", span="205-205"];
m4_138 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", color=green, community=0, file="Inflector.cs", label="return underscoredWord.Replace('_', '-');", prediction=13, span="207-207"];
m4_139 [cluster="Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Dasherize(string)", span="205-205"];
m4_103 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", span="170-170"];
m4_117 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", color=green, community=0, file="Inflector.cs", label="return word.Substring(0, 1).ToUpperInvariant() + word.Substring(1).ToLowerInvariant();", prediction=14, span="172-172"];
m4_118 [cluster="Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Capitalize(string)", span="170-170"];
m4_119 [cluster="string.Substring(int, int)", file="Inflector.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_94 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Humanize(string)", span="143-143"];
m4_100 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", color=green, community=0, file="Inflector.cs", label="return Capitalize(Regex.Replace(lowercaseAndUnderscoredWord, @''_'', '' ''));", prediction=15, span="145-145"];
m4_101 [cluster="Ninject.Dynamic.Extensions.Inflector.Humanize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Humanize(string)", span="143-143"];
m4_73 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", span="109-109"];
m4_74 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", color=green, community=0, file="Inflector.cs", label="return ApplyRules(_plurals, word);", prediction=16, span="111-111"];
m4_75 [cluster="Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Pluralize(string)", span="109-109"];
m4_57 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", span="104-104"];
m4_71 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", color=green, community=0, file="Inflector.cs", label="_singulars.Add(new Rule(rule, replacement))", prediction=17, span="106-106"];
m4_72 [cluster="Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddSingular(string, string)", span="104-104"];
m4_99 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="Inflector.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m4_95 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="Inflector.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m4_76 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", span="119-119"];
m4_80 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="var result = word", prediction=18, span="121-121"];
m4_81 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="!_uncountables.Contains(word.ToUpperInvariant())", prediction=19, span="123-123"];
m4_86 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="return result;", prediction=18, span="134-134"];
m4_82 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="var i = rules.Count - 1", prediction=21, span="125-125"];
m4_83 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="i >= 0", prediction=22, span="125-125"];
m4_84 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="(result = rules[i].Apply(word)) != null", prediction=23, span="127-127"];
m4_85 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", color=green, community=0, file="Inflector.cs", label="i--", prediction=21, span="125-125"];
m4_87 [cluster="Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.ApplyRules(System.Collections.Generic.IList<Ninject.Dynamic.Extensions.Inflector.Rule>, string)", span="119-119"];
m4_70 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", span="217-217"];
m4_141 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", color=green, community=0, file="Inflector.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", prediction=25, span="219-219"];
m4_142 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", color=green, community=0, file="Inflector.cs", label="_replacement = replacement", prediction=26, span="220-220"];
m4_143 [cluster="Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Rule.Rule(string, string)", span="217-217"];
m4_107 [cluster="lambda expression", file="Inflector.cs", label="Entry lambda expression", span="150-150"];
m4_96 [cluster="lambda expression", file="Inflector.cs", label="Entry lambda expression", span="140-140"];
m4_97 [cluster="lambda expression", color=green, community=0, file="Inflector.cs", label="return match.Captures[0].Value.ToUpper(CultureInfo.InvariantCulture);", prediction=27, span="140-140"];
m4_98 [cluster="lambda expression", file="Inflector.cs", label="Exit lambda expression", span="140-140"];
m4_108 [cluster="lambda expression", color=green, community=0, file="Inflector.cs", label="match.Groups[1].Value.ToUpper(CultureInfo.InvariantCulture)", prediction=28, span="150-150"];
m4_109 [cluster="lambda expression", file="Inflector.cs", label="Exit lambda expression", span="150-150"];
m4_116 [cluster="string.ToLowerInvariant()", file="Inflector.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m4_0 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Inflector()", span="18-18"];
m4_1 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''$'', ''s'')", prediction=29, span="20-20"];
m4_2 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''s$'', ''s'')", prediction=30, span="21-21"];
m4_3 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(ax|test)is$'', ''$1es'')", prediction=31, span="22-22"];
m4_4 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(octop|vir)us$'', ''$1i'')", prediction=32, span="23-23"];
m4_5 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(alias|status)$'', ''$1es'')", prediction=33, span="24-24"];
m4_6 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(bu)s$'', ''$1ses'')", prediction=34, span="25-25"];
m4_7 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(buffal|tomat)o$'', ''$1oes'')", prediction=35, span="26-26"];
m4_8 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''([ti])um$'', ''$1a'')", prediction=36, span="27-27"];
m4_9 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''sis$'', ''ses'')", prediction=37, span="28-28"];
m4_10 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", prediction=38, span="29-29"];
m4_11 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(hive)$'', ''$1s'')", prediction=39, span="30-30"];
m4_12 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", prediction=40, span="31-31"];
m4_13 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", prediction=41, span="32-32"];
m4_14 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", prediction=42, span="33-33"];
m4_15 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''([m|l])ouse$'', ''$1ice'')", prediction=43, span="34-34"];
m4_16 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''^(ox)$'', ''$1en'')", prediction=44, span="35-35"];
m4_17 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddPlural(''(quiz)$'', ''$1zes'')", prediction=45, span="36-36"];
m4_18 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''s$'', '''')", prediction=46, span="38-38"];
m4_19 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(n)ews$'', ''$1ews'')", prediction=47, span="39-39"];
m4_20 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''([ti])a$'', ''$1um'')", prediction=48, span="40-40"];
m4_21 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", prediction=49, span="41-41"];
m4_22 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(^analy)ses$'', ''$1sis'')", prediction=50, span="42-42"];
m4_23 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''([^f])ves$'', ''$1fe'')", prediction=51, span="43-43"];
m4_24 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(hive)s$'', ''$1'')", prediction=52, span="44-44"];
m4_25 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(tive)s$'', ''$1'')", prediction=53, span="45-45"];
m4_26 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''([lr])ves$'', ''$1f'')", prediction=54, span="46-46"];
m4_27 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", prediction=55, span="47-47"];
m4_28 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(s)eries$'', ''$1eries'')", prediction=56, span="48-48"];
m4_29 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(m)ovies$'', ''$1ovie'')", prediction=57, span="49-49"];
m4_30 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", prediction=58, span="50-50"];
m4_31 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''([m|l])ice$'', ''$1ouse'')", prediction=59, span="51-51"];
m4_32 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(bus)es$'', ''$1'')", prediction=60, span="52-52"];
m4_33 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(o)es$'', ''$1'')", prediction=61, span="53-53"];
m4_34 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(shoe)s$'', ''$1'')", prediction=62, span="54-54"];
m4_35 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", prediction=63, span="55-55"];
m4_36 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(octop|vir)i$'', ''$1us'')", prediction=64, span="56-56"];
m4_37 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(alias|status)es$'', ''$1'')", prediction=65, span="57-57"];
m4_38 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''^(ox)en'', ''$1'')", prediction=66, span="58-58"];
m4_39 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", prediction=67, span="59-59"];
m4_40 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(matr)ices$'', ''$1ix'')", prediction=68, span="60-60"];
m4_41 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", prediction=69, span="61-61"];
m4_42 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddIrregular(''person'', ''people'')", prediction=70, span="63-63"];
m4_43 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddIrregular(''man'', ''men'')", prediction=71, span="64-64"];
m4_44 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddIrregular(''child'', ''children'')", prediction=72, span="65-65"];
m4_45 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddIrregular(''sex'', ''sexes'')", prediction=73, span="66-66"];
m4_46 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddIrregular(''move'', ''moves'')", prediction=74, span="67-67"];
m4_47 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''equipment'')", prediction=75, span="69-69"];
m4_48 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''information'')", prediction=76, span="70-70"];
m4_49 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''rice'')", prediction=77, span="71-71"];
m4_50 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''money'')", prediction=78, span="72-72"];
m4_51 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''species'')", prediction=79, span="73-73"];
m4_52 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''series'')", prediction=80, span="74-74"];
m4_53 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''fish'')", prediction=81, span="75-75"];
m4_54 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", color=green, community=0, file="Inflector.cs", label="AddUncountable(''sheep'')", prediction=82, span="76-76"];
m4_55 [cluster="Ninject.Dynamic.Extensions.Inflector.Inflector()", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Inflector()", span="18-18"];
m4_144 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="Inflector.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m4_149 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="Inflector.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m4_56 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", span="99-99"];
m4_68 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", color=green, community=0, file="Inflector.cs", label="_plurals.Add(new Rule(rule, replacement))", prediction=83, span="101-101"];
m4_69 [cluster="Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.AddPlural(string, string)", span="99-99"];
m4_67 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Inflector.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_90 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Titleize(string)", span="137-137"];
m4_91 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", color=green, community=1, file="Inflector.cs", label="return Regex.Replace(Humanize(Underscore(word)), @''\b([a-z])'',\r\n                                 delegate(Match match) { return match.Captures[0].Value.ToUpper(CultureInfo.InvariantCulture); });", prediction=84, span="139-140"];
m4_92 [cluster="Ninject.Dynamic.Extensions.Inflector.Titleize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Titleize(string)", span="137-137"];
m4_110 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Camelize(string)", span="153-153"];
m4_111 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", color=green, community=0, file="Inflector.cs", label="return Uncapitalize(Pascalize(lowercaseAndUnderscoredWord));", prediction=85, span="155-155"];
m4_112 [cluster="Ninject.Dynamic.Extensions.Inflector.Camelize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Camelize(string)", span="153-153"];
m4_122 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", span="182-182"];
m4_123 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="var n = int.Parse(number, CultureInfo.InvariantCulture)", prediction=86, span="184-184"];
m4_124 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="var nMod100 = n%100", prediction=87, span="185-185"];
m4_127 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="n%10", prediction=86, span="192-192"];
m4_126 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="return number + ''th'';", prediction=89, span="189-189"];
m4_125 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="nMod100 >= 11 && nMod100 <= 13", prediction=90, span="187-187"];
m4_129 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="return number + ''st'';", prediction=89, span="195-195"];
m4_128 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label=1, prediction=92, span="194-194"];
m4_131 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="return number + ''nd'';", prediction=89, span="197-197"];
m4_130 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label=2, prediction=94, span="196-196"];
m4_133 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="return number + ''rd'';", prediction=89, span="199-199"];
m4_132 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label=3, prediction=96, span="198-198"];
m4_134 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", color=green, community=0, file="Inflector.cs", label="return number + ''th'';", prediction=89, span="201-201"];
m4_135 [cluster="Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Ordinalize(string)", span="182-182"];
m4_77 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Singularize(string)", span="114-114"];
m4_78 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", color=green, community=0, file="Inflector.cs", label="return ApplyRules(_singulars, word);", prediction=98, span="116-116"];
m4_79 [cluster="Ninject.Dynamic.Extensions.Inflector.Singularize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Singularize(string)", span="114-114"];
m4_104 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", file="Inflector.cs", label="Entry Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", span="148-148"];
m4_105 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", color=green, community=0, file="Inflector.cs", label="return Regex.Replace(lowercaseAndUnderscoredWord, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper(CultureInfo.InvariantCulture));", prediction=99, span="150-150"];
m4_106 [cluster="Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", file="Inflector.cs", label="Exit Ninject.Dynamic.Extensions.Inflector.Pascalize(string)", span="148-148"];
m4_63 [cluster="string.Substring(int)", file="Inflector.cs", label="Entry string.Substring(int)", span="0-0"];
m4_151 [file="Inflector.cs", label="Ninject.Dynamic.Extensions.Inflector.Rule", span=""];
m7_3 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNull(object)", file="ObjectExtensions.cs", label="Entry Ninject.Dynamic.Extensions.ObjectExtensions.IsNull(object)", span="26-26"];
m7_4 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNull(object)", color=green, community=0, file="ObjectExtensions.cs", label="return value == null;", prediction=100, span="28-28"];
m7_5 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNull(object)", file="ObjectExtensions.cs", label="Exit Ninject.Dynamic.Extensions.ObjectExtensions.IsNull(object)", span="26-26"];
m7_0 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNotNull(object)", file="ObjectExtensions.cs", label="Entry Ninject.Dynamic.Extensions.ObjectExtensions.IsNotNull(object)", span="14-14"];
m7_1 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNotNull(object)", color=green, community=0, file="ObjectExtensions.cs", label="return value != null;", prediction=101, span="16-16"];
m7_2 [cluster="Ninject.Dynamic.Extensions.ObjectExtensions.IsNotNull(object)", file="ObjectExtensions.cs", label="Exit Ninject.Dynamic.Extensions.ObjectExtensions.IsNotNull(object)", span="14-14"];
m8_5 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, System.Func<Ninject.Activation.IContext, object>)", file="RubyEngine.cs", label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type, System.Func<Ninject.Activation.IContext, object>)", span="29-29"];
m8_13 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.DefaultParameterValueProvider(System.Type)", file="RubyEngine.cs", label="Entry Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.DefaultParameterValueProvider(System.Type)", span="56-56"];
m8_16 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.DefaultParameterValueProvider(System.Type)", color=green, community=0, file="RubyEngine.cs", label="Type = type", prediction=102, span="58-58"];
m8_17 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.DefaultParameterValueProvider(System.Type)", file="RubyEngine.cs", label="Exit Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.DefaultParameterValueProvider(System.Type)", span="56-56"];
m8_4 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.HasDefaultValue(Ninject.Planning.Targets.ITarget)", file="RubyEngine.cs", label="Entry Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.HasDefaultValue(Ninject.Planning.Targets.ITarget)", span="49-49"];
m8_14 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.HasDefaultValue(Ninject.Planning.Targets.ITarget)", color=green, community=0, file="RubyEngine.cs", label="return target != null && target.HasDefaultValue;", prediction=103, span="51-51"];
m8_15 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.HasDefaultValue(Ninject.Planning.Targets.ITarget)", file="RubyEngine.cs", label="Exit Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.HasDefaultValue(Ninject.Planning.Targets.ITarget)", span="49-49"];
m8_0 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", file="RubyEngine.cs", label="Entry Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", span="34-34"];
m8_1 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", color=green, community=0, file="RubyEngine.cs", label="var service = request.Service", prediction=104, span="36-36"];
m8_2 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", color=green, community=0, file="RubyEngine.cs", label="return HasDefaultValue(request.Target)\r\n                       ? new[]\r\n                             {\r\n                                 new Binding(service, Settings.DefaultScopeCallback)\r\n                                     {\r\n                                         Condition = r => HasDefaultValue(r.Target),\r\n                                         ProviderCallback = _ => new DefaultParameterValueProvider(service),\r\n                                     }\r\n                             }\r\n                       : Enumerable.Empty<IBinding>();", prediction=105, span="37-46"];
m8_3 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", file="RubyEngine.cs", label="Exit Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", span="34-34"];
m8_7 [cluster="lambda expression", file="RubyEngine.cs", label="Entry lambda expression", span="42-42"];
m8_11 [cluster="lambda expression", color=green, community=0, file="RubyEngine.cs", label="new DefaultParameterValueProvider(service)", prediction=104, span="43-43"];
m8_8 [cluster="lambda expression", color=green, community=0, file="RubyEngine.cs", label="HasDefaultValue(r.Target)", prediction=105, span="42-42"];
m8_10 [cluster="lambda expression", file="RubyEngine.cs", label="Entry lambda expression", span="43-43"];
m8_12 [cluster="lambda expression", file="RubyEngine.cs", label="Exit lambda expression", span="43-43"];
m8_9 [cluster="lambda expression", file="RubyEngine.cs", label="Exit lambda expression", span="42-42"];
m8_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RubyEngine.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_18 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", file="RubyEngine.cs", label="Entry Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", span="63-63"];
m8_19 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", color=green, community=0, file="RubyEngine.cs", label="var target = context.Request.Target", prediction=108, span="65-65"];
m8_20 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", color=green, community=0, file="RubyEngine.cs", label="return (target == null) ? null : target.DefaultValue;", prediction=109, span="66-66"];
m8_21 [cluster="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", file="RubyEngine.cs", label="Exit Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider.Create(Ninject.Activation.IContext)", span="63-63"];
m8_22 [file="RubyEngine.cs", label="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver", span=""];
m8_23 [file="RubyEngine.cs", label=service, span=""];
m8_24 [file="RubyEngine.cs", label="Ninject.Planning.Bindings.Resolvers.DefaultValueBindingResolver.DefaultParameterValueProvider", span=""];
m11_4 [cluster="string.Trim()", file="StringExtensions.cs", label="Entry string.Trim()", span="0-0"];
m11_8 [cluster="string.IsNullOrBlank()", file="StringExtensions.cs", label="Entry string.IsNullOrBlank()", span="20-20"];
m11_9 [cluster="Ninject.Dynamic.Extensions.StringExtensions.FormattedWith(string, params object[])", file="StringExtensions.cs", label="Entry Ninject.Dynamic.Extensions.StringExtensions.FormattedWith(string, params object[])", span="43-43"];
m11_10 [cluster="Ninject.Dynamic.Extensions.StringExtensions.FormattedWith(string, params object[])", color=green, community=0, file="StringExtensions.cs", label="return string.Format(CultureInfo.CurrentUICulture, value, parameters);", prediction=110, span="45-45"];
m11_11 [cluster="Ninject.Dynamic.Extensions.StringExtensions.FormattedWith(string, params object[])", file="StringExtensions.cs", label="Exit Ninject.Dynamic.Extensions.StringExtensions.FormattedWith(string, params object[])", span="43-43"];
m11_12 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringExtensions.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m11_3 [cluster="string.IsNullOrEmpty(string)", file="StringExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_5 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNotNullOrBlank(string)", file="StringExtensions.cs", label="Entry Ninject.Dynamic.Extensions.StringExtensions.IsNotNullOrBlank(string)", span="32-32"];
m11_6 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNotNullOrBlank(string)", color=green, community=0, file="StringExtensions.cs", label="return !value.IsNullOrBlank();", prediction=111, span="34-34"];
m11_7 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNotNullOrBlank(string)", file="StringExtensions.cs", label="Exit Ninject.Dynamic.Extensions.StringExtensions.IsNotNullOrBlank(string)", span="32-32"];
m11_0 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNullOrBlank(string)", file="StringExtensions.cs", label="Entry Ninject.Dynamic.Extensions.StringExtensions.IsNullOrBlank(string)", span="20-20"];
m11_1 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNullOrBlank(string)", color=green, community=0, file="StringExtensions.cs", label="return string.IsNullOrEmpty(value) || value.Trim().Length == 0;", prediction=112, span="22-22"];
m11_2 [cluster="Ninject.Dynamic.Extensions.StringExtensions.IsNullOrBlank(string)", file="StringExtensions.cs", label="Exit Ninject.Dynamic.Extensions.StringExtensions.IsNullOrBlank(string)", span="20-20"];
m0_75 -> m0_1  [color=green, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext", style=dashed];
m2_0 -> m2_2  [color=green, key=1, label="System.Collections.IDictionary", style=dashed];
m4_58 -> m4_61  [color=green, key=1, label=string, style=dashed];
m4_89 -> m4_147  [color=green, key=1, label=string, style=dashed];
m4_76 -> m4_81  [color=green, key=1, label=string, style=dashed];
m4_80 -> m4_86  [color=green, key=1, label=result, style=dashed];
m4_82 -> m4_85  [color=green, key=1, label=i, style=dashed];
m4_85 -> m4_85  [color=green, key=1, label=i, style=dashed];
m4_91 -> m4_96  [color=green, key=1, label="lambda expression", style=dashed];
m4_122 -> m4_126  [color=green, key=1, label=string, style=dashed];
m4_122 -> m4_129  [color=green, key=1, label=string, style=dashed];
m4_122 -> m4_131  [color=green, key=1, label=string, style=dashed];
m4_122 -> m4_133  [color=green, key=1, label=string, style=dashed];
m4_122 -> m4_134  [color=green, key=1, label=string, style=dashed];
m4_123 -> m4_127  [color=green, key=1, label=n, style=dashed];
m4_105 -> m4_107  [color=green, key=1, label="lambda expression", style=dashed];
m4_151 -> m4_145  [color=green, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m4_151 -> m4_147  [color=green, key=1, label="Ninject.Dynamic.Extensions.Inflector.Rule", style=dashed];
m8_1 -> m8_11  [color=green, key=1, label=service, style=dashed];
m8_2 -> m8_8  [color=green, key=1, label="Ninject.Activation.IRequest", style=dashed];
m8_23 -> m8_11  [color=green, key=1, label=service, style=dashed];
}
