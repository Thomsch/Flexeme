digraph  {
n27 [label="Ninject.Planning.Bindings.Binding", span=""];
n0 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="93-93", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)"];
n1 [label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="93-93", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)"];
n2 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", span="100-100", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n3 [label="Ensure.ArgumentNotNull(service, ''service'')", span="102-102", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n4 [label="Ensure.ArgumentNotNull(metadata, ''metadata'')", span="103-103", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n5 [label="Service = service", span="105-105", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n6 [label="Metadata = metadata", span="106-106", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n12 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)"];
n7 [label="Parameters = new List<IParameter>()", span="107-107", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n8 [label="ActivationActions = new List<Action<IContext>>()", span="108-108", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n9 [label="DeactivationActions = new List<Action<IContext>>()", span="109-109", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n10 [label="ScopeCallback = StandardScopeCallbacks.Singleton", span="110-110", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n11 [label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", span="100-100", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)"];
n14 [label="Entry Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="118-118", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)"];
n15 [label="Ensure.ArgumentNotNull(context, ''context'')", span="120-120", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)"];
n16 [label="return ProviderCallback(context);", span="121-121", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)"];
n17 [label="Exit Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="118-118", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)"];
n18 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n19 [label="Entry Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="129-129", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)"];
n20 [label="Ensure.ArgumentNotNull(context, ''context'')", span="131-131", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)"];
n21 [label="return ScopeCallback(context);", span="132-132", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)"];
n22 [label="Exit Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="129-129", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)"];
n23 [label="Entry Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="140-140", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)"];
n24 [label="Ensure.ArgumentNotNull(request, ''request'')", span="142-142", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)"];
n25 [label="return Condition == null || Condition(request);", span="143-143", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)"];
n26 [label="Exit Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="140-140", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)"];
m0_0 [label="Entry Ninject.ConstraintAttribute.Matches(Ninject.Bindings.IBindingMetadata)", span="9-9", cluster="Ninject.ConstraintAttribute.Matches(Ninject.Bindings.IBindingMetadata)", file="ActivationStrategyTests.cs"];
m0_1 [label="Exit Ninject.ConstraintAttribute.Matches(Ninject.Bindings.IBindingMetadata)", span="9-9", cluster="Ninject.ConstraintAttribute.Matches(Ninject.Bindings.IBindingMetadata)", file="ActivationStrategyTests.cs"];
m1_33 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="App.xaml.cs"];
m1_12 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="App.xaml.cs"];
m1_32 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)", file="App.xaml.cs"];
m1_27 [label="Entry Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", span="56-56", cluster="Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_28 [label="string errorMsg = e.ExceptionObject.Message + e.ExceptionObject.StackTrace", span="60-60", cluster="Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_29 [label="errorMsg = errorMsg.Replace('''', '\'').Replace(''\r\n'', @''\n'')", span="61-61", cluster="Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_30 [label=Exception, span="65-65", cluster="Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_31 [label="Exit Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", span="56-56", cluster="Ninject.SilverlightTests.App.ReportErrorToDOM(ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_6 [label="Entry Ninject.SilverlightTests.App.CustomInitializeComponent()", span="22-22", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_7 [label="this.contentLoaded", span="24-24", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_8 [label="return;", span="26-26", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_9 [label="this.contentLoaded = true", span="28-28", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_10 [label="System.Windows.Application.LoadComponent(this, new System.Uri(''/Ninject.SilverlightTests;component/App.xaml'', System.UriKind.Relative))", span="29-29", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_11 [label="Exit Ninject.SilverlightTests.App.CustomInitializeComponent()", span="22-22", cluster="Ninject.SilverlightTests.App.CustomInitializeComponent()", file="App.xaml.cs"];
m1_14 [label="Entry Ninject.SilverlightTests.App.Application_Startup(object, StartupEventArgs)", span="32-32", cluster="Ninject.SilverlightTests.App.Application_Startup(object, StartupEventArgs)", file="App.xaml.cs"];
m1_15 [label="Exit Ninject.SilverlightTests.App.Application_Startup(object, StartupEventArgs)", span="32-32", cluster="Ninject.SilverlightTests.App.Application_Startup(object, StartupEventArgs)", file="App.xaml.cs"];
m1_23 [label="Entry Unk.BeginInvoke", span="", cluster="Unk.BeginInvoke", file="App.xaml.cs"];
m1_18 [label="Entry Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", span="40-40", cluster="Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_19 [label="!System.Diagnostics.Debugger.IsAttached", span="45-45", cluster="Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_20 [label="e.Handled = true", span="52-52", cluster="Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_21 [label="Deployment.Current.Dispatcher.BeginInvoke(delegate { ReportErrorToDOM(e); })", span="53-53", cluster="Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_22 [label="Exit Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", span="40-40", cluster="Ninject.SilverlightTests.App.Application_UnhandledException(object, ApplicationUnhandledExceptionEventArgs)", file="App.xaml.cs"];
m1_0 [label="Entry Ninject.SilverlightTests.App.App()", span="8-8", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_1 [label="this.Startup += this.Application_Startup", span="10-10", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_2 [label="this.Exit += this.Application_Exit", span="11-11", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_3 [label="this.UnhandledException += this.Application_UnhandledException", span="12-12", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_4 [label="this.CustomInitializeComponent()", span="14-14", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_5 [label="Exit Ninject.SilverlightTests.App.App()", span="8-8", cluster="Ninject.SilverlightTests.App.App()", file="App.xaml.cs"];
m1_24 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="App.xaml.cs"];
m1_25 [label="ReportErrorToDOM(e)", span="53-53", cluster="lambda expression", file="App.xaml.cs"];
m1_26 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="App.xaml.cs"];
m1_13 [label="Entry Unk.LoadComponent", span="", cluster="Unk.LoadComponent", file="App.xaml.cs"];
m1_16 [label="Entry Ninject.SilverlightTests.App.Application_Exit(object, System.EventArgs)", span="36-36", cluster="Ninject.SilverlightTests.App.Application_Exit(object, System.EventArgs)", file="App.xaml.cs"];
m1_17 [label="Exit Ninject.SilverlightTests.App.Application_Exit(object, System.EventArgs)", span="36-36", cluster="Ninject.SilverlightTests.App.Application_Exit(object, System.EventArgs)", file="App.xaml.cs"];
m1_34 [label="Ninject.SilverlightTests.App", span="", file="App.xaml.cs"];
m1_35 [label="Ninject.SilverlightTests.App", span="", file="App.xaml.cs"];
m1_36 [label=ApplicationUnhandledExceptionEventArgs, span="", file="App.xaml.cs"];
m2_14 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="42-42", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_15 [label="var request = new Request(typeof(TwoWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="44-44", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", color=green, community=0, file="CircularDependenciesTests.cs"];
m2_16 [label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="45-45", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_17 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="42-42", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_68 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="108-108", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_69 [label="kernel.Bind<ThreeWayPropertyFoo>().ToSelf().InSingletonScope()", span="110-110", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_70 [label="kernel.Bind<ThreeWayPropertyBar>().ToSelf().InSingletonScope()", span="111-111", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_71 [label="kernel.Bind<ThreeWayPropertyBaz>().ToSelf().InSingletonScope()", span="112-112", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_72 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="108-108", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_3 [label="Entry Ninject.Creation.Provider<T>.Create(Ninject.Activation.IContext)", span="17-17", cluster="Ninject.Creation.Provider<T>.Create(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_4 [label="return CreateInstance(context);", span="19-19", cluster="Ninject.Creation.Provider<T>.Create(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_5 [label="Exit Ninject.Creation.Provider<T>.Create(Ninject.Activation.IContext)", span="17-17", cluster="Ninject.Creation.Provider<T>.Create(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_20 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="CircularDependenciesTests.cs"];
m2_6 [label="Entry Ninject.Creation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", span="22-22", cluster="Ninject.Creation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_7 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="35-35", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_24 [label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="317-317", cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="CircularDependenciesTests.cs"];
m2_28 [label="Entry Unk.>", span="", cluster="Unk.>", file="CircularDependenciesTests.cs"];
m2_33 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="58-58", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_34 [label="kernel.Bind<TwoWayPropertyFoo>().ToSelf().InSingletonScope()", span="60-60", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_35 [label="kernel.Bind<TwoWayPropertyBar>().ToSelf().InSingletonScope()", span="61-61", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_36 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="58-58", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m2_13 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="165-165", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="CircularDependenciesTests.cs"];
m2_11 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="CircularDependenciesTests.cs"];
m2_18 [label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="93-93", cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="CircularDependenciesTests.cs"];
m2_25 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="49-49", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_26 [label="Assert.Throws<ActivationException>(() => kernel.Get<TwoWayConstructorFoo>())", span="51-51", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_27 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="49-49", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_43 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="71-71", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_44 [label="var foo = kernel.Get<TwoWayPropertyFoo>()", span="73-73", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs"];
m2_45 [label="var bar = kernel.Get<TwoWayPropertyBar>()", span="74-74", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_46 [label="foo.Bar.ShouldBeSameAs(bar)", span="76-76", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_47 [label="bar.Foo.ShouldBeSameAs(foo)", span="77-77", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_48 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="71-71", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_8 [label="Ninject.Creation.Provider<T>", span="", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_9 [label="kernel.Bind<TwoWayConstructorBar>().ToSelf().InSingletonScope()", span="38-38", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_10 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="35-35", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_62 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="99-99", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_63 [label="Assert.Throws<ActivationException>(() => kernel.Get<ThreeWayConstructorFoo>())", span="101-101", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_64 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="99-99", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m2_50 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="84-84", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_51 [label="kernel.Bind<ThreeWayConstructorFoo>().ToSelf().InSingletonScope()", span="86-86", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_52 [label="kernel.Bind<ThreeWayConstructorBar>().ToSelf().InSingletonScope()", span="87-87", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_53 [label="kernel.Bind<ThreeWayConstructorBaz>().ToSelf().InSingletonScope()", span="88-88", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_54 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="84-84", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m2_32 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="CircularDependenciesTests.cs"];
m2_0 [label="Entry Ninject.Creation.Provider<T>.GetImplementationType(Ninject.Activation.IContext)", span="12-12", cluster="Ninject.Creation.Provider<T>.GetImplementationType(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_1 [label="return typeof(T);", span="14-14", cluster="Ninject.Creation.Provider<T>.GetImplementationType(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_2 [label="Exit Ninject.Creation.Provider<T>.GetImplementationType(Ninject.Activation.IContext)", span="12-12", cluster="Ninject.Creation.Provider<T>.GetImplementationType(Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m2_49 [label="Entry Unk.ShouldBeSameAs", span="", cluster="Unk.ShouldBeSameAs", file="CircularDependenciesTests.cs"];
m2_12 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="CircularDependenciesTests.cs"];
m2_76 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_22 [label="kernel.Resolve(request)", span="45-45", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_60 [label="kernel.Resolve(request)", span="95-95", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_21 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_23 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_41 [label="kernel.Get<TwoWayPropertyFoo>()", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_30 [label="kernel.Get<TwoWayConstructorFoo>()", span="51-51", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_66 [label="kernel.Get<ThreeWayConstructorFoo>()", span="101-101", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_77 [label="kernel.Get<ThreeWayPropertyFoo>()", span="118-118", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_59 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_61 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_40 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_42 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_29 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_31 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_65 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_67 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_78 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m2_55 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="92-92", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_56 [label="var request = new Request(typeof(ThreeWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="94-94", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", color=green, community=0, file="CircularDependenciesTests.cs"];
m2_57 [label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="95-95", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_58 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="92-92", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m2_79 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="122-122", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_80 [label="var foo = kernel.Get<ThreeWayPropertyFoo>()", span="124-124", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_81 [label="var bar = kernel.Get<ThreeWayPropertyBar>()", span="125-125", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_82 [label="var baz = kernel.Get<ThreeWayPropertyBaz>()", span="126-126", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_83 [label="foo.Bar.ShouldBeSameAs(bar)", span="128-128", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_85 [label="baz.Foo.ShouldBeSameAs(foo)", span="130-130", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_84 [label="bar.Baz.ShouldBeSameAs(baz)", span="129-129", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_86 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="122-122", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m2_73 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="116-116", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_74 [label="Assert.DoesNotThrow(() => kernel.Get<ThreeWayPropertyFoo>())", span="118-118", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_75 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="116-116", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_37 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="65-65", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_38 [label="Assert.DoesNotThrow(() => kernel.Get<TwoWayPropertyFoo>())", span="67-67", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_39 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="65-65", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m2_19 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="CircularDependenciesTests.cs"];
m2_100 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", span="", file="CircularDependenciesTests.cs"];
m2_98 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", span="", file="CircularDependenciesTests.cs"];
m2_99 [label=request, span="", file="CircularDependenciesTests.cs"];
m2_101 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", span="", file="CircularDependenciesTests.cs"];
m2_102 [label=request, span="", file="CircularDependenciesTests.cs"];
m2_103 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", span="", file="CircularDependenciesTests.cs"];
m3_0 [label="Entry Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", span="31-31", cluster="Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ConditionalAttributeBindingTests.cs"];
m3_1 [label="Exit Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", span="31-31", cluster="Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ConditionalAttributeBindingTests.cs"];
m4_24 [label="Entry Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="42-42", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_25 [label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", span="44-44", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_26 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                new[] { expected.FullName },\r\n                asm => true)", span="46-48", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_28 [label="assemblyFullNames.Should().BeEquivalentTo(new[] { expected.FullName })", span="51-51", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_27 [label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", span="50-50", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_29 [label="Exit Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="42-42", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_12 [label="Entry Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="28-28", cluster="Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="ConditionalBindingTests.cs"];
m4_36 [label="Entry Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="58-58", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="ConditionalBindingTests.cs"];
m4_37 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(new[] { ''Blah'' }, asm => true)", span="60-60", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="ConditionalBindingTests.cs"];
m4_38 [label="actualNames.Should().BeEmpty()", span="62-62", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="ConditionalBindingTests.cs"];
m4_39 [label="Exit Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="58-58", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="ConditionalBindingTests.cs"];
m4_14 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ConditionalBindingTests.cs"];
m4_20 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="ConditionalBindingTests.cs"];
m4_4 [label="Entry Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="26-26", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_5 [label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", span="28-28", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_6 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                new[] { this.ModuleFilename, this.AssemblyFilename },\r\n                asm => asm.FullName.StartsWith(''Ninject.Tests.TestModule''))", span="30-32", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_8 [label="assemblyFullNames.Should().BeEquivalentTo(new[] { expected.FullName })", span="35-35", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_7 [label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", span="34-34", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_9 [label="Exit Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="26-26", cluster="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="ConditionalBindingTests.cs"];
m4_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConditionalBindingTests.cs"];
m4_40 [label="Entry Unk.BeEmpty", span="", cluster="Unk.BeEmpty", file="ConditionalBindingTests.cs"];
m4_10 [label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0", cluster="System.Reflection.Assembly.LoadFrom(string)", file="ConditionalBindingTests.cs"];
m4_11 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="ConditionalBindingTests.cs"];
m4_0 [label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="17-17", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="ConditionalBindingTests.cs"];
m4_1 [label="this.AssemblyNameRetriever = new AssemblyNameRetriever()", span="19-19", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="ConditionalBindingTests.cs"];
m4_2 [label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="17-17", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="ConditionalBindingTests.cs"];
m4_41 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_17 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_21 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_18 [label="asm.FullName.StartsWith(''Ninject.Tests.TestModule'')", span="32-32", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_19 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_22 [label="a.FullName", span="34-34", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_23 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_33 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_31 [label=true, span="48-48", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_34 [label="a.FullName", span="50-50", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_35 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_42 [label=true, span="60-60", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_43 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m4_3 [label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="20-20", cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="ConditionalBindingTests.cs"];
m4_16 [label="Entry Unk.BeEquivalentTo", span="", cluster="Unk.BeEquivalentTo", file="ConditionalBindingTests.cs"];
m4_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConditionalBindingTests.cs"];
m4_44 [label="Ninject.Tests.Unit.AssemblyNameRetrieverContext", span="", file="ConditionalBindingTests.cs"];
m4_45 [label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName", span="", file="ConditionalBindingTests.cs"];
m4_46 [label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName", span="", file="ConditionalBindingTests.cs"];
m4_47 [label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName", span="", file="ConditionalBindingTests.cs"];
m5_4 [label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", span="51-51", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_5 [label="ParameterExpression instanceParameter = Expression.Parameter(typeof(object), ''instance'')", span="53-53", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_6 [label="Expression instance = Expression.Convert(instanceParameter, member.DeclaringType)", span="54-54", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_8 [label="var arguments = ExpressionHelper.CreateParameterExpressions(member, argumentsParameter)", span="57-57", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_9 [label="MethodCallExpression call = Expression.Call(instance, member, arguments)", span="59-59", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_10 [label="return Expression.Lambda<TDelegate>(call, instanceParameter, argumentsParameter);", span="61-61", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_7 [label="ParameterExpression argumentsParameter = Expression.Parameter(typeof(object[]), ''arguments'')", span="56-56", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_11 [label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", span="51-51", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_12 [label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0", cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="ConditionalBindingWhenParentTests.cs"];
m5_0 [label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", span="35-35", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_1 [label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", span="35-35", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs"];
m5_16 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ConditionalBindingWhenParentTests.cs"];
m5_15 [label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ConditionalBindingWhenParentTests.cs"];
m5_14 [label="Entry Ninject.Injection.Linq.ExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", span="27-27", cluster="Ninject.Injection.Linq.ExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", file="ConditionalBindingWhenParentTests.cs"];
m5_13 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ConditionalBindingWhenParentTests.cs"];
m5_2 [label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", span="43-43", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", file="ConditionalBindingWhenParentTests.cs"];
m5_3 [label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", span="43-43", cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", file="ConditionalBindingWhenParentTests.cs"];
m8_66 [label="Entry Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="244-244", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_67 [label="return GetResolutionIterator(root, service, b => b.Name == name, parameters, true);", span="246-246", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_68 [label="Exit Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="244-244", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_60 [label="Entry Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="219-219", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_61 [label="return GetResolutionIterator(root, service, constraint, parameters, true).FirstOrDefault();", span="221-221", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_62 [label="Exit Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="219-219", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_24 [label="Entry Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="105-105", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_25 [label="return GetResolutionIterator(root, typeof(T), constraint, parameters, true).Cast<T>().FirstOrDefault();", span="107-107", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_26 [label="Exit Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="105-105", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_4 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ExternalInjectionTests.cs"];
m8_0 [label="Entry Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="41-41", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_1 [label="return GetResolutionIterator(root, typeof(T), null, parameters, false).Cast<T>().FirstOrDefault();", span="43-43", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_2 [label="Exit Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="41-41", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_54 [label="Entry Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="206-206", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_55 [label="return GetResolutionIterator(root, service, b => b.Name == name, parameters, true).FirstOrDefault();", span="208-208", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_56 [label="Exit Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="206-206", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_42 [label="Entry Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="168-168", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_43 [label="return GetResolutionIterator(root, service, b => b.Name == name, parameters, false).FirstOrDefault();", span="170-170", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_44 [label="Exit Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", span="168-168", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_5 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ExternalInjectionTests.cs"];
m8_72 [label="Entry Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="257-257", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_73 [label="return GetResolutionIterator(root, service, constraint, parameters, true);", span="259-259", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_74 [label="Exit Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="257-257", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_27 [label="Entry Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="117-117", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_28 [label="return GetResolutionIterator(root, typeof(T), null, parameters, true).Cast<T>();", span="119-119", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_29 [label="Exit Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="117-117", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_6 [label="Entry Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="54-54", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_7 [label="return GetResolutionIterator(root, typeof(T), b => b.Name == name, parameters, false).Cast<T>().FirstOrDefault();", span="56-56", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_8 [label="Exit Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="54-54", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_63 [label="Entry Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="231-231", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_64 [label="return GetResolutionIterator(root, service, null, parameters, true);", span="233-233", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_65 [label="Exit Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="231-231", cluster="Ninject.ResolutionExtensions.GetAll(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_36 [label="Entry Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="143-143", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_37 [label="return GetResolutionIterator(root, typeof(T), constraint, parameters, true).Cast<T>();", span="145-145", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_38 [label="Exit Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="143-143", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_48 [label="Entry Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="181-181", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_49 [label="return GetResolutionIterator(root, service, constraint, parameters, false).FirstOrDefault();", span="183-183", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_50 [label="Exit Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="181-181", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_83 [label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="44-44", cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="ExternalInjectionTests.cs"];
m8_30 [label="Entry Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="130-130", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_31 [label="return GetResolutionIterator(root, typeof(T), b => b.Name == name, parameters, true).Cast<T>();", span="132-132", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_32 [label="Exit Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="130-130", cluster="Ninject.ResolutionExtensions.GetAll<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_18 [label="Entry Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="92-92", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_19 [label="return GetResolutionIterator(root, typeof(T), b => b.Name == name, parameters, true).Cast<T>().FirstOrDefault();", span="94-94", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_20 [label="Exit Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="92-92", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_12 [label="Entry Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="67-67", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_13 [label="return GetResolutionIterator(root, typeof(T), constraint, parameters, false).Cast<T>().FirstOrDefault();", span="69-69", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_14 [label="Exit Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="67-67", cluster="Ninject.ResolutionExtensions.Get<T>(Ninject.Syntax.IResolutionRoot, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_69 [label="Entry lambda expression", span="246-246", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_10 [label="b.Name == name", span="56-56", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_9 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_11 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_22 [label="b.Name == name", span="94-94", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_21 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_23 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_34 [label="b.Name == name", span="132-132", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_33 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_35 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_46 [label="b.Name == name", span="170-170", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_45 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_47 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_58 [label="b.Name == name", span="208-208", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_57 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_59 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_70 [label="b.Name == name", span="246-246", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_71 [label="Exit lambda expression", span="246-246", cluster="lambda expression", file="ExternalInjectionTests.cs"];
m8_15 [label="Entry Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="79-79", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_16 [label="return GetResolutionIterator(root, typeof(T), null, parameters, true).Cast<T>().FirstOrDefault();", span="81-81", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_17 [label="Exit Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="79-79", cluster="Ninject.ResolutionExtensions.TryGet<T>(Ninject.Syntax.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_82 [label="Entry Ninject.Syntax.IResolutionRoot.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", span="54-54", cluster="Ninject.Syntax.IResolutionRoot.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_39 [label="Entry Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="155-155", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_40 [label="return GetResolutionIterator(root, service, null, parameters, false).FirstOrDefault();", span="157-157", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_41 [label="Exit Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="155-155", cluster="Ninject.ResolutionExtensions.Get(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_51 [label="Entry Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="193-193", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_52 [label="return GetResolutionIterator(root, service, null, parameters, true).FirstOrDefault();", span="195-195", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_53 [label="Exit Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="193-193", cluster="Ninject.ResolutionExtensions.TryGet(Ninject.Syntax.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m8_3 [label="Entry Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", span="262-262", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_75 [label="Ensure.ArgumentNotNull(root, ''root'')", span="264-264", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_76 [label="Ensure.ArgumentNotNull(service, ''service'')", span="265-265", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_77 [label="Ensure.ArgumentNotNull(parameters, ''parameters'')", span="266-266", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_78 [label="IRequest request = root.CreateRequest(service, constraint, parameters, isOptional)", span="268-268", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_79 [label="return root.Resolve(request);", span="269-269", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_80 [label="Exit Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", span="262-262", cluster="Ninject.ResolutionExtensions.GetResolutionIterator(Ninject.Syntax.IResolutionRoot, System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool)", file="ExternalInjectionTests.cs"];
m8_84 [label=string, span="", file="ExternalInjectionTests.cs"];
m8_85 [label=string, span="", file="ExternalInjectionTests.cs"];
m8_86 [label=string, span="", file="ExternalInjectionTests.cs"];
m8_87 [label=string, span="", file="ExternalInjectionTests.cs"];
m8_88 [label=string, span="", file="ExternalInjectionTests.cs"];
m8_89 [label=string, span="", file="ExternalInjectionTests.cs"];
m9_21 [label="Entry Ninject.Planning.IPlanner.GetPlan(System.Type)", span="33-33", cluster="Ninject.Planning.IPlanner.GetPlan(System.Type)", file="ManualReleaseTests.cs"];
m9_22 [label="Entry Ninject.Planning.IPlan.Has<TDirective>()", span="38-38", cluster="Ninject.Planning.IPlan.Has<TDirective>()", file="ManualReleaseTests.cs"];
m9_24 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="119-119", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_23 [label="Entry Ninject.ActivationException.ActivationException(string)", span="35-35", cluster="Ninject.ActivationException.ActivationException(string)", file="ManualReleaseTests.cs"];
m9_56 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="ManualReleaseTests.cs"];
m9_25 [label="Entry Ninject.Planning.IPlan.GetAll<TDirective>()", span="52-52", cluster="Ninject.Planning.IPlan.GetAll<TDirective>()", file="ManualReleaseTests.cs"];
m9_64 [label="Entry Ninject.Components.IComponentContainer.Get<T>()", span="52-52", cluster="Ninject.Components.IComponentContainer.Get<T>()", file="ManualReleaseTests.cs"];
m9_45 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ManualReleaseTests.cs"];
m9_29 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="ManualReleaseTests.cs"];
m9_34 [label="Entry Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", span="31-31", cluster="Ninject.Selection.Heuristics.IConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ManualReleaseTests.cs"];
m9_38 [label="Entry Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="90-90", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_39 [label="Ensure.ArgumentNotNull(context, ''context'')", span="92-92", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_40 [label="Ensure.ArgumentNotNull(target, ''target'')", span="93-93", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_41 [label="var parameter = context.Parameters.OfType<ConstructorArgument>().Where(p => p.Name == target.Name).SingleOrDefault()", span="95-95", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_42 [label="return parameter != null ? parameter.GetValue(context) : target.ResolveWithin(context);", span="96-96", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_43 [label="Exit Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="90-90", cluster="Ninject.Activation.Providers.StandardProvider.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ManualReleaseTests.cs"];
m9_55 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ManualReleaseTests.cs"];
m9_27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ManualReleaseTests.cs"];
m9_30 [label="Entry Ninject.Injection.ConstructorInjector.Invoke(params object[])", span="14-14", cluster="Ninject.Injection.ConstructorInjector.Invoke(params object[])", file="ManualReleaseTests.cs"];
m9_44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ManualReleaseTests.cs"];
m9_9 [label="Entry Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", span="68-68", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_10 [label="Ensure.ArgumentNotNull(context, ''context'')", span="70-70", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_11 [label="context.Plan == null", span="72-72", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_12 [label="context.Plan = Planner.GetPlan(GetImplementationType(context.Request.Service))", span="73-73", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_13 [label="!context.Plan.Has<ConstructorInjectionDirective>()", span="75-75", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_14 [label="throw new ActivationException(ExceptionFormatter.NoConstructorsAvailable(context));", span="76-76", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_15 [label="var directives = context.Plan.GetAll<ConstructorInjectionDirective>()", span="78-78", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_16 [label="var directive = directives.OrderByDescending(option => Selector.ConstructorScorer.Score(context, option)).First()", span="79-79", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_17 [label="object[] arguments = directive.Targets.Select(target => GetValue(context, target)).ToArray()", span="80-80", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_18 [label="return directive.Injector(arguments);", span="81-81", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_19 [label="Exit Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", span="68-68", cluster="Ninject.Activation.Providers.StandardProvider.Create(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_61 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_32 [label="Selector.ConstructorScorer.Score(context, option)", span="79-79", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_36 [label="GetValue(context, target)", span="80-80", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_31 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_35 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_33 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_37 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_50 [label="p.Name == target.Name", span="95-95", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_49 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_51 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_62 [label="new StandardProvider(prototype, ctx.Kernel.Components.Get<IPlanner>(), ctx.Kernel.Components.Get<ISelector>())", span="120-120", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_63 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="ManualReleaseTests.cs"];
m9_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualReleaseTests.cs"];
m9_28 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ManualReleaseTests.cs"];
m9_20 [label="Entry Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", span="105-105", cluster="Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", file="ManualReleaseTests.cs"];
m9_52 [label="Ensure.ArgumentNotNull(service, ''service'')", span="107-107", cluster="Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", file="ManualReleaseTests.cs"];
m9_53 [label="return Type.ContainsGenericParameters ? Type.MakeGenericType(service.GetGenericArguments()) : Type;", span="108-108", cluster="Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", file="ManualReleaseTests.cs"];
m9_54 [label="Exit Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", span="105-105", cluster="Ninject.Activation.Providers.StandardProvider.GetImplementationType(System.Type)", file="ManualReleaseTests.cs"];
m9_0 [label="Entry Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", span="52-52", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_1 [label="Ensure.ArgumentNotNull(type, ''type'')", span="54-54", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_2 [label="Ensure.ArgumentNotNull(planner, ''planner'')", span="55-55", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_3 [label="Ensure.ArgumentNotNull(selector, ''selector'')", span="56-56", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_4 [label="Type = type", span="58-58", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_5 [label="Planner = planner", span="59-59", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_6 [label="Selector = selector", span="60-60", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_7 [label="Exit Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", span="52-52", cluster="Ninject.Activation.Providers.StandardProvider.StandardProvider(System.Type, Ninject.Planning.IPlanner, Ninject.Selection.ISelector)", file="ManualReleaseTests.cs"];
m9_48 [label="Entry Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", span="54-54", cluster="Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", file="ManualReleaseTests.cs"];
m9_47 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="ManualReleaseTests.cs"];
m9_57 [label="Entry Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", span="117-117", cluster="Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", file="ManualReleaseTests.cs"];
m9_58 [label="Ensure.ArgumentNotNull(prototype, ''prototype'')", span="119-119", cluster="Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", file="ManualReleaseTests.cs"];
m9_59 [label="return ctx => new StandardProvider(prototype, ctx.Kernel.Components.Get<IPlanner>(), ctx.Kernel.Components.Get<ISelector>());", span="120-120", cluster="Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", file="ManualReleaseTests.cs"];
m9_60 [label="Exit Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", span="117-117", cluster="Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type)", file="ManualReleaseTests.cs"];
m9_46 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ManualReleaseTests.cs"];
m9_65 [label="Ninject.Activation.Providers.StandardProvider", span="", file="ManualReleaseTests.cs"];
m9_66 [label="Ninject.Activation.IContext", span="", file="ManualReleaseTests.cs"];
m9_67 [label="Ninject.Planning.Targets.ITarget", span="", file="ManualReleaseTests.cs"];
m9_68 [label="System.Type", span="", file="ManualReleaseTests.cs"];
m11_9 [label="Entry Ninject.Infrastructure.DisposableObject.~DisposableObject()", span="19-19", cluster="Ninject.Infrastructure.DisposableObject.~DisposableObject()", file="PropertyInjectionTests.cs"];
m11_10 [label="Dispose()", span="21-21", cluster="Ninject.Infrastructure.DisposableObject.~DisposableObject()", file="PropertyInjectionTests.cs"];
m11_11 [label="Exit Ninject.Infrastructure.DisposableObject.~DisposableObject()", span="19-19", cluster="Ninject.Infrastructure.DisposableObject.~DisposableObject()", file="PropertyInjectionTests.cs"];
m11_0 [label="Entry Ninject.Infrastructure.DisposableObject.Dispose()", span="8-8", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", file="PropertyInjectionTests.cs"];
m11_1 [label="!IsDisposed", span="10-10", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", color=green, community=0, file="PropertyInjectionTests.cs"];
m11_2 [label="Disposed(this, EventArgs.Empty)", span="12-12", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", file="PropertyInjectionTests.cs"];
m11_4 [label="IsDisposed = true", span="14-14", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", color=green, community=0, file="PropertyInjectionTests.cs"];
m11_3 [label="Disposed = null", span="13-13", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", file="PropertyInjectionTests.cs"];
m11_5 [label="GC.SuppressFinalize(this)", span="15-15", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", file="PropertyInjectionTests.cs"];
m11_6 [label="Exit Ninject.Infrastructure.DisposableObject.Dispose()", span="8-8", cluster="Ninject.Infrastructure.DisposableObject.Dispose()", file="PropertyInjectionTests.cs"];
m11_8 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="PropertyInjectionTests.cs"];
m11_7 [label="Entry System.EventHandler.Invoke(object, System.EventArgs)", span="0-0", cluster="System.EventHandler.Invoke(object, System.EventArgs)", file="PropertyInjectionTests.cs"];
m11_14 [label="Ninject.Infrastructure.DisposableObject", span="", file="PropertyInjectionTests.cs"];
m12_100 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", span="166-166", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_101 [label="Assert.IsTrue(self.CompareTo(other) <= 0)", span="169-169", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_102 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", span="166-166", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ShouldExtensions.cs"];
m12_64 [label="Entry Unk.AreSame", span="", cluster="Unk.AreSame", file="ShouldExtensions.cs"];
m12_34 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="ShouldExtensions.cs"];
m12_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="ShouldExtensions.cs"];
m12_3 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="ShouldExtensions.cs"];
m12_69 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", span="101-101", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", file="ShouldExtensions.cs"];
m12_70 [label="Assert.IsTrue(self)", span="103-103", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", file="ShouldExtensions.cs"];
m12_71 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", span="101-101", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", file="ShouldExtensions.cs"];
m12_81 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", span="133-133", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_82 [label="Assert.IsTrue(self.CompareTo(other) > 0)", span="136-136", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_83 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", span="133-133", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_128 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="ShouldExtensions.cs"];
m12_27 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="46-46", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_28 [label="Assert.IsFalse(series.Contains(item, new EqualityComparerUsingComparer<T>(comparer)))", span="48-48", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_29 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="46-46", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_4 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ShouldExtensions.cs"];
m12_5 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", span="16-16", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_6 [label="Assert.IsTrue(self.Contains(str))", span="18-18", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_7 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", span="16-16", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_21 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", span="36-36", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_22 [label="Assert.IsFalse(self.Contains(str))", span="38-38", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_23 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", span="36-36", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", file="ShouldExtensions.cs"];
m12_57 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", span="86-86", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", file="ShouldExtensions.cs"];
m12_58 [label="Assert.IsNotNull(self)", span="88-88", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", file="ShouldExtensions.cs"];
m12_59 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", span="86-86", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", file="ShouldExtensions.cs"];
m12_94 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", span="155-155", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_95 [label="Assert.IsTrue(self.CompareTo(other) < 0)", span="158-158", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_96 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", span="155-155", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", file="ShouldExtensions.cs"];
m12_103 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="172-172", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_104 [label="Assert.IsTrue(comparer.Compare(self, other) <= 0)", span="174-174", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_105 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="172-172", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_68 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="ShouldExtensions.cs"];
m12_33 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="ShouldExtensions.cs"];
m12_49 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="ShouldExtensions.cs"];
m12_42 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="66-66", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_43 [label="Assert.IsTrue(comparer.Compare(self, other) == 0)", span="68-68", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_44 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="66-66", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_84 [label="Entry System.IComparable<T>.CompareTo(T)", span="0-0", cluster="System.IComparable<T>.CompareTo(T)", file="ShouldExtensions.cs"];
m12_85 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="139-139", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_86 [label="Assert.IsTrue(comparer.Compare(self, other) > 0)", span="141-141", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_87 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="139-139", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_91 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="150-150", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_92 [label="Assert.IsTrue(comparer.Compare(self, other) >= 0)", span="152-152", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_93 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="150-150", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_15 [label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", span="209-209", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_120 [label="this.comparer = comparer", span="211-211", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_121 [label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", span="209-209", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_117 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", span="192-192", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_118 [label="Assert.IsNotInstanceOfType(type, self)", span="194-194", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_119 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", span="192-192", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_20 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="ShouldExtensions.cs"];
m12_41 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ShouldExtensions.cs"];
m12_8 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="21-21", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_9 [label="Assert.IsTrue(series.Contains(item))", span="23-23", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_10 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="21-21", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_38 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", span="61-61", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_39 [label="Assert.AreEqual(other, self)", span="63-63", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_40 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", span="61-61", cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_88 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", span="144-144", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_89 [label="Assert.IsTrue(self.CompareTo(other) >= 0)", span="147-147", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_90 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", span="144-144", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs"];
m12_122 [label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", span="220-220", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", file="ShouldExtensions.cs"];
m12_123 [label="return this.comparer.Compare(x, y) == 0;", span="222-222", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", file="ShouldExtensions.cs"];
m12_124 [label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", span="220-220", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", file="ShouldExtensions.cs"];
m12_56 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="ShouldExtensions.cs"];
m12_78 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", span="116-116", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", file="ShouldExtensions.cs"];
m12_79 [label="Assert.IsFalse(self, message)", span="118-118", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", file="ShouldExtensions.cs"];
m12_80 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", span="116-116", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", file="ShouldExtensions.cs"];
m12_53 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", span="81-81", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", file="ShouldExtensions.cs"];
m12_54 [label="Assert.IsNull(self)", span="83-83", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", file="ShouldExtensions.cs"];
m12_55 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", span="81-81", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", file="ShouldExtensions.cs"];
m12_116 [label="Entry Unk.IsNotInstanceOfType", span="", cluster="Unk.IsNotInstanceOfType", file="ShouldExtensions.cs"];
m12_12 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="26-26", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_13 [label="Assert.IsTrue(series.Contains(item, new EqualityComparerUsingComparer<T>(comparer)))", span="28-28", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_14 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="26-26", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_50 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="76-76", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_51 [label="Assert.IsFalse(comparer.Compare(self, other) == 0)", span="78-78", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_52 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="76-76", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_65 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", span="96-96", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_66 [label="Assert.AreNotSame(other, self)", span="98-98", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_67 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", span="96-96", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_109 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="ShouldExtensions.cs"];
m12_17 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", span="31-31", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", file="ShouldExtensions.cs"];
m12_18 [label="Assert.IsFalse(self.Contains(str))", span="33-33", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", file="ShouldExtensions.cs"];
m12_19 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", span="31-31", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", file="ShouldExtensions.cs"];
m12_106 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", span="177-177", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_107 [label="Assert.IsInstanceOfType(typeof(T), self)", span="179-179", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_108 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", span="177-177", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_46 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", span="71-71", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_47 [label="Assert.AreNotEqual(other, self)", span="73-73", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_48 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", span="71-71", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", file="ShouldExtensions.cs"];
m12_35 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", span="56-56", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_36 [label="Assert.IsTrue(series.GetEnumerator().MoveNext())", span="58-58", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_37 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", span="56-56", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_30 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", span="51-51", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_31 [label="Assert.IsFalse(series.GetEnumerator().MoveNext())", span="53-53", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_32 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", span="51-51", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs"];
m12_60 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ShouldExtensions.cs"];
m12_61 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", span="91-91", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_62 [label="Assert.AreSame(other, self)", span="93-93", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_63 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", span="91-91", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", file="ShouldExtensions.cs"];
m12_45 [label="Entry System.Collections.Generic.IComparer<T>.Compare(T, T)", span="0-0", cluster="System.Collections.Generic.IComparer<T>.Compare(T, T)", file="ShouldExtensions.cs"];
m12_72 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", span="106-106", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", file="ShouldExtensions.cs"];
m12_73 [label="Assert.IsTrue(self, message)", span="108-108", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", file="ShouldExtensions.cs"];
m12_74 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", span="106-106", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", file="ShouldExtensions.cs"];
m12_24 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="41-41", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_25 [label="Assert.IsFalse(series.Contains(item))", span="43-43", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_26 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="41-41", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs"];
m12_125 [label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", span="232-232", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", file="ShouldExtensions.cs"];
m12_126 [label="return obj.GetHashCode();", span="234-234", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", file="ShouldExtensions.cs"];
m12_127 [label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", span="232-232", cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", file="ShouldExtensions.cs"];
m12_113 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", span="187-187", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_114 [label="Assert.IsNotInstanceOfType(typeof(T), self)", span="189-189", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_115 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", span="187-187", cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", file="ShouldExtensions.cs"];
m12_97 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="161-161", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_98 [label="Assert.IsTrue(comparer.Compare(self, other) < 0)", span="163-163", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_99 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="161-161", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs"];
m12_110 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", span="182-182", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_111 [label="Assert.IsInstanceOfType(type, self)", span="184-184", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_112 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", span="182-182", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs"];
m12_0 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", span="11-11", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", file="ShouldExtensions.cs"];
m12_1 [label="Assert.IsTrue(self.Contains(str))", span="13-13", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", file="ShouldExtensions.cs"];
m12_2 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", span="11-11", cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", file="ShouldExtensions.cs"];
m12_75 [label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", span="111-111", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", file="ShouldExtensions.cs"];
m12_76 [label="Assert.IsFalse(self)", span="113-113", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", file="ShouldExtensions.cs"];
m12_77 [label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", span="111-111", cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", file="ShouldExtensions.cs"];
m12_129 [label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>", span="", file="ShouldExtensions.cs"];
m13_4 [label="Entry Ninject.Activation.IContext.Resolve()", span="77-77", cluster="Ninject.Activation.IContext.Resolve()", file="SingletonScopeTests.cs"];
m13_5 [label="Exit Ninject.Activation.IContext.Resolve()", span="77-77", cluster="Ninject.Activation.IContext.Resolve()", file="SingletonScopeTests.cs"];
m13_0 [label="Entry Ninject.Activation.IContext.GetProvider()", span="65-65", cluster="Ninject.Activation.IContext.GetProvider()", file="SingletonScopeTests.cs"];
m13_1 [label="Exit Ninject.Activation.IContext.GetProvider()", span="65-65", cluster="Ninject.Activation.IContext.GetProvider()", file="SingletonScopeTests.cs"];
m13_2 [label="Entry Ninject.Activation.IContext.GetScope()", span="71-71", cluster="Ninject.Activation.IContext.GetScope()", file="SingletonScopeTests.cs"];
m13_3 [label="Exit Ninject.Activation.IContext.GetScope()", span="71-71", cluster="Ninject.Activation.IContext.GetScope()", file="SingletonScopeTests.cs"];
m14_8 [label="Entry Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", span="186-186", cluster="Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", file="StandardKernelTests.cs"];
m14_13 [label="Entry Ninject.Syntax.IResolutionRoot.GetAll(System.Type, params Ninject.Parameters.IParameter[])", span="262-262", cluster="Ninject.Syntax.IResolutionRoot.GetAll(System.Type, params Ninject.Parameters.IParameter[])", file="StandardKernelTests.cs"];
m14_10 [label="Entry CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetAllInstances(System.Type)", span="41-41", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetAllInstances(System.Type)", file="StandardKernelTests.cs"];
m14_11 [label="return Kernel.GetAll(serviceType);", span="43-43", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetAllInstances(System.Type)", file="StandardKernelTests.cs"];
m14_12 [label="Exit CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetAllInstances(System.Type)", span="41-41", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetAllInstances(System.Type)", file="StandardKernelTests.cs"];
m14_9 [label="Entry Ninject.Syntax.IResolutionRoot.Get(System.Type, string, params Ninject.Parameters.IParameter[])", span="199-199", cluster="Ninject.Syntax.IResolutionRoot.Get(System.Type, string, params Ninject.Parameters.IParameter[])", file="StandardKernelTests.cs"];
m14_0 [label="Entry CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.NinjectServiceLocator(Ninject.IReadonlyKernel)", span="22-22", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.NinjectServiceLocator(Ninject.IReadonlyKernel)", file="StandardKernelTests.cs"];
m14_1 [label="Kernel = kernel", span="24-24", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.NinjectServiceLocator(Ninject.IReadonlyKernel)", file="StandardKernelTests.cs"];
m14_2 [label="Exit CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.NinjectServiceLocator(Ninject.IReadonlyKernel)", span="22-22", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.NinjectServiceLocator(Ninject.IReadonlyKernel)", file="StandardKernelTests.cs"];
m14_3 [label="Entry CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", span="27-27", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", file="StandardKernelTests.cs"];
m14_4 [label="key == null", span="34-34", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", file="StandardKernelTests.cs"];
m14_5 [label="return Kernel.Get(serviceType);", span="36-36", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", file="StandardKernelTests.cs"];
m14_6 [label="return Kernel.Get(serviceType, key);", span="38-38", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", file="StandardKernelTests.cs"];
m14_7 [label="Exit CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", span="27-27", cluster="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator.DoGetInstance(System.Type, string)", file="StandardKernelTests.cs"];
m14_14 [label="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator", span="", file="StandardKernelTests.cs"];
m15_4 [label="Entry Ninject.Modules.IModuleLoader.ScanAndLoadModules(string, System.Collections.Generic.IEnumerable<string>, bool)", span="49-49", cluster="Ninject.Modules.IModuleLoader.ScanAndLoadModules(string, System.Collections.Generic.IEnumerable<string>, bool)", file="ThreadScopeTests.cs"];
m15_5 [label="Exit Ninject.Modules.IModuleLoader.ScanAndLoadModules(string, System.Collections.Generic.IEnumerable<string>, bool)", span="49-49", cluster="Ninject.Modules.IModuleLoader.ScanAndLoadModules(string, System.Collections.Generic.IEnumerable<string>, bool)", file="ThreadScopeTests.cs"];
m15_0 [label="Entry Ninject.Modules.IModuleLoader.LoadModules(System.Reflection.Assembly)", span="34-34", cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Reflection.Assembly)", file="ThreadScopeTests.cs"];
m15_1 [label="Exit Ninject.Modules.IModuleLoader.LoadModules(System.Reflection.Assembly)", span="34-34", cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Reflection.Assembly)", file="ThreadScopeTests.cs"];
m15_2 [label="Entry Ninject.Modules.IModuleLoader.LoadModules(string)", span="40-40", cluster="Ninject.Modules.IModuleLoader.LoadModules(string)", file="ThreadScopeTests.cs"];
m15_3 [label="Exit Ninject.Modules.IModuleLoader.LoadModules(string)", span="40-40", cluster="Ninject.Modules.IModuleLoader.LoadModules(string)", file="ThreadScopeTests.cs"];
m16_7 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="TransientScopeTests.cs"];
m16_8 [label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_9 [label="context.Binding.DeactivationActions.Map(action => action(context, reference.Instance))", span="39-39", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_10 [label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_3 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="28-28", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="TransientScopeTests.cs"];
m16_0 [label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="27-27", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_1 [label="context.Binding.ActivationActions.Map(action => action(context, reference.Instance))", span="29-29", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_2 [label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="27-27", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="TransientScopeTests.cs"];
m16_11 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_5 [label="action(context, reference.Instance)", span="29-29", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_4 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_6 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_12 [label="action(context, reference.Instance)", span="39-39", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_13 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="TransientScopeTests.cs"];
m16_14 [label="Ninject.Activation.IContext", span="", file="TransientScopeTests.cs"];
m16_15 [label="Ninject.Activation.InstanceReference", span="", file="TransientScopeTests.cs"];
m16_16 [label="Ninject.Activation.IContext", span="", file="TransientScopeTests.cs"];
m16_17 [label="Ninject.Activation.InstanceReference", span="", file="TransientScopeTests.cs"];
n27 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n27 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n2 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n11 -> n2  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n14  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n20 -> n21  [key=0, style=solid];
n20 -> n12  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n18  [key=2, style=dotted];
n22 -> n19  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
n24 -> n25  [key=0, style=solid];
n24 -> n12  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n18  [key=2, style=dotted];
n26 -> n23  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_18  [key=3, color=darkorchid, style=bold, label="Parameter variable ApplicationUnhandledExceptionEventArgs e"];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_33  [key=2, style=dotted];
m1_29 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_27  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_6  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_14  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=ApplicationUnhandledExceptionEventArgs];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=ApplicationUnhandledExceptionEventArgs];
m1_20 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=ApplicationUnhandledExceptionEventArgs];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_21 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_22 -> m1_18  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_16  [key=0, style=bold, color=blue];
m1_34 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_34 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.SilverlightTests.App"];
m1_36 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=ApplicationUnhandledExceptionEventArgs];
m2_14 -> m2_15  [key=0, style=solid, color=green];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_18  [key=2, style=dotted, color=green];
m2_15 -> m2_19  [key=2, style=dotted, color=green];
m2_15 -> m2_22  [key=1, style=dashed, color=green, label=request];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [key=2, style=dotted];
m2_16 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_14  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_11  [key=2, style=dotted];
m2_69 -> m2_12  [key=2, style=dotted];
m2_69 -> m2_13  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_11  [key=2, style=dotted];
m2_70 -> m2_12  [key=2, style=dotted];
m2_70 -> m2_13  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_11  [key=2, style=dotted];
m2_71 -> m2_12  [key=2, style=dotted];
m2_71 -> m2_13  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_68  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_6  [key=3, color=darkorchid, style=bold, label="method methodReturn object Create"];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_3  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Activation.IContext context"];
m2_7 -> m2_6  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_11  [key=2, style=dotted];
m2_34 -> m2_12  [key=2, style=dotted];
m2_34 -> m2_13  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_11  [key=2, style=dotted];
m2_35 -> m2_12  [key=2, style=dotted];
m2_35 -> m2_13  [key=2, style=dotted];
m2_36 -> m2_33  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid, color=green];
m2_44 -> m2_45  [key=0, style=solid, color=green];
m2_44 -> m2_32  [key=2, style=dotted, color=green];
m2_44 -> m2_46  [key=1, style=dashed, color=green, label=foo];
m2_44 -> m2_47  [key=1, style=dashed, color=green, label=foo];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_32  [key=2, style=dotted];
m2_45 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=bar];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=2, style=dotted];
m2_48 -> m2_43  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_13  [key=2, style=dotted];
m2_8 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Creation.Provider<T>"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_13  [key=2, style=dotted];
m2_10 -> m2_7  [key=0, style=bold, color=blue];
m2_62 -> m2_63  [key=0, style=solid];
m2_63 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_28  [key=2, style=dotted];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_11  [key=2, style=dotted];
m2_51 -> m2_12  [key=2, style=dotted];
m2_51 -> m2_13  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_11  [key=2, style=dotted];
m2_52 -> m2_12  [key=2, style=dotted];
m2_52 -> m2_13  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_11  [key=2, style=dotted];
m2_53 -> m2_12  [key=2, style=dotted];
m2_53 -> m2_13  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_50  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_24  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_41 -> m2_32  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_66 -> m2_32  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_77 -> m2_32  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_61 -> m2_59  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_78 -> m2_76  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid, color=green];
m2_56 -> m2_57  [key=0, style=solid, color=green];
m2_56 -> m2_18  [key=2, style=dotted, color=green];
m2_56 -> m2_19  [key=2, style=dotted, color=green];
m2_56 -> m2_60  [key=1, style=dashed, color=green, label=request];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_20  [key=2, style=dotted];
m2_57 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_58 -> m2_55  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_32  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=foo];
m2_80 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=foo];
m2_81 -> m2_32  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=bar];
m2_81 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=bar];
m2_82 -> m2_32  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=baz];
m2_82 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=baz];
m2_83 -> m2_49  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_85 -> m2_49  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_84 -> m2_49  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_86 -> m2_79  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_20  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_20  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m2_100 -> m2_44  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_100 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_100 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_100 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_100 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_100 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m2_98 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_98 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_98 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_98 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_98 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_98 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m2_99 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_101 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_101 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m2_102 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_103 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m2_103 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_10  [key=2, style=dotted];
m4_25 -> m4_11  [key=2, style=dotted];
m4_25 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_12  [key=2, style=dotted];
m4_26 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_15  [key=2, style=dotted];
m4_28 -> m4_16  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_13  [key=2, style=dotted];
m4_27 -> m4_14  [key=2, style=dotted];
m4_27 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_29 -> m4_24  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_12  [key=2, style=dotted];
m4_37 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_15  [key=2, style=dotted];
m4_38 -> m4_40  [key=2, style=dotted];
m4_39 -> m4_36  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_15  [key=2, style=dotted];
m4_8 -> m4_16  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_14  [key=2, style=dotted];
m4_7 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_9 -> m4_4  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_30 -> m4_31  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_30  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_33  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_44 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.AssemblyNameRetrieverContext"];
m4_45 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName"];
m4_45 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithFileName"];
m4_46 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName"];
m4_46 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithAssemblyName"];
m4_47 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName"];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_4 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_4 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=instanceParameter];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_13  [key=2, style=dotted];
m5_6 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_14  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_15  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_16  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_12  [key=2, style=dotted];
m5_7 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=argumentsParameter];
m5_11 -> m5_4  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_66 -> m8_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<object> GetAll"];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_3  [key=2, style=dotted];
m8_67 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_68 -> m8_66  [key=0, style=bold, color=blue];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_3  [key=2, style=dotted];
m8_61 -> m8_5  [key=2, style=dotted];
m8_62 -> m8_60  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_3  [key=2, style=dotted];
m8_25 -> m8_4  [key=2, style=dotted];
m8_25 -> m8_5  [key=2, style=dotted];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_1 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_3  [key=2, style=dotted];
m8_55 -> m8_5  [key=2, style=dotted];
m8_55 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_56 -> m8_54  [key=0, style=bold, color=blue];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_3  [key=2, style=dotted];
m8_43 -> m8_5  [key=2, style=dotted];
m8_43 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_44 -> m8_42  [key=0, style=bold, color=blue];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<object> GetAll"];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_3  [key=2, style=dotted];
m8_74 -> m8_72  [key=0, style=bold, color=blue];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_3  [key=2, style=dotted];
m8_28 -> m8_4  [key=2, style=dotted];
m8_29 -> m8_27  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_3  [key=2, style=dotted];
m8_7 -> m8_4  [key=2, style=dotted];
m8_7 -> m8_5  [key=2, style=dotted];
m8_7 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_8 -> m8_6  [key=0, style=bold, color=blue];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<object> GetAll"];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_3  [key=2, style=dotted];
m8_65 -> m8_63  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_3  [key=2, style=dotted];
m8_37 -> m8_4  [key=2, style=dotted];
m8_38 -> m8_36  [key=0, style=bold, color=blue];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_3  [key=2, style=dotted];
m8_49 -> m8_5  [key=2, style=dotted];
m8_50 -> m8_48  [key=0, style=bold, color=blue];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_3  [key=2, style=dotted];
m8_31 -> m8_4  [key=2, style=dotted];
m8_31 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_32 -> m8_30  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_3  [key=2, style=dotted];
m8_19 -> m8_4  [key=2, style=dotted];
m8_19 -> m8_5  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_3  [key=2, style=dotted];
m8_13 -> m8_4  [key=2, style=dotted];
m8_13 -> m8_5  [key=2, style=dotted];
m8_14 -> m8_12  [key=0, style=bold, color=blue];
m8_69 -> m8_70  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_11 -> m8_9  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_23 -> m8_21  [key=0, style=bold, color=blue];
m8_34 -> m8_35  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_35 -> m8_33  [key=0, style=bold, color=blue];
m8_46 -> m8_47  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_47 -> m8_45  [key=0, style=bold, color=blue];
m8_58 -> m8_59  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_59 -> m8_57  [key=0, style=bold, color=blue];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_69  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_3  [key=2, style=dotted];
m8_16 -> m8_4  [key=2, style=dotted];
m8_16 -> m8_5  [key=2, style=dotted];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_3  [key=2, style=dotted];
m8_40 -> m8_5  [key=2, style=dotted];
m8_41 -> m8_39  [key=0, style=bold, color=blue];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_3  [key=2, style=dotted];
m8_52 -> m8_5  [key=2, style=dotted];
m8_53 -> m8_51  [key=0, style=bold, color=blue];
m8_3 -> m8_75  [key=0, style=solid];
m8_3 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_3 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>"];
m8_3 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Syntax.IResolutionRoot"];
m8_3 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Syntax.IResolutionRoot"];
m8_3 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_6  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_24  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_36  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter> parameters"];
m8_3 -> m8_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_42  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_48  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_54  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_63  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_66  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_72  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m8_3 -> m8_1  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isOptional"];
m8_3 -> m8_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_19  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_31  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_43  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_55  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_67  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> constraint"];
m8_3 -> m8_16  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isOptional"];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> n12  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> n12  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> n12  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_82  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_83  [key=2, style=dotted];
m8_80 -> m8_3  [key=0, style=bold, color=blue];
m8_84 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_85 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_86 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_87 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_88 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_89 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.ITarget"];
m9_38 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_38 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.ITarget"];
m9_38 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_38 -> m9_9  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Activation.IContext context"];
m9_38 -> m9_17  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Planning.Targets.ITarget target"];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> n12  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> n12  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_44  [key=2, style=dotted];
m9_41 -> m9_45  [key=2, style=dotted];
m9_41 -> m9_46  [key=2, style=dotted];
m9_41 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_47  [key=2, style=dotted];
m9_42 -> m9_48  [key=2, style=dotted];
m9_43 -> m9_38  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_9 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> n12  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_20  [key=2, style=dotted];
m9_12 -> m9_21  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_22  [key=2, style=dotted];
m9_14 -> m9_19  [key=0, style=solid];
m9_14 -> m9_23  [key=2, style=dotted];
m9_14 -> m9_24  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_25  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_26  [key=2, style=dotted];
m9_16 -> m9_27  [key=2, style=dotted];
m9_16 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_16 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label=directive];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_28  [key=2, style=dotted];
m9_17 -> m9_29  [key=2, style=dotted];
m9_17 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_30  [key=2, style=dotted];
m9_19 -> m9_9  [key=0, style=bold, color=blue];
m9_61 -> m9_62  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_33 -> m9_31  [key=0, style=bold, color=blue];
m9_37 -> m9_35  [key=0, style=bold, color=blue];
m9_50 -> m9_51  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_51 -> m9_49  [key=0, style=bold, color=blue];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_0  [key=2, style=dotted];
m9_62 -> m9_64  [key=2, style=dotted];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_20 -> m9_52  [key=0, style=solid];
m9_20 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> n12  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_55  [key=2, style=dotted];
m9_53 -> m9_56  [key=2, style=dotted];
m9_54 -> m9_20  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.IPlanner"];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.ISelector"];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.IPlanner"];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.ISelector"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> n12  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> n12  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> n12  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_57 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> n12  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_60 -> m9_57  [key=0, style=bold, color=blue];
m9_65 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_65 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Providers.StandardProvider"];
m9_66 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_66 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m9_67 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.ITarget"];
m9_68 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m11_9 -> m11_10  [key=0, style=solid];
m11_10 -> m11_0  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_9  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=green];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_6  [key=0, style=solid, color=green];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid, color=green];
m11_3 -> m11_4  [key=0, style=solid, color=green];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_6 -> m11_0  [key=0, style=bold, color=blue];
m11_14 -> m11_1  [key=1, style=dashed, color=green, label="Ninject.Infrastructure.DisposableObject"];
m11_14 -> m11_4  [key=1, style=dashed, color=green, label="Ninject.Infrastructure.DisposableObject"];
m11_14 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.DisposableObject"];
m11_14 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.DisposableObject"];
m11_14 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.DisposableObject"];
m11_14 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.DisposableObject"];
m12_100 -> m12_101  [key=0, style=solid];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_84  [key=2, style=dotted];
m12_101 -> m12_4  [key=2, style=dotted];
m12_102 -> m12_100  [key=0, style=bold, color=blue];
m12_69 -> m12_70  [key=0, style=solid];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_4  [key=2, style=dotted];
m12_71 -> m12_69  [key=0, style=bold, color=blue];
m12_81 -> m12_82  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_84  [key=2, style=dotted];
m12_82 -> m12_4  [key=2, style=dotted];
m12_83 -> m12_81  [key=0, style=bold, color=blue];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_15  [key=2, style=dotted];
m12_28 -> m12_16  [key=2, style=dotted];
m12_28 -> m12_20  [key=2, style=dotted];
m12_29 -> m12_27  [key=0, style=bold, color=blue];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_3  [key=2, style=dotted];
m12_6 -> m12_4  [key=2, style=dotted];
m12_7 -> m12_5  [key=0, style=bold, color=blue];
m12_21 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_3  [key=2, style=dotted];
m12_22 -> m12_20  [key=2, style=dotted];
m12_23 -> m12_21  [key=0, style=bold, color=blue];
m12_57 -> m12_58  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_60  [key=2, style=dotted];
m12_59 -> m12_57  [key=0, style=bold, color=blue];
m12_94 -> m12_95  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_84  [key=2, style=dotted];
m12_95 -> m12_4  [key=2, style=dotted];
m12_96 -> m12_94  [key=0, style=bold, color=blue];
m12_103 -> m12_104  [key=0, style=solid];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_45  [key=2, style=dotted];
m12_104 -> m12_4  [key=2, style=dotted];
m12_105 -> m12_103  [key=0, style=bold, color=blue];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [key=2, style=dotted];
m12_43 -> m12_4  [key=2, style=dotted];
m12_44 -> m12_42  [key=0, style=bold, color=blue];
m12_85 -> m12_86  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_45  [key=2, style=dotted];
m12_86 -> m12_4  [key=2, style=dotted];
m12_87 -> m12_85  [key=0, style=bold, color=blue];
m12_91 -> m12_92  [key=0, style=solid];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_45  [key=2, style=dotted];
m12_92 -> m12_4  [key=2, style=dotted];
m12_93 -> m12_91  [key=0, style=bold, color=blue];
m12_15 -> m12_120  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_121 -> m12_15  [key=0, style=bold, color=blue];
m12_117 -> m12_118  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_116  [key=2, style=dotted];
m12_119 -> m12_117  [key=0, style=bold, color=blue];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=2, style=dotted];
m12_9 -> m12_4  [key=2, style=dotted];
m12_10 -> m12_8  [key=0, style=bold, color=blue];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_41  [key=2, style=dotted];
m12_40 -> m12_38  [key=0, style=bold, color=blue];
m12_88 -> m12_89  [key=0, style=solid];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_84  [key=2, style=dotted];
m12_89 -> m12_4  [key=2, style=dotted];
m12_90 -> m12_88  [key=0, style=bold, color=blue];
m12_122 -> m12_123  [key=0, style=solid];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_45  [key=2, style=dotted];
m12_124 -> m12_122  [key=0, style=bold, color=blue];
m12_78 -> m12_79  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_20  [key=2, style=dotted];
m12_80 -> m12_78  [key=0, style=bold, color=blue];
m12_53 -> m12_54  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_56  [key=2, style=dotted];
m12_55 -> m12_53  [key=0, style=bold, color=blue];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_15  [key=2, style=dotted];
m12_13 -> m12_16  [key=2, style=dotted];
m12_13 -> m12_4  [key=2, style=dotted];
m12_14 -> m12_12  [key=0, style=bold, color=blue];
m12_50 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_45  [key=2, style=dotted];
m12_51 -> m12_20  [key=2, style=dotted];
m12_52 -> m12_50  [key=0, style=bold, color=blue];
m12_65 -> m12_66  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_68  [key=2, style=dotted];
m12_67 -> m12_65  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_3  [key=2, style=dotted];
m12_18 -> m12_20  [key=2, style=dotted];
m12_19 -> m12_17  [key=0, style=bold, color=blue];
m12_106 -> m12_107  [key=0, style=solid];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_109  [key=2, style=dotted];
m12_108 -> m12_106  [key=0, style=bold, color=blue];
m12_46 -> m12_47  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=2, style=dotted];
m12_48 -> m12_46  [key=0, style=bold, color=blue];
m12_35 -> m12_36  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_33  [key=2, style=dotted];
m12_36 -> m12_34  [key=2, style=dotted];
m12_36 -> m12_4  [key=2, style=dotted];
m12_37 -> m12_35  [key=0, style=bold, color=blue];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_33  [key=2, style=dotted];
m12_31 -> m12_34  [key=2, style=dotted];
m12_31 -> m12_20  [key=2, style=dotted];
m12_32 -> m12_30  [key=0, style=bold, color=blue];
m12_61 -> m12_62  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_64  [key=2, style=dotted];
m12_63 -> m12_61  [key=0, style=bold, color=blue];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_4  [key=2, style=dotted];
m12_74 -> m12_72  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_11  [key=2, style=dotted];
m12_25 -> m12_20  [key=2, style=dotted];
m12_26 -> m12_24  [key=0, style=bold, color=blue];
m12_125 -> m12_126  [key=0, style=solid];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_128  [key=2, style=dotted];
m12_127 -> m12_125  [key=0, style=bold, color=blue];
m12_113 -> m12_114  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_116  [key=2, style=dotted];
m12_115 -> m12_113  [key=0, style=bold, color=blue];
m12_97 -> m12_98  [key=0, style=solid];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_45  [key=2, style=dotted];
m12_98 -> m12_4  [key=2, style=dotted];
m12_99 -> m12_97  [key=0, style=bold, color=blue];
m12_110 -> m12_111  [key=0, style=solid];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_109  [key=2, style=dotted];
m12_112 -> m12_110  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_75 -> m12_76  [key=0, style=solid];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_20  [key=2, style=dotted];
m12_77 -> m12_75  [key=0, style=bold, color=blue];
m12_129 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>"];
m12_129 -> m12_123  [key=1, style=dashed, color=darkseagreen4, label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>"];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_4  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=2, style=dotted];
m14_12 -> m14_10  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_3 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=0, style=solid];
m14_5 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_9  [key=2, style=dotted];
m14_7 -> m14_3  [key=0, style=bold, color=blue];
m14_14 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator"];
m14_14 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator"];
m14_14 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator"];
m14_14 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="CommonServiceLocator.NinjectAdapter.NinjectServiceLocator"];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_3  [key=2, style=dotted];
m16_9 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_10 -> m16_8  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_11 -> m16_12  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_6 -> m16_4  [key=0, style=bold, color=blue];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_7  [key=2, style=dotted];
m16_13 -> m16_11  [key=0, style=bold, color=blue];
m16_14 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m16_15 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.InstanceReference"];
m16_16 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m16_17 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.InstanceReference"];
}
