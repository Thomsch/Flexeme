digraph  {
n37 [label="CommonMark.Syntax.Inline", span=""];
n0 [cluster="CommonMark.Syntax.Inline.Inline()", label="Entry CommonMark.Syntax.Inline.Inline()", span="14-14"];
n1 [cluster="CommonMark.Syntax.Inline.Inline()", label="Exit CommonMark.Syntax.Inline.Inline()", span="14-14"];
n2 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22"];
n3 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", label="this.Tag = tag", span="24-24"];
n4 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22"];
n5 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32"];
n6 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", label="this.Tag = tag", span="34-34"];
n7 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", label="this.LiteralContent = content", span="35-35"];
n8 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32"];
n9 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", span="41-41"];
n10 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="this.Tag = tag", span="43-43"];
n11 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="this.LiteralContentValue.Source = content", span="44-44"];
n12 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="this.LiteralContentValue.StartIndex = startIndex", span="45-45"];
n13 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="this.LiteralContentValue.Length = length", span="46-46"];
n14 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", span="41-41"];
n15 [cluster="CommonMark.Syntax.Inline.Inline(string)", label="Entry CommonMark.Syntax.Inline.Inline(string)", span="53-53"];
n16 [cluster="CommonMark.Syntax.Inline.Inline(string)", label="this.LiteralContent = content", span="58-58"];
n17 [cluster="CommonMark.Syntax.Inline.Inline(string)", label="Exit CommonMark.Syntax.Inline.Inline(string)", span="53-53"];
n18 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int)", label="Entry CommonMark.Syntax.Inline.Inline(string, int, int)", span="64-64"];
n19 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int)", label="this.LiteralContent = content", span="66-66"];
n20 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int)", label="this.SourcePosition = sourcePosition", span="67-67"];
n21 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int)", label="this.SourceLastPosition = sourceLastPosition", span="68-68"];
n22 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int)", label="Exit CommonMark.Syntax.Inline.Inline(string, int, int)", span="64-64"];
n23 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="Entry CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", span="74-74"];
n24 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="this.LiteralContentValue.Source = content", span="76-76"];
n25 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="this.LiteralContentValue.StartIndex = startIndex", span="77-77"];
n26 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="this.LiteralContentValue.Length = length", span="78-78"];
n27 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="this.SourcePosition = sourcePosition", span="79-79"];
n28 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="this.SourceLastPosition = sourceLastPosition", span="80-80"];
n29 [cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", label="Exit CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", span="74-74"];
n30 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="88-88"];
n31 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="this.Tag = tag", span="90-90"];
n32 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="this.FirstChild = content", span="91-91"];
n33 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="88-88"];
n34 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", label="Entry CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="94-94"];
n35 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", label="return new Inline()\r\n            {\r\n                Tag = InlineTag.Link,\r\n                FirstChild = label,\r\n                TargetUrl = url,\r\n                LiteralContent = title\r\n            };", span="96-102"];
n36 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", label="Exit CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="94-94"];
d9 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0, label="IRequest request = this.requestMock.Object", prediction=0, span="28-28"];
d39 [label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", span=""];
d8 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", span="26-26"];
d10 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0, label="this.block.CanResolve(request)", prediction=0, span="29-29"];
d11 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0, label="this.parentMock.Verify(x => x.CanResolve(request))", prediction=0, span="30-30"];
d16 [cluster="lambda expression", color=green, community=0, label="x.CanResolve(request)", prediction=0, span="30-30"];
d13 [cluster="Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest)", label="Entry Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest)", span="55-55"];
d12 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", span="26-26"];
d14 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
d15 [cluster="lambda expression", label="Entry lambda expression", span="30-30"];
d40 [label=request, span=""];
d17 [cluster="lambda expression", label="Exit lambda expression", span="30-30"];
d18 [cluster="Unk.CanResolve", label="Entry Unk.CanResolve", span=""];
d20 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0, label="IRequest request = this.requestMock.Object", prediction=0, span="36-36"];
d19 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", span="34-34"];
d21 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0, label="this.block.CanResolve(request, true)", prediction=0, span="37-37"];
d22 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0, label="this.parentMock.Verify(x => x.CanResolve(request, true))", prediction=0, span="38-38"];
d26 [cluster="lambda expression", color=green, community=0, label="x.CanResolve(request, true)", prediction=0, span="38-38"];
d24 [cluster="Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest, bool)", label="Entry Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest, bool)", span="70-70"];
d23 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", span="34-34"];
d25 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
d41 [label=request, span=""];
d27 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
d29 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0, label="IRequest request = this.requestMock.Object", prediction=8, span="47-47"];
d42 [label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject", span=""];
d28 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", span="45-45"];
d30 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0, label="this.block.Resolve(request)", prediction=8, span="48-48"];
d31 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0, label="this.parentMock.Verify(x => x.Resolve(request))", prediction=8, span="49-49"];
d35 [cluster="lambda expression", color=green, community=0, label="x.Resolve(request)", prediction=8, span="49-49"];
d33 [cluster="Ninject.Activation.Blocks.ActivationBlock.Resolve(Ninject.Activation.IRequest)", label="Entry Ninject.Activation.Blocks.ActivationBlock.Resolve(Ninject.Activation.IRequest)", span="83-83"];
d32 [cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", span="45-45"];
d34 [cluster="lambda expression", label="Entry lambda expression", span="49-49"];
d43 [label=request, span=""];
d36 [cluster="lambda expression", label="Exit lambda expression", span="49-49"];
d37 [cluster="Unk.Resolve", label="Entry Unk.Resolve", span=""];
m0_38 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="ActivationCacheTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="95-95"];
m0_29 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", file="ActivationCacheTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="122-122"];
m0_52 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", span="76-76"];
m0_53 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="var instance = new TestObject(42)", span="78-78"];
m0_54 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="this.testee.AddActivatedInstance(instance)", span="80-80"];
m0_55 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="instance.ChangeHashCode(43)", span="81-81"];
m0_56 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="var isActivated = this.testee.IsActivated(instance)", span="82-82"];
m0_57 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="isActivated.Should().BeTrue()", span="84-84"];
m0_58 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", span="76-76"];
m0_11 [cluster="Unk.Should", file="ActivationCacheTests.cs", label="Entry Unk.Should", span=""];
m0_30 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", span="48-48"];
m0_31 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="var instance = new TestObject(42)", span="50-50"];
m0_32 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="this.testee.AddDeactivatedInstance(instance)", span="52-52"];
m0_33 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="var deactivated = this.testee.IsDeactivated(instance)", span="53-53"];
m0_34 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="var deactivatedObjectCount = this.testee.DeactivatedObjectCount", span="54-54"];
m0_35 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="deactivated.Should().BeTrue()", span="56-56"];
m0_36 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="deactivatedObjectCount.Should().Be(1)", span="57-57"];
m0_37 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", span="48-48"];
m0_24 [cluster="Unk.Be", file="ActivationCacheTests.cs", label="Entry Unk.Be", span=""];
m0_51 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="ActivationCacheTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.Prune()", span="130-130"];
m0_13 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", span="27-27"];
m0_14 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="var instance = new TestObject(42)", span="29-29"];
m0_15 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="this.testee.AddActivatedInstance(instance)", span="31-31"];
m0_16 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="var activated = this.testee.IsActivated(instance)", span="32-32"];
m0_17 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="var activatedObjectCount = this.testee.ActivatedObjectCount", span="33-33"];
m0_18 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="activated.Should().BeTrue()", span="35-35"];
m0_19 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="activatedObjectCount.Should().Be(1)", span="36-36"];
m0_20 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", span="27-27"];
m0_39 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", span="61-61"];
m0_40 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="this.testee.AddActivatedInstance(new TestObject(42))", span="63-63"];
m0_41 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="this.testee.AddDeactivatedInstance(new TestObject(42))", span="64-64"];
m0_42 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="GC.Collect()", span="65-65"];
m0_43 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="GC.Collect()", span="66-66"];
m0_44 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="this.testee.Prune()", span="67-67"];
m0_45 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="var activatedObjectCount = this.testee.ActivatedObjectCount", span="68-68"];
m0_46 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="var deactivatedObjectCount = this.testee.DeactivatedObjectCount", span="69-69"];
m0_47 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="activatedObjectCount.Should().Be(0)", span="71-71"];
m0_48 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="deactivatedObjectCount.Should().Be(0)", span="72-72"];
m0_49 [cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", span="61-61"];
m0_12 [cluster="Unk.BeFalse", file="ActivationCacheTests.cs", label="Entry Unk.BeFalse", span=""];
m0_9 [cluster="object.Object()", file="ActivationCacheTests.cs", label="Entry object.Object()", span="0-0"];
m0_25 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", span="40-40"];
m0_26 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs", label="var activated = this.testee.IsDeactivated(new object())", span="42-42"];
m0_27 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs", label="activated.Should().BeFalse()", span="44-44"];
m0_28 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", span="40-40"];
m0_59 [cluster="Ninject.Tests.Unit.TestObject.ChangeHashCode(int)", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.TestObject.ChangeHashCode(int)", span="27-27"];
m0_50 [cluster="System.GC.Collect()", file="ActivationCacheTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m0_0 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", span="13-13"];
m0_1 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs", label="this.testee = new ActivationCache(new Mock<ICachePruner>().Object)", span="15-15"];
m0_2 [cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", span="13-13"];
m0_21 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m0_23 [cluster="Unk.BeTrue", file="ActivationCacheTests.cs", label="Entry Unk.BeTrue", span=""];
m0_3 [cluster="ActivationCache.cstr", file="ActivationCacheTests.cs", label="Entry ActivationCache.cstr", span=""];
m0_5 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs", label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", span="19-19"];
m0_6 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs", label="var activated = this.testee.IsActivated(new object())", span="21-21"];
m0_7 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs", label="activated.Should().BeFalse()", span="23-23"];
m0_8 [cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs", label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", span="19-19"];
m0_4 [cluster="Mock<ICachePruner>.cstr", file="ActivationCacheTests.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m0_10 [cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", file="ActivationCacheTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.IsActivated(object)", span="110-110"];
m0_22 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="ActivationCacheTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="83-83"];
m0_60 [file="ActivationCacheTests.cs", label="Ninject.Tests.Unit.ActivationCacheTests", span=""];
m1_70 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="299-299"];
m1_71 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="299-299"];
m1_46 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ActivationScopeTests.cs", label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext", span=""];
m1_47 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ActivationScopeTests.cs", label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", span=""];
m1_56 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="249-249"];
m1_57 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="249-249"];
m1_68 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="293-293"];
m1_69 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="293-293"];
m1_40 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", color=green, community=0, file="ActivationScopeTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf()", prediction=12, span="68-68"];
m1_41 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", color=green, community=0, file="ActivationScopeTests.cs", label="var instance = this.block.Get<NotifiesWhenDisposed>()", prediction=13, span="70-70"];
m1_10 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", span="68-68"];
m1_11 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", color=green, community=0, file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", prediction=14, span="68-68"];
m1_12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", color=green, community=0, file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", prediction=14, span="74-74"];
m1_13 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", color=green, community=0, file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", prediction=14, span="74-74"];
m1_14 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m1_15 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m1_38 [cluster="Unk.BeFalse", file="ActivationScopeTests.cs", label="Entry Unk.BeFalse", span=""];
m1_39 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs", label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", span="66-66"];
m1_26 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", label="Exit Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", span="39-39"];
m1_27 [cluster="Unk.NotBeSameAs", file="ActivationScopeTests.cs", label="Entry Unk.NotBeSameAs", span=""];
m1_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", span="62-62"];
m1_18 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m1_19 [cluster="Unk.Should", file="ActivationScopeTests.cs", label="Entry Unk.Should", span=""];
m1_8 [cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs", label="Exit Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", span="19-19"];
m1_17 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93"];
m1_42 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", color=green, community=0, file="ActivationScopeTests.cs", label="this.block.Dispose()", prediction=12, span="71-71"];
m1_43 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="73-73"];
m1_36 [cluster="System.GC.Collect()", file="ActivationScopeTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m1_37 [cluster="System.GC.WaitForPendingFinalizers()", file="ActivationScopeTests.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m1_50 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="228-228"];
m1_51 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="228-228"];
m1_58 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="256-256"];
m1_59 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="256-256"];
m1_4 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ActivationScopeTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m1_5 [cluster="Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", file="ActivationScopeTests.cs", label="Entry Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", span="28-28"];
m1_16 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93"];
m1_20 [cluster="Unk.BeSameAs", file="ActivationScopeTests.cs", label="Entry Unk.BeSameAs", span=""];
m1_21 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", span="39-39"];
m1_32 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="57-57"];
m1_33 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs", label="instance.IsDisposed.Should().BeFalse()", span="59-59"];
m1_44 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="193-193"];
m1_62 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="269-269"];
m1_63 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="269-269"];
m1_52 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="235-235"];
m1_53 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="235-235"];
m1_2 [cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", color=green, community=0, file="ActivationScopeTests.cs", label="this.block = new ActivationBlock(this.kernel)", prediction=18, span="16-16"];
m1_3 [cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", file="ActivationScopeTests.cs", label="Exit Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", span="13-13"];
m1_45 [cluster="Unk.BeTrue", file="ActivationScopeTests.cs", label="Entry Unk.BeTrue", span=""];
m1_24 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", color=green, community=0, file="ActivationScopeTests.cs", label="var weapon2 = this.kernel.Get<IWeapon>()", prediction=19, span="44-44"];
m1_25 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", label="weapon1.Should().NotBeSameAs(weapon2)", span="46-46"];
m1_22 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", color=green, community=0, file="ActivationScopeTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=14, span="41-41"];
m1_23 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", color=green, community=0, file="ActivationScopeTests.cs", label="var weapon1 = this.block.Get<IWeapon>()", prediction=21, span="43-43"];
m1_54 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="242-242"];
m1_55 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="242-242"];
m1_0 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m1_1 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m1_66 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="287-287"];
m1_67 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="287-287"];
m1_28 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs", label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", span="50-50"];
m1_29 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", color=green, community=0, file="ActivationScopeTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf()", prediction=14, span="52-52"];
m1_6 [cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs", label="Entry Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", span="19-19"];
m1_7 [cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs", label="this.kernel.Dispose()", span="21-21"];
m1_64 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="282-282"];
m1_65 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="282-282"];
m1_48 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="ActivationScopeTests.cs", label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed", span=""];
m1_49 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="221-221"];
m1_35 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", span="154-154"];
m1_34 [cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs", label="Exit Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", span="50-50"];
m1_30 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", color=green, community=0, file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", prediction=14, span="140-140"];
m1_31 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", span="140-140"];
m1_60 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="ActivationScopeTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262"];
m1_61 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="ActivationScopeTests.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262"];
m2_12 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="29-29"];
m2_15 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ActivationStrategyTests.cs", label="return LinqReflection.ToArraySlow(ResolveInstances(service, parent), service);", prediction=24, span="34-34"];
m2_14 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Type service = Type.GetElementType()", span="33-33"];
m2_13 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Type.IsArray", span="31-31"];
m2_16 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Type.IsGenericType", span="37-37"];
m2_17 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Type gtd = Type.GetGenericTypeDefinition()", span="39-39"];
m2_18 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Type service = Type.GetGenericArguments()[0]", span="40-40"];
m2_20 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="return LinqReflection.ToListSlow(ResolveInstances(service, parent), service);", span="43-43"];
m2_22 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="return LinqReflection.CastSlow(ResolveInstances(service, parent), service);", span="46-46"];
m2_23 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="return ResolveInstances(Type, parent).FirstOrDefault();", span="49-49"];
m2_19 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="typeof(ICollection<>).IsAssignableFrom(gtd)", span="42-42"];
m2_21 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="typeof(IEnumerable<>).IsAssignableFrom(gtd)", span="45-45"];
m2_24 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="29-29"];
m2_25 [cluster="System.Type.GetElementType()", file="ActivationStrategyTests.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m2_0 [cluster="Ninject.Planning.Targets.Target<T>.Target(T)", file="ActivationStrategyTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.Target(T)", span="19-19"];
m2_2 [cluster="Ninject.Planning.Targets.Target<T>.Target(T)", file="ActivationStrategyTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.Target(T)", span="19-19"];
m2_30 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ActivationStrategyTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m2_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ActivationStrategyTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_4 [cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs", label="Entry Ninject.NinjectSettings.Set(string, object)", span="143-143"];
m2_5 [cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs", label="_values[key] = value", span="145-145"];
m2_6 [cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs", label="Exit Ninject.NinjectSettings.Set(string, object)", span="143-143"];
m2_32 [cluster="Ninject.Infrastructure.LinqReflection.CastSlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs", label="Entry Ninject.Infrastructure.LinqReflection.CastSlow(System.Collections.IEnumerable, System.Type)", span="8-8"];
m2_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ActivationStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m2_37 [cluster="Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Planning.Targets.ITarget)", file="ActivationStrategyTests.cs", label="Entry Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Planning.Targets.ITarget)", span="19-19"];
m2_38 [cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="13-13"];
m2_29 [cluster="System.Type.GetGenericArguments()", file="ActivationStrategyTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_39 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="55-55"];
m2_8 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="26-26"];
m2_10 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="26-26"];
m2_9 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="new Func<IBindingMetadata, bool>(a.Matches)", span="26-26"];
m2_40 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="ctx.Resolve()", span="55-55"];
m2_41 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="55-55"];
m2_31 [cluster="Ninject.Infrastructure.LinqReflection.ToListSlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs", label="Entry Ninject.Infrastructure.LinqReflection.ToListSlow(System.Collections.IEnumerable, System.Type)", span="20-20"];
m2_7 [cluster="Unk.Select", file="ActivationStrategyTests.cs", label="Ninject.NinjectSettings", span=""];
m2_11 [cluster="Func<IBindingMetadata, bool>.cstr", file="ActivationStrategyTests.cs", label="Entry Func<IBindingMetadata, bool>.cstr", span=""];
m2_42 [cluster="Ninject.Activation.Hooks.IHook.Resolve()", file="ActivationStrategyTests.cs", label="Entry Ninject.Activation.Hooks.IHook.Resolve()", span="6-6"];
m2_28 [cluster="System.Type.GetGenericTypeDefinition()", file="ActivationStrategyTests.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m2_26 [cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", span="52-52"];
m2_34 [cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="var request = parent.Request.CreateChild(service, this)", span="54-54"];
m2_35 [cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="return parent.Kernel.Resolve(request).Select(ctx => ctx.Resolve());", span="55-55"];
m2_36 [cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", span="52-52"];
m2_27 [cluster="Ninject.Infrastructure.LinqReflection.ToArraySlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs", label="Entry Ninject.Infrastructure.LinqReflection.ToArraySlow(System.Collections.IEnumerable, System.Type)", span="14-14"];
m2_43 [file="ActivationStrategyTests.cs", label="Ninject.Planning.Targets.Target<T>", span=""];
m3_3 [cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs", label="Entry Ninject.Activation.Hooks.ConstantHook.Resolve()", span="13-13"];
m3_4 [cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs", label="return Value;", span="15-15"];
m3_5 [cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs", label="Exit Ninject.Activation.Hooks.ConstantHook.Resolve()", span="13-13"];
m3_0 [cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs", label="Entry Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", span="8-8"];
m3_1 [cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs", label="Value = value", span="10-10"];
m3_2 [cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs", label="Exit Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", span="8-8"];
m3_6 [file="AssemblyNameRetriever.cs", label="Ninject.Activation.Hooks.ConstantHook", span=""];
m4_12 [cluster="Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="30-30"];
m4_24 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="45-45"];
m4_25 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", prediction=25, span="47-47"];
m4_26 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                    new[] { expected.FullName },\r\n                    asm => true)", prediction=26, span="49-51"];
m4_27 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", prediction=27, span="53-53"];
m4_29 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs", label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="45-45"];
m4_36 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="61-61"];
m4_39 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="AssemblyNameRetrieverTests.cs", label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="61-61"];
m4_14 [cluster="Unk.ToList", file="AssemblyNameRetrieverTests.cs", label="Entry Unk.ToList", span=""];
m4_20 [cluster="string.StartsWith(string)", file="AssemblyNameRetrieverTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m4_15 [cluster="Unk.Should", file="AssemblyNameRetrieverTests.cs", label="Entry Unk.Should", span=""];
m4_4 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="29-29"];
m4_5 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", prediction=28, span="31-31"];
m4_6 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                    new[] { this.ModuleFilename, this.AssemblyFilename },\r\n                    asm => asm.FullName.StartsWith(''Ninject.Tests.TestModule''))", prediction=29, span="33-35"];
m4_8 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="assemblyFullNames.Should().BeEquivalentTo(new[] { expected.FullName })", prediction=28, span="38-38"];
m4_7 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", prediction=31, span="37-37"];
m4_9 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs", label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="29-29"];
m4_40 [cluster="Unk.BeEmpty", file="AssemblyNameRetrieverTests.cs", label="Entry Unk.BeEmpty", span=""];
m4_11 [cluster="System.Reflection.Assembly.GetName()", file="AssemblyNameRetrieverTests.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m4_10 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="AssemblyNameRetrieverTests.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m4_41 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Entry lambda expression", span="63-63"];
m4_17 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Entry lambda expression", span="35-35"];
m4_21 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Entry lambda expression", span="37-37"];
m4_18 [cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="asm.FullName.StartsWith(''Ninject.Tests.TestModule'')", prediction=32, span="35-35"];
m4_19 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Exit lambda expression", span="35-35"];
m4_22 [cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="a.FullName", prediction=33, span="37-37"];
m4_23 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Exit lambda expression", span="37-37"];
m4_30 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Entry lambda expression", span="51-51"];
m4_33 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Entry lambda expression", span="53-53"];
m4_31 [cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label=true, prediction=34, span="51-51"];
m4_32 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Exit lambda expression", span="51-51"];
m4_34 [cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs", label="a.FullName", prediction=35, span="53-53"];
m4_35 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Exit lambda expression", span="53-53"];
m4_43 [cluster="lambda expression", file="AssemblyNameRetrieverTests.cs", label="Exit lambda expression", span="63-63"];
m4_0 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="20-20"];
m4_2 [cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="AssemblyNameRetrieverTests.cs", label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="20-20"];
m4_3 [cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="AssemblyNameRetrieverTests.cs", label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="22-22"];
m4_16 [cluster="Unk.BeEquivalentTo", file="AssemblyNameRetrieverTests.cs", label="Entry Unk.BeEquivalentTo", span=""];
m4_13 [cluster="Unk.Select", file="AssemblyNameRetrieverTests.cs", label="Entry Unk.Select", span=""];
m4_44 [file="AssemblyNameRetrieverTests.cs", label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext", span=""];
m4_45 [file="AssemblyNameRetrieverTests.cs", label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName", span=""];
m4_46 [file="AssemblyNameRetrieverTests.cs", label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName", span=""];
m4_47 [file="AssemblyNameRetrieverTests.cs", label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName", span=""];
m5_0 [cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="Barracks.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4"];
m5_1 [cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="Barracks.cs", label="Exit Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4"];
m5_2 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="Barracks.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m5_3 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="Barracks.cs", label="this.Warrior = warrior", prediction=36, span="10-10"];
m5_4 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="Barracks.cs", label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m5_5 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", span="13-13"];
m5_6 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs", label="this.Weapon = weapon", prediction=37, span="15-15"];
m5_7 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs", label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", span="13-13"];
m5_8 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18"];
m5_9 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs", label="this.Warrior = warrior", prediction=38, span="20-20"];
m5_10 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs", label="this.Weapon = weapon", prediction=39, span="21-21"];
m5_11 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs", label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18"];
m5_12 [file="Barracks.cs", label="Ninject.Tests.Fakes.Barracks", span=""];
m6_3 [cluster="Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs", label="Entry Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", span="43-43"];
m6_4 [cluster="Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs", label="Exit Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", span="43-43"];
m6_0 [cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs", label="Entry Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", span="33-33"];
m6_1 [cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs", label="return this.CreateInstance(context);", span="35-35"];
m6_2 [cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs", label="Exit Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", span="33-33"];
m6_5 [file="BindingActionStrategyTests.cs", label="Ninject.Activation.Provider<T>", span=""];
m7_28 [cluster="Unk.CreateContextMock", file="CachePruningTests.cs", label="Entry Unk.CreateContextMock", span=""];
m7_61 [cluster="System.Type.GetRuntimeMethods()", file="CachePruningTests.cs", label="Entry System.Type.GetRuntimeMethods()", span="0-0"];
m7_69 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="CachePruningTests.cs", label="this.GenericArguments = genericArguments", span="115-115"];
m7_70 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="CachePruningTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="111-111"];
m7_71 [cluster="Ninject.WinRTFilters.FilterPublic<T>(System.Collections.Generic.IEnumerable<T>, bool)", file="CachePruningTests.cs", label="Exit Ninject.WinRTFilters.FilterPublic<T>(System.Collections.Generic.IEnumerable<T>, bool)", span="112-112"];
m7_26 [cluster="System.WeakReference.WeakReference(object)", file="CachePruningTests.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m7_41 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="CachePruningTests.cs", label="swordCollected.Should().BeFalse()", span="65-65"];
m7_75 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123"];
m7_76 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs", label="return this.scope.Target;", span="125-125"];
m7_77 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123"];
m7_78 [cluster="Ninject.WinRTFilters.FilterPublic(System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>, bool)", file="CachePruningTests.cs", label="Exit Ninject.WinRTFilters.FilterPublic(System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>, bool)", span="118-118"];
m7_34 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="74-74"];
m7_39 [cluster="lambda expression", file="CachePruningTests.cs", label="this.InjectionHeuristics.Any(h => p != null && h.ShouldInject(p))", span="75-75"];
m7_37 [cluster="System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo)", file="CachePruningTests.cs", label="Entry System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo)", span="63-63"];
m7_38 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="75-75"];
m7_36 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="74-74"];
m7_40 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="75-75"];
m7_35 [cluster="lambda expression", file="CachePruningTests.cs", label="p.GetPropertyFromDeclaredType(p)", span="74-74"];
m7_42 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="75-75"];
m7_13 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="CachePruningTests.cs", label="var sword = new Sword()", span="38-38"];
m7_66 [cluster="lambda expression", file="CachePruningTests.cs", label="h.ShouldInject(m)", span="102-102"];
m7_68 [cluster="Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="CachePruningTests.cs", label="Entry Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", span="27-27"];
m7_67 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="102-102"];
m7_31 [cluster="Unk.AddRange", file="CachePruningTests.cs", label="Entry Unk.AddRange", span=""];
m7_32 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", file="CachePruningTests.cs", label="Entry Ninject.Selection.Selector.GetPrivateProperties(System.Type)", span="89-89"];
m7_44 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="75-75"];
m7_45 [cluster="Unk.ShouldInject", color=green, community=0, file="CachePruningTests.cs", label="Entry Unk.ShouldInject", prediction=40, span=""];
m7_46 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="return type.GetRuntimeProperties().FilterPublic(Settings.InjectNonPublic).Where(p => p.DeclaringType == type && p.IsPrivate())\r\n                .Where(p => this.InjectionHeuristics.Any(h => h.ShouldInject(p)));", prediction=40, span="91-92"];
m7_47 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="Exit Ninject.Selection.Selector.GetPrivateProperties(System.Type)", prediction=40, span="89-89"];
m7_48 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="91-91"];
m7_9 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs", label="var constructors = tInfo.DeclaredConstructors.FilterPublic(Settings.InjectNonPublic)", span="59-59"];
m7_12 [cluster="System.Type.GetTypeInfo()", file="CachePruningTests.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m7_22 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="properties.AddRange(this.GetPrivateProperties(type.GetTypeInfo().BaseType))", prediction=40, span="82-82"];
m7_14 [cluster="System.Collections.Generic.IEnumerable<T>.FilterPublic<T>(bool)", file="CachePruningTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.FilterPublic<T>(bool)", span="112-112"];
m7_21 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="parentType != null", prediction=44, span="80-80"];
m7_23 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="parentType = parentType.GetTypeInfo().BaseType", prediction=45, span="80-80"];
m7_19 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="this.Settings.InjectParentPrivateProperties", prediction=40, span="78-78"];
m7_18 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs", label="properties.AddRange(\r\n                type.GetRuntimeProperties().FilterPublic(Settings.InjectNonPublic)\r\n                    .Select(p => p.GetPropertyFromDeclaredType(p))\r\n                    .Where(p => this.InjectionHeuristics.Any(h => p != null && h.ShouldInject(p))))", span="72-75"];
m7_20 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs", label="Type parentType = type.GetTypeInfo().BaseType", prediction=47, span="80-80"];
m7_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CachePruningTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m7_17 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs", label="List<PropertyInfo> properties = new List<PropertyInfo>()", span="70-70"];
m7_16 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs", label="Entry Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", span="68-68"];
m7_24 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs", label="return properties;", span="86-86"];
m7_51 [cluster="Unk.Returns", file="CachePruningTests.cs", label="Entry Unk.Returns", span=""];
m7_25 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CachePruningTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m7_59 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="CachePruningTests.cs", label="return type.GetRuntimeMethods().FilterPublic(Settings.InjectNonPublic).Where(m => InjectionHeuristics.Any(h => h.ShouldInject(m)));", span="102-102"];
m7_58 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CachePruningTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m7_60 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="CachePruningTests.cs", label="Exit Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", span="100-100"];
m7_30 [cluster="System.GC.Collect()", file="CachePruningTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m7_27 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="CachePruningTests.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m7_43 [cluster="lambda expression", file="CachePruningTests.cs", label="p != null && h.ShouldInject(p)", span="75-75"];
m7_50 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="91-91"];
m7_4 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="CachePruningTests.cs", label="this.cachePrunerMock = new Mock<ICachePruner>()", span="29-29"];
m7_3 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs", label="Exit Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="43-43"];
m7_5 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs", label="Entry Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", span="54-54"];
m7_6 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs", label="type.GetTypeInfo().IsSubclassOf(typeof(MulticastDelegate))", span="56-56"];
m7_7 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs", label="return null;", span="57-57"];
m7_52 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="92-92"];
m7_49 [cluster="lambda expression", file="CachePruningTests.cs", label="p.DeclaringType == type && p.IsPrivate()", span="91-91"];
m7_72 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="115-115"];
m7_53 [cluster="lambda expression", file="CachePruningTests.cs", label="this.InjectionHeuristics.Any(h => h.ShouldInject(p))", span="92-92"];
m7_56 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs", label="this.cache.Remember(context, new InstanceReference { Instance = sword })", span="77-77"];
m7_54 [cluster="lambda expression", color=green, community=0, file="CachePruningTests.cs", label="b.BindingConfiguration", prediction=48, span="71-71"];
m7_55 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="71-71"];
m7_57 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75"];
m7_62 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="102-102"];
m7_63 [cluster="lambda expression", file="CachePruningTests.cs", label="InjectionHeuristics.Any(h => h.ShouldInject(m))", span="102-102"];
m7_64 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="102-102"];
m7_65 [cluster="lambda expression", file="CachePruningTests.cs", label="Entry lambda expression", span="102-102"];
m7_73 [cluster="lambda expression", file="CachePruningTests.cs", label="!m.IsStatic && (nonPublic || m.IsPublic)", span="115-115"];
m7_74 [cluster="lambda expression", file="CachePruningTests.cs", label="Exit lambda expression", span="115-115"];
m7_33 [cluster="Unk.BeTrue", file="CachePruningTests.cs", label="Entry Unk.BeTrue", span=""];
m7_29 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75"];
m7_8 [cluster="Mock<ICachePruner>.cstr", file="CachePruningTests.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m7_11 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", file="CachePruningTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", span="81-81"];
m7_0 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs", label="Entry Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="43-43"];
m7_1 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs", label="ConstructorScorer = constructorScorer", span="45-45"];
m7_79 [file="CachePruningTests.cs", label="Ninject.Selection.Selector", span=""];
m7_80 [file="CachePruningTests.cs", label="?", span=""];
m7_81 [file="CachePruningTests.cs", label="System.Type", span=""];
m7_82 [file="CachePruningTests.cs", label="?", span=""];
m7_83 [file="CachePruningTests.cs", label="System.Reflection.MethodInfo", span=""];
m7_84 [file="CachePruningTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", span=""];
m7_85 [file="CachePruningTests.cs", label="Ninject.Tests.Unit.CacheTests.ContextMock", span=""];
m8_144 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191"];
m8_145 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="var sword = new Sword()", span="193-193"];
m8_146 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="194-194"];
m8_147 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="195-195"];
m8_148 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="196-196"];
m8_154 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="instance1.Should().BeNull()", span="204-204"];
m8_155 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="instance2.Should().BeNull()", span="205-205"];
m8_156 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191"];
m8_128 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172"];
m8_129 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="174-174"];
m8_130 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="var sword = new Sword()", span="175-175"];
m8_132 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="177-177"];
m8_131 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="176-176"];
m8_133 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="178-178"];
m8_139 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="instance1.Should().BeNull()", span="186-186"];
m8_140 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="instance2.Should().NotBeNull()", span="187-187"];
m8_141 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172"];
m8_157 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="CacheTests.cs", label="Entry Ninject.Activation.Caching.Cache.Clear()", span="202-202"];
m8_20 [cluster="Mock<IContext>.cstr", file="CacheTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m8_174 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231"];
m8_175 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="233-233"];
m8_176 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="var scopeOfScope = new TestObject(42)", span="234-234"];
m8_178 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="var context = CreateContext(scope, this.bindingConfiguration)", span="236-236"];
m8_177 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="var sword = new Sword()", span="235-235"];
m8_183 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="instance.Should().BeNull()", span="243-243"];
m8_184 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231"];
m8_49 [cluster="Unk.Should", file="CacheTests.cs", label="Entry Unk.Should", span=""];
m8_7 [cluster="Mock<IBindingConfiguration>.cstr", file="CacheTests.cs", label="Entry Mock<IBindingConfiguration>.cstr", span=""];
m8_10 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28"];
m8_11 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="var contextMock = new Mock<IContext>()", span="30-30"];
m8_13 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="bindingMock.SetupGet(binding => binding.BindingConfiguration).Returns(bindingConfiguration)", span="32-32"];
m8_15 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="contextMock.Setup(context => context.GetScope()).Returns(scope)", span="34-34"];
m8_16 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="contextMock.SetupGet(context => context.GenericArguments).Returns(genericArguments)", span="35-35"];
m8_17 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="contextMock.SetupGet(context => context.HasInferredGenericArguments).Returns(genericArguments != null && genericArguments.Length > 0)", span="36-36"];
m8_12 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="var bindingMock = new Mock<IBinding>()", span="31-31"];
m8_14 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="contextMock.SetupGet(context => context.Binding).Returns(bindingMock.Object)", span="33-33"];
m8_18 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="return contextMock.Object;", span="37-37"];
m8_19 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28"];
m8_48 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="CacheTests.cs", label="Entry Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="104-104"];
m8_50 [cluster="Unk.BeNull", file="CacheTests.cs", label="Entry Unk.BeNull", span=""];
m8_104 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136"];
m8_105 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="138-138"];
m8_106 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="var instance = new Sword()", span="139-139"];
m8_108 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="141-141"];
m8_107 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="140-140"];
m8_111 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="result.Should().BeTrue()", span="146-146"];
m8_112 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136"];
m8_9 [cluster="Cache.cstr", file="CacheTests.cs", label="Entry Cache.cstr", span=""];
m8_62 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="CacheTests.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="76-76"];
m8_89 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112"];
m8_90 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="114-114"];
m8_91 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="115-115"];
m8_92 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="116-116"];
m8_93 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(double))", span="117-117"];
m8_96 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="instance.Should().BeNull()", span="122-122"];
m8_97 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112"];
m8_72 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82"];
m8_73 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="84-84"];
m8_74 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="85-85"];
m8_75 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="var context2 = CreateContext(null, this.bindingConfiguration)", span="86-86"];
m8_78 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="instance.Should().BeNull()", span="91-91"];
m8_79 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82"];
m8_61 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CacheTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m8_142 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="CacheTests.cs", label="Entry Ninject.Activation.Caching.Cache.Clear(object)", span="187-187"];
m8_169 [cluster="Unk.CreateContext", file="CacheTests.cs", label="Entry Unk.CreateContext", span=""];
m8_114 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150"];
m8_115 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="152-152"];
m8_116 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="var sword = new Sword()", span="153-153"];
m8_118 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="155-155"];
m8_119 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="var readContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="156-156"];
m8_117 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="154-154"];
m8_124 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="instance1.Should().BeSameAs(reference.Instance)", span="163-163"];
m8_125 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="result.Should().BeTrue()", span="164-164"];
m8_126 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="instance2.Should().BeNull()", span="165-165"];
m8_127 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150"];
m8_103 [cluster="Unk.BeFalse", file="CacheTests.cs", label="Entry Unk.BeFalse", span=""];
m8_34 [cluster="Unk.GetScope", file="CacheTests.cs", label="Entry Unk.GetScope", span=""];
m8_80 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98"];
m8_81 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="100-100"];
m8_82 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="101-101"];
m8_83 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="102-102"];
m8_84 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="103-103"];
m8_87 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="instance.Should().BeSameAs(reference.Instance)", span="108-108"];
m8_88 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98"];
m8_24 [cluster="Unk.Setup", file="CacheTests.cs", label="Entry Unk.Setup", span=""];
m8_22 [cluster="Unk.SetupGet", file="CacheTests.cs", label="Entry Unk.SetupGet", span=""];
m8_158 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212"];
m8_159 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="var scopeMock = new Mock<INotifyWhenDisposed>()", span="214-214"];
m8_160 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="var sword = new Sword()", span="215-215"];
m8_162 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="var context = CreateContext(scopeMock.Object, this.bindingConfiguration)", span="217-217"];
m8_164 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="scopeMock.Raise(scope => scope.Disposed += null, EventArgs.Empty)", span="220-220"];
m8_161 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="216-216"];
m8_166 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="instance.Should().BeNull()", span="223-223"];
m8_167 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212"];
m8_143 [cluster="Unk.NotBeNull", file="CacheTests.cs", label="Entry Unk.NotBeNull", span=""];
m8_60 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CacheTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m8_21 [cluster="Mock<IBinding>.cstr", file="CacheTests.cs", label="Entry Mock<IBinding>.cstr", span=""];
m8_63 [cluster="Unk.BeSameAs", file="CacheTests.cs", label="Entry Unk.BeSameAs", span=""];
m8_171 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="220-220"];
m8_25 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="32-32"];
m8_28 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="33-33"];
m8_31 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="34-34"];
m8_35 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="35-35"];
m8_38 [cluster="lambda expression", file="CacheTests.cs", label="Entry lambda expression", span="36-36"];
m8_26 [cluster="lambda expression", file="CacheTests.cs", label="binding.BindingConfiguration", span="32-32"];
m8_27 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="32-32"];
m8_29 [cluster="lambda expression", file="CacheTests.cs", label="context.Binding", span="33-33"];
m8_30 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="33-33"];
m8_32 [cluster="lambda expression", file="CacheTests.cs", label="context.GetScope()", span="34-34"];
m8_33 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="34-34"];
m8_36 [cluster="lambda expression", file="CacheTests.cs", label="context.GenericArguments", span="35-35"];
m8_37 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="35-35"];
m8_39 [cluster="lambda expression", file="CacheTests.cs", label="context.HasInferredGenericArguments", span="36-36"];
m8_40 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="36-36"];
m8_172 [cluster="lambda expression", file="CacheTests.cs", label="scope.Disposed += null", span="220-220"];
m8_173 [cluster="lambda expression", file="CacheTests.cs", label="Exit lambda expression", span="220-220"];
m8_98 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129"];
m8_100 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs", label="result.Should().BeFalse()", span="132-132"];
m8_101 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129"];
m8_170 [cluster="Unk.Raise", file="CacheTests.cs", label="Entry Unk.Raise", span=""];
m8_0 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20"];
m8_1 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="this.cachePrunerMock = new Mock<ICachePruner>()", span="22-22"];
m8_2 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="this.bindingConfiguration = new Mock<IBindingConfiguration>().Object", span="23-23"];
m8_3 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="this.pipelineMock = new Mock<IPipeline>()", span="24-24"];
m8_4 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="this.cache = new Cache(this.pipelineMock.Object, this.cachePrunerMock.Object)", span="25-25"];
m8_5 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20"];
m8_41 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44"];
m8_42 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="46-46"];
m8_43 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs", label="var context = CreateContext(scope, this.bindingConfiguration)", span="47-47"];
m8_45 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs", label="instance.Should().BeNull()", span="51-51"];
m8_46 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44"];
m8_102 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="CacheTests.cs", label="Entry Ninject.Activation.Caching.Cache.Release(object)", span="146-146"];
m8_47 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m8_113 [cluster="Unk.BeTrue", file="CacheTests.cs", label="Entry Unk.BeTrue", span=""];
m8_168 [cluster="Mock<INotifyWhenDisposed>.cstr", file="CacheTests.cs", label="Entry Mock<INotifyWhenDisposed>.cstr", span=""];
m8_64 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69"];
m8_65 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="71-71"];
m8_66 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="72-72"];
m8_67 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="73-73"];
m8_70 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="instance.Should().BeNull()", span="78-78"];
m8_71 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69"];
m8_23 [cluster="Unk.Returns", file="CacheTests.cs", label="Entry Unk.Returns", span=""];
m8_51 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55"];
m8_52 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var scope = new TestObject(42)", span="57-57"];
m8_53 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="58-58"];
m8_54 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="59-59"];
m8_55 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration)", span="60-60"];
m8_58 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="instance.Should().BeSameAs(reference.Instance)", span="65-65"];
m8_59 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55"];
m8_8 [cluster="Mock<IPipeline>.cstr", file="CacheTests.cs", label="Entry Mock<IPipeline>.cstr", span=""];
m8_6 [cluster="Mock<ICachePruner>.cstr", file="CacheTests.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m8_185 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.CacheContext", span=""];
m8_186 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", span=""];
m8_187 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", span=""];
m8_188 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", span=""];
m8_189 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", span=""];
m8_190 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", span=""];
m8_191 [file="CacheTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", span=""];
m9_3 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs", label="Entry Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", span="20-20"];
m9_4 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs", label="this.contextMock = new Mock<IContext>()", span="22-22"];
m9_5 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs", label="Exit Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", span="20-20"];
m9_7 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs", label="Entry Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", span="29-29"];
m9_8 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs", label="var sword = new Sword()", span="31-31"];
m9_9 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", color=green, community=0, file="CallbackProviderTests.cs", label="this.provider = new CallbackProvider<Sword>(c => sword)", prediction=49, span="32-32"];
m9_11 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs", label="result.Should().BeSameAs(sword)", span="36-36"];
m9_10 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", color=green, community=0, file="CallbackProviderTests.cs", label="var result = this.provider.Create(this.contextMock.Object)", prediction=50, span="34-34"];
m9_12 [cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs", label="Exit Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", span="29-29"];
m9_15 [cluster="Unk.Create", file="CallbackProviderTests.cs", label="Entry Unk.Create", span=""];
m9_6 [cluster="Mock<IContext>.cstr", file="CallbackProviderTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m9_14 [cluster="Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", file="CallbackProviderTests.cs", label="Entry Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", span="23-23"];
m9_17 [cluster="Unk.BeSameAs", file="CallbackProviderTests.cs", label="Entry Unk.BeSameAs", span=""];
m9_18 [cluster="lambda expression", file="CallbackProviderTests.cs", label="Entry lambda expression", span="32-32"];
m9_19 [cluster="lambda expression", color=green, community=0, file="CallbackProviderTests.cs", label=sword, prediction=51, span="32-32"];
m9_20 [cluster="lambda expression", file="CallbackProviderTests.cs", label="Exit lambda expression", span="32-32"];
m9_13 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CallbackProviderTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m9_16 [cluster="Unk.Should", file="CallbackProviderTests.cs", label="Entry Unk.Should", span=""];
m9_0 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs", label="Entry Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", span="15-15"];
m9_1 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs", label="this.SetUp()", span="17-17"];
m9_2 [cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs", label="Exit Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", span="15-15"];
m9_21 [file="CallbackProviderTests.cs", label="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext", span=""];
m9_22 [file="CallbackProviderTests.cs", label="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled", span=""];
m9_23 [file="CallbackProviderTests.cs", label=sword, span=""];
m10_24 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CircularDependenciesTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m10_25 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="CircularDependenciesTests.cs", label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="337-337"];
m10_27 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<IDecoratorPattern>()", prediction=52, span="47-47"];
m10_32 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="51-51"];
m10_34 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="53-53"];
m10_35 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<TwoWayConstructorFoo>()", prediction=52, span="53-53"];
m10_26 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", span="45-45"];
m10_28 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", span="45-45"];
m10_29 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m10_30 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="51-51"];
m10_31 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", color=green, community=0, file="CircularDependenciesTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<TwoWayConstructorFoo>())", prediction=52, span="53-53"];
m10_36 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="53-53"];
m10_37 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="59-59"];
m10_126 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", span="203-203"];
m10_127 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs", label="var bar = this.kernel.Get<TwoWayConstructorPropertyBar>()", prediction=55, span="205-205"];
m10_128 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs", label="var foo = this.kernel.Get<TwoWayConstructorPropertyFoo>()", prediction=56, span="206-206"];
m10_129 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="bar.Foo.Should().BeSameAs(foo)", span="207-207"];
m10_130 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", span="203-203"];
m10_19 [cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", file="CircularDependenciesTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", span="160-160"];
m10_21 [cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", color=green, community=0, file="CircularDependenciesTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", prediction=52, span="160-160"];
m10_20 [cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", file="CircularDependenciesTests.cs", label="return parent.GetTypeInfo().HasAttribute(attributeType);", span="162-162"];
m10_22 [cluster="System.Type.GetTypeInfo()", file="CircularDependenciesTests.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m10_14 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m10_59 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Resolve(request)", prediction=52, span="97-97"];
m10_60 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="93-93"];
m10_61 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="101-101"];
m10_63 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="101-101"];
m10_64 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="103-103"];
m10_65 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<ThreeWayConstructorFoo>()", prediction=52, span="103-103"];
m10_62 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", color=green, community=0, file="CircularDependenciesTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<ThreeWayConstructorFoo>())", prediction=52, span="103-103"];
m10_66 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="103-103"];
m10_90 [cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103"];
m10_117 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", span="191-191"];
m10_118 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", color=green, community=0, file="CircularDependenciesTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<TwoWayConstructorPropertyFoo>())", prediction=61, span="193-193"];
m10_119 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", span="191-191"];
m10_67 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CircularDependenciesTests.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m10_68 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", color=green, community=0, file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", prediction=52, span="0-0"];
m10_69 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="Entry lambda expression", prediction=52, span="247-247"];
m10_70 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="attributes.All(attribute => attribute.Matches(metadata))", prediction=52, span="247-247"];
m10_71 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="247-247"];
m10_43 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="67-67"];
m10_50 [cluster="Unk.Should", file="CircularDependenciesTests.cs", label="Entry Unk.Should", span=""];
m10_52 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="85-85"];
m10_51 [cluster="Unk.BeSameAs", file="CircularDependenciesTests.cs", label="Entry Unk.BeSameAs", span=""];
m10_53 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<ThreeWayConstructorFoo>().ToSelf().InSingletonScope()", prediction=52, span="87-87"];
m10_18 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33"];
m10_7 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", file="CircularDependenciesTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", span="114-114"];
m10_8 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="28-28"];
m10_9 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<TwoWayConstructorFoo>().ToSelf().InSingletonScope()", prediction=52, span="30-30"];
m10_6 [cluster="Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", file="CircularDependenciesTests.cs", label="Entry Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", span="51-51"];
m10_113 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", span="184-184"];
m10_114 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<TwoWayConstructorPropertyFoo>().ToSelf().InSingletonScope()", prediction=61, span="186-186"];
m10_115 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<TwoWayConstructorPropertyBar>().ToSelf().InSingletonScope()", prediction=61, span="187-187"];
m10_116 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", span="184-184"];
m10_72 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="117-117"];
m10_123 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", span="197-197"];
m10_124 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<TwoWayConstructorPropertyBar>()", prediction=61, span="199-199"];
m10_125 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", span="197-197"];
m10_17 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="143-143"];
m10_38 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", prediction=70, span="200-200"];
m10_39 [cluster="System.Collections.IEnumerable.CastSlow(System.Type)", color=green, community=0, file="CircularDependenciesTests.cs", label="Entry System.Collections.IEnumerable.CastSlow(System.Type)", prediction=70, span="20-20"];
m10_40 [cluster="System.Collections.IEnumerable.ToArraySlow(System.Type)", file="CircularDependenciesTests.cs", label="Entry System.Collections.IEnumerable.ToArraySlow(System.Type)", span="26-26"];
m10_16 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs", label="return ExtensionsForICustomAttributeProvider.IsDefined(Site, attributeType, inherit);", span="147-147"];
m10_105 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", span="171-171"];
m10_106 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind(typeof(IGeneric<>)).To(typeof(GenericServiceWithGenericConstructor<>))", prediction=72, span="173-173"];
m10_107 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", color=green, community=0, file="CircularDependenciesTests.cs", label="Action act = () => this.kernel.Get<IGeneric<int>>()", prediction=73, span="175-175"];
m10_108 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs", label="act.ShouldThrow<ActivationException>()", span="177-177"];
m10_109 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", span="171-171"];
m10_98 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", span="163-163"];
m10_99 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", color=green, community=0, file="CircularDependenciesTests.cs", label="Action act = () => this.kernel.Get<IOptions<ClassC>>()", prediction=74, span="165-165"];
m10_100 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs", label="act.ShouldThrow<ActivationException>()", span="167-167"];
m10_101 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", span="163-163"];
m10_48 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="bar.Foo.Should().BeSameAs(foo)", span="79-79"];
m10_42 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<TwoWayPropertyFoo>()", prediction=70, span="69-69"];
m10_23 [cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="CircularDependenciesTests.cs", label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="32-32"];
m10_10 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<TwoWayConstructorBar>().ToSelf().InSingletonScope()", prediction=52, span="31-31"];
m10_44 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="CircularDependenciesTests.cs", label="var request = parent.Request.CreateChild(service, parent, this)", span="202-202"];
m10_45 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs", label="request.IsOptional = true", prediction=77, span="203-203"];
m10_46 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs", label="return parent.Kernel.Resolve(request);", prediction=70, span="204-204"];
m10_47 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="CircularDependenciesTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", span="200-200"];
m10_49 [cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="54-54"];
m10_95 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", span="156-156"];
m10_96 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", color=green, community=0, file="CircularDependenciesTests.cs", label="var o = this.kernel.Get<HasOptionsPropertyInjected>()", prediction=79, span="158-158"];
m10_97 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", span="156-156"];
m10_76 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs", label="var foo = this.kernel.Get<ThreeWayPropertyFoo>()", prediction=80, span="125-125"];
m10_11 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IDecoratorPattern>().To<Decorator1>().WhenInjectedInto<Decorator2>()", prediction=52, span="33-33"];
m10_12 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IDecoratorPattern>().To<Decorator2>()", prediction=52, span="34-34"];
m10_13 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="28-28"];
m10_54 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<ThreeWayConstructorBar>().ToSelf().InSingletonScope()", prediction=52, span="88-88"];
m10_55 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<ThreeWayConstructorBaz>().ToSelf().InSingletonScope()", prediction=52, span="89-89"];
m10_56 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="85-85"];
m10_57 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="93-93"];
m10_92 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", span="149-149"];
m10_93 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<IOptions<ClassA>>()", prediction=72, span="151-151"];
m10_94 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", span="149-149"];
m10_120 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="193-193"];
m10_74 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="117-117"];
m10_73 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<ThreeWayPropertyFoo>()", prediction=52, span="119-119"];
m10_75 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="123-123"];
m10_103 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<IOptions<ClassC>>()", prediction=72, span="165-165"];
m10_102 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="165-165"];
m10_104 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="165-165"];
m10_111 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<IGeneric<int>>()", prediction=72, span="175-175"];
m10_110 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="175-175"];
m10_112 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="175-175"];
m10_121 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Get<TwoWayConstructorPropertyFoo>()", prediction=61, span="193-193"];
m10_122 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="193-193"];
m10_58 [cluster="Ninject.Infrastructure.Language.ExtensionsForICustomAttributeProvider.HasAttribute(System.Reflection.ICustomAttributeProvider, System.Type)", file="CircularDependenciesTests.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForICustomAttributeProvider.HasAttribute(System.Reflection.ICustomAttributeProvider, System.Type)", span="26-26"];
m10_83 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", span="137-137"];
m10_84 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind(typeof(IOptions<>)).To(typeof(OptionsManager<>))", prediction=72, span="139-139"];
m10_85 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IConfigureOptions<ClassA>>().To<ConfigureA1>()", prediction=72, span="141-141"];
m10_86 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IConfigureOptions<ClassB>>().To<ConfigureB1>()", prediction=72, span="142-142"];
m10_87 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IConfigureOptions<ClassC>>().To<HasCircularDependency1>()", prediction=72, span="143-143"];
m10_88 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs", label="this.kernel.Bind<IConfigureOptions<ClassD>>().To<HasCircularDependency2>()", prediction=72, span="144-144"];
m10_89 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", span="137-137"];
m10_15 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="143-143"];
m10_77 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs", label="Ninject.Planning.Targets.Target<T>", prediction=52, span=""];
m10_79 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="Ninject.Planning.Bindings.IBindingMetadata", span=""];
m10_81 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="baz.Foo.Should().BeSameAs(foo)", span="131-131"];
m10_78 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs", label=attributes, prediction=52, span=""];
m10_80 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="bar.Baz.Should().BeSameAs(baz)", span="130-130"];
m10_82 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="123-123"];
m10_91 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="CircularDependenciesTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="39-39"];
m10_41 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="67-67"];
m10_0 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", span="95-95"];
m10_2 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs", label="this.Site = site", span="98-98"];
m10_3 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs", label="this.constraint = new Future<Func<IBindingMetadata, bool>>(ReadConstraintFromTarget)", span="100-100"];
m10_4 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs", label="this.isOptional = new Future<bool>(ReadOptionalFromTarget)", span="101-101"];
m10_5 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", span="95-95"];
m10_155 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", span=""];
m10_156 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", span=""];
m10_157 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", span=""];
m10_158 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", span=""];
m10_159 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", span=""];
m10_160 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", span=""];
m12_49 [cluster="Unk.Any", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Any", span=""];
m12_41 [cluster="Unk.Never", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Never", span=""];
m12_21 [cluster="Unk.Should", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Should", span=""];
m12_30 [cluster="Unk.Load", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Load", span=""];
m12_19 [cluster="Unk.>", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.>", span=""];
m12_24 [cluster="Unk.Be", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Be", span=""];
m12_7 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="31-31"];
m12_8 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="var expected = Assembly.LoadFrom(this.moduleFilename).GetName().Name", span="33-33"];
m12_9 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", color=green, community=0, file="CompiledModuleLoaderPluginTests.cs", label="IEnumerable<Assembly> actual = null", prediction=97, span="35-35"];
m12_14 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="actual.Where(a => a.GetName().Name == expected).Should().NotBeEmpty()", span="42-42"];
m12_12 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="actual.Should().NotBeNull()", span="40-40"];
m12_13 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="actual.Count().Should().Be(1)", span="41-41"];
m12_15 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="31-31"];
m12_16 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="CompiledModuleLoaderPluginTests.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m12_20 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="CompiledModuleLoaderPluginTests.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="64-64"];
m12_26 [cluster="Unk.NotBeEmpty", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.NotBeEmpty", span=""];
m12_25 [cluster="Unk.Where", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Where", span=""];
m12_6 [cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="CompiledModuleLoaderPluginTests.cs", label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="22-22"];
m12_18 [cluster="Unk.Setup", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.Setup", span=""];
m12_37 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="CompiledModuleLoaderPluginTests.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="46-46"];
m12_38 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", color=green, community=0, file="CompiledModuleLoaderPluginTests.cs", label="this.loaderPlugin.LoadModules(new[] { this.assemblyFilename })", prediction=98, span="48-48"];
m12_40 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="CompiledModuleLoaderPluginTests.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="46-46"];
m12_0 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="CompiledModuleLoaderPluginTests.cs", label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="21-21"];
m12_1 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", color=green, community=0, file="CompiledModuleLoaderPluginTests.cs", label="this.kernelMock = new Mock<IKernel>()", prediction=99, span="23-23"];
m12_3 [cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="CompiledModuleLoaderPluginTests.cs", label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="21-21"];
m12_22 [cluster="Unk.NotBeNull", file="CompiledModuleLoaderPluginTests.cs", label="Entry Unk.NotBeNull", span=""];
m12_17 [cluster="System.Reflection.Assembly.GetName()", file="CompiledModuleLoaderPluginTests.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m12_46 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Entry lambda expression", span="49-49"];
m12_35 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="a.GetName().Name == expected", span="42-42"];
m12_27 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Entry lambda expression", span="36-36"];
m12_31 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Entry lambda expression", span="37-37"];
m12_34 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Entry lambda expression", span="42-42"];
m12_29 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Exit lambda expression", span="36-36"];
m12_32 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="actual = m", span="37-37"];
m12_33 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Exit lambda expression", span="37-37"];
m12_36 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Exit lambda expression", span="42-42"];
m12_43 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Entry lambda expression", span="49-49"];
m12_45 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Exit lambda expression", span="49-49"];
m12_48 [cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs", label="Exit lambda expression", span="49-49"];
m12_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="CompiledModuleLoaderPluginTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_4 [cluster="Mock<IKernel>.cstr", file="CompiledModuleLoaderPluginTests.cs", label="Entry Mock<IKernel>.cstr", span=""];
m12_5 [cluster="CompiledModuleLoaderPlugin.cstr", file="CompiledModuleLoaderPluginTests.cs", label="Entry CompiledModuleLoaderPlugin.cstr", span=""];
m12_50 [file="CompiledModuleLoaderPluginTests.cs", label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", span=""];
m12_51 [file="CompiledModuleLoaderPluginTests.cs", label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", span=""];
m12_52 [file="CompiledModuleLoaderPluginTests.cs", label=expected, span=""];
m13_7 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="64-64"];
m13_10 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Another module (of type {0}) with the same name has already been loaded'', existingModule.GetType().Format())", span="70-70"];
m13_11 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="72-72"];
m13_12 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have not accidentally loaded the same module twice.'')", span="73-73"];
m13_13 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) If you are using automatic module loading, ensure you have not manually loaded a module'')", span="75-75"];
m13_14 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="sw.WriteLine(''     that may be found by the module loader.'')", span="76-76"];
m13_16 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="64-64"];
m13_32 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", span="108-108"];
m13_33 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="110-110"];
m13_34 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="112-112"];
m13_42 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(request.FormatActivationPath())", span="121-121"];
m13_44 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0} only once.'', request.Service.Format())", span="124-124"];
m13_35 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''More than one matching bindings are available.'')", span="113-113"];
m13_36 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''Matching bindings:'')", span="115-115"];
m13_41 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="120-120"];
m13_43 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="123-123"];
m13_45 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="return sw.ToString();", span="126-126"];
m13_46 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", span="108-108"];
m13_24 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="88-88"];
m13_27 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="94-94"];
m13_28 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure you have previously loaded the module and the name is spelled correctly.'')", span="95-95"];
m13_29 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) Ensure you have not accidentally created more than one kernel.'')", span="96-96"];
m13_30 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="98-98"];
m13_31 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="88-88"];
m13_90 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="214-214"];
m13_91 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="216-216"];
m13_92 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="218-218"];
m13_96 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="223-223"];
m13_93 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''No constructor was available to create an instance of the implementation type.'')", span="219-219"];
m13_94 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="220-220"];
m13_95 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="222-222"];
m13_97 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="225-225"];
m13_98 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="226-226"];
m13_99 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.'')", span="227-227"];
m13_100 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="229-229"];
m13_101 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="214-214"];
m13_173 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", span="389-389"];
m13_177 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="sw.Write(''['')", span="391-391"];
m13_178 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="var name = attribute.GetType().Format()", span="392-392"];
m13_180 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="sw.Write(name)", span="394-394"];
m13_181 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="sw.Write('']'')", span="395-395"];
m13_179 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="name = name.EndsWith(''Attribute'') ? name.Substring(0, name.Length - 9) : name", span="393-393"];
m13_182 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", span="389-389"];
m13_6 [cluster="string.Format(string, object, object)", file="ComponentContainerTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_21 [cluster="System.IO.TextWriter.WriteLine(string, object)", file="ComponentContainerTests.cs", label="Entry System.IO.TextWriter.WriteLine(string, object)", span="0-0"];
m13_47 [cluster="Ninject.Activation.IRequest.FormatActivationPath()", file="ComponentContainerTests.cs", label="Entry Ninject.Activation.IRequest.FormatActivationPath()", span="37-37"];
m13_18 [cluster="object.GetType()", file="ComponentContainerTests.cs", label="Entry object.GetType()", span="0-0"];
m13_159 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", span="360-360"];
m13_160 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="constructor.GetCustomAttributes(false)", span="362-362"];
m13_161 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="FormatAttribute(sw, attribute)", span="364-364"];
m13_162 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.Write(constructor.DeclaringType.Name)", span="367-367"];
m13_163 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.Write(''('')", span="368-368"];
m13_164 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="constructor.GetParameters()", span="369-369"];
m13_166 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="FormatAttribute(sw, attribute)", span="373-373"];
m13_167 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.Write(parameterInfo.ParameterType.Format())", span="376-376"];
m13_168 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.Write('' '')", span="377-377"];
m13_169 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.Write(parameterInfo.Name)", span="378-378"];
m13_170 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="sw.WriteLine('')'')", span="381-381"];
m13_165 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="parameterInfo.GetCustomAttributes(false)", span="371-371"];
m13_171 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", span="360-360"];
m13_78 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", span="191-191"];
m13_79 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="193-193"];
m13_80 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error registering binding(s) for {0}'', serviceNames)", span="195-195"];
m13_81 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''The type {0} used in a call to {1}() is not a valid attribute.'', type.Format(), methodName)", span="196-196"];
m13_87 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''     such as {0}<SomeAttribute>().'', methodName)", span="203-203"];
m13_82 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="197-197"];
m13_83 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="199-199"];
m13_84 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have passed the correct type.'')", span="200-200"];
m13_85 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) If you have defined your own attribute type, ensure that it extends System.Attribute.'')", span="201-201"];
m13_86 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  3) To avoid problems with type-safety, use the generic version of the the method instead,'')", span="202-202"];
m13_88 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="205-205"];
m13_89 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", span="191-191"];
m13_111 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="259-259"];
m13_112 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="261-261"];
m13_113 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="263-263"];
m13_114 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''No such component has been registered in the kernel's component container.'')", span="264-264"];
m13_115 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="265-265"];
m13_116 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="267-267"];
m13_117 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) If you have created a custom subclass for KernelBase, ensure that you have properly'')", span="268-268"];
m13_118 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''     implemented the AddComponents() method.'')", span="269-269"];
m13_119 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) Ensure that you have not removed the component from the container via a call to RemoveAll().'')", span="270-270"];
m13_120 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="271-271"];
m13_121 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="273-273"];
m13_122 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="259-259"];
m13_172 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ComponentContainerTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m13_0 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="44-44"];
m13_1 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs", label="return ''Modules with null or empty names are not supported'';", span="46-46"];
m13_2 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="44-44"];
m13_183 [cluster="string.EndsWith(string)", file="ComponentContainerTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m13_62 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="163-163"];
m13_63 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="165-165"];
m13_64 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="167-167"];
m13_68 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="172-172"];
m13_70 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have not declared a dependency for {0} on any implementations of the service.'', context.Request.Service.Format())", span="175-175"];
m13_65 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''A cyclical dependency was detected between the constructors of two services.'')", span="168-168"];
m13_66 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="169-169"];
m13_67 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="171-171"];
m13_69 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="174-174"];
m13_71 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) Consider combining the services into a single one to remove the cycle.'')", span="176-176"];
m13_73 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''     if you need initialization logic to be run after property values have been injected.'')", span="178-178"];
m13_74 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="180-180"];
m13_75 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="163-163"];
m13_123 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="283-283"];
m13_124 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="285-285"];
m13_125 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="287-287"];
m13_126 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''No matching property {0}.'', propertyName)", span="288-288"];
m13_128 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(request.FormatActivationPath())", span="291-291"];
m13_127 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="290-290"];
m13_129 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="293-293"];
m13_130 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have the correct property name.'')", span="294-294"];
m13_131 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="296-296"];
m13_132 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="283-283"];
m13_20 [cluster="System.IO.TextWriter.WriteLine(string, object, object)", file="ComponentContainerTests.cs", label="Entry System.IO.TextWriter.WriteLine(string, object, object)", span="0-0"];
m13_184 [cluster="string.Substring(int, int)", file="ComponentContainerTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m13_3 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="53-53"];
m13_4 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs", label="return string.Format(''Target '{0}' at site '{1}' does not have a default value.'', target.Member, target.Name);", span="55-55"];
m13_5 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="53-53"];
m13_76 [cluster="Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Entry Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", span="60-60"];
m13_174 [cluster="System.IO.StringWriter.Write(string)", file="ComponentContainerTests.cs", label="Entry System.IO.StringWriter.Write(string)", span="0-0"];
m13_102 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239"];
m13_103 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="241-241"];
m13_104 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="243-243"];
m13_105 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''No constructor was available to create an instance of the registered implementation type {0}.'', implementation.Format())", span="244-244"];
m13_106 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="245-245"];
m13_107 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="247-247"];
m13_108 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="248-248"];
m13_109 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="250-250"];
m13_110 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239"];
m13_133 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="305-305"];
m13_134 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="307-307"];
m13_135 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="309-309"];
m13_138 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="313-313"];
m13_136 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Provider returned null.'')", span="310-310"];
m13_137 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="312-312"];
m13_139 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="315-315"];
m13_140 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that the provider handles creation requests properly.'')", span="316-316"];
m13_141 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="318-318"];
m13_142 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="305-305"];
m13_176 [cluster="System.Reflection.ParameterInfo.GetCustomAttributes(bool)", file="ComponentContainerTests.cs", label="Entry System.Reflection.ParameterInfo.GetCustomAttributes(bool)", span="0-0"];
m13_22 [cluster="System.IO.TextWriter.WriteLine(string)", file="ComponentContainerTests.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m13_23 [cluster="System.IO.StringWriter.ToString()", file="ComponentContainerTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m13_17 [cluster="System.IO.StringWriter.StringWriter()", file="ComponentContainerTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m13_48 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="135-135"];
m13_49 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="137-137"];
m13_50 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="139-139"];
m13_53 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(request.FormatActivationPath())", span="143-143"];
m13_55 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0}.'', request.Service.Format())", span="146-146"];
m13_51 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''No matching bindings are available, and the type is not self-bindable.'')", span="140-140"];
m13_52 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="142-142"];
m13_57 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="148-148"];
m13_58 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  4) If you are using constructor arguments, ensure that the parameter name matches the constructors parameter name.'')", span="149-149"];
m13_60 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="154-154"];
m13_61 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="135-135"];
m13_77 [cluster="System.IO.TextWriter.WriteLine()", file="ComponentContainerTests.cs", label="Entry System.IO.TextWriter.WriteLine()", span="0-0"];
m13_143 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", span="328-328"];
m13_144 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="var sw = new StringWriter()", span="330-330"];
m13_145 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="332-332"];
m13_149 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label=bestDirectives, span="337-337"];
m13_153 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="345-345"];
m13_146 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Several constructors have the same priority. Please specify the constructor using ToConstructor syntax or add an Inject attribute.'')", span="333-333"];
m13_147 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="334-334"];
m13_148 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Constructors:'')", span="336-336"];
m13_150 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="FormatConstructor(constructorInjectionDirective.Constructor, sw)", span="339-339"];
m13_151 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine()", span="342-342"];
m13_152 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Activation path:'')", span="344-344"];
m13_154 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''Suggestions:'')", span="347-347"];
m13_155 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="348-348"];
m13_156 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="sw.WriteLine(''  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.'')", span="349-349"];
m13_157 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="return sw.ToString();", span="351-351"];
m13_158 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", span="328-328"];
m13_175 [cluster="System.Reflection.MethodBase.GetParameters()", file="ComponentContainerTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m13_19 [cluster="System.Type.Format()", file="ComponentContainerTests.cs", label="Entry System.Type.Format()", span="212-212"];
m14_11 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="85-85"];
m14_12 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="var attackAbility = this.kernel.Get<IAttackAbility>()", span="87-87"];
m14_13 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="attackAbility.Should().BeOfType<UnknownAttack>()", span="88-88"];
m14_14 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="85-85"];
m14_8 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="23-23"];
m14_9 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m14_0 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="75-75"];
m14_1 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="this.kernel = new StandardKernel()", span="77-77"];
m14_2 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="this.kernel.Bind<IVariableWeapon>().To<Hammer>()", span="78-78"];
m14_3 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="this.kernel.Bind<IAttackAbility>().To<UnknownAttack>()", span="79-79"];
m14_4 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="this.kernel.Bind<IAttackAbility>().To<StrongAttack>().WhenTargetHas<StrongAttribute>()", span="80-80"];
m14_5 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="this.kernel.Bind<IAttackAbility>().To<WeakAttack>().WhenTargetHas<WeakAttribute>()", span="81-81"];
m14_6 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="75-75"];
m14_17 [cluster="Unk.>", file="ConditionalAttributeBindingTests.cs", label="Entry Unk.>", span=""];
m14_33 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="47-47"];
m14_7 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m14_10 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104"];
m14_15 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m14_25 [cluster="Unk.NotBeNull", file="ConditionalAttributeBindingTests.cs", label="Entry Unk.NotBeNull", span=""];
m14_32 [cluster="System.IDisposable.Dispose()", file="ConditionalAttributeBindingTests.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m14_26 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="101-101"];
m14_27 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", color=green, community=0, file="ConditionalAttributeBindingTests.cs", label="disposing && !this.IsDisposed", prediction=100, span="103-103"];
m14_30 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="base.Dispose( disposing )", span="108-108"];
m14_28 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="this.kernel.Dispose()", span="105-105"];
m14_29 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="this.kernel = null", span="106-106"];
m14_31 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="101-101"];
m14_18 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="92-92"];
m14_19 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="var hammer = this.kernel.Get<IVariableWeapon>()", span="94-94"];
m14_20 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="hammer.Should().NotBeNull()", span="95-95"];
m14_21 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="hammer.StrongAttack.Should().BeOfType<StrongAttack>()", span="96-96"];
m14_22 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="hammer.WeakAttack.Should().BeOfType<WeakAttack>()", span="97-97"];
m14_23 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="hammer.WtfAttack.Should().BeOfType<UnknownAttack>()", span="98-98"];
m14_24 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="92-92"];
m14_16 [cluster="Unk.Should", file="ConditionalAttributeBindingTests.cs", label="Entry Unk.Should", span=""];
m14_34 [file="ConditionalAttributeBindingTests.cs", label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", span=""];
m15_231 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="22-22"];
m15_207 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274"];
m15_208 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="276-276"];
m15_209 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", prediction=101, span="277-277"];
m15_210 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", prediction=101, span="278-279"];
m15_211 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="281-281"];
m15_212 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", prediction=101, span="282-282"];
m15_213 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<NinjaBarracks>().ToSelf()", prediction=101, span="283-283"];
m15_214 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=107, span="285-285"];
m15_215 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barracks = this.kernel.Get<Barracks>()", prediction=108, span="286-286"];
m15_217 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="289-289"];
m15_216 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var ninja = this.kernel.Get<NinjaBarracks>()", prediction=109, span="287-287"];
m15_218 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="290-290"];
m15_219 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="ninja.Weapon.Should().BeOfType<Sword>()", span="291-291"];
m15_220 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274"];
m15_80 [cluster="Ninject.Tests.Fakes.ShortSword.ShortSword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.ShortSword.ShortSword()", span="2-2"];
m15_124 [cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103"];
m15_136 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168"];
m15_137 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="170-170"];
m15_138 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", prediction=101, span="171-171"];
m15_139 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", prediction=101, span="172-173"];
m15_140 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="175-175"];
m15_141 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", prediction=101, span="176-176"];
m15_142 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<NinjaBarracks>().ToSelf()", prediction=101, span="177-177"];
m15_143 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=116, span="179-179"];
m15_144 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barracks = this.kernel.Get<Barracks>()", prediction=117, span="180-180"];
m15_146 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="183-183"];
m15_145 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var ninja = this.kernel.Get<NinjaBarracks>()", prediction=118, span="181-181"];
m15_147 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="184-184"];
m15_148 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="ninja.Weapon.Should().BeOfType<Sword>()", span="185-185"];
m15_149 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168"];
m15_300 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104"];
m15_71 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89"];
m15_74 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", prediction=101, span="94-94"];
m15_72 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="91-91"];
m15_73 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="92-92"];
m15_75 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).When(_ => true)", prediction=101, span="95-95"];
m15_76 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", prediction=121, span="96-96"];
m15_77 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="97-97"];
m15_78 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="98-98"];
m15_79 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89"];
m15_293 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377"];
m15_294 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", prediction=101, span="379-379"];
m15_295 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="380-380"];
m15_296 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenTargetHas<WeakAttribute>()", prediction=101, span="381-381"];
m15_297 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", prediction=125, span="383-383"];
m15_298 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<ShortSword>()", span="384-384"];
m15_299 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377"];
m15_151 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189"];
m15_152 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="191-191"];
m15_153 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>))", prediction=101, span="192-192"];
m15_154 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="193-193"];
m15_155 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<ClosedGenericService>()", prediction=129, span="195-195"];
m15_156 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="197-197"];
m15_157 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189"];
m15_126 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154"];
m15_127 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="156-156"];
m15_128 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(new[] { typeof(IGenericService<>) })", span="157-157"];
m15_129 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="158-158"];
m15_130 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", prediction=132, span="160-160"];
m15_131 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", prediction=133, span="161-161"];
m15_132 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="163-163"];
m15_133 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="164-164"];
m15_134 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154"];
m15_232 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", span="152-152"];
m15_111 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131"];
m15_112 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="133-133"];
m15_113 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<IWarrior>()", prediction=101, span="134-134"];
m15_114 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<IWarrior>()", prediction=136, span="136-136"];
m15_115 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="138-138"];
m15_116 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131"];
m15_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33"];
m15_12 [cluster="Unk.Should", file="ConditionalBindingTests.cs", label="Entry Unk.Should", span=""];
m15_0 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m15_1 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="14-14"];
m15_2 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", prediction=101, span="15-15"];
m15_3 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="16-16"];
m15_4 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=140, span="17-17"];
m15_5 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="18-18"];
m15_6 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m15_82 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90"];
m15_197 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="59-59"];
m15_8 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m15_13 [cluster="Unk.>", file="ConditionalBindingTests.cs", label="Entry Unk.>", span=""];
m15_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m15_88 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102"];
m15_92 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", prediction=101, span="108-108"];
m15_89 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="104-104"];
m15_91 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="106-106"];
m15_93 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(sword)", prediction=101, span="109-109"];
m15_90 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var sword = new Sword()", span="105-105"];
m15_94 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", prediction=143, span="110-110"];
m15_95 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", prediction=144, span="111-111"];
m15_96 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="112-112"];
m15_97 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(sword)", span="113-113"];
m15_98 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().NotContain(shuriken)", span="114-114"];
m15_99 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102"];
m15_42 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m15_43 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="IWeapon weapon = this.kernel.Get<Sword>()", prediction=145, span="61-61"];
m15_44 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="62-62"];
m15_45 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>()", prediction=101, span="63-63"];
m15_46 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="weapon = this.kernel.Get<Sword>()", prediction=147, span="64-64"];
m15_47 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="65-65"];
m15_48 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m15_125 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="41-41"];
m15_221 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295"];
m15_223 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", prediction=101, span="298-298"];
m15_222 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="string Name = ''SomeName''", span="297-297"];
m15_224 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="299-299"];
m15_225 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorNamed(Name)", prediction=101, span="300-300"];
m15_226 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>()", prediction=101, span="301-301"];
m15_227 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", prediction=152, span="303-303"];
m15_228 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Sword>()", span="305-305"];
m15_229 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="306-306"];
m15_230 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295"];
m15_253 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="131-131"];
m15_286 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366"];
m15_287 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", prediction=101, span="368-368"];
m15_288 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenMemberHas<StrongAttribute>()", prediction=101, span="369-369"];
m15_289 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>()", prediction=101, span="370-370"];
m15_290 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", prediction=156, span="372-372"];
m15_291 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<Sword>()", span="373-373"];
m15_292 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366"];
m15_102 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118"];
m15_105 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword).BindingConfiguration.IsImplicit = true", prediction=157, span="123-123"];
m15_103 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="120-120"];
m15_104 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="121-121"];
m15_106 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", prediction=158, span="124-124"];
m15_107 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", prediction=159, span="125-125"];
m15_108 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="126-126"];
m15_109 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="127-127"];
m15_110 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118"];
m15_285 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", span="95-95"];
m15_101 [cluster="Unk.NotContain", file="ConditionalBindingTests.cs", label="Entry Unk.NotContain", span=""];
m15_38 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m15_39 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", prediction=160, span="54-54"];
m15_40 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="55-55"];
m15_41 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m15_100 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m15_271 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="173-173"];
m15_262 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340"];
m15_263 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", prediction=101, span="342-342"];
m15_264 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="343-343"];
m15_265 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", prediction=101, span="345-345"];
m15_266 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", prediction=101, span="346-346"];
m15_267 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", prediction=165, span="348-348"];
m15_268 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Dagger>()", span="350-350"];
m15_269 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="351-351"];
m15_270 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340"];
m15_201 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263"];
m15_202 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="265-265"];
m15_203 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<Samurai>()", prediction=101, span="266-266"];
m15_204 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<IWarrior>()", prediction=168, span="268-268"];
m15_205 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="270-270"];
m15_206 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263"];
m15_81 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m15_14 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m15_15 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="24-24"];
m15_16 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", prediction=101, span="25-25"];
m15_17 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="26-26"];
m15_18 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=172, span="27-27"];
m15_19 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="28-28"];
m15_20 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m15_150 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", span="78-78"];
m15_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m15_191 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252"];
m15_192 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="254-254"];
m15_193 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<IWarrior>()", prediction=101, span="255-255"];
m15_194 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="Action getWarrior = () => this.kernel.Get<IWarrior>()", prediction=175, span="257-257"];
m15_195 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="getWarrior.ShouldThrow<ActivationException>()", span="259-259"];
m15_196 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252"];
m15_244 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326"];
m15_245 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", prediction=101, span="328-328"];
m15_246 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="329-329"];
m15_247 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", prediction=101, span="330-330"];
m15_248 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", prediction=101, span="331-331"];
m15_249 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", prediction=180, span="333-333"];
m15_250 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Sword>()", span="335-335"];
m15_251 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="336-336"];
m15_252 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326"];
m15_275 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="346-346"];
m15_35 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="48-48"];
m15_36 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Get<Samurai>()", prediction=101, span="48-48"];
m15_37 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="48-48"];
m15_56 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="71-71"];
m15_59 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="72-72"];
m15_57 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label=true, prediction=182, span="71-71"];
m15_58 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="71-71"];
m15_60 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label=true, prediction=183, span="72-72"];
m15_61 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="72-72"];
m15_68 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="81-81"];
m15_69 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label=true, prediction=184, span="81-81"];
m15_70 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="81-81"];
m15_85 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="95-95"];
m15_86 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label=true, prediction=185, span="95-95"];
m15_87 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="95-95"];
m15_199 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Get<IWarrior>()", prediction=101, span="257-257"];
m15_198 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="257-257"];
m15_200 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="257-257"];
m15_255 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="330-330"];
m15_259 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="331-331"];
m15_256 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", prediction=187, span="330-330"];
m15_257 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="330-330"];
m15_260 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", prediction=188, span="331-331"];
m15_261 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="331-331"];
m15_272 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="345-345"];
m15_273 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", prediction=189, span="345-345"];
m15_274 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="345-345"];
m15_276 [cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", prediction=190, span="346-346"];
m15_277 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="346-346"];
m15_167 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215"];
m15_168 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="218-218"];
m15_169 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto(new[] { typeof(Samurai) })", span="219-219"];
m15_170 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="220-220"];
m15_171 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=193, span="221-221"];
m15_172 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="222-222"];
m15_173 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215"];
m15_182 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238"];
m15_183 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="240-240"];
m15_184 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", prediction=101, span="241-241"];
m15_185 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="242-242"];
m15_186 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", prediction=197, span="244-244"];
m15_187 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", prediction=198, span="245-245"];
m15_188 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="247-247"];
m15_189 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="248-248"];
m15_190 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238"];
m15_10 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m15_28 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m15_29 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="44-44"];
m15_30 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", prediction=101, span="45-45"];
m15_31 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", prediction=101, span="46-46"];
m15_32 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="47-47"];
m15_33 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<Samurai>())", prediction=101, span="48-48"];
m15_34 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m15_135 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", span="50-50"];
m15_254 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="166-166"];
m15_62 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79"];
m15_63 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", prediction=204, span="81-81"];
m15_64 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>()", prediction=101, span="82-82"];
m15_65 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", prediction=206, span="84-84"];
m15_66 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="85-85"];
m15_67 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79"];
m15_258 [cluster="Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", file="ConditionalBindingTests.cs", label="Entry Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", span="43-43"];
m15_21 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m15_22 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="34-34"];
m15_23 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", prediction=101, span="35-35"];
m15_24 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", prediction=101, span="36-36"];
m15_25 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", prediction=210, span="37-37"];
m15_26 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="38-38"];
m15_27 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m15_49 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m15_50 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", prediction=211, span="71-71"];
m15_51 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>().When(ctx => true)", prediction=101, span="72-72"];
m15_52 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", prediction=213, span="74-74"];
m15_53 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="75-75"];
m15_54 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m15_158 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201"];
m15_159 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="203-203"];
m15_160 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", prediction=101, span="204-204"];
m15_161 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="205-205"];
m15_162 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<ClosedGenericService>()", prediction=217, span="207-207"];
m15_163 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<ClosedAnotherGenericService>()", prediction=218, span="208-208"];
m15_164 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="210-210"];
m15_165 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="211-211"];
m15_166 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201"];
m15_83 [cluster="Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", span="144-144"];
m15_84 [cluster="Unk.Contain", file="ConditionalBindingTests.cs", label="Entry Unk.Contain", span=""];
m15_278 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355"];
m15_279 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", prediction=101, span="357-357"];
m15_280 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="358-358"];
m15_281 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenMemberHas<WeakAttribute>()", prediction=101, span="359-359"];
m15_282 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", prediction=222, span="361-361"];
m15_283 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<Sword>()", span="362-362"];
m15_284 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355"];
m15_55 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="25-25"];
m15_117 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142"];
m15_118 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="144-144"];
m15_119 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(IGenericService<>))", prediction=101, span="145-145"];
m15_120 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="146-146"];
m15_121 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", prediction=226, span="148-148"];
m15_122 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="150-150"];
m15_123 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142"];
m15_174 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226"];
m15_175 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", prediction=101, span="228-228"];
m15_176 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>))", prediction=101, span="229-229"];
m15_177 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=101, span="230-230"];
m15_178 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", prediction=230, span="232-232"];
m15_179 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="234-234"];
m15_180 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226"];
m15_233 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310"];
m15_235 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", prediction=101, span="313-313"];
m15_234 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="string Name = ''SomeName''", span="312-312"];
m15_236 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", prediction=101, span="314-314"];
m15_237 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorNamed(Name)", prediction=101, span="316-316"];
m15_238 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>()", prediction=101, span="317-317"];
m15_239 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", prediction=235, span="319-319"];
m15_240 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Dagger>()", span="321-321"];
m15_241 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="322-322"];
m15_242 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310"];
m15_243 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", span="159-159"];
m15_181 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="68-68"];
m15_314 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests", span=""];
m16_21 [cluster="Unk.>", file="ConditionalBindingWhenParentTests.cs", label="Entry Unk.>", span=""];
m16_13 [cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs", label="Entry Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", span="28-28"];
m16_14 [cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", color=green, community=0, file="ConditionalBindingWhenParentTests.cs", label="var instance = this.kernel.Get<Sword>(''Broken'')", prediction=236, span="30-30"];
m16_15 [cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs", label="instance.Should().NotBeNull()", span="32-32"];
m16_16 [cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs", label="instance.Should().BeOfType<Sword>()", span="33-33"];
m16_17 [cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs", label="Exit Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", span="28-28"];
m16_18 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", file="ConditionalBindingWhenParentTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", span="43-43"];
m16_20 [cluster="Unk.NotBeNull", file="ConditionalBindingWhenParentTests.cs", label="Entry Unk.NotBeNull", span=""];
m16_19 [cluster="Unk.Should", file="ConditionalBindingWhenParentTests.cs", label="Entry Unk.Should", span=""];
m16_23 [file="ConditionalBindingWhenParentTests.cs", label="Ninject.Tests.Integration.WhenParentNamed", span=""];
m17_15 [cluster="Unk.Create", file="ConstantProviderTests.cs", label="Entry Unk.Create", span=""];
m17_17 [cluster="Unk.BeSameAs", file="ConstantProviderTests.cs", label="Entry Unk.BeSameAs", span=""];
m17_6 [cluster="Mock<IContext>.cstr", file="ConstantProviderTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m17_7 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs", label="Entry Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", span="29-29"];
m17_8 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs", label="var sword = new Sword()", span="31-31"];
m17_9 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", color=green, community=0, file="ConstantProviderTests.cs", label="this.provider = new ConstantProvider<Sword>(sword)", prediction=237, span="32-32"];
m17_11 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs", label="result.Should().BeSameAs(sword)", span="36-36"];
m17_10 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", color=green, community=0, file="ConstantProviderTests.cs", label="var result = this.provider.Create(this.contextMock.Object)", prediction=238, span="34-34"];
m17_12 [cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs", label="Exit Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", span="29-29"];
m17_0 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs", label="Entry Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", span="15-15"];
m17_1 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs", label="this.SetUp()", span="17-17"];
m17_2 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs", label="Exit Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", span="15-15"];
m17_3 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs", label="Entry Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", span="20-20"];
m17_4 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs", label="this.contextMock = new Mock<IContext>()", span="22-22"];
m17_5 [cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs", label="Exit Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", span="20-20"];
m17_13 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstantProviderTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m17_14 [cluster="Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", file="ConstantProviderTests.cs", label="Entry Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", span="20-20"];
m17_16 [cluster="Unk.Should", file="ConstantProviderTests.cs", label="Entry Unk.Should", span=""];
m17_18 [file="ConstantProviderTests.cs", label="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext", span=""];
m17_19 [file="ConstantProviderTests.cs", label="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled", span=""];
m18_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90"];
m18_30 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m18_31 [cluster="Unk.>", file="ConstantTests.cs", label="Entry Unk.>", span=""];
m18_32 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="49-49"];
m18_33 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs", label="var builder = this.kernel.Bind<IWeapon>().ToConstant(new Sword())", prediction=239, span="51-51"];
m18_34 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="var provider = new ResolveCountingProvider(builder.BindingConfiguration.ProviderCallback)", span="52-52"];
m18_35 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="builder.BindingConfiguration.ProviderCallback = ctx => provider.Callback(ctx)", span="53-53"];
m18_38 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="provider.Count.Should().Be(1)", span="59-59"];
m18_36 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs", label="this.kernel.Get<IWeapon>()", prediction=240, span="56-56"];
m18_37 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs", label="this.kernel.Get<IWeapon>()", prediction=240, span="57-57"];
m18_39 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="49-49"];
m18_41 [cluster="Unk.Be", file="ConstantTests.cs", label="Entry Unk.Be", span=""];
m18_40 [cluster="Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", span="12-12"];
m18_45 [cluster="Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", span="17-17"];
m18_0 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", span="12-12"];
m18_1 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs", label="this.kernel = new StandardKernel()", span="14-14"];
m18_2 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", span="12-12"];
m18_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m18_8 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", span="26-26"];
m18_9 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="var sword = new Sword()", span="28-28"];
m18_10 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", color=green, community=0, file="ConstantTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(sword)", prediction=240, span="29-29"];
m18_12 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="instance.Should().BeSameAs(sword)", span="32-32"];
m18_11 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", color=green, community=0, file="ConstantTests.cs", label="var instance = this.kernel.Get<IWeapon>()", prediction=243, span="31-31"];
m18_13 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", span="26-26"];
m18_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConstantTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m18_29 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33"];
m18_4 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", span="17-17"];
m18_5 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs", label="this.kernel.Dispose()", span="19-19"];
m18_6 [cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", span="17-17"];
m18_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstantTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m18_42 [cluster="lambda expression", file="ConstantTests.cs", label="Entry lambda expression", span="53-53"];
m18_43 [cluster="lambda expression", file="ConstantTests.cs", label="provider.Callback(ctx)", span="53-53"];
m18_44 [cluster="lambda expression", file="ConstantTests.cs", label="Exit lambda expression", span="53-53"];
m18_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ConstantTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m18_19 [cluster="Unk.BeSameAs", file="ConstantTests.cs", label="Entry Unk.BeSameAs", span=""];
m18_20 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="36-36"];
m18_21 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="var sword = new Sword()", span="38-38"];
m18_22 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(sword).WhenInjectedInto<Samurai>()", prediction=240, span="39-39"];
m18_25 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="samurai.Weapon.Should().BeSameAs(sword)", span="43-43"];
m18_23 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()", prediction=240, span="40-40"];
m18_24 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs", label="var samurai = this.kernel.Get<Samurai>()", prediction=246, span="42-42"];
m18_26 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs", label="var weapon = this.kernel.Get<IWeapon>()", prediction=247, span="44-44"];
m18_27 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="weapon.Should().BeOfType<Shuriken>()", span="45-45"];
m18_28 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="36-36"];
m18_14 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m18_18 [cluster="Unk.Should", file="ConstantTests.cs", label="Entry Unk.Should", span=""];
m18_46 [file="ConstantTests.cs", label="Ninject.Tests.Integration.ConstantTests.ConstantContext", span=""];
m18_47 [file="ConstantTests.cs", label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", span=""];
m18_48 [file="ConstantTests.cs", label=provider, span=""];
m19_4 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21"];
m19_5 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="this.kernel.Dispose()", span="23-23"];
m19_6 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21"];
m19_177 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="22-22"];
m19_140 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="159-159"];
m19_141 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var ninja = new Ninja(new Sword())", span="161-161"];
m19_145 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().BeSameAs(barracks2.Warrior)", span="167-167"];
m19_146 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="159-159"];
m19_228 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", span="291-291"];
m19_229 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="this.Sword = sword", span="293-293"];
m19_230 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", span="291-291"];
m19_204 [cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103"];
m19_113 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m19_33 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51"];
m19_37 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="57-57"];
m19_38 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="58-58"];
m19_39 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="59-59"];
m19_40 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51"];
m19_163 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="192-192"];
m19_164 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="int activationCount = 0", span="194-194"];
m19_169 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="activationCount.Should().Be(0)", span="200-200"];
m19_175 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="activationCount.Should().Be(1)", span="207-207"];
m19_171 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="203-203"];
m19_172 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="204-204"];
m19_173 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Ninja>()", span="205-205"];
m19_174 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="206-206"];
m19_176 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="192-192"];
m19_206 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="238-238"];
m19_209 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="instance.Sword.Should().NotBeNull()", span="244-244"];
m19_210 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="238-238"];
m19_130 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147"];
m19_134 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="154-154"];
m19_135 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147"];
m19_21 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38"];
m19_23 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="var constructorArgument = new ConstructorArgument(''warrior'', new Samurai(new Sword()))", span="41-41"];
m19_25 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="44-44"];
m19_26 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="45-45"];
m19_27 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Weapon.Should().NotBeNull()", span="46-46"];
m19_28 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="47-47"];
m19_29 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38"];
m19_100 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119"];
m19_105 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="126-126"];
m19_106 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="127-127"];
m19_107 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Samurai>()", span="128-128"];
m19_108 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="129-129"];
m19_109 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119"];
m19_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m19_218 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", span="262-262"];
m19_219 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs", label="this.X = x", span="264-264"];
m19_220 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", span="262-262"];
m19_215 [cluster="Unk.NotBe", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBe", span=""];
m19_8 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27"];
m19_11 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="32-32"];
m19_12 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="33-33"];
m19_13 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="34-34"];
m19_14 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27"];
m19_18 [cluster="Unk.Should", file="ConstructorSelectionTests.cs", label="Entry Unk.Should", span=""];
m19_237 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", span="319-319"];
m19_238 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="this.Sword = sword", span="321-321"];
m19_239 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", span="319-319"];
m19_41 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m19_20 [cluster="Unk.BeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.BeNull", span=""];
m19_42 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63"];
m19_47 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="70-70"];
m19_48 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="71-71"];
m19_49 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="72-72"];
m19_50 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63"];
m19_75 [cluster="Unk.>", file="ConstructorSelectionTests.cs", label="Entry Unk.>", span=""];
m19_136 [cluster="Unk.NotBeSameAs", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBeSameAs", span=""];
m19_31 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m19_99 [cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4"];
m19_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m19_151 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="172-172"];
m19_152 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="return new Ninja(new Sword());", span="177-177"];
m19_153 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="172-172"];
m19_154 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="181-181"];
m19_158 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="188-188"];
m19_159 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="181-181"];
m19_179 [cluster="Unk.Be", file="ConstructorSelectionTests.cs", label="Entry Unk.Be", span=""];
m19_233 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", span="307-307"];
m19_234 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", span="307-307"];
m19_55 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76"];
m19_60 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="83-83"];
m19_61 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="84-84"];
m19_62 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Weapon.Should().NotBeNull()", span="85-85"];
m19_63 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="86-86"];
m19_64 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76"];
m19_195 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="221-221"];
m19_197 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="instance.Sword.Should().BeNull()", span="225-225"];
m19_198 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="221-221"];
m19_221 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", span="273-273"];
m19_222 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", span="273-273"];
m19_231 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", span="302-302"];
m19_232 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", span="302-302"];
m19_32 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m19_114 [cluster="Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", span="28-28"];
m19_199 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="229-229"];
m19_202 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="instance.Generic.Should().NotBeNull()", span="234-234"];
m19_203 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="229-229"];
m19_115 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133"];
m19_120 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="140-140"];
m19_121 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="141-141"];
m19_122 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Ninja>()", span="142-142"];
m19_123 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="143-143"];
m19_124 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133"];
m19_95 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="99-99"];
m19_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m19_223 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", span="277-277"];
m19_224 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs", label="this.Generic = generic", span="279-279"];
m19_225 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", span="277-277"];
m19_235 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", span="315-315"];
m19_236 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", span="315-315"];
m19_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m19_19 [cluster="Unk.NotBeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBeNull", span=""];
m19_76 [cluster="Ninject.Syntax.BindingRoot.Unbind<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Unbind<T>()", span="126-126"];
m19_178 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="25-25"];
m19_129 [cluster="Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", span="10-10"];
m19_192 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="215-215"];
m19_52 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="67-67"];
m19_54 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="67-67"];
m19_77 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="94-94"];
m19_80 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="97-97"];
m19_83 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="101-101"];
m19_79 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="94-94"];
m19_82 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="97-97"];
m19_85 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="101-101"];
m19_96 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="108-108"];
m19_98 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="108-108"];
m19_110 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="121-121"];
m19_112 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="121-121"];
m19_125 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="135-135"];
m19_127 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="135-135"];
m19_137 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="149-149"];
m19_139 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="149-149"];
m19_148 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="162-162"];
m19_150 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="162-162"];
m19_160 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="183-183"];
m19_162 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="183-183"];
m19_180 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="195-195"];
m19_183 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="196-196"];
m19_182 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="195-195"];
m19_185 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="196-196"];
m19_194 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="215-215"];
m19_0 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16"];
m19_1 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="this.kernel = new StandardKernel()", span="18-18"];
m19_2 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16"];
m19_147 [cluster="Unk.BeSameAs", file="ConstructorSelectionTests.cs", label="Entry Unk.BeSameAs", span=""];
m19_226 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", span="287-287"];
m19_227 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", span="287-287"];
m19_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m19_128 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18"];
m19_205 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="39-39"];
m19_65 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90"];
m19_74 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90"];
m19_51 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="25-25"];
m19_186 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", span="43-43"];
m19_211 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="249-249"];
m19_213 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="instance.X.Should().NotBe(0)", span="253-253"];
m19_214 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="249-249"];
m19_216 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", span="258-258"];
m19_217 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", span="258-258"];
m19_86 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106"];
m19_91 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="113-113"];
m19_92 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="114-114"];
m19_93 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="115-115"];
m19_94 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106"];
m19_187 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="211-211"];
m19_190 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="getClassWithTwoInjectAttributes.ShouldThrow<ActivationException>()", span="217-217"];
m19_191 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="211-211"];
m19_30 [cluster="Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", span="25-25"];
m19_240 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests", span=""];
m19_241 [file="ConstructorSelectionTests.cs", label=ninja, span=""];
m19_242 [file="ConstructorSelectionTests.cs", label=activationCount, span=""];
m19_243 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue", span=""];
m19_244 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric", span=""];
m19_245 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType", span=""];
m19_246 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor", span=""];
m20_15 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="DefaultParameterTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m20_20 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="32-32"];
m20_21 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<Shield>().ToSelf()", prediction=248, span="34-34"];
m20_22 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<ShieldColor>().ToConstant(ShieldColor.Blue)", prediction=248, span="35-35"];
m20_23 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs", label="var shield = this.kernel.Get<Shield>()", prediction=250, span="37-37"];
m20_24 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs", label="shield.Should().NotBeNull()", span="38-38"];
m20_25 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs", label="shield.Color.Should().Be(ShieldColor.Blue)", span="39-39"];
m20_26 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="32-32"];
m20_27 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="DefaultParameterTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90"];
m20_28 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="43-43"];
m20_29 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<Shield>().ToSelf().WithConstructorArgument(''color'', ShieldColor.Orange)", prediction=248, span="45-45"];
m20_30 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs", label="var shield = this.kernel.Get<Shield>()", prediction=252, span="47-47"];
m20_31 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs", label="shield.Should().NotBeNull()", span="48-48"];
m20_32 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs", label="shield.Color.Should().Be(ShieldColor.Orange)", span="49-49"];
m20_33 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="43-43"];
m20_19 [cluster="Unk.Be", file="DefaultParameterTests.cs", label="Entry Unk.Be", span=""];
m20_4 [cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.Dispose()", span="16-16"];
m20_5 [cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs", label="this.kernel.Dispose()", span="18-18"];
m20_6 [cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.Dispose()", span="16-16"];
m20_14 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="DefaultParameterTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m20_34 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="DefaultParameterTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="28-28"];
m20_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="DefaultParameterTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m20_35 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", span="53-53"];
m20_36 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<Shield>().ToSelf()", prediction=248, span="55-55"];
m20_37 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<KiteShield>().ToSelf()", prediction=248, span="56-56"];
m20_38 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs", label="var shield1 = this.kernel.Get<Shield>()", prediction=255, span="58-58"];
m20_39 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs", label="var shield2 = this.kernel.Get<KiteShield>()", prediction=256, span="59-59"];
m20_40 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="shield1.Should().NotBeNull()", span="61-61"];
m20_41 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="shield1.Color.Should().Be(ShieldColor.Red)", span="62-62"];
m20_42 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="shield2.Should().NotBeNull()", span="64-64"];
m20_43 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="shield2.Color.Should().Be(ShieldColor.Orange)", span="65-65"];
m20_44 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", span="53-53"];
m20_16 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="DefaultParameterTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m20_18 [cluster="Unk.NotBeNull", file="DefaultParameterTests.cs", label="Entry Unk.NotBeNull", span=""];
m20_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="DefaultParameterTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m20_0 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", span="11-11"];
m20_1 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs", label="this.kernel = new StandardKernel()", span="13-13"];
m20_2 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", span="11-11"];
m20_8 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="22-22"];
m20_9 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs", label="this.kernel.Bind<Shield>().ToSelf()", prediction=248, span="24-24"];
m20_10 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs", label="var shield = this.kernel.Get<Shield>()", prediction=258, span="26-26"];
m20_11 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs", label="shield.Should().NotBeNull()", span="27-27"];
m20_12 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs", label="shield.Color.Should().Be(ShieldColor.Red)", span="28-28"];
m20_13 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="22-22"];
m20_17 [cluster="Unk.Should", file="DefaultParameterTests.cs", label="Entry Unk.Should", span=""];
m20_45 [file="DefaultParameterTests.cs", label="Ninject.Tests.Integration.DefaultParameterTests", span=""];
m21_38 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="38-38"];
m21_62 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", span="117-117"];
m21_64 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.scopeDelegate = ctx => obj", prediction=259, span="120-120"];
m21_63 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="object obj = new object()", span="119-119"];
m21_65 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var settings = new NinjectSettings\r\n                           {\r\n                               DefaultScopeCallback = this.scopeDelegate\r\n                           }", prediction=260, span="121-124"];
m21_66 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="this.kernel = new StandardKernel(settings)", span="125-125"];
m21_67 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", span="117-117"];
m21_84 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="32-32"];
m21_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m21_4 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="var parent = this.Kernel.Get<IParent>()", span="15-15"];
m21_5 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="VerifyInjection(parent)", span="17-17"];
m21_6 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", span="9-9"];
m21_11 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", span="32-32"];
m21_12 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var firstInstance = this.kernel.Get<SelfBindedType>()", prediction=261, span="34-34"];
m21_13 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var secondInstance = this.kernel.Get<SelfBindedType>()", prediction=262, span="35-35"];
m21_14 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs", label="firstInstance.Should().NotBeSameAs(secondInstance, ''because types are transient'')", span="36-36"];
m21_15 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", span="32-32"];
m21_16 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.EmptyEnumerableIsInjectedWhenNoBindingIsAvailable()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.EmptyEnumerableIsInjectedWhenNoBindingIsAvailable()", span="21-21"];
m21_17 [cluster="object.ShouldNotBeNull()", file="DefaultScopeCallbackTests.cs", label="Entry object.ShouldNotBeNull()", span="63-63"];
m21_45 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", span="85-85"];
m21_46 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<SelfBindedType>().ToSelf()", prediction=263, span="87-87"];
m21_47 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", prediction=264, span="88-88"];
m21_48 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", span="89-89"];
m21_49 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", span="85-85"];
m21_28 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m21_79 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", span="140-140"];
m21_80 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<IService>().To<ServiceImpl>().InTransientScope()", prediction=265, span="142-142"];
m21_81 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", prediction=266, span="143-143"];
m21_82 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", span="144-144"];
m21_83 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", span="140-140"];
m21_18 [cluster="T.ShouldBe<T>(T)", file="DefaultScopeCallbackTests.cs", label="Entry T.ShouldBe<T>(T)", span="48-48"];
m21_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="DefaultScopeCallbackTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m21_29 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25"];
m21_22 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", span="55-55"];
m21_23 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<IService>().To<ServiceImpl>().InSingletonScope()", prediction=263, span="57-57"];
m21_24 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", prediction=268, span="58-58"];
m21_25 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Singleton)", span="59-59"];
m21_26 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", span="55-55"];
m21_8 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="this.kernel = new StandardKernel()", span="29-29"];
m21_42 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", span="79-79"];
m21_43 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="TestSelfBindedTypesAreTransient()", span="81-81"];
m21_44 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", span="79-79"];
m21_74 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", span="132-132"];
m21_75 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<IService>().To<ServiceImpl>().InSingletonScope()", prediction=265, span="134-134"];
m21_76 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", prediction=270, span="135-135"];
m21_77 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Singleton)", span="136-136"];
m21_78 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", span="132-132"];
m21_68 [cluster="object.Object()", file="DefaultScopeCallbackTests.cs", label="Entry object.Object()", span="0-0"];
m21_57 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", span="110-110"];
m21_58 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<SelfBindedType>().ToSelf()", prediction=271, span="112-112"];
m21_59 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", prediction=272, span="113-113"];
m21_60 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(this.scopeDelegate)", prediction=271, span="114-114"];
m21_61 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", span="110-110"];
m21_10 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.UnconstrainedDependenciesContext.VerifyInjection(Ninject.Tests.Integration.EnumerableDependenciesTests.Fakes.IParent)", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.EnumerableDependenciesTests.UnconstrainedDependenciesContext.VerifyInjection(Ninject.Tests.Integration.EnumerableDependenciesTests.Fakes.IParent)", span="7-7"];
m21_0 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", span="9-9"];
m21_1 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="this.Kernel.Bind<IParent>().To<RequestsEnumerable>()", span="11-11"];
m21_2 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="this.Kernel.Bind<IChild>().To<ChildA>()", span="12-12"];
m21_9 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", span="27-27"];
m21_3 [cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs", label="this.Kernel.Bind<IChild>().To<ChildB>()", span="13-13"];
m21_70 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41"];
m21_85 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", span="148-148"];
m21_86 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", prediction=265, span="150-150"];
m21_87 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", span="148-148"];
m21_32 [cluster="Unk.BeSameAs", file="DefaultScopeCallbackTests.cs", label="Entry Unk.BeSameAs", span=""];
m21_71 [cluster="lambda expression", file="DefaultScopeCallbackTests.cs", label="Entry lambda expression", span="120-120"];
m21_72 [cluster="lambda expression", color=green, community=0, file="DefaultScopeCallbackTests.cs", label=obj, prediction=275, span="120-120"];
m21_73 [cluster="lambda expression", file="DefaultScopeCallbackTests.cs", label="Exit lambda expression", span="120-120"];
m21_54 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", span="104-104"];
m21_55 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="TestSelfBindedTypesAreTransient()", span="106-106"];
m21_56 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", span="104-104"];
m21_30 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="373-373"];
m21_50 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m21_91 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", span="162-162"];
m21_92 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<SelfBindedType>().ToSelf()", prediction=265, span="164-164"];
m21_93 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", prediction=277, span="165-165"];
m21_94 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", span="166-166"];
m21_95 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", span="162-162"];
m21_69 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18"];
m21_33 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", span="64-64"];
m21_34 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Bind<IService>().To<ServiceImpl>().InThreadScope()", prediction=263, span="66-66"];
m21_35 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", prediction=279, span="67-67"];
m21_36 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs", label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", span="68-68"];
m21_37 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", span="64-64"];
m21_96 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", span="170-170"];
m21_97 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="var settings = new NinjectSettings\r\n                           {\r\n#if !WINRT\r\n                               DefaultScopeCallback = StandardScopeCallbacks.Thread\r\n#endif\r\n                           }", span="172-177"];
m21_98 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="this.kernel = new StandardKernel(settings)", span="178-178"];
m21_99 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", span="170-170"];
m21_39 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", span="73-73"];
m21_40 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", prediction=263, span="75-75"];
m21_41 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", span="73-73"];
m21_88 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", span="155-155"];
m21_89 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="TestSelfBindedTypesAreTransient()", span="157-157"];
m21_90 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", span="155-155"];
m21_51 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", file="DefaultScopeCallbackTests.cs", label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", span="98-98"];
m21_52 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", color=green, community=0, file="DefaultScopeCallbackTests.cs", label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(this.scopeDelegate)", prediction=271, span="100-100"];
m21_53 [cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", file="DefaultScopeCallbackTests.cs", label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", span="98-98"];
m21_19 [file="DefaultScopeCallbackTests.cs", label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", span=""];
m21_100 [file="DefaultScopeCallbackTests.cs", label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext", span=""];
m21_101 [file="DefaultScopeCallbackTests.cs", label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", span=""];
m21_102 [file="DefaultScopeCallbackTests.cs", label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", span=""];
m21_103 [file="DefaultScopeCallbackTests.cs", label=obj, span=""];
m21_104 [file="DefaultScopeCallbackTests.cs", label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", span=""];
m22_6 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs", label="Entry Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", span="26-26"];
m22_9 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", color=green, community=0, file="DisposableStrategyTests.cs", label="this.strategy.Deactivate(this.contextMock.Object, reference)", prediction=282, span="31-31"];
m22_8 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="29-29"];
m22_10 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="32-32"];
m22_7 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs", label="var instance = new NotifiesWhenDisposed()", span="28-28"];
m22_11 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs", label="Exit Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", span="26-26"];
m22_22 [cluster="object.Object()", file="DisposableStrategyTests.cs", label="Entry object.Object()", span="0-0"];
m22_16 [cluster="Unk.BeTrue", file="DisposableStrategyTests.cs", label="Entry Unk.BeTrue", span=""];
m22_17 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs", label="Entry Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", span="36-36"];
m22_20 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", color=green, community=0, file="DisposableStrategyTests.cs", label="this.strategy.Deactivate(this.contextMock.Object, reference)", prediction=282, span="41-41"];
m22_19 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="39-39"];
m22_18 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs", label="var instance = new object()", span="38-38"];
m22_21 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs", label="Exit Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", span="36-36"];
m22_0 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", file="DisposableStrategyTests.cs", label="Entry Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", span="16-16"];
m22_1 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", color=green, community=0, file="DisposableStrategyTests.cs", label="this.contextMock = new Mock<IContext>()", prediction=284, span="18-18"];
m22_2 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", color=green, community=0, file="DisposableStrategyTests.cs", label="this.strategy = new DisposableStrategy()", prediction=285, span="19-19"];
m22_3 [cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", file="DisposableStrategyTests.cs", label="Exit Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", span="16-16"];
m22_14 [cluster="Unk.Deactivate", file="DisposableStrategyTests.cs", label="Entry Unk.Deactivate", span=""];
m22_4 [cluster="Mock<IContext>.cstr", file="DisposableStrategyTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m22_13 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="DisposableStrategyTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m22_12 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="DisposableStrategyTests.cs", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
m22_5 [cluster="Ninject.Activation.Strategies.DisposableStrategy.DisposableStrategy()", file="DisposableStrategyTests.cs", label="Entry Ninject.Activation.Strategies.DisposableStrategy.DisposableStrategy()", span="15-15"];
m22_15 [cluster="Unk.Should", file="DisposableStrategyTests.cs", label="Entry Unk.Should", span=""];
m22_23 [file="DisposableStrategyTests.cs", label="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext", span=""];
m22_24 [file="DisposableStrategyTests.cs", label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled", span=""];
m23_48 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", span="89-89"];
m23_51 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", span="89-89"];
m23_53 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", span="79-79"];
m23_34 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", span="50-50"];
m23_11 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="26-26"];
m23_23 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", span="44-44"];
m23_25 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Should().NotBeNull()", span="48-48"];
m23_26 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Weapon.Should().BeNull()", span="49-49"];
m23_27 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", span="44-44"];
m23_35 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", span="65-65"];
m23_36 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs", label="var samurai = new Samurai(null)", span="67-67"];
m23_37 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs", label="var sword = new Sword()", span="68-68"];
m23_39 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Weapon.Should().BeSameAs(sword)", span="72-72"];
m23_40 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", span="65-65"];
m23_0 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", span="14-14"];
m23_3 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", span="14-14"];
m23_52 [cluster="System.Type.GetMethod(string)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m23_20 [cluster="Unk.Should", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.Should", span=""];
m23_42 [cluster="Ninject.Injection.PropertyInjector.Invoke(object, object)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.PropertyInjector.Invoke(object, object)", span="15-15"];
m23_59 [cluster="Ninject.Injection.MethodInjector.Invoke(object, params object[])", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.MethodInjector.Invoke(object, params object[])", span="15-15"];
m23_28 [cluster="Unk.BeNull", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.BeNull", span=""];
m23_60 [cluster="Unk.Be", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.Be", span=""];
m23_41 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m23_6 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", span="26-26"];
m23_9 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", span="26-26"];
m23_33 [cluster="System.Type.GetProperty(string)", file="DynamicMethodInjectorFactoryTests.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m23_18 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m23_54 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", span="96-96"];
m23_55 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="var samurai = new Samurai(new Sword())", span="98-98"];
m23_57 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Name.Should().Be(''Bob'')", span="100-100"];
m23_58 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", span="96-96"];
m23_61 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", span="109-109"];
m23_64 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", span="109-109"];
m23_4 [cluster="Ninject.Injection.DynamicMethodInjectorFactory.DynamicMethodInjectorFactory()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.DynamicMethodInjectorFactory.DynamicMethodInjectorFactory()", span="19-19"];
m23_21 [cluster="Unk.NotBeNull", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.NotBeNull", span=""];
m23_43 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", span="76-76"];
m23_44 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs", label="var samurai = new Samurai(new Sword())", span="78-78"];
m23_46 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Weapon.Should().BeNull()", span="80-80"];
m23_47 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", span="76-76"];
m23_19 [cluster="Ninject.Injection.ConstructorInjector.Invoke(params object[])", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Injection.ConstructorInjector.Invoke(params object[])", span="15-15"];
m23_22 [cluster="Unk.BeSameAs", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.BeSameAs", span=""];
m23_70 [cluster="Unk.BeTrue", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Unk.BeTrue", span=""];
m23_5 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18"];
m23_29 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", span="58-58"];
m23_32 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", span="58-58"];
m23_10 [cluster="System.Type.GetConstructor(System.Type[])", file="DynamicMethodInjectorFactoryTests.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m23_65 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", span="116-116"];
m23_66 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="var samurai = new Samurai(new Sword())", span="118-118"];
m23_68 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.IsBattleHardened.Should().BeTrue()", span="120-120"];
m23_69 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", span="116-116"];
m23_12 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs", label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", span="33-33"];
m23_13 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs", label="var sword = new Sword()", span="35-35"];
m23_16 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Weapon.Should().BeSameAs(sword)", span="40-40"];
m23_15 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs", label="samurai.Should().NotBeNull()", span="39-39"];
m23_17 [cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs", label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", span="33-33"];
m23_71 [file="DynamicMethodInjectorFactoryTests.cs", label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext", span=""];
m23_72 [file="DynamicMethodInjectorFactoryTests.cs", label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked", span=""];
m23_73 [file="DynamicMethodInjectorFactoryTests.cs", label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked", span=""];
m23_74 [file="DynamicMethodInjectorFactoryTests.cs", label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod", span=""];
m23_75 [file="DynamicMethodInjectorFactoryTests.cs", label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod", span=""];
m24_0 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="27-27"];
m24_2 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="27-27"];
m24_4 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="37-37"];
m24_5 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs", label="return assembly.IsDynamic ?\r\n                Enumerable.Empty<INinjectModule>() :\r\n                assembly.ExportedTypes.Where(IsLoadableModule)\r\n                                      .Select(type => Activator.CreateInstance(type) as INinjectModule);", span="39-42"];
m24_6 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="37-37"];
m24_3 [cluster="Unk.Any", file="ExtensionsForAssembly.cs", label="Entry Unk.Any", span=""];
m24_18 [cluster="System.Type.GetConstructor(System.Type[])", file="ExtensionsForAssembly.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m24_14 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs", label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="45-45"];
m24_15 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs", label="return typeof(INinjectModule).IsAssignableFrom(type)\r\n                && !type.IsAbstract\r\n                && !type.IsInterface\r\n                && type.GetConstructor(Type.EmptyTypes) != null;", span="47-50"];
m24_16 [cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs", label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="45-45"];
m24_17 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ExtensionsForAssembly.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m24_13 [cluster="Unk.CreateInstance", file="ExtensionsForAssembly.cs", label="Entry Unk.CreateInstance", span=""];
m24_10 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Entry lambda expression", span="42-42"];
m24_11 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Activator.CreateInstance(type) as INinjectModule", span="42-42"];
m24_12 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Exit lambda expression", span="42-42"];
m24_8 [cluster="Unk.Where", file="ExtensionsForAssembly.cs", label="Entry Unk.Where", span=""];
m24_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ExtensionsForAssembly.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m24_9 [cluster="Unk.Select", file="ExtensionsForAssembly.cs", label="Entry Unk.Select", span=""];
m25_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ExternalInjectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m25_21 [cluster="Unk.>", file="ExternalInjectionTests.cs", label="Entry Unk.>", span=""];
m25_8 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="26-26"];
m25_9 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", color=green, community=0, file="ExternalInjectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", prediction=286, span="28-28"];
m25_10 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="var warrior = new ExternalWarrior()", span="30-30"];
m25_11 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", color=green, community=0, file="ExternalInjectionTests.cs", label="this.kernel.Inject(warrior)", prediction=286, span="31-31"];
m25_12 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="warrior.Weapon.Should().NotBeNull()", span="33-33"];
m25_13 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="34-34"];
m25_14 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="26-26"];
m25_29 [cluster="Unk.BeFalse", file="ExternalInjectionTests.cs", label="Entry Unk.BeFalse", span=""];
m25_4 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", span="17-17"];
m25_5 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs", label="this.kernel.Dispose()", span="19-19"];
m25_6 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", span="17-17"];
m25_18 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="273-273"];
m25_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ExternalInjectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m25_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ExternalInjectionTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m25_0 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="12-12"];
m25_1 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs", label="this.kernel = new StandardKernel()", span="14-14"];
m25_2 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="12-12"];
m25_17 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="49-49"];
m25_20 [cluster="Unk.NotBeNull", file="ExternalInjectionTests.cs", label="Entry Unk.NotBeNull", span=""];
m25_22 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="38-38"];
m25_23 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="var instance = new NotifiesWhenDisposed()", span="40-40"];
m25_24 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", color=green, community=0, file="ExternalInjectionTests.cs", label="this.kernel.Inject(instance)", prediction=286, span="42-42"];
m25_26 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="instance.IsDisposed.Should().BeFalse()", span="45-45"];
m25_25 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", color=green, community=0, file="ExternalInjectionTests.cs", label="this.kernel.Dispose()", prediction=286, span="43-43"];
m25_27 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="38-38"];
m25_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ExternalInjectionTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m25_28 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
m25_19 [cluster="Unk.Should", file="ExternalInjectionTests.cs", label="Entry Unk.Should", span=""];
m25_30 [file="ExternalInjectionTests.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span=""];
m25_31 [file="ExternalInjectionTests.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span=""];
m26_0 [cluster="Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="IAssemblyNameRetriever.cs", label="Entry Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="28-28"];
m26_1 [cluster="Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="IAssemblyNameRetriever.cs", label="Exit Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="28-28"];
m27_4 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="IKernel.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52"];
m27_5 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="IKernel.cs", label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52"];
m27_2 [cluster="Ninject.IKernel.HasModule(string)", file="IKernel.cs", label="Entry Ninject.IKernel.HasModule(string)", span="46-46"];
m27_3 [cluster="Ninject.IKernel.HasModule(string)", file="IKernel.cs", label="Exit Ninject.IKernel.HasModule(string)", span="46-46"];
m27_12 [cluster="Ninject.IKernel.GetBindings(System.Type)", file="IKernel.cs", label="Entry Ninject.IKernel.GetBindings(System.Type)", span="79-79"];
m27_13 [cluster="Ninject.IKernel.GetBindings(System.Type)", file="IKernel.cs", label="Exit Ninject.IKernel.GetBindings(System.Type)", span="79-79"];
m27_10 [cluster="Ninject.IKernel.Unload(string)", file="IKernel.cs", label="Entry Ninject.IKernel.Unload(string)", span="72-72"];
m27_11 [cluster="Ninject.IKernel.Unload(string)", file="IKernel.cs", label="Exit Ninject.IKernel.Unload(string)", span="72-72"];
m27_0 [cluster="Ninject.IKernel.GetModules()", file="IKernel.cs", label="Entry Ninject.IKernel.GetModules()", span="39-39"];
m27_1 [cluster="Ninject.IKernel.GetModules()", file="IKernel.cs", label="Exit Ninject.IKernel.GetModules()", span="39-39"];
m27_14 [cluster="Ninject.IKernel.BeginBlock()", file="IKernel.cs", label="Entry Ninject.IKernel.BeginBlock()", span="85-85"];
m27_15 [cluster="Ninject.IKernel.BeginBlock()", file="IKernel.cs", label="Exit Ninject.IKernel.BeginBlock()", span="85-85"];
m27_6 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="IKernel.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m27_7 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="IKernel.cs", label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m27_8 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="IKernel.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65"];
m27_9 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="IKernel.cs", label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65"];
m28_0 [cluster="Ninject.INinjectSettings.Get<T>(string, T)", file="INinjectSettings.cs", label="Entry Ninject.INinjectSettings.Get<T>(string, T)", span="93-93"];
m28_1 [cluster="Ninject.INinjectSettings.Get<T>(string, T)", file="INinjectSettings.cs", label="Exit Ninject.INinjectSettings.Get<T>(string, T)", span="93-93"];
m28_2 [cluster="Ninject.INinjectSettings.Set(string, object)", file="INinjectSettings.cs", label="Entry Ninject.INinjectSettings.Set(string, object)", span="100-100"];
m28_3 [cluster="Ninject.INinjectSettings.Set(string, object)", file="INinjectSettings.cs", label="Exit Ninject.INinjectSettings.Set(string, object)", span="100-100"];
m29_0 [cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="InitializableStrategyTests.cs", label="Entry Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="17-17"];
m29_1 [cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="InitializableStrategyTests.cs", label="Exit Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="17-17"];
m31_15 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m31_8 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", span="26-26"];
m31_9 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", prediction=290, span="28-28"];
m31_10 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs", label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", prediction=291, span="30-30"];
m31_11 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs", label="this.kernel.Release(instance)", prediction=290, span="31-31"];
m31_12 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="33-33"];
m31_13 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", span="26-26"];
m31_32 [cluster="Unk.NotBeSameAs", file="ManualReleaseTests.cs", label="Entry Unk.NotBeSameAs", span=""];
m31_16 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25"];
m31_20 [cluster="Unk.BeTrue", file="ManualReleaseTests.cs", label="Entry Unk.BeTrue", span=""];
m31_14 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m31_21 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="37-37"];
m31_22 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", prediction=290, span="39-39"];
m31_23 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs", label="var instance1 = this.kernel.Get<NotifiesWhenDisposed>()", prediction=290, span="41-41"];
m31_24 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs", label="var instance2 = this.kernel.Get<NotifiesWhenDisposed>()", prediction=295, span="42-42"];
m31_25 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs", label="instance1.Should().BeSameAs(instance2)", span="43-43"];
m31_26 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs", label="this.kernel.Release(instance1)", prediction=290, span="45-45"];
m31_28 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs", label="instance3.Should().NotBeSameAs(instance1)", span="48-48"];
m31_29 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs", label="instance3.Should().NotBeSameAs(instance2)", span="49-49"];
m31_27 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs", label="var instance3 = this.kernel.Get<NotifiesWhenDisposed>()", prediction=297, span="47-47"];
m31_30 [cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="37-37"];
m31_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ManualReleaseTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m31_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m31_18 [cluster="Ninject.KernelBase.Release(object)", file="ManualReleaseTests.cs", label="Entry Ninject.KernelBase.Release(object)", span="298-298"];
m31_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ManualReleaseTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m31_31 [cluster="Unk.BeSameAs", file="ManualReleaseTests.cs", label="Entry Unk.BeSameAs", span=""];
m31_4 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", span="17-17"];
m31_5 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs", label="this.kernel.Dispose()", span="19-19"];
m31_6 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", span="17-17"];
m31_0 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", span="12-12"];
m31_1 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs", label="this.kernel = new StandardKernel()", span="14-14"];
m31_2 [cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", span="12-12"];
m31_19 [cluster="Unk.Should", file="ManualReleaseTests.cs", label="Entry Unk.Should", span=""];
m31_33 [file="ManualReleaseTests.cs", label="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext", span=""];
m31_34 [file="ManualReleaseTests.cs", label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", span=""];
m32_20 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", file="MethodInjectionDirectiveBaseTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", span="50-50"];
m32_21 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", file="MethodInjectionDirectiveBaseTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", span="50-50"];
m32_16 [cluster="Unk.Be", file="MethodInjectionDirectiveBaseTests.cs", label="Entry Unk.Be", span=""];
m32_14 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionDirectiveBaseTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="45-45"];
m32_19 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionDirectiveBaseTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="45-45"];
m32_0 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", span="21-21"];
m32_1 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="var method = typeof(Dummy).GetMethod(''MethodA'')", span="24-24"];
m32_2 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="MethodInjector injector = delegate { }", span="28-28"];
m32_3 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", color=green, community=0, file="MethodInjectionDirectiveBaseTests.cs", label="this.directive = new FakeMethodInjectionDirective(method, injector)", prediction=298, span="30-30"];
m32_4 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", color=green, community=0, file="MethodInjectionDirectiveBaseTests.cs", label="ITarget[] targets = this.directive.Targets", prediction=299, span="31-31"];
m32_5 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets.Length.Should().Be(3)", span="33-33"];
m32_6 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[0].Name.Should().Be(''foo'')", span="34-34"];
m32_7 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[0].Type.Should().Be(typeof(int))", span="35-35"];
m32_8 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[1].Name.Should().Be(''bar'')", span="36-36"];
m32_9 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[1].Type.Should().Be(typeof(string))", span="37-37"];
m32_10 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[2].Name.Should().Be(''baz'')", span="38-38"];
m32_11 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="targets[2].Type.Should().Be(typeof(IWeapon))", span="39-39"];
m32_12 [cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", span="21-21"];
m32_17 [cluster="lambda expression", file="MethodInjectionDirectiveBaseTests.cs", label="Entry lambda expression", span="28-28"];
m32_18 [cluster="lambda expression", file="MethodInjectionDirectiveBaseTests.cs", label="Exit lambda expression", span="28-28"];
m32_13 [cluster="System.Type.GetMethod(string)", file="MethodInjectionDirectiveBaseTests.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m32_15 [cluster="Unk.Should", file="MethodInjectionDirectiveBaseTests.cs", label="Entry Unk.Should", span=""];
m32_22 [file="MethodInjectionDirectiveBaseTests.cs", label="object[]", span=""];
m32_23 [file="MethodInjectionDirectiveBaseTests.cs", label=object, span=""];
m32_24 [file="MethodInjectionDirectiveBaseTests.cs", label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated", span=""];
m33_16 [cluster="Mock<IPlan>.cstr", file="MethodInjectionStrategyTests.cs", label="Entry Mock<IPlan>.cstr", span=""];
m33_3 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", span="17-17"];
m33_15 [cluster="Mock<IContext>.cstr", file="MethodInjectionStrategyTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m33_4 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42"];
m33_5 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.reference = new InstanceReference { Instance = this.instance }", prediction=300, span="44-44"];
m33_6 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.contextMock = new Mock<IContext>()", prediction=301, span="46-46"];
m33_7 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.planMock = new Mock<IPlan>()", prediction=302, span="47-47"];
m33_8 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector1 = (x, args) => { this.injector1WasCalled = true; }", prediction=303, span="48-48"];
m33_9 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector2 = (x, args) => { this.injector2WasCalled = true; }", prediction=304, span="49-49"];
m33_10 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.directives = new[]\r\n            {\r\n                new FakeMethodInjectionDirective(this.method1, this.injector1),\r\n                new FakeMethodInjectionDirective(this.method2, this.injector2)\r\n            }", prediction=305, span="51-55"];
m33_11 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.contextMock.SetupGet(x => x.Plan).Returns(this.planMock.Object)", prediction=306, span="57-57"];
m33_12 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.planMock.Setup(x => x.GetAll<MethodInjectionDirective>()).Returns(this.directives)", prediction=306, span="59-59"];
m33_13 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42"];
m33_66 [cluster="Unk.Should", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Should", span=""];
m33_33 [cluster="Unk.>", file="MethodInjectionStrategyTests.cs", label="Entry Unk.>", span=""];
m33_50 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="MethodInjectionStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8"];
m33_61 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85"];
m33_62 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=306, span="87-87"];
m33_63 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector1WasCalled.Should().BeTrue()", prediction=306, span="88-88"];
m33_64 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector2WasCalled.Should().BeTrue()", prediction=306, span="89-89"];
m33_65 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85"];
m33_43 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71"];
m33_44 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=306, span="73-73"];
m33_45 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71"];
m33_75 [cluster="Unk.ToArray", file="MethodInjectionStrategyTests.cs", label="Entry Unk.ToArray", span=""];
m33_17 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97"];
m33_68 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97"];
m33_38 [cluster="Unk.Activate", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Activate", span=""];
m33_20 [cluster="Unk.Setup", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Setup", span=""];
m33_18 [cluster="Unk.SetupGet", file="MethodInjectionStrategyTests.cs", label="Entry Unk.SetupGet", span=""];
m33_14 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m33_80 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="103-103"];
m33_27 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="57-57"];
m33_30 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="59-59"];
m33_22 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector1WasCalled = true", prediction=312, span="48-48"];
m33_21 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="48-48"];
m33_23 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="48-48"];
m33_25 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.injector2WasCalled = true", prediction=313, span="49-49"];
m33_24 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="49-49"];
m33_26 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="49-49"];
m33_28 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="x.Plan", prediction=314, span="57-57"];
m33_29 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="57-57"];
m33_31 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="x.GetAll<MethodInjectionDirective>()", prediction=315, span="59-59"];
m33_32 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="59-59"];
m33_40 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="67-67"];
m33_41 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="x.GetAll<MethodInjectionDirective>()", prediction=316, span="67-67"];
m33_42 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="67-67"];
m33_51 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="81-81"];
m33_52 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object)))", prediction=306, span="81-81"];
m33_53 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="81-81"];
m33_54 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="81-81"];
m33_55 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="m.Verify(x => x.ResolveWithin(this.contextMock.Object))", prediction=306, span="81-81"];
m33_56 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="81-81"];
m33_57 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="81-81"];
m33_58 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="x.ResolveWithin(this.contextMock.Object)", prediction=306, span="81-81"];
m33_59 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="81-81"];
m33_76 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="102-102"];
m33_77 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="new Mock<ITarget>()", prediction=320, span="102-102"];
m33_78 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="102-102"];
m33_81 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="m.Object", prediction=321, span="103-103"];
m33_82 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="103-103"];
m33_74 [cluster="Unk.Select", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Select", span=""];
m33_79 [cluster="Mock<ITarget>.cstr", file="MethodInjectionStrategyTests.cs", label="Entry Mock<ITarget>.cstr", span=""];
m33_34 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m33_35 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=306, span="65-65"];
m33_36 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.planMock.Verify(x => x.GetAll<MethodInjectionDirective>())", prediction=306, span="67-67"];
m33_37 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m33_67 [cluster="Unk.BeTrue", file="MethodInjectionStrategyTests.cs", label="Entry Unk.BeTrue", span=""];
m33_46 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m33_47 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=306, span="79-79"];
m33_48 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.directives.Map(d => d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object))))", prediction=306, span="81-81"];
m33_49 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m33_19 [cluster="Unk.Returns", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Returns", span=""];
m33_73 [cluster="System.Reflection.MethodBase.GetParameters()", file="MethodInjectionStrategyTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m33_60 [cluster="Unk.ResolveWithin", file="MethodInjectionStrategyTests.cs", label="Entry Unk.ResolveWithin", span=""];
m33_0 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m33_1 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.strategy = new MethodInjectionStrategy()", prediction=326, span="24-24"];
m33_2 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m33_69 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100"];
m33_70 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="this.TargetMocks = method.GetParameters().Select(p => new Mock<ITarget>()).ToArray()", prediction=327, span="102-102"];
m33_71 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="return this.TargetMocks.Select(m => m.Object).ToArray();", prediction=328, span="103-103"];
m33_72 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100"];
m33_87 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span=""];
m33_88 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span=""];
m33_89 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", span=""];
m34_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ModuleLoader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m34_45 [cluster="System.IO.Path.GetFullPath(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetFullPath(string)", span="0-0"];
m34_23 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="63-63"];
m34_33 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs", label="return NormalizePaths(Path.GetDirectoryName(pattern))\r\n                    .SelectMany(path => Directory.GetFiles(path, Path.GetFileName(pattern)));", span="65-66"];
m34_34 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="63-63"];
m34_41 [cluster="System.IO.Directory.GetFiles(string, string)", file="ModuleLoader.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m34_40 [cluster="System.IO.Path.GetFileName(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m34_0 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", span="27-27"];
m34_1 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs", label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="29-29"];
m34_2 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs", label="this.Kernel = kernel", span="31-31"];
m34_3 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", span="27-27"];
m34_35 [cluster="System.IO.Path.GetDirectoryName(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m34_36 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="69-69"];
m34_42 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs", label="return Path.IsPathRooted(path)\r\n                        ? new[] { Path.GetFullPath(path) }\r\n                        : GetBaseDirectories().Select(baseDirectory => Path.Combine(baseDirectory, path));", span="71-73"];
m34_43 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="69-69"];
m34_27 [cluster="System.IO.Path.GetExtension(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m34_17 [cluster="Unk.Where", file="ModuleLoader.cs", label="Entry Unk.Where", span=""];
m34_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ModuleLoader.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="22-22"];
m34_46 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="76-76"];
m34_52 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs", label="var baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="78-78"];
m34_53 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs", label="var searchPath = AppDomain.CurrentDomain.RelativeSearchPath", span="79-79"];
m34_54 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs", label="return string.IsNullOrEmpty(searchPath)\r\n                ? new[] { baseDirectory }\r\n                : searchPath.Split(new[] { Path.PathSeparator }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(path => Path.Combine(baseDirectory, path));", span="81-84"];
m34_55 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="76-76"];
m34_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ModuleLoader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m34_14 [cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="ModuleLoader.cs", label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="67-67"];
m34_5 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43"];
m34_6 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="var plugins = this.Kernel.Components.GetAll<IModuleLoaderPlugin>()", span="45-45"];
m34_7 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="var fileGroups = patterns\r\n                .SelectMany(pattern => GetFilesMatchingPattern(pattern))\r\n                .GroupBy(filename => Path.GetExtension(filename).ToLowerInvariant())", span="47-49"];
m34_10 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="var plugin = plugins.Where(p => p.SupportedExtensions.Contains(extension)).FirstOrDefault()", span="54-54"];
m34_8 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label=fileGroups, span="51-51"];
m34_9 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="var extension = fileGroup.Key", span="53-53"];
m34_12 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="plugin.LoadModules(fileGroup)", span="58-58"];
m34_11 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="plugin != null", span="56-56"];
m34_13 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43"];
m34_56 [cluster="string.IsNullOrEmpty(string)", file="ModuleLoader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m34_57 [cluster="string.Split(char[], System.StringSplitOptions)", file="ModuleLoader.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m34_28 [cluster="string.ToLowerInvariant()", file="ModuleLoader.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m34_58 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="84-84"];
m34_20 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="48-48"];
m34_24 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="49-49"];
m34_30 [cluster="lambda expression", file="ModuleLoader.cs", label="p.SupportedExtensions.Contains(extension)", span="54-54"];
m34_29 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="54-54"];
m34_21 [cluster="lambda expression", file="ModuleLoader.cs", label="GetFilesMatchingPattern(pattern)", span="48-48"];
m34_22 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="48-48"];
m34_25 [cluster="lambda expression", file="ModuleLoader.cs", label="Path.GetExtension(filename).ToLowerInvariant()", span="49-49"];
m34_26 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="49-49"];
m34_31 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="54-54"];
m34_38 [cluster="lambda expression", file="ModuleLoader.cs", label="Directory.GetFiles(path, Path.GetFileName(pattern))", span="66-66"];
m34_37 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="66-66"];
m34_39 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="66-66"];
m34_49 [cluster="lambda expression", file="ModuleLoader.cs", label="Path.Combine(baseDirectory, path)", span="73-73"];
m34_48 [cluster="lambda expression", file="ModuleLoader.cs", label="Entry lambda expression", span="73-73"];
m34_50 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="73-73"];
m34_59 [cluster="lambda expression", file="ModuleLoader.cs", label="Path.Combine(baseDirectory, path)", span="84-84"];
m34_60 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="84-84"];
m34_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ModuleLoader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m34_18 [cluster="Unk.FirstOrDefault", file="ModuleLoader.cs", label="Entry Unk.FirstOrDefault", span=""];
m34_44 [cluster="System.IO.Path.IsPathRooted(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.IsPathRooted(string)", span="0-0"];
m34_19 [cluster="Unk.LoadModules", file="ModuleLoader.cs", label="Entry Unk.LoadModules", span=""];
m34_47 [cluster="Unk.Select", file="ModuleLoader.cs", label="Entry Unk.Select", span=""];
m34_51 [cluster="System.IO.Path.Combine(string, string)", file="ModuleLoader.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m34_61 [file="ModuleLoader.cs", label="Ninject.Modules.ModuleLoader", span=""];
m34_62 [file="ModuleLoader.cs", label=extension, span=""];
m34_63 [file="ModuleLoader.cs", label=string, span=""];
m34_64 [file="ModuleLoader.cs", label=string, span=""];
m34_65 [file="ModuleLoader.cs", label=baseDirectory, span=""];
m35_32 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs", label="Entry Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", span="41-41"];
m35_34 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs", label="var fooFiles = new[] { Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @''TestModules\test.foo'') }", span="45-45"];
m35_35 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs", label="var barFiles = new[] { Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @''TestModules\test.bar'') }", span="46-46"];
m35_38 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs", label="Exit Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", span="41-41"];
m35_16 [cluster="Unk.SetupGet", file="ModuleLoaderTests.cs", label="Entry Unk.SetupGet", span=""];
m35_17 [cluster="Unk.Returns", file="ModuleLoaderTests.cs", label="Entry Unk.Returns", span=""];
m35_25 [cluster="Unk.>", file="ModuleLoaderTests.cs", label="Entry Unk.>", span=""];
m35_14 [cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", file="ModuleLoaderTests.cs", label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="46-46"];
m35_15 [cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", file="ModuleLoaderTests.cs", label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="39-39"];
m35_13 [cluster="Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", file="ModuleLoaderTests.cs", label="Entry Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", span="39-39"];
m35_49 [cluster="Unk.SequenceEqual", file="ModuleLoaderTests.cs", label="Entry Unk.SequenceEqual", span=""];
m35_39 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoaderTests.cs", label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43"];
m35_18 [cluster="Unk.Setup", file="ModuleLoaderTests.cs", label="Ninject.Planning.Strategies.ConstructorReflectionStrategy", span=""];
m35_53 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="49-49"];
m35_19 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="31-31"];
m35_22 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="32-32"];
m35_26 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="33-33"];
m35_29 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="34-34"];
m35_21 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="31-31"];
m35_24 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="32-32"];
m35_28 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="33-33"];
m35_31 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="34-34"];
m35_42 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="48-48"];
m35_50 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="49-49"];
m35_44 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="48-48"];
m35_46 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Entry lambda expression", span="48-48"];
m35_48 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="48-48"];
m35_52 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="49-49"];
m35_55 [cluster="lambda expression", file="ModuleLoaderTests.cs", label="Exit lambda expression", span="49-49"];
m35_45 [cluster="Unk.LoadModules", file="ModuleLoaderTests.cs", label="Entry Unk.LoadModules", span=""];
m35_11 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", label="Exit Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", span="21-21"];
m35_12 [cluster="Mock<IKernel>.cstr", file="ModuleLoaderTests.cs", label="Entry Mock<IKernel>.cstr", span=""];
m35_40 [cluster="System.IO.Path.Combine(string, string)", file="ModuleLoaderTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m35_0 [cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", label="Entry Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", span="21-21"];
m35_56 [file="ModuleLoaderTests.cs", label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext", span=""];
m35_57 [file="ModuleLoaderTests.cs", label="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled", span=""];
m35_58 [file="ModuleLoaderTests.cs", label=fooFiles, span=""];
m35_59 [file="ModuleLoaderTests.cs", label=barFiles, span=""];
m36_10 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="ModuleLoadExtensions.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52"];
m36_15 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="57-57"];
m36_16 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs", label="kernel.Load(assemblies)", span="59-59"];
m36_17 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="57-57"];
m36_0 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", span="24-24"];
m36_1 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs", label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="27-27"];
m36_2 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs", label="kernel.Load(new TModule())", span="28-28"];
m36_3 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", span="24-24"];
m36_5 [cluster="TModule.cstr", file="ModuleLoadExtensions.cs", label="Entry TModule.cstr", span=""];
m36_11 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", span="47-47"];
m36_12 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs", label="kernel.Load(filePatterns)", span="49-49"];
m36_13 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", span="47-47"];
m36_7 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", span="36-36"];
m36_8 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs", label="kernel.Load(modules)", span="38-38"];
m36_9 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", span="36-36"];
m36_6 [cluster="Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs", label="Entry Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", span="36-36"];
m36_14 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoadExtensions.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m36_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ModuleLoadExtensions.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="22-22"];
m36_18 [cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="ModuleLoadExtensions.cs", label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65"];
m37_18 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", file="NamedAttributeTests.cs", label="Entry Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", span="31-31"];
m37_19 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", color=green, community=0, file="NamedAttributeTests.cs", label="this.metadataMock.SetupGet(x => x.Name).Returns(''bar'')", prediction=329, span="33-33"];
m37_20 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", color=green, community=0, file="NamedAttributeTests.cs", label="this.attribute.Matches(this.metadataMock.Object).Should().BeFalse()", prediction=329, span="34-34"];
m37_21 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", file="NamedAttributeTests.cs", label="Exit Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", span="31-31"];
m37_0 [cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", file="NamedAttributeTests.cs", label="Entry Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", span="14-14"];
m37_1 [cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", color=green, community=0, file="NamedAttributeTests.cs", label="this.attribute = new NamedAttribute(''foo'')", prediction=331, span="16-16"];
m37_2 [cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", color=green, community=0, file="NamedAttributeTests.cs", label="this.metadataMock = new Mock<IBindingMetadata>()", prediction=332, span="17-17"];
m37_3 [cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", file="NamedAttributeTests.cs", label="Exit Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", span="14-14"];
m37_12 [cluster="Unk.Matches", file="NamedAttributeTests.cs", label="Entry Unk.Matches", span=""];
m37_5 [cluster="Mock<IBindingMetadata>.cstr", file="NamedAttributeTests.cs", label="Entry Mock<IBindingMetadata>.cstr", span=""];
m37_22 [cluster="Unk.BeFalse", file="NamedAttributeTests.cs", label="Entry Unk.BeFalse", span=""];
m37_14 [cluster="Unk.BeTrue", file="NamedAttributeTests.cs", label="Entry Unk.BeTrue", span=""];
m37_10 [cluster="Unk.SetupGet", file="NamedAttributeTests.cs", label="Entry Unk.SetupGet", span=""];
m37_6 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", file="NamedAttributeTests.cs", label="Entry Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", span="24-24"];
m37_7 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", color=green, community=0, file="NamedAttributeTests.cs", label="this.metadataMock.SetupGet(x => x.Name).Returns(''foo'')", prediction=329, span="26-26"];
m37_8 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", color=green, community=0, file="NamedAttributeTests.cs", label="this.attribute.Matches(this.metadataMock.Object).Should().BeTrue()", prediction=329, span="27-27"];
m37_9 [cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", file="NamedAttributeTests.cs", label="Exit Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", span="24-24"];
m37_11 [cluster="Unk.Returns", file="NamedAttributeTests.cs", label="Entry Unk.Returns", span=""];
m37_23 [cluster="lambda expression", file="NamedAttributeTests.cs", label="Entry lambda expression", span="33-33"];
m37_15 [cluster="lambda expression", file="NamedAttributeTests.cs", label="Entry lambda expression", span="26-26"];
m37_16 [cluster="lambda expression", color=green, community=0, file="NamedAttributeTests.cs", label="x.Name", prediction=335, span="26-26"];
m37_17 [cluster="lambda expression", file="NamedAttributeTests.cs", label="Exit lambda expression", span="26-26"];
m37_24 [cluster="lambda expression", color=green, community=0, file="NamedAttributeTests.cs", label="x.Name", prediction=336, span="33-33"];
m37_25 [cluster="lambda expression", file="NamedAttributeTests.cs", label="Exit lambda expression", span="33-33"];
m37_4 [cluster="Ninject.NamedAttribute.NamedAttribute(string)", file="NamedAttributeTests.cs", label="Entry Ninject.NamedAttribute.NamedAttribute(string)", span="23-23"];
m37_13 [cluster="Unk.Should", file="NamedAttributeTests.cs", label="Entry Unk.Should", span=""];
m37_26 [file="NamedAttributeTests.cs", label="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext", span=""];
m37_27 [file="NamedAttributeTests.cs", label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", span=""];
m38_8 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs", label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="19-19"];
m38_9 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs", label="this.Warrior = warrior", prediction=337, span="21-21"];
m38_10 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs", label="this.Weapon = weapon", prediction=338, span="22-22"];
m38_11 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs", label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="19-19"];
m38_0 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", file="NinjaBarracks.cs", label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", span="4-4"];
m38_1 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", file="NinjaBarracks.cs", label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", span="4-4"];
m38_2 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", file="NinjaBarracks.cs", label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m38_3 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="NinjaBarracks.cs", label="this.Warrior = warrior", prediction=339, span="10-10"];
m38_4 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", file="NinjaBarracks.cs", label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m38_5 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs", label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", span="13-13"];
m38_6 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs", label="this.Weapon = weapon", prediction=340, span="15-15"];
m38_7 [cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs", label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", span="13-13"];
m38_12 [file="NinjaBarracks.cs", label="Ninject.Tests.Fakes.NinjaBarracks", span=""];
m39_0 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs", label="Entry Ninject.NinjectSettings.Get<T>(string, T)", span="139-139"];
m39_1 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs", label="return this.values.TryGetValue(key, out object value) ? (T)value : defaultValue;", span="141-141"];
m39_2 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs", label="Exit Ninject.NinjectSettings.Get<T>(string, T)", span="139-139"];
m39_3 [cluster="Unk.TryGetValue", file="NinjectSettings.cs", label="Entry Unk.TryGetValue", span=""];
m39_4 [cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs", label="Entry Ninject.NinjectSettings.Set(string, object)", span="149-149"];
m39_5 [cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs", label="this.values[key] = value", span="151-151"];
m39_6 [cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs", label="Exit Ninject.NinjectSettings.Set(string, object)", span="149-149"];
m39_7 [file="NinjectSettings.cs", label="Ninject.NinjectSettings", span=""];
m40_10 [cluster="Unk.Be", file="PropertyInjectionDirectiveTests.cs", label="Entry Unk.Be", span=""];
m40_0 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="18-18"];
m40_1 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs", label="var method = typeof(Dummy).GetProperty(''Foo'')", span="21-21"];
m40_2 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs", label="PropertyInjector injector = delegate { }", span="25-25"];
m40_3 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs", label="this.directive = new PropertyInjectionDirective(method, injector)", prediction=341, span="27-27"];
m40_4 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs", label="this.directive.Target.Name.Should().Be(''Foo'')", prediction=342, span="29-29"];
m40_5 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs", label="this.directive.Target.Type.Should().Be(typeof(int))", prediction=342, span="30-30"];
m40_6 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="18-18"];
m40_7 [cluster="System.Type.GetProperty(string)", file="PropertyInjectionDirectiveTests.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m40_11 [cluster="lambda expression", file="PropertyInjectionDirectiveTests.cs", label="Entry lambda expression", span="25-25"];
m40_12 [cluster="lambda expression", file="PropertyInjectionDirectiveTests.cs", label="Exit lambda expression", span="25-25"];
m40_9 [cluster="Unk.Should", file="PropertyInjectionDirectiveTests.cs", label="Entry Unk.Should", span=""];
m40_8 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionDirectiveTests.cs", label="Entry Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="24-24"];
m40_13 [file="PropertyInjectionDirectiveTests.cs", label=object, span=""];
m40_14 [file="PropertyInjectionDirectiveTests.cs", label=object, span=""];
m40_15 [file="PropertyInjectionDirectiveTests.cs", label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", span=""];
m41_0 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m41_5 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="PropertyInjectionSelectorTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m41_29 [cluster="Unk.NotNull", file="PropertyInjectionSelectorTests.cs", label="Entry Unk.NotNull", span=""];
m41_7 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="23-23"];
m41_8 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m41_30 [cluster="Unk.>", file="PropertyInjectionSelectorTests.cs", label="Entry Unk.>", span=""];
m41_17 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="47-47"];
m41_10 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m41_14 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs", label="base.Dispose(disposing)", span="29-29"];
m41_15 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m41_37 [cluster="Unk.Null", file="PropertyInjectionSelectorTests.cs", label="Entry Unk.Null", span=""];
m41_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m41_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104"];
m41_28 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m41_31 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54"];
m41_33 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs", label="Assert.NotNull(instance.Weapon)", span="58-58"];
m41_34 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs", label="Assert.Null(instance.SecondaryWeapon)", span="59-59"];
m41_35 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs", label="Assert.Null(instance.VerySecretWeaponAccessor)", span="60-60"];
m41_36 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54"];
m41_16 [cluster="System.IDisposable.Dispose()", file="PropertyInjectionSelectorTests.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m41_18 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37"];
m41_21 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.NotNull(instance.Weapon)", span="42-42"];
m41_22 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.IsType<Sword>(instance.Weapon)", span="43-43"];
m41_23 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.NotNull(instance.SecondaryWeapon)", span="45-45"];
m41_24 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.IsType<Shuriken>(instance.SecondaryWeapon)", span="46-46"];
m41_25 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.NotNull(instance.VerySecretWeaponAccessor)", span="48-48"];
m41_26 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Assert.IsType<Shuriken>(instance.VerySecretWeaponAccessor)", span="49-49"];
m41_27 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37"];
m41_38 [file="PropertyInjectionSelectorTests.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", span=""];
m41_39 [file="PropertyInjectionSelectorTests.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", span=""];
m42_17 [cluster="Mock<IPlan>.cstr", file="PropertyInjectionStrategyTests.cs", label="Entry Mock<IPlan>.cstr", span=""];
m42_18 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="91-91"];
m42_67 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="91-91"];
m42_16 [cluster="Mock<IContext>.cstr", file="PropertyInjectionStrategyTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m42_65 [cluster="Unk.Should", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.Should", span=""];
m42_3 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="32-32"];
m42_38 [cluster="Unk.>", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.>", span=""];
m42_39 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m42_40 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=344, span="65-65"];
m42_41 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.planMock.Verify(x => x.GetAll<PropertyInjectionDirective>())", prediction=344, span="67-67"];
m42_42 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m42_52 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="PropertyInjectionStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8"];
m42_43 [cluster="Unk.Activate", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.Activate", span=""];
m42_22 [cluster="Unk.Setup", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.Setup", span=""];
m42_19 [cluster="Unk.SetupGet", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.SetupGet", span=""];
m42_21 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m42_56 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="75-75"];
m42_29 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="54-54"];
m42_32 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="55-55"];
m42_35 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="59-59"];
m42_23 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="45-45"];
m42_24 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector1WasCalled = true", prediction=346, span="45-45"];
m42_25 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="45-45"];
m42_26 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="46-46"];
m42_27 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector2WasCalled = true", prediction=347, span="46-46"];
m42_28 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="46-46"];
m42_30 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="x.Plan", prediction=348, span="54-54"];
m42_31 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="54-54"];
m42_33 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="x.Parameters", prediction=349, span="55-55"];
m42_34 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="55-55"];
m42_36 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="x.GetAll<PropertyInjectionDirective>()", prediction=350, span="59-59"];
m42_37 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="59-59"];
m42_45 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="67-67"];
m42_46 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="x.GetAll<PropertyInjectionDirective>()", prediction=351, span="67-67"];
m42_47 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="67-67"];
m42_53 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Entry lambda expression", span="75-75"];
m42_54 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="d.TargetMock.Verify(x => x.ResolveWithin(this.contextMock.Object))", prediction=344, span="75-75"];
m42_55 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="75-75"];
m42_57 [cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="x.ResolveWithin(this.contextMock.Object)", prediction=344, span="75-75"];
m42_58 [cluster="lambda expression", file="PropertyInjectionStrategyTests.cs", label="Exit lambda expression", span="75-75"];
m42_48 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="71-71"];
m42_49 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=344, span="73-73"];
m42_50 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.directives.Map(d => d.TargetMock.Verify(x => x.ResolveWithin(this.contextMock.Object)))", prediction=344, span="75-75"];
m42_51 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="71-71"];
m42_72 [cluster="Mock<ITarget>.cstr", file="PropertyInjectionStrategyTests.cs", label="Entry Mock<ITarget>.cstr", span=""];
m42_66 [cluster="Unk.BeTrue", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.BeTrue", span=""];
m42_4 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18"];
m42_68 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", span="94-94"];
m42_69 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.TargetMock = new Mock<ITarget>()", prediction=356, span="96-96"];
m42_70 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="return this.TargetMock.Object;", prediction=357, span="97-97"];
m42_71 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", span="94-94"];
m42_20 [cluster="Unk.Returns", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.Returns", span=""];
m42_0 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", span="21-21"];
m42_1 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.strategy = new PropertyInjectionStrategy(null) {Settings = new NinjectSettings()}", prediction=358, span="23-23"];
m42_2 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", span="21-21"];
m42_60 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="79-79"];
m42_61 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", prediction=344, span="81-81"];
m42_62 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector1WasCalled.Should().BeTrue()", prediction=344, span="82-82"];
m42_63 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector2WasCalled.Should().BeTrue()", prediction=344, span="83-83"];
m42_64 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="79-79"];
m42_59 [cluster="Unk.ResolveWithin", file="PropertyInjectionStrategyTests.cs", label="Entry Unk.ResolveWithin", span=""];
m42_5 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="PropertyInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="41-41"];
m42_6 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.contextMock = new Mock<IContext>()", prediction=362, span="43-43"];
m42_7 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.planMock = new Mock<IPlan>()", prediction=363, span="44-44"];
m42_8 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector1 = (x, y) => { this.injector1WasCalled = true; }", prediction=364, span="45-45"];
m42_9 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.injector2 = (x, y) => { this.injector2WasCalled = true; }", prediction=365, span="46-46"];
m42_10 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.directives = new[]\r\n            {\r\n                new FakePropertyInjectionDirective(this.property1, this.injector1),\r\n                new FakePropertyInjectionDirective(this.property2, this.injector2)\r\n            }", prediction=366, span="48-52"];
m42_11 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.contextMock.SetupGet(x => x.Plan).Returns(this.planMock.Object)", prediction=344, span="54-54"];
m42_12 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.contextMock.SetupGet(x => x.Parameters).Returns(new IParameter[0])", prediction=344, span="55-55"];
m42_13 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.reference = new InstanceReference { Instance = this.instance }", prediction=369, span="57-57"];
m42_14 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs", label="this.planMock.Setup(x => x.GetAll<PropertyInjectionDirective>()).Returns(this.directives)", prediction=344, span="59-59"];
m42_15 [cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="PropertyInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="41-41"];
m42_73 [file="PropertyInjectionStrategyTests.cs", label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext", span=""];
m42_74 [file="PropertyInjectionStrategyTests.cs", label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", span=""];
m42_75 [file="PropertyInjectionStrategyTests.cs", label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective", span=""];
m44_0 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="Samurai.cs", label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m44_1 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Samurai.cs", label="this.Weapon = weapon", prediction=371, span="25-25"];
m44_2 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="Samurai.cs", label="Exit Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m44_6 [cluster="Ninject.Tests.Fakes.Samurai.DoNothing()", file="Samurai.cs", label="Entry Ninject.Tests.Fakes.Samurai.DoNothing()", span="33-33"];
m44_7 [cluster="Ninject.Tests.Fakes.Samurai.DoNothing()", file="Samurai.cs", label="Exit Ninject.Tests.Fakes.Samurai.DoNothing()", span="33-33"];
m44_12 [cluster="string.Format(string, object, object)", file="Samurai.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m44_3 [cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", file="Samurai.cs", label="Entry Ninject.Tests.Fakes.Samurai.SetName(string)", span="28-28"];
m44_4 [cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", color=green, community=0, file="Samurai.cs", label="this._name = name", prediction=372, span="30-30"];
m44_5 [cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", file="Samurai.cs", label="Exit Ninject.Tests.Fakes.Samurai.SetName(string)", span="28-28"];
m44_8 [cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", file="Samurai.cs", label="Entry Ninject.Tests.Fakes.Samurai.Attack(string)", span="37-37"];
m44_9 [cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", color=green, community=0, file="Samurai.cs", label="this.IsBattleHardened = true", prediction=373, span="39-39"];
m44_10 [cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", color=green, community=0, file="Samurai.cs", label="return String.Format(''Attacked {0} with a {1}'', enemy, this.Weapon.Name);", prediction=374, span="40-40"];
m44_11 [cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", file="Samurai.cs", label="Exit Ninject.Tests.Fakes.Samurai.Attack(string)", span="37-37"];
m44_13 [file="Samurai.cs", label="Ninject.Tests.Fakes.Samurai", span=""];
m45_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="SingletonScopeTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m45_115 [cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", span="190-190"];
m45_116 [cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs", label="return new NotifiesWhenDisposed();", span="192-192"];
m45_117 [cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", span="190-190"];
m45_33 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="54-54"];
m45_34 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().To<NotifiesWhenDisposed>().InSingletonScope()", prediction=375, span="56-56"];
m45_35 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<INotifyWhenDisposed>()", prediction=376, span="58-58"];
m45_36 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Dispose()", prediction=375, span="59-59"];
m45_37 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="61-61"];
m45_38 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="54-54"];
m45_83 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", span="150-150"];
m45_84 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", prediction=378, span="152-152"];
m45_85 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance1 = this.kernel.Get<INotifyWhenDisposed>()", prediction=379, span="154-154"];
m45_86 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance2 = this.kernel.Get<INotifyWhenDisposed>()", prediction=380, span="155-155"];
m45_87 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="instance1.Should().BeSameAs(instance2)", span="157-157"];
m45_88 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", span="150-150"];
m45_18 [cluster="Unk.Should", file="SingletonScopeTests.cs", label="Entry Unk.Should", span=""];
m45_61 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", span="109-109"];
m45_62 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", prediction=381, span="111-111"];
m45_63 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance1 = this.kernel.Get<INotifyWhenDisposed>()", prediction=382, span="113-113"];
m45_64 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance2 = this.kernel.Get<INotifyWhenDisposed>()", prediction=383, span="114-114"];
m45_65 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="instance1.Should().BeSameAs(instance2)", span="116-116"];
m45_66 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", span="109-109"];
m45_0 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Entry Ninject.Web.Mvc.MvcModule.Load()", span="9-9"];
m45_1 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Bind<IControllerFactory>().To<NinjectControllerFactory>().InSingletonScope()", span="11-11"];
m45_2 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Bind<IControllerRegistry>().To<ControllerRegistry>().InSingletonScope()", span="12-12"];
m45_89 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="80-80"];
m45_15 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m45_46 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="79-79"];
m45_47 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", prediction=384, span="81-81"];
m45_48 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", prediction=385, span="83-83"];
m45_49 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="var reference = new WeakReference(instance)", span="84-84"];
m45_50 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="instance = null", span="86-86"];
m45_53 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="reference.IsAlive.Should().BeTrue()", span="91-91"];
m45_51 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.Collect()", span="88-88"];
m45_52 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="89-89"];
m45_54 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="79-79"];
m45_11 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance2 = this.kernel.Get<IWeapon>()", prediction=386, span="32-32"];
m45_9 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().InSingletonScope()", prediction=375, span="29-29"];
m45_39 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", span="68-68"];
m45_40 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<Sword>().ToSelf().InSingletonScope()", prediction=384, span="70-70"];
m45_41 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var sword1 = this.kernel.Get<Sword>()", prediction=389, span="72-72"];
m45_42 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var sword2 = this.kernel.Get<Sword>()", prediction=390, span="73-73"];
m45_43 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="sword1.Should().BeSameAs(sword2)", span="75-75"];
m45_44 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", span="68-68"];
m45_14 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m45_94 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="161-161"];
m45_95 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", prediction=378, span="163-163"];
m45_96 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<INotifyWhenDisposed>()", prediction=392, span="165-165"];
m45_97 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="var reference = new WeakReference(instance)", span="166-166"];
m45_98 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="instance = null", span="168-168"];
m45_101 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="reference.IsAlive.Should().BeTrue()", span="173-173"];
m45_99 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.Collect()", span="170-170"];
m45_100 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="171-171"];
m45_102 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="161-161"];
m45_67 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", span="47-47"];
m45_8 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", span="27-27"];
m45_77 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="136-136"];
m45_78 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", prediction=381, span="138-138"];
m45_79 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<INotifyWhenDisposed>()", prediction=394, span="140-140"];
m45_80 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Dispose()", prediction=381, span="141-141"];
m45_81 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="143-143"];
m45_82 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="136-136"];
m45_55 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="95-95"];
m45_56 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", prediction=384, span="97-97"];
m45_57 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", prediction=397, span="99-99"];
m45_58 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Dispose()", prediction=384, span="100-100"];
m45_59 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="102-102"];
m45_60 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="95-95"];
m45_106 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="177-177"];
m45_107 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", prediction=378, span="179-179"];
m45_108 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<INotifyWhenDisposed>()", prediction=400, span="181-181"];
m45_109 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Dispose()", prediction=378, span="182-182"];
m45_110 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="184-184"];
m45_111 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="177-177"];
m45_68 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="120-120"];
m45_69 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", prediction=381, span="122-122"];
m45_70 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<INotifyWhenDisposed>()", prediction=403, span="124-124"];
m45_71 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="var reference = new WeakReference(instance)", span="125-125"];
m45_72 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="instance = null", span="127-127"];
m45_75 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="reference.IsAlive.Should().BeTrue()", span="132-132"];
m45_73 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.Collect()", span="129-129"];
m45_74 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="130-130"];
m45_76 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="120-120"];
m45_3 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Bind<IControllerNamer>().To<ControllerNamer>().InSingletonScope()", span="13-13"];
m45_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m45_10 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance1 = this.kernel.Get<IWeapon>()", prediction=404, span="31-31"];
m45_19 [cluster="Unk.BeSameAs", file="SingletonScopeTests.cs", label="Entry Unk.BeSameAs", span=""];
m45_12 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Ninject.Web.Mvc.MvcModule", span=""];
m45_13 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", span="27-27"];
m45_112 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Entry lambda expression", span="179-179"];
m45_90 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Entry lambda expression", span="152-152"];
m45_91 [cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs", label="new NotifiesWhenDisposed()", prediction=405, span="152-152"];
m45_92 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Exit lambda expression", span="152-152"];
m45_103 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Entry lambda expression", span="163-163"];
m45_104 [cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs", label="new NotifiesWhenDisposed()", prediction=406, span="163-163"];
m45_105 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Exit lambda expression", span="163-163"];
m45_113 [cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs", label="new NotifiesWhenDisposed()", prediction=407, span="179-179"];
m45_114 [cluster="lambda expression", file="SingletonScopeTests.cs", label="Exit lambda expression", span="179-179"];
m45_31 [cluster="System.GC.WaitForPendingFinalizers()", file="SingletonScopeTests.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m45_30 [cluster="System.GC.Collect()", file="SingletonScopeTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m45_45 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="SingletonScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m45_20 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="38-38"];
m45_21 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().InSingletonScope()", prediction=375, span="40-40"];
m45_22 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs", label="var instance = this.kernel.Get<IWeapon>()", prediction=409, span="42-42"];
m45_23 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="var reference = new WeakReference(instance)", span="43-43"];
m45_24 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="instance = null", span="45-45"];
m45_27 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="reference.IsAlive.Should().BeTrue()", span="50-50"];
m45_25 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.Collect()", span="47-47"];
m45_26 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="48-48"];
m45_28 [cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs", label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="38-38"];
m45_32 [cluster="Unk.BeTrue", file="SingletonScopeTests.cs", label="Entry Unk.BeTrue", span=""];
m45_4 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Bind<HttpContext>().ToProvider<HttpContextProvider>().InRequestScope()", span="14-14"];
m45_5 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Bind<HttpContextBase>().ToProvider<HttpContextBaseProvider>().InRequestScope()", span="15-15"];
m45_6 [cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs", label="Exit Ninject.Web.Mvc.MvcModule.Load()", span="9-9"];
m45_29 [cluster="System.WeakReference.WeakReference(object)", file="SingletonScopeTests.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m45_93 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="SingletonScopeTests.cs", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
m45_119 [file="SingletonScopeTests.cs", label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", span=""];
m45_120 [file="SingletonScopeTests.cs", label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", span=""];
m45_121 [file="SingletonScopeTests.cs", label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", span=""];
m45_122 [file="SingletonScopeTests.cs", label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", span=""];
m45_118 [file="SingletonScopeTests.cs", label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext", span=""];
m46_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="SpecialResolutionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m46_32 [cluster="Unk.>", file="SpecialResolutionTests.cs", label="Entry Unk.>", span=""];
m46_21 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", span="40-40"];
m46_22 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="this.kernel.Bind<RequestsResolutionRoot>().ToSelf()", prediction=410, span="42-42"];
m46_23 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="var instance = this.kernel.Get<RequestsResolutionRoot>()", prediction=410, span="43-43"];
m46_24 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="instance.Should().NotBeNull()", span="45-45"];
m46_25 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="instance.ResolutionRoot.Should().NotBeNull()", span="46-46"];
m46_26 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="instance.ResolutionRoot.Should().BeSameAs(this.kernel)", prediction=410, span="47-47"];
m46_27 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", span="40-40"];
m46_42 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", span="85-85"];
m46_43 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", color=green, community=0, file="SpecialResolutionTests.cs", label="this.StringValue = stringValue", prediction=413, span="87-87"];
m46_44 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", span="85-85"];
m46_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="SpecialResolutionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m46_36 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", span="65-65"];
m46_37 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", color=green, community=0, file="SpecialResolutionTests.cs", label="this.Kernel = kernel", prediction=414, span="67-67"];
m46_38 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", span="65-65"];
m46_39 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", span="75-75"];
m46_40 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs", label="this.ResolutionRoot = resolutionRoot", span="77-77"];
m46_41 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", span="75-75"];
m46_4 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", span="17-17"];
m46_5 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs", label="this.kernel.Dispose()", span="19-19"];
m46_6 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", span="17-17"];
m46_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="SpecialResolutionTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m46_0 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", span="12-12"];
m46_1 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs", label="this.kernel = new StandardKernel()", span="14-14"];
m46_2 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", span="12-12"];
m46_28 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", span="54-54"];
m46_29 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="this.kernel.Bind<RequestsString>().ToSelf()", prediction=415, span="56-56"];
m46_30 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<RequestsString>())", prediction=415, span="57-57"];
m46_31 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", span="54-54"];
m46_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="SpecialResolutionTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m46_19 [cluster="Unk.NotBeNull", file="SpecialResolutionTests.cs", label="Entry Unk.NotBeNull", span=""];
m46_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="SpecialResolutionTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m46_20 [cluster="Unk.BeSameAs", file="SpecialResolutionTests.cs", label="Entry Unk.BeSameAs", span=""];
m46_33 [cluster="lambda expression", file="SpecialResolutionTests.cs", label="Entry lambda expression", span="57-57"];
m46_34 [cluster="lambda expression", color=green, community=0, file="SpecialResolutionTests.cs", label="this.kernel.Get<RequestsString>()", prediction=415, span="57-57"];
m46_35 [cluster="lambda expression", file="SpecialResolutionTests.cs", label="Exit lambda expression", span="57-57"];
m46_18 [cluster="Unk.Should", file="SpecialResolutionTests.cs", label="Entry Unk.Should", span=""];
m46_8 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", span="26-26"];
m46_9 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="this.kernel.Bind<RequestsKernel>().ToSelf()", prediction=418, span="28-28"];
m46_10 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="var instance = this.kernel.Get<RequestsKernel>()", prediction=418, span="29-29"];
m46_11 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="instance.Should().NotBeNull()", span="31-31"];
m46_12 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="instance.Kernel.Should().NotBeNull()", span="32-32"];
m46_13 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs", label="instance.Kernel.Should().BeSameAs(this.kernel)", prediction=418, span="33-33"];
m46_14 [cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs", label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", span="26-26"];
m46_45 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext", span=""];
m46_46 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel", span=""];
m46_47 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot", span=""];
m46_48 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString", span=""];
m46_49 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel", span=""];
m46_50 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot", span=""];
m46_51 [file="SpecialResolutionTests.cs", label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString", span=""];
m47_36 [cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="StandardKernel.cs", label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="28-28"];
m47_2 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41"];
m47_3 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs", label="Exit Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41"];
m47_4 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="Entry Ninject.StandardKernel.AddComponents()", span="61-61"];
m47_5 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IPlanner, Planner>()", span="63-63"];
m47_6 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IPlanningStrategy, ConstructorReflectionStrategy>()", span="64-64"];
m47_7 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IPlanningStrategy, PropertyReflectionStrategy>()", span="65-65"];
m47_8 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IPlanningStrategy, MethodReflectionStrategy>()", span="66-66"];
m47_9 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<ISelector, Selector>()", span="68-68"];
m47_10 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IConstructorScorer, StandardConstructorScorer>()", span="69-69"];
m47_11 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IInjectionHeuristic, StandardInjectionHeuristic>()", span="70-70"];
m47_12 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IPipeline, Pipeline>()", span="72-72"];
m47_13 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="!this.Settings.ActivationCacheDisabled", span="73-73"];
m47_14 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, ActivationCacheStrategy>()", span="75-75"];
m47_15 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, PropertyInjectionStrategy>()", span="78-78"];
m47_16 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, MethodInjectionStrategy>()", span="79-79"];
m47_17 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, InitializableStrategy>()", span="80-80"];
m47_18 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, StartableStrategy>()", span="81-81"];
m47_19 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, BindingActionStrategy>()", span="82-82"];
m47_20 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationStrategy, DisposableStrategy>()", span="83-83"];
m47_21 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IBindingPrecedenceComparer, BindingPrecedenceComparer>()", span="85-85"];
m47_22 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IBindingResolver, StandardBindingResolver>()", span="87-87"];
m47_23 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IBindingResolver, OpenGenericBindingResolver>()", span="88-88"];
m47_24 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IMissingBindingResolver, DefaultValueBindingResolver>()", span="90-90"];
m47_25 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IMissingBindingResolver, SelfBindingResolver>()", span="91-91"];
m47_26 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="!this.Settings.UseReflectionBasedInjection", span="94-94"];
m47_27 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IInjectorFactory, DynamicMethodInjectorFactory>()", span="96-96"];
m47_28 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IInjectorFactory, ReflectionInjectorFactory>()", span="101-101"];
m47_29 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<ICache, Cache>()", span="104-104"];
m47_30 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IActivationCache, ActivationCache>()", span="105-105"];
m47_31 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<ICachePruner, GarbageCollectionCachePruner>()", span="106-106"];
m47_32 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IModuleLoader, ModuleLoader>()", span="109-109"];
m47_33 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IModuleLoaderPlugin, CompiledModuleLoaderPlugin>()", span="110-110"];
m47_34 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="this.Components.Add<IAssemblyNameRetriever, AssemblyNameRetriever>()", span="111-111"];
m47_35 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="Exit Ninject.StandardKernel.AddComponents()", span="61-61"];
m47_0 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m47_1 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs", label="Exit Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m47_37 [file="StandardKernel.cs", label="Ninject.StandardKernel", span=""];
m48_5 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="12-12"];
m48_6 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="context.Instance is T", span="14-14"];
m48_7 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Deactivate(context, (T)context.Instance)", span="15-15"];
m48_8 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="12-12"];
m48_4 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs", label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="18-18"];
m48_10 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs", label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="18-18"];
m48_9 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs", label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="19-19"];
m48_11 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs", label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="19-19"];
m48_0 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="6-6"];
m48_1 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="context.Instance is T", span="8-8"];
m48_2 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Activate(context, (T)context.Instance)", span="9-9"];
m48_3 [cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs", label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="6-6"];
m48_12 [file="StandardKernelTests.cs", label="Ninject.Activation.Strategies.ActivationStrategyFor<T>", span=""];
m49_46 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon.ShouldBeInstanceOf<ShortSword>()", span="80-80"];
m49_52 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="kernel.Bind<Sword>().To<ShortSword>().When(_ => true)", span="91-91"];
m49_54 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon.ShouldBeInstanceOf<ShortSword>()", span="93-93"];
m49_55 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="84-84"];
m49_56 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="408-408"];
m49_60 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs", label="Type implementation = _mappings[component].FirstOrDefault()", span="163-163"];
m49_62 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Entry lambda expression", span="91-91"];
m49_63 [cluster="lambda expression", file="StartableStrategyTests.cs", label=true, span="91-91"];
m49_53 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon = kernel.Get<Sword>()", span="92-92"];
m49_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StartableStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m49_59 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs", label="return GetAll(argument).CastSlow(argument);", span="161-161"];
m49_58 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="StartableStrategyTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93"];
m49_61 [cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs", label="implementation == null", span="165-165"];
m49_64 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Exit lambda expression", span="91-91"];
m49_12 [cluster="Unk.>", file="StartableStrategyTests.cs", label="Entry Unk.>", span=""];
m49_13 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="37-37"];
m49_14 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="39-39"];
m49_15 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", prediction=421, span="40-40"];
m49_50 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="88-88"];
m49_73 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="StartableStrategyTests.cs", label="return _mappings[component]\r\n                .Select(implementation => ResolveInstance(component, implementation));", span="178-179"];
m49_74 [cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.GetAll(System.Type)", span="176-176"];
m49_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StartableStrategyTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m49_41 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109"];
m49_45 [cluster="Ninject.Components.ComponentContainer.Get<T>()", color=green, community=0, file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.Get<T>()", prediction=421, span="127-127"];
m49_44 [cluster="Ninject.Components.ComponentContainer.Get<T>()", file="StartableStrategyTests.cs", label="return (T) Get(typeof(T));", span="130-130"];
m49_42 [cluster="Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", file="StartableStrategyTests.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", span="87-87"];
m49_43 [cluster="Ninject.Components.ComponentContainer.Get<T>()", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="127-127"];
m49_47 [cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="138-138"];
m49_26 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="47-47"];
m49_27 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="57-57"];
m49_28 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="59-59"];
m49_29 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="60-60"];
m49_30 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="61-61"];
m49_31 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="62-62"];
m49_32 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="StartableStrategyTests.cs", label="Assert.Throws<ActivationException>(() => kernel.Get<Samurai>())", prediction=421, span="63-63"];
m49_98 [cluster="Ninject.INinjectSettings.Clone()", file="StartableStrategyTests.cs", label="Entry Ninject.INinjectSettings.Clone()", span="112-112"];
m49_82 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="188-188"];
m49_83 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="ConstructorInfo constructor = SelectConstructor(component, implementation)", span="190-190"];
m49_87 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="!this.transients.Contains(new KeyValuePair<Type, Type>(component, implementation))", span="200-200"];
m49_88 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="_instances.Add(implementation, instance)", span="202-202"];
m49_84 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="var arguments = constructor.GetParameters().Select(parameter => Get(parameter.ParameterType)).ToArray()", span="191-191"];
m49_85 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="var instance = constructor.Invoke(arguments) as INinjectComponent", span="195-195"];
m49_86 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="instance.Settings = KernelConfiguration.Settings.Clone()", span="198-198"];
m49_89 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="return instance;", span="205-205"];
m49_90 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label=TargetInvocationException, span="207-207"];
m49_91 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="ex.RethrowInnerException()", span="209-209"];
m49_92 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="return null;", span="210-210"];
m49_93 [cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="188-188"];
m49_51 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon.ShouldBeInstanceOf<Sword>()", span="89-89"];
m49_35 [cluster="lambda expression", color=green, community=0, file="StartableStrategyTests.cs", label="kernel.Get<Samurai>()", prediction=421, span="63-63"];
m49_10 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="StartableStrategyTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m49_20 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="47-47"];
m49_0 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="27-27"];
m49_1 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="29-29"];
m49_6 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="27-27"];
m49_2 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="StartableStrategyTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", prediction=421, span="30-30"];
m49_3 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="31-31"];
m49_4 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="var warrior = kernel.Get<Samurai>()", span="32-32"];
m49_5 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="33-33"];
m49_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="StartableStrategyTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m49_33 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="57-57"];
m49_71 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon.ShouldBeInstanceOf<Sword>()", span="106-106"];
m49_9 [cluster="Ninject.Infrastructure.Multimap<K, V>.Clear()", file="StartableStrategyTests.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Clear()", span="95-95"];
m49_69 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs", label="kernel.Bind<Sword>().To<ShortSword>()", span="104-104"];
m49_16 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="41-41"];
m49_18 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="43-43"];
m49_19 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="37-37"];
m49_68 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon.ShouldBeInstanceOf<Sword>()", span="102-102"];
m49_94 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="214-214"];
m49_105 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="var constructor =\r\n                implementation.GetTypeInfo().DeclaredConstructors.Where(c => c.IsPublic && !c.IsStatic).OrderByDescending(c => c.GetParameters().Length).\r\n                    FirstOrDefault()", span="216-218"];
m49_107 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="throw new InvalidOperationException(ExceptionFormatter.NoConstructorsAvailableForComponent(component, implementation));", span="221-221"];
m49_106 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="constructor == null", span="220-220"];
m49_108 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="return constructor;", span="223-223"];
m49_109 [cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="214-214"];
m49_8 [cluster="System.IDisposable.Dispose()", file="StartableStrategyTests.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m49_96 [cluster="Unk.ToArray", file="StartableStrategyTests.cs", label="Entry Unk.ToArray", span=""];
m49_110 [cluster="Unk.Where", file="StartableStrategyTests.cs", label="Entry Unk.Where", span=""];
m49_70 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs", label="weapon = kernel.Get<Sword>()", span="105-105"];
m49_37 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="_instances.ContainsKey(implementation)", span="113-113"];
m49_38 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="_instances[implementation].Dispose()", span="114-114"];
m49_39 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="_instances.Remove(implementation)", span="116-116"];
m49_40 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="_mappings.RemoveAll(component)", span="119-119"];
m49_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="StartableStrategyTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m49_97 [cluster="Unk.Invoke", file="StartableStrategyTests.cs", label="Entry Unk.Invoke", span=""];
m49_113 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239"];
m49_48 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="84-84"];
m49_49 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="86-86"];
m49_120 [cluster="Unk.GetParameters", file="StartableStrategyTests.cs", label="Entry Unk.GetParameters", span=""];
m49_65 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="97-97"];
m49_77 [cluster="lambda expression", file="StartableStrategyTests.cs", label="ResolveInstance(component, implementation)", span="179-179"];
m49_76 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests", span=""];
m49_78 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Exit lambda expression", span="179-179"];
m49_102 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Entry lambda expression", span="191-191"];
m49_103 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Get(parameter.ParameterType)", span="191-191"];
m49_104 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Exit lambda expression", span="191-191"];
m49_114 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Entry lambda expression", span="217-217"];
m49_117 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Entry lambda expression", span="217-217"];
m49_115 [cluster="lambda expression", file="StartableStrategyTests.cs", label="c.IsPublic && !c.IsStatic", span="217-217"];
m49_116 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Exit lambda expression", span="217-217"];
m49_118 [cluster="lambda expression", file="StartableStrategyTests.cs", label="c.GetParameters().Length", span="217-217"];
m49_119 [cluster="lambda expression", file="StartableStrategyTests.cs", label="Exit lambda expression", span="217-217"];
m49_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="StartableStrategyTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m49_36 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="_mappings[component]", span="111-111"];
m49_112 [cluster="Unk.FirstOrDefault", file="StartableStrategyTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m49_75 [cluster="Unk.Select", file="StartableStrategyTests.cs", label="Entry Unk.Select", span=""];
m49_66 [cluster="System.Type.GetGenericTypeDefinition()", file="StartableStrategyTests.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m49_67 [cluster="System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", file="StartableStrategyTests.cs", label="Entry System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", span="0-0"];
m49_72 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="182-182"];
m49_24 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", color=green, community=0, file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.RemoveAll<T>()", prediction=421, span="82-82"];
m49_23 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="StartableStrategyTests.cs", label="RemoveAll(typeof(T))", span="85-85"];
m49_25 [cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109"];
m49_21 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="StartableStrategyTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m49_22 [cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="StartableStrategyTests.cs", label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82"];
m49_111 [cluster="Unk.OrderByDescending", file="StartableStrategyTests.cs", label="Entry Unk.OrderByDescending", span=""];
m49_101 [cluster="System.Reflection.TargetInvocationException.RethrowInnerException()", file="StartableStrategyTests.cs", label="Entry System.Reflection.TargetInvocationException.RethrowInnerException()", span="19-19"];
m49_79 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label=_instances, span="184-184"];
m49_80 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="return _instances.ContainsKey(implementation) ? _instances[implementation] : CreateNewInstance(component, implementation);", span="185-185"];
m49_81 [cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs", label="Exit Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="182-182"];
m49_95 [cluster="System.Reflection.MethodBase.GetParameters()", file="StartableStrategyTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m49_99 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="StartableStrategyTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m49_121 [file="StartableStrategyTests.cs", label="Ninject.Components.ComponentContainer", span=""];
m49_122 [file="StartableStrategyTests.cs", label="System.Type", span=""];
m50_27 [cluster="System.Threading.Thread.Join()", file="ThreadScopeTests.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m50_24 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="ThreadScopeTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="38-38"];
m50_26 [cluster="System.Threading.Thread.Start()", file="ThreadScopeTests.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m50_9 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ThreadScopeTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m50_6 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", span="20-20"];
m50_7 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs", label="this.kernel.Dispose()", span="22-22"];
m50_8 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", span="20-20"];
m50_28 [cluster="Unk.Should", file="ThreadScopeTests.cs", label="Entry Unk.Should", span=""];
m50_23 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ThreadScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31"];
m50_48 [cluster="Unk.NotBeSameAs", file="ThreadScopeTests.cs", label="Entry Unk.NotBeSameAs", span=""];
m50_68 [cluster="Ninject.Components.IComponentContainer.Get<T>()", file="ThreadScopeTests.cs", label="Entry Ninject.Components.IComponentContainer.Get<T>()", span="59-59"];
m50_22 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ThreadScopeTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m50_71 [cluster="Ninject.Activation.Caching.IPruneable.Prune()", file="ThreadScopeTests.cs", label="Entry Ninject.Activation.Caching.IPruneable.Prune()", span="18-18"];
m50_10 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="29-29"];
m50_11 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", color=green, community=0, file="ThreadScopeTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", prediction=427, span="31-31"];
m50_12 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="IWeapon weapon1 = null", span="33-33"];
m50_13 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="IWeapon weapon2 = null", span="34-34"];
m50_14 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", color=green, community=0, file="ThreadScopeTests.cs", label="ThreadStart callback = () =>\r\n            {\r\n                weapon1 = this.kernel.Get<IWeapon>();\r\n                weapon2 = this.kernel.Get<IWeapon>();\r\n            }", prediction=428, span="36-40"];
m50_15 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="var thread = new Thread(callback)", span="42-42"];
m50_16 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="thread.Start()", span="44-44"];
m50_17 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="thread.Join()", span="45-45"];
m50_18 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="weapon1.Should().NotBeNull()", span="47-47"];
m50_19 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="weapon2.Should().NotBeNull()", span="48-48"];
m50_20 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="weapon1.Should().BeSameAs(weapon2)", span="49-49"];
m50_21 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="29-29"];
m50_5 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="ThreadScopeTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41"];
m50_35 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ThreadScopeTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m50_29 [cluster="Unk.NotBeNull", file="ThreadScopeTests.cs", label="Entry Unk.NotBeNull", span=""];
m50_0 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="14-14"];
m50_1 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs", label="var settings = new NinjectSettings { CachePruningInterval = TimeSpan.MaxValue }", span="16-16"];
m50_2 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs", label="this.kernel = new StandardKernel(settings)", span="17-17"];
m50_3 [cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="14-14"];
m50_30 [cluster="Unk.BeSameAs", file="ThreadScopeTests.cs", label="Entry Unk.BeSameAs", span=""];
m50_73 [cluster="lambda expression", file="ThreadScopeTests.cs", label="Entry lambda expression", span="81-81"];
m50_31 [cluster="lambda expression", file="ThreadScopeTests.cs", label="Entry lambda expression", span="36-40"];
m50_32 [cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs", label="weapon1 = this.kernel.Get<IWeapon>()", prediction=429, span="38-38"];
m50_33 [cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs", label="weapon2 = this.kernel.Get<IWeapon>()", prediction=430, span="39-39"];
m50_34 [cluster="lambda expression", file="ThreadScopeTests.cs", label="Exit lambda expression", span="36-40"];
m50_49 [cluster="lambda expression", file="ThreadScopeTests.cs", label="Entry lambda expression", span="60-60"];
m50_50 [cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs", label="weapon2 = this.kernel.Get<IWeapon>()", prediction=431, span="60-60"];
m50_51 [cluster="lambda expression", file="ThreadScopeTests.cs", label="Exit lambda expression", span="60-60"];
m50_75 [cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs", label="Exit lambda expression", prediction=427, span="81-81"];
m50_70 [cluster="System.GC.WaitForPendingFinalizers()", file="ThreadScopeTests.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m50_69 [cluster="System.GC.Collect()", file="ThreadScopeTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m50_67 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ThreadScopeTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m50_36 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="53-53"];
m50_37 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", prediction=427, span="55-55"];
m50_38 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs", label="IWeapon weapon1 = this.kernel.Get<IWeapon>()", prediction=434, span="57-57"];
m50_39 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="IWeapon weapon2 = null", span="58-58"];
m50_44 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="weapon1.Should().NotBeNull()", span="67-67"];
m50_46 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="weapon1.Should().NotBeSameAs(weapon2)", span="69-69"];
m50_40 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs", label="ThreadStart callback = () => weapon2 = this.kernel.Get<IWeapon>()", prediction=435, span="60-60"];
m50_41 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="var thread = new Thread(callback)", span="62-62"];
m50_42 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="thread.Start()", span="64-64"];
m50_43 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="thread.Join()", span="65-65"];
m50_45 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="weapon2.Should().NotBeNull()", span="68-68"];
m50_47 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="53-53"];
m50_52 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", span="74-74"];
m50_53 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs", label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InThreadScope()", prediction=427, span="76-76"];
m50_54 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs", label="var cache = this.kernel.Components.Get<ICache>()", prediction=437, span="77-77"];
m50_55 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="NotifiesWhenDisposed instance = null", span="79-79"];
m50_63 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs", label="GC.Collect()", prediction=438, span="92-92"];
m50_56 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs", label="ThreadStart callback = () => instance = this.kernel.Get<NotifiesWhenDisposed>()", prediction=439, span="81-81"];
m50_57 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="var thread = new Thread(callback)", span="83-83"];
m50_58 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="thread.Start()", span="85-85"];
m50_59 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="thread.Join()", span="86-86"];
m50_60 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="thread = null", span="88-88"];
m50_61 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="GC.Collect()", span="90-90"];
m50_62 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="GC.WaitForPendingFinalizers()", span="91-91"];
m50_64 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="cache.Prune()", span="94-94"];
m50_65 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="instance.IsDisposed.Should().BeTrue()", span="96-96"];
m50_66 [cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", span="74-74"];
m50_72 [cluster="Unk.BeTrue", file="ThreadScopeTests.cs", label="Entry Unk.BeTrue", span=""];
m50_4 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="ThreadScopeTests.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18"];
m50_25 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ThreadScopeTests.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m50_76 [file="ThreadScopeTests.cs", label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext", span=""];
m50_77 [file="ThreadScopeTests.cs", label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", span=""];
m51_7 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="57-57"];
m51_8 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="Ensure.ArgumentNotNull(plan, ''plan'')", span="59-59"];
m51_14 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="plan.Add(\r\n                    new ConstructorInjectionDirective(constructor, InjectorFactory.Create(constructor))\r\n                    {\r\n                        HasInjectAttribute = hasInjectAttribute\r\n                    })", span="68-72"];
m51_10 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="constructors == null", span="62-62"];
m51_12 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label=constructors, span="65-65"];
m51_13 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="var hasInjectAttribute = constructor.HasAttribute(Settings.InjectAttribute)", span="67-67"];
m51_15 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs", label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="57-57"];
m51_18 [cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", file="TransientScopeTests.cs", label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="39-39"];
m51_20 [cluster="Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", file="TransientScopeTests.cs", label="Entry Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", span="37-37"];
m51_16 [cluster="Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", file="TransientScopeTests.cs", label="Entry Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", span="39-39"];
m51_0 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="43-43"];
m51_1 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="Ensure.ArgumentNotNull(selector, ''selector'')", span="45-45"];
m51_2 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="Ensure.ArgumentNotNull(injectorFactory, ''injectorFactory'')", span="46-46"];
m51_3 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="Selector = selector", span="48-48"];
m51_4 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="InjectorFactory = injectorFactory", span="49-49"];
m51_5 [cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs", label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="43-43"];
m51_17 [cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", file="TransientScopeTests.cs", label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="73-73"];
m51_19 [cluster="Ninject.Injection.IInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="TransientScopeTests.cs", label="Entry Ninject.Injection.IInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="27-27"];
m51_6 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="TransientScopeTests.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m51_21 [file="TransientScopeTests.cs", label="Ninject.Planning.Strategies.ConstructorReflectionStrategy", span=""];
m52_15 [cluster="Unk.All", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Unk.All", span=""];
m52_16 [cluster="Unk.BeTrue", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Unk.BeTrue", span=""];
m52_10 [cluster="Ninject.IKernel.GetModules()", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Ninject.IKernel.GetModules()", span="39-39"];
m52_8 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m52_0 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", span="12-12"];
m52_1 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="var expectedModules = new[] { typeof(TestModule), typeof(TestModule2), typeof(OtherFakes.TestModule) }", span="14-14"];
m52_2 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="var assembly = Assembly.GetExecutingAssembly()", span="15-15"];
m52_5 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="modules.Select(m => m.GetType()).Should().BeEquivalentTo(expectedModules)", span="20-20"];
m52_3 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="this.Kernel.Load(assembly)", span="17-17"];
m52_4 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="var modules = this.Kernel.GetModules().ToArray()", span="18-18"];
m52_6 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="modules.All(m => m.Kernel == this.Kernel).Should().BeTrue()", span="21-21"];
m52_7 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", span="12-12"];
m52_21 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry lambda expression", span="21-21"];
m52_17 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry lambda expression", span="20-20"];
m52_18 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="m.GetType()", span="20-20"];
m52_19 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="Exit lambda expression", span="20-20"];
m52_22 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="m.Kernel == this.Kernel", span="21-21"];
m52_23 [cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs", label="Exit lambda expression", span="21-21"];
m52_20 [cluster="object.GetType()", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry object.GetType()", span="0-0"];
m52_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m52_9 [cluster="Ninject.IKernel.Load(params System.Reflection.Assembly[])", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Ninject.IKernel.Load(params System.Reflection.Assembly[])", span="57-57"];
m52_13 [cluster="Unk.Should", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Unk.Should", span=""];
m52_14 [cluster="Unk.BeEquivalentTo", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Unk.BeEquivalentTo", span=""];
m52_12 [cluster="Unk.Select", file="WhenLoadIsCalledWithAssemblies.cs", label="Entry Unk.Select", span=""];
m52_24 [file="WhenLoadIsCalledWithAssemblies.cs", label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies", span=""];
m53_12 [cluster="Unk.All", file="WhenLoadIsCalledWithFileName.cs", label="Entry Unk.All", span=""];
m53_6 [cluster="Ninject.IKernel.Load(params string[])", file="WhenLoadIsCalledWithFileName.cs", label="Entry Ninject.IKernel.Load(params string[])", span="47-47"];
m53_13 [cluster="Unk.BeTrue", file="WhenLoadIsCalledWithFileName.cs", label="Entry Unk.BeTrue", span=""];
m53_7 [cluster="Ninject.IKernel.GetModules()", file="WhenLoadIsCalledWithFileName.cs", label="Entry Ninject.IKernel.GetModules()", span="39-39"];
m53_0 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", span="14-14"];
m53_1 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="this.Kernel.Load(this.ModuleFilename)", span="16-16"];
m53_2 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="var modules = this.Kernel.GetModules().ToArray()", span="18-18"];
m53_3 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="modules.Select(m => m.GetType().FullName).Should().BeEquivalentTo(new[] { ''Ninject.Tests.TestModules.TestModule'' })", span="20-20"];
m53_4 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="modules.All(m => m.Kernel == this.Kernel).Should().BeTrue()", span="21-21"];
m53_5 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", span="14-14"];
m53_17 [cluster="object.GetType()", file="WhenLoadIsCalledWithFileName.cs", label="Entry object.GetType()", span="0-0"];
m53_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="WhenLoadIsCalledWithFileName.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m53_18 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="Entry lambda expression", span="21-21"];
m53_14 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="Entry lambda expression", span="20-20"];
m53_15 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="m.GetType().FullName", span="20-20"];
m53_16 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="Exit lambda expression", span="20-20"];
m53_19 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="m.Kernel == this.Kernel", span="21-21"];
m53_20 [cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs", label="Exit lambda expression", span="21-21"];
m53_10 [cluster="Unk.Should", file="WhenLoadIsCalledWithFileName.cs", label="Entry Unk.Should", span=""];
m53_11 [cluster="Unk.BeEquivalentTo", file="WhenLoadIsCalledWithFileName.cs", label="Entry Unk.BeEquivalentTo", span=""];
m53_9 [cluster="Unk.Select", file="WhenLoadIsCalledWithFileName.cs", label="Entry Unk.Select", span=""];
m53_21 [file="WhenLoadIsCalledWithFileName.cs", label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName", span=""];
m54_16 [cluster="Unk.>", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.>", span=""];
m54_4 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
m54_5 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22"];
m54_6 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="var warrior = new ExternalWarrior()", span="24-24"];
m54_7 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="kernel.Inject(warrior)", span="25-25"];
m54_8 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="warrior.Weapon.ShouldNotBeNull()", span="27-27"];
m54_9 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="28-28"];
m54_10 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
m54_14 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="264-264"];
m54_11 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m54_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m54_0 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
m54_1 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs", label="kernel = new StandardKernel()", span="13-13"];
m54_2 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
m54_15 [cluster="Unk.ShouldNotBeNull", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m54_13 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="43-43"];
m54_17 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
m54_18 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="var instance = new NotifiesWhenDisposed()", span="34-34"];
m54_19 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="kernel.Inject(instance)", span="36-36"];
m54_21 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="instance.IsDisposed.ShouldBeFalse()", span="39-39"];
m54_20 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="kernel.Dispose()", span="37-37"];
m54_22 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
m54_12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m54_23 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
m54_24 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29"];
m54_25 [cluster="Unk.ShouldBeFalse", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.ShouldBeFalse", span=""];
m54_26 [file="WhenLoadIsCalledWithModule.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span=""];
m54_27 [file="WhenLoadIsCalledWithModule.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span=""];
m55_8 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m55_9 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25"];
m55_21 [cluster="Unk.BeTrue", file="WhenReleasingAnObject.cs", label="Entry Unk.BeTrue", span=""];
m55_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m55_30 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", span="54-54"];
m55_31 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs", label="this.Disposed = true", span="56-56"];
m55_32 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs", label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", span="54-54"];
m55_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="WhenReleasingAnObject.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m55_15 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", span="25-25"];
m55_16 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs", label="this.kernel.Release(this.foo)", span="27-27"];
m55_17 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs", label="this.foo.Disposed.Should().BeTrue()", span="29-29"];
m55_18 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs", label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", span="25-25"];
m55_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="WhenReleasingAnObject.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m55_0 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", span="14-14"];
m55_1 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="this.kernel = new StandardKernel()", span="16-16"];
m55_2 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="this.kernel.Bind<Foo>().ToSelf().InSingletonScope()", span="18-18"];
m55_3 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="this.kernel.Bind<Bar>().ToSelf().InScope(ctx => this.foo)", span="19-19"];
m55_4 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="this.foo = this.kernel.Get<Foo>()", span="21-21"];
m55_5 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs", label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", span="14-14"];
m55_22 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", span="33-33"];
m55_23 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", color=green, community=0, file="WhenReleasingAnObject.cs", label="var bar = this.kernel.Get<Bar>()", prediction=440, span="35-35"];
m55_24 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs", label="this.kernel.Release(this.foo)", span="37-37"];
m55_25 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs", label="bar.Disposed.Should().BeTrue()", span="39-39"];
m55_26 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs", label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", span="33-33"];
m55_19 [cluster="Ninject.KernelBase.Release(object)", file="WhenReleasingAnObject.cs", label="Entry Ninject.KernelBase.Release(object)", span="298-298"];
m55_10 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="WhenReleasingAnObject.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="46-46"];
m55_12 [cluster="lambda expression", file="WhenReleasingAnObject.cs", label="Entry lambda expression", span="19-19"];
m55_13 [cluster="lambda expression", file="WhenReleasingAnObject.cs", label="this.foo", span="19-19"];
m55_14 [cluster="lambda expression", file="WhenReleasingAnObject.cs", label="Exit lambda expression", span="19-19"];
m55_27 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs", label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", span="44-44"];
m55_28 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs", label="this.Disposed = true", span="46-46"];
m55_29 [cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs", label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", span="44-44"];
m55_20 [cluster="Unk.Should", file="WhenReleasingAnObject.cs", label="Entry Unk.Should", span=""];
m55_33 [file="WhenReleasingAnObject.cs", label="Ninject.Tests.Integration.WhenReleasingAnObject", span=""];
m55_34 [file="WhenReleasingAnObject.cs", label="Ninject.Tests.Integration.WhenReleasingAnObject.Foo", span=""];
m55_35 [file="WhenReleasingAnObject.cs", label="Ninject.Tests.Integration.WhenReleasingAnObject.Bar", span=""];
d9 -> d11  [color=green, key=1, label=request, style=dashed];
d9 -> d16  [color=green, key=1, label=request, style=dashed];
d39 -> d10  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", style=dashed];
d39 -> d11  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", style=dashed];
d39 -> d21  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", style=dashed];
d39 -> d22  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", style=dashed];
d11 -> d15  [color=green, key=1, label="lambda expression", style=dashed];
d40 -> d16  [color=green, key=1, label=request, style=dashed];
d20 -> d22  [color=green, key=1, label=request, style=dashed];
d20 -> d26  [color=green, key=1, label=request, style=dashed];
d22 -> d25  [color=green, key=1, label="lambda expression", style=dashed];
d41 -> d26  [color=green, key=1, label=request, style=dashed];
d29 -> d31  [color=green, key=1, label=request, style=dashed];
d29 -> d35  [color=green, key=1, label=request, style=dashed];
d42 -> d30  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject", style=dashed];
d42 -> d31  [color=green, key=1, label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject", style=dashed];
d31 -> d34  [color=green, key=1, label="lambda expression", style=dashed];
d43 -> d35  [color=green, key=1, label=request, style=dashed];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=instance, style=dashed];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=deactivated, style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=deactivatedObjectCount, style=dashed];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=activated, style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=activatedObjectCount, style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=activatedObjectCount, style=dashed];
m0_46 -> m0_48  [color=darkseagreen4, key=1, label=deactivatedObjectCount, style=dashed];
m0_60 -> m0_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m0_60 -> m0_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m0_60 -> m0_40  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m0_60 -> m0_41  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m0_60 -> m0_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m0_60 -> m0_54  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ActivationCacheTests", style=dashed];
m1_46 -> m1_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext", style=dashed];
m1_46 -> m1_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext", style=dashed];
m1_47 -> m1_11  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_47 -> m1_12  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_47 -> m1_13  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_47 -> m1_22  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_47 -> m1_29  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_47 -> m1_30  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", style=dashed];
m1_41 -> m1_43  [color=green, key=1, label=instance, style=dashed];
m1_12 -> m1_14  [color=green, key=1, label=weapon1, style=dashed];
m1_23 -> m1_25  [color=green, key=1, label=weapon1, style=dashed];
m1_48 -> m1_40  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed", style=dashed];
m1_48 -> m1_42  [color=green, key=1, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed", style=dashed];
m1_30 -> m1_33  [color=green, key=1, label=instance, style=dashed];
m2_12 -> m2_15  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m2_12 -> m2_20  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m2_12 -> m2_22  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m2_12 -> m2_23  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=service, style=dashed];
m2_18 -> m2_22  [color=darkseagreen4, key=1, label=service, style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_35  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m2_35 -> m2_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_43 -> m2_15  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_4  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_13  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_16  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_20  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_22  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m2_43 -> m2_23  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_6 -> m3_4  [color=darkseagreen4, key=1, label="Ninject.Activation.Hooks.ConstantHook", style=dashed];
m4_26 -> m4_30  [color=green, key=1, label="lambda expression", style=dashed];
m4_27 -> m4_33  [color=green, key=1, label="lambda expression", style=dashed];
m4_5 -> m4_8  [color=green, key=1, label=expected, style=dashed];
m4_6 -> m4_17  [color=green, key=1, label="lambda expression", style=dashed];
m4_7 -> m4_21  [color=green, key=1, label="lambda expression", style=dashed];
m6_5 -> m6_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Provider<T>", style=dashed];
m7_69 -> m7_73  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_70 -> m7_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_76 -> m7_76  [color=darkseagreen4, key=1, label=pi, style=dashed];
m7_39 -> m7_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_38 -> m7_43  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_36 -> m7_40  [color=darkseagreen4, key=1, label=swordWeakReference, style=dashed];
m7_35 -> m7_38  [color=darkseagreen4, key=1, label=sword, style=dashed];
m7_13 -> m7_16  [color=darkseagreen4, key=1, label=sword, style=dashed];
m7_66 -> m7_68  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m7_32 -> m7_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_44 -> m7_46  [color=green, key=1, label="Ninject.Planning.Bindings.IBindingConfiguration", style=dashed];
m7_44 -> m7_47  [color=green, key=1, label=object, style=dashed];
m7_45 -> m7_47  [color=green, key=1, label=bindingMock, style=dashed];
m7_46 -> m7_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_46 -> m7_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_14 -> m7_22  [color=green, key=1, label=swordWeakReference, style=dashed];
m7_18 -> m7_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_18 -> m7_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_17 -> m7_22  [color=darkseagreen4, key=1, label=properties, style=dashed];
m7_17 -> m7_24  [color=darkseagreen4, key=1, label=properties, style=dashed];
m7_16 -> m7_18  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_16 -> m7_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_59 -> m7_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_62 -> m7_66  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m7_63 -> m7_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_79 -> m7_18  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_39  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_19  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_22  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_46  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_53  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_59  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_79 -> m7_63  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m7_80 -> m7_43  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_81 -> m7_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_83 -> m7_66  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m7_84 -> m7_73  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_84 -> m7_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_84 -> m7_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_84 -> m7_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_84 -> m7_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_84 -> m7_37  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_84 -> m7_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m7_85 -> m7_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m7_85 -> m7_68  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m7_85 -> m7_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m8_10 -> m8_13  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingConfiguration", style=dashed];
m8_10 -> m8_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_10 -> m8_16  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m8_10 -> m8_17  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m8_11 -> m8_14  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m8_11 -> m8_15  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m8_11 -> m8_16  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m8_11 -> m8_17  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m8_11 -> m8_18  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m8_13 -> m8_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_16 -> m8_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_17 -> m8_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_12 -> m8_14  [color=darkseagreen4, key=1, label=bindingMock, style=dashed];
m8_14 -> m8_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_117 -> m8_124  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_82 -> m8_87  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_164 -> m8_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_53 -> m8_58  [color=darkseagreen4, key=1, label=reference, style=dashed];
m9_8 -> m9_19  [color=green, key=1, label=sword, style=dashed];
m9_8 -> m9_11  [color=darkseagreen4, key=1, label=sword, style=dashed];
m9_21 -> m9_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext", style=dashed];
m9_23 -> m9_19  [color=green, key=1, label=sword, style=dashed];
m10_24 -> m10_32  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_24 -> m10_34  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_24 -> m10_35  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_29 -> m10_31  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m10_30 -> m10_32  [color=darkseagreen4, key=1, label=service, style=dashed];
m10_30 -> m10_34  [color=darkseagreen4, key=1, label=service, style=dashed];
m10_31 -> m10_34  [color=green, key=1, label="lambda expression", style=dashed];
m10_127 -> m10_129  [color=green, key=1, label=bar, style=dashed];
m10_60 -> m10_63  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m10_60 -> m10_64  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m10_60 -> m10_65  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m10_60 -> m10_70  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m10_65 -> m10_70  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m10_65 -> m10_74  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m10_62 -> m10_64  [color=green, key=1, label="lambda expression", style=dashed];
m10_118 -> m10_120  [color=green, key=1, label="lambda expression", style=dashed];
m10_69 -> m10_74  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m10_70 -> m10_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_43 -> m10_52  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_50 -> m10_52  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_38 -> m10_46  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_44 -> m10_46  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_45 -> m10_47  [color=green, key=1, label=foo, style=dashed];
m10_45 -> m10_48  [color=green, key=1, label=foo, style=dashed];
m10_46 -> m10_48  [color=green, key=1, label=bar, style=dashed];
m10_76 -> m10_79  [color=green, key=1, label=foo, style=dashed];
m10_76 -> m10_81  [color=green, key=1, label=foo, style=dashed];
m10_77 -> m10_79  [color=green, key=1, label=bar, style=dashed];
m10_77 -> m10_80  [color=green, key=1, label=bar, style=dashed];
m10_77 -> m10_8  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_12  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_16  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_25  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_26  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_28  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_30  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_32  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_34  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_35  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_50  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_56  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_77 -> m10_60  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m10_79 -> m10_74  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m10_78 -> m10_80  [color=green, key=1, label=baz, style=dashed];
m10_78 -> m10_81  [color=green, key=1, label=baz, style=dashed];
m10_78 -> m10_70  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m10_155 -> m10_9  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_10  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_11  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_12  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_21  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_27  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_31  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_155 -> m10_35  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m10_156 -> m10_38  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m10_156 -> m10_39  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m10_156 -> m10_42  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m10_156 -> m10_46  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m10_157 -> m10_53  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_157 -> m10_54  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_157 -> m10_55  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_157 -> m10_59  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_157 -> m10_62  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_157 -> m10_65  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m10_158 -> m10_68  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_158 -> m10_69  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_158 -> m10_70  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_158 -> m10_73  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_158 -> m10_77  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_158 -> m10_78  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m10_159 -> m10_84  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_85  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_86  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_87  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_88  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_93  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_103  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_106  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_159 -> m10_111  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", style=dashed];
m10_160 -> m10_114  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", style=dashed];
m10_160 -> m10_115  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", style=dashed];
m10_160 -> m10_118  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", style=dashed];
m10_160 -> m10_121  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", style=dashed];
m10_160 -> m10_124  [color=green, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", style=dashed];
m12_8 -> m12_14  [color=darkseagreen4, key=1, label=expected, style=dashed];
m12_8 -> m12_35  [color=darkseagreen4, key=1, label=expected, style=dashed];
m12_14 -> m12_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_51 -> m12_38  [color=green, key=1, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", style=dashed];
m12_52 -> m12_35  [color=darkseagreen4, key=1, label=expected, style=dashed];
m13_7 -> m13_10  [color=darkseagreen4, key=1, label="Ninject.Modules.INinjectModule", style=dashed];
m13_32 -> m13_34  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_32 -> m13_42  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_32 -> m13_44  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_33 -> m13_35  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_36  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_41  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_42  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_43  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_44  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_33 -> m13_45  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_90 -> m13_92  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_90 -> m13_96  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_91 -> m13_93  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_94  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_95  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_96  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_97  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_98  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_99  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_91 -> m13_100  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_173 -> m13_180  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_173 -> m13_181  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_161  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_162  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m13_159 -> m13_163  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_164  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m13_159 -> m13_166  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_167  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_168  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_169  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_159 -> m13_170  [color=darkseagreen4, key=1, label="System.IO.StringWriter", style=dashed];
m13_164 -> m13_167  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m13_164 -> m13_169  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m13_78 -> m13_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_78 -> m13_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_78 -> m13_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_79 -> m13_81  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_82  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_83  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_84  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_85  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_86  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_87  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_79 -> m13_88  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_111 -> m13_113  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_112 -> m13_114  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_115  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_116  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_117  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_118  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_119  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_120  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_112 -> m13_121  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_62 -> m13_64  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_62 -> m13_68  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_62 -> m13_70  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_63 -> m13_65  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_66  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_67  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_68  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_69  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_70  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_71  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_73  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_63 -> m13_74  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_123 -> m13_125  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_123 -> m13_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_123 -> m13_128  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_124 -> m13_126  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_124 -> m13_127  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_124 -> m13_128  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_124 -> m13_129  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_124 -> m13_130  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_124 -> m13_131  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_102 -> m13_104  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_102 -> m13_105  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_103 -> m13_105  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_103 -> m13_106  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_103 -> m13_107  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_103 -> m13_108  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_103 -> m13_109  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_133 -> m13_135  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_133 -> m13_138  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_134 -> m13_136  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_134 -> m13_137  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_134 -> m13_138  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_134 -> m13_139  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_134 -> m13_140  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_134 -> m13_141  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_48 -> m13_50  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_48 -> m13_53  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_48 -> m13_55  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m13_49 -> m13_51  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_52  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_53  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_55  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_57  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_58  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_49 -> m13_60  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_143 -> m13_145  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_143 -> m13_149  [color=darkseagreen4, key=1, label="System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>", style=dashed];
m13_143 -> m13_153  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_144 -> m13_146  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_147  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_148  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_150  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_151  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_152  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_153  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_154  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_155  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_156  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_144 -> m13_157  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_26 -> m14_30  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_19 -> m14_21  [color=darkseagreen4, key=1, label=hammer, style=dashed];
m14_19 -> m14_22  [color=darkseagreen4, key=1, label=hammer, style=dashed];
m14_19 -> m14_23  [color=darkseagreen4, key=1, label=hammer, style=dashed];
m14_34 -> m14_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_27  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_28  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m14_34 -> m14_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m15_214 -> m15_217  [color=green, key=1, label=warrior, style=dashed];
m15_215 -> m15_218  [color=green, key=1, label=barracks, style=dashed];
m15_216 -> m15_219  [color=green, key=1, label=ninja, style=dashed];
m15_143 -> m15_146  [color=green, key=1, label=warrior, style=dashed];
m15_144 -> m15_147  [color=green, key=1, label=barracks, style=dashed];
m15_145 -> m15_148  [color=green, key=1, label=ninja, style=dashed];
m15_72 -> m15_74  [color=green, key=1, label=shortSword, style=dashed];
m15_72 -> m15_77  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m15_73 -> m15_75  [color=green, key=1, label=shuriken, style=dashed];
m15_73 -> m15_78  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m15_75 -> m15_85  [color=green, key=1, label="lambda expression", style=dashed];
m15_76 -> m15_78  [color=green, key=1, label=result, style=dashed];
m15_130 -> m15_132  [color=green, key=1, label=service, style=dashed];
m15_131 -> m15_133  [color=green, key=1, label=anotherService, style=dashed];
m15_89 -> m15_92  [color=green, key=1, label=shortSword, style=dashed];
m15_89 -> m15_96  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m15_91 -> m15_98  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m15_90 -> m15_93  [color=green, key=1, label=sword, style=dashed];
m15_90 -> m15_97  [color=darkseagreen4, key=1, label=sword, style=dashed];
m15_95 -> m15_97  [color=green, key=1, label=result, style=dashed];
m15_95 -> m15_98  [color=green, key=1, label=result, style=dashed];
m15_222 -> m15_225  [color=green, key=1, label=Name, style=dashed];
m15_227 -> m15_229  [color=green, key=1, label=barack, style=dashed];
m15_103 -> m15_108  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m15_104 -> m15_109  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m15_107 -> m15_109  [color=green, key=1, label=result, style=dashed];
m15_265 -> m15_272  [color=green, key=1, label="lambda expression", style=dashed];
m15_266 -> m15_275  [color=green, key=1, label="lambda expression", style=dashed];
m15_267 -> m15_269  [color=green, key=1, label=barack, style=dashed];
m15_247 -> m15_255  [color=green, key=1, label="lambda expression", style=dashed];
m15_248 -> m15_259  [color=green, key=1, label="lambda expression", style=dashed];
m15_249 -> m15_251  [color=green, key=1, label=barack, style=dashed];
m15_186 -> m15_188  [color=green, key=1, label=service, style=dashed];
m15_187 -> m15_189  [color=green, key=1, label=anotherService, style=dashed];
m15_33 -> m15_35  [color=green, key=1, label="lambda expression", style=dashed];
m15_63 -> m15_68  [color=green, key=1, label="lambda expression", style=dashed];
m15_50 -> m15_56  [color=green, key=1, label="lambda expression", style=dashed];
m15_51 -> m15_59  [color=green, key=1, label="lambda expression", style=dashed];
m15_162 -> m15_164  [color=green, key=1, label=service, style=dashed];
m15_163 -> m15_165  [color=green, key=1, label=anotherService, style=dashed];
m15_234 -> m15_237  [color=green, key=1, label=Name, style=dashed];
m15_239 -> m15_241  [color=green, key=1, label=barack, style=dashed];
m15_314 -> m15_1  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_2  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_3  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_15  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_16  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_17  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_22  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_23  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_24  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_29  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_30  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_31  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_32  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_33  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_36  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_45  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_51  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_64  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_74  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_75  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_92  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_93  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_112  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_113  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_118  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_119  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_120  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_127  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_129  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_137  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_138  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_139  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_140  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_141  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_142  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_152  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_153  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_154  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_159  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_160  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_161  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_168  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_170  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_175  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_176  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_177  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_183  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_184  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_185  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_192  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_193  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_199  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_202  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_203  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_208  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_209  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_210  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_211  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_212  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_213  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_223  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_225  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_224  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_226  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_235  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_237  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_236  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_238  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_245  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_246  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_247  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_248  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_263  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_264  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_265  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_266  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_279  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_280  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_281  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_287  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_288  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_289  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_294  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_295  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_296  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_128  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m15_314 -> m15_169  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m16_14 -> m16_16  [color=green, key=1, label=instance, style=dashed];
m17_8 -> m17_11  [color=darkseagreen4, key=1, label=sword, style=dashed];
m17_18 -> m17_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext", style=dashed];
m18_34 -> m18_43  [color=darkseagreen4, key=1, label=provider, style=dashed];
m18_34 -> m18_38  [color=darkseagreen4, key=1, label=provider, style=dashed];
m18_35 -> m18_43  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m18_9 -> m18_12  [color=darkseagreen4, key=1, label=sword, style=dashed];
m18_21 -> m18_25  [color=darkseagreen4, key=1, label=sword, style=dashed];
m18_46 -> m18_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.ConstantContext", style=dashed];
m18_47 -> m18_10  [color=green, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m18_47 -> m18_22  [color=green, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m18_47 -> m18_23  [color=green, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m18_47 -> m18_36  [color=green, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m18_47 -> m18_37  [color=green, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m18_48 -> m18_43  [color=darkseagreen4, key=1, label=provider, style=dashed];
m19_240 -> m19_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m20_23 -> m20_25  [color=green, key=1, label=shield, style=dashed];
m20_30 -> m20_32  [color=green, key=1, label=shield, style=dashed];
m20_38 -> m20_40  [color=green, key=1, label=shield1, style=dashed];
m20_38 -> m20_41  [color=green, key=1, label=shield1, style=dashed];
m20_39 -> m20_42  [color=green, key=1, label=shield2, style=dashed];
m20_39 -> m20_43  [color=green, key=1, label=shield2, style=dashed];
m20_10 -> m20_12  [color=green, key=1, label=shield, style=dashed];
m20_45 -> m20_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_9  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_21  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_22  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_29  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_36  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m20_45 -> m20_37  [color=green, key=1, label="Ninject.Tests.Integration.DefaultParameterTests", style=dashed];
m21_63 -> m21_72  [color=green, key=1, label=obj, style=dashed];
m21_12 -> m21_14  [color=green, key=1, label=firstInstance, style=dashed];
m21_13 -> m21_15  [color=darkseagreen4, key=1, label=parent, style=dashed];
m21_19 -> m21_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", style=dashed];
m21_19 -> m21_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", style=dashed];
m21_19 -> m21_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", style=dashed];
m21_19 -> m21_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", style=dashed];
m21_100 -> m21_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext", style=dashed];
m21_100 -> m21_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext", style=dashed];
m21_101 -> m21_23  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", style=dashed];
m21_101 -> m21_34  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", style=dashed];
m21_101 -> m21_40  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", style=dashed];
m21_101 -> m21_46  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", style=dashed];
m21_101 -> m21_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", style=dashed];
m21_102 -> m21_52  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", style=dashed];
m21_102 -> m21_58  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", style=dashed];
m21_102 -> m21_60  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", style=dashed];
m21_102 -> m21_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", style=dashed];
m21_103 -> m21_72  [color=green, key=1, label=obj, style=dashed];
m21_104 -> m21_75  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", style=dashed];
m21_104 -> m21_80  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", style=dashed];
m21_104 -> m21_86  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", style=dashed];
m21_104 -> m21_92  [color=green, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", style=dashed];
m21_104 -> m21_89  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", style=dashed];
m22_7 -> m22_10  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_24 -> m22_9  [color=green, key=1, label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled", style=dashed];
m22_24 -> m22_20  [color=green, key=1, label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled", style=dashed];
m23_36 -> m23_39  [color=darkseagreen4, key=1, label=samurai, style=dashed];
m23_37 -> m23_39  [color=darkseagreen4, key=1, label=sword, style=dashed];
m23_55 -> m23_57  [color=darkseagreen4, key=1, label=samurai, style=dashed];
m23_44 -> m23_46  [color=darkseagreen4, key=1, label=samurai, style=dashed];
m23_66 -> m23_68  [color=darkseagreen4, key=1, label=samurai, style=dashed];
m23_13 -> m23_16  [color=darkseagreen4, key=1, label=sword, style=dashed];
m24_5 -> m24_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_10 -> m25_12  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m25_10 -> m25_13  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m25_23 -> m25_26  [color=darkseagreen4, key=1, label=instance, style=dashed];
m25_30 -> m25_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", style=dashed];
m25_31 -> m25_9  [color=green, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m25_31 -> m25_11  [color=green, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m25_31 -> m25_24  [color=green, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m25_31 -> m25_25  [color=green, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m31_10 -> m31_12  [color=green, key=1, label=instance, style=dashed];
m31_23 -> m31_25  [color=green, key=1, label=instance1, style=dashed];
m31_23 -> m31_26  [color=green, key=1, label=instance1, style=dashed];
m31_23 -> m31_28  [color=green, key=1, label=instance1, style=dashed];
m31_24 -> m31_29  [color=green, key=1, label=instance2, style=dashed];
m31_27 -> m31_29  [color=green, key=1, label=instance3, style=dashed];
m31_33 -> m31_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext", style=dashed];
m31_34 -> m31_9  [color=green, key=1, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", style=dashed];
m31_34 -> m31_11  [color=green, key=1, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", style=dashed];
m31_34 -> m31_22  [color=green, key=1, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", style=dashed];
m31_34 -> m31_26  [color=green, key=1, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", style=dashed];
m32_2 -> m32_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated", style=dashed];
m32_2 -> m32_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated", style=dashed];
m32_4 -> m32_6  [color=green, key=1, label=targets, style=dashed];
m32_4 -> m32_7  [color=green, key=1, label=targets, style=dashed];
m32_4 -> m32_8  [color=green, key=1, label=targets, style=dashed];
m32_4 -> m32_9  [color=green, key=1, label=targets, style=dashed];
m32_4 -> m32_10  [color=green, key=1, label=targets, style=dashed];
m32_4 -> m32_11  [color=green, key=1, label=targets, style=dashed];
m33_11 -> m33_27  [color=green, key=1, label="lambda expression", style=dashed];
m33_12 -> m33_30  [color=green, key=1, label="lambda expression", style=dashed];
m33_52 -> m33_54  [color=green, key=1, label="lambda expression", style=dashed];
m33_55 -> m33_57  [color=green, key=1, label="lambda expression", style=dashed];
m33_36 -> m33_40  [color=green, key=1, label="lambda expression", style=dashed];
m33_48 -> m33_51  [color=green, key=1, label="lambda expression", style=dashed];
m33_70 -> m33_76  [color=green, key=1, label="lambda expression", style=dashed];
m33_71 -> m33_80  [color=green, key=1, label="lambda expression", style=dashed];
m33_88 -> m33_11  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_12  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_35  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_36  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_44  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_47  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_48  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_52  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_55  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_58  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_62  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_63  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_88 -> m33_64  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m33_89 -> m33_71  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", style=dashed];
m34_23 -> m34_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_33 -> m34_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_36 -> m34_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_42 -> m34_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_52 -> m34_54  [color=darkseagreen4, key=1, label=baseDirectory, style=dashed];
m34_52 -> m34_59  [color=darkseagreen4, key=1, label=baseDirectory, style=dashed];
m34_54 -> m34_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_7 -> m34_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_7 -> m34_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_10 -> m34_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_10 -> m34_12  [color=darkseagreen4, key=1, label=plugin, style=dashed];
m34_8 -> m34_12  [color=darkseagreen4, key=1, label=fileGroup, style=dashed];
m34_9 -> m34_30  [color=darkseagreen4, key=1, label=extension, style=dashed];
m34_62 -> m34_30  [color=darkseagreen4, key=1, label=extension, style=dashed];
m34_63 -> m34_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_64 -> m34_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_65 -> m34_59  [color=darkseagreen4, key=1, label=baseDirectory, style=dashed];
m36_0 -> m36_2  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m37_19 -> m37_23  [color=green, key=1, label="lambda expression", style=dashed];
m37_7 -> m37_15  [color=green, key=1, label="lambda expression", style=dashed];
m37_27 -> m37_7  [color=green, key=1, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", style=dashed];
m37_27 -> m37_8  [color=green, key=1, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", style=dashed];
m37_27 -> m37_19  [color=green, key=1, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", style=dashed];
m37_27 -> m37_20  [color=green, key=1, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", style=dashed];
m39_7 -> m39_1  [color=darkseagreen4, key=1, label="Ninject.NinjectSettings", style=dashed];
m40_2 -> m40_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m40_2 -> m40_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m40_15 -> m40_4  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m40_15 -> m40_5  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m41_10 -> m41_14  [color=darkseagreen4, key=1, label=bool, style=dashed];
m41_38 -> m41_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m42_41 -> m42_45  [color=green, key=1, label="lambda expression", style=dashed];
m42_54 -> m42_56  [color=green, key=1, label="lambda expression", style=dashed];
m42_50 -> m42_53  [color=green, key=1, label="lambda expression", style=dashed];
m42_11 -> m42_29  [color=green, key=1, label="lambda expression", style=dashed];
m42_12 -> m42_32  [color=green, key=1, label="lambda expression", style=dashed];
m42_14 -> m42_35  [color=green, key=1, label="lambda expression", style=dashed];
m42_74 -> m42_11  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_12  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_14  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_40  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_41  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_49  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_50  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_54  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_57  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_61  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_62  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_74 -> m42_63  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m42_75 -> m42_70  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective", style=dashed];
m44_8 -> m44_10  [color=green, key=1, label=string, style=dashed];
m44_13 -> m44_10  [color=green, key=1, label="Ninject.Tests.Fakes.Samurai", style=dashed];
m45_35 -> m45_37  [color=green, key=1, label=instance, style=dashed];
m45_84 -> m45_90  [color=green, key=1, label="lambda expression", style=dashed];
m45_85 -> m45_87  [color=green, key=1, label=instance1, style=dashed];
m45_63 -> m45_65  [color=green, key=1, label=instance1, style=dashed];
m45_49 -> m45_53  [color=darkseagreen4, key=1, label=reference, style=dashed];
m45_41 -> m45_43  [color=green, key=1, label=sword1, style=dashed];
m45_95 -> m45_103  [color=green, key=1, label="lambda expression", style=dashed];
m45_97 -> m45_101  [color=darkseagreen4, key=1, label=reference, style=dashed];
m45_79 -> m45_81  [color=green, key=1, label=instance, style=dashed];
m45_57 -> m45_59  [color=green, key=1, label=instance, style=dashed];
m45_107 -> m45_112  [color=green, key=1, label="lambda expression", style=dashed];
m45_108 -> m45_110  [color=green, key=1, label=instance, style=dashed];
m45_71 -> m45_75  [color=darkseagreen4, key=1, label=reference, style=dashed];
m45_10 -> m45_12  [color=green, key=1, label=instance1, style=dashed];
m45_12 -> m45_1  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.MvcModule", style=dashed];
m45_12 -> m45_2  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.MvcModule", style=dashed];
m45_12 -> m45_3  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.MvcModule", style=dashed];
m45_12 -> m45_4  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.MvcModule", style=dashed];
m45_12 -> m45_5  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.MvcModule", style=dashed];
m45_23 -> m45_27  [color=darkseagreen4, key=1, label=reference, style=dashed];
m45_119 -> m45_9  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", style=dashed];
m45_119 -> m45_21  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", style=dashed];
m45_119 -> m45_34  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", style=dashed];
m45_119 -> m45_36  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", style=dashed];
m45_120 -> m45_40  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", style=dashed];
m45_120 -> m45_47  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", style=dashed];
m45_120 -> m45_56  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", style=dashed];
m45_120 -> m45_58  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", style=dashed];
m45_121 -> m45_62  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", style=dashed];
m45_121 -> m45_69  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", style=dashed];
m45_121 -> m45_78  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", style=dashed];
m45_121 -> m45_80  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", style=dashed];
m45_122 -> m45_84  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", style=dashed];
m45_122 -> m45_95  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", style=dashed];
m45_122 -> m45_107  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", style=dashed];
m45_122 -> m45_109  [color=green, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", style=dashed];
m45_118 -> m45_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext", style=dashed];
m45_118 -> m45_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext", style=dashed];
m46_23 -> m46_25  [color=green, key=1, label=instance, style=dashed];
m46_23 -> m46_26  [color=green, key=1, label=instance, style=dashed];
m46_30 -> m46_33  [color=green, key=1, label="lambda expression", style=dashed];
m46_10 -> m46_12  [color=green, key=1, label=instance, style=dashed];
m46_10 -> m46_13  [color=green, key=1, label=instance, style=dashed];
m46_45 -> m46_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext", style=dashed];
m46_46 -> m46_9  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel", style=dashed];
m46_46 -> m46_13  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel", style=dashed];
m46_47 -> m46_22  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot", style=dashed];
m46_47 -> m46_26  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot", style=dashed];
m46_48 -> m46_29  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString", style=dashed];
m46_48 -> m46_30  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString", style=dashed];
m46_48 -> m46_34  [color=green, key=1, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString", style=dashed];
m47_37 -> m47_5  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_6  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_7  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_8  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_9  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_10  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_11  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_12  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_13  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_14  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_15  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_16  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_17  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_18  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_19  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_20  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_21  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_22  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_23  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_24  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_25  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_26  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_27  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_28  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_29  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_30  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_31  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_32  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_33  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m47_37 -> m47_34  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m48_5 -> m48_7  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m48_0 -> m48_2  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m48_12 -> m48_2  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>", style=dashed];
m48_12 -> m48_7  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>", style=dashed];
m49_46 -> m49_54  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_46 -> m49_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_46 -> m49_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_46 -> m49_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_46 -> m49_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_52 -> m49_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_55 -> m49_57  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m49_56 -> m49_59  [color=darkseagreen4, key=1, label=argument, style=dashed];
m49_60 -> m49_63  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m49_50 -> m49_77  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_73 -> m49_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_27 -> m49_29  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m49_27 -> m49_30  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m49_32 -> m49_34  [color=green, key=1, label="lambda expression", style=dashed];
m49_82 -> m49_87  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_82 -> m49_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_84 -> m49_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_85 -> m49_88  [color=darkseagreen4, key=1, label=instance, style=dashed];
m49_85 -> m49_89  [color=darkseagreen4, key=1, label=instance, style=dashed];
m49_0 -> m49_6  [color=darkseagreen4, key=1, label=bool, style=dashed];
m49_94 -> m49_107  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_105 -> m49_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_105 -> m49_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_105 -> m49_108  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m49_49 -> m49_51  [color=darkseagreen4, key=1, label=weapon, style=dashed];
m49_76 -> m49_2  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_15  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_24  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_32  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_35  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_45  [color=green, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_21  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_28  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_31  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_42  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_76 -> m49_69  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m49_36 -> m49_38  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m49_36 -> m49_39  [color=darkseagreen4, key=1, label=implementation, style=dashed];
m49_66 -> m49_68  [color=darkseagreen4, key=1, label=weapon, style=dashed];
m49_72 -> m49_80  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_25 -> m49_40  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_121 -> m49_1  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_2  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_5  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_6  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_13  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_18  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_23  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_28  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_29  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_30  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_31  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_36  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_37  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_38  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_39  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_40  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_44  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_48  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_59  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_63  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_73  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_77  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_79  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_80  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_103  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_87  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_121 -> m49_88  [color=darkseagreen4, key=1, label="Ninject.Components.ComponentContainer", style=dashed];
m49_122 -> m49_77  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_15 -> m50_17  [color=darkseagreen4, key=1, label=thread, style=dashed];
m50_32 -> m50_18  [color=green, key=1, label=weapon1, style=dashed];
m50_32 -> m50_20  [color=green, key=1, label=weapon1, style=dashed];
m50_32 -> m50_34  [color=green, key=1, label=weapon1, style=dashed];
m50_33 -> m50_19  [color=green, key=1, label=weapon2, style=dashed];
m50_33 -> m50_20  [color=green, key=1, label=weapon2, style=dashed];
m50_50 -> m50_45  [color=green, key=1, label=weapon2, style=dashed];
m50_50 -> m50_46  [color=green, key=1, label=weapon2, style=dashed];
m50_75 -> m50_64  [color=green, key=1, label=instance, style=dashed];
m50_75 -> m50_65  [color=green, key=1, label=instance, style=dashed];
m50_38 -> m50_44  [color=green, key=1, label=weapon1, style=dashed];
m50_38 -> m50_46  [color=green, key=1, label=weapon1, style=dashed];
m50_41 -> m50_43  [color=darkseagreen4, key=1, label=thread, style=dashed];
m50_54 -> m50_64  [color=green, key=1, label=cache, style=dashed];
m50_57 -> m50_59  [color=darkseagreen4, key=1, label=thread, style=dashed];
m50_76 -> m50_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext", style=dashed];
m50_77 -> m50_11  [color=green, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m50_77 -> m50_37  [color=green, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m50_77 -> m50_53  [color=green, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m50_77 -> m50_75  [color=green, key=1, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m51_0 -> m51_2  [color=darkseagreen4, key=1, label="Ninject.Injection.IInjectorFactory", style=dashed];
m52_1 -> m52_5  [color=darkseagreen4, key=1, label=expectedModules, style=dashed];
m52_5 -> m52_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m52_4 -> m52_6  [color=darkseagreen4, key=1, label=modules, style=dashed];
m52_6 -> m52_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m52_24 -> m52_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies", style=dashed];
m52_24 -> m52_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies", style=dashed];
m52_24 -> m52_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies", style=dashed];
m53_2 -> m53_4  [color=darkseagreen4, key=1, label=modules, style=dashed];
m53_3 -> m53_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_4 -> m53_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_21 -> m53_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName", style=dashed];
m53_21 -> m53_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName", style=dashed];
m53_21 -> m53_19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName", style=dashed];
m54_6 -> m54_8  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m54_6 -> m54_9  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m54_18 -> m54_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m54_27 -> m54_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m54_27 -> m54_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m54_27 -> m54_19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m54_27 -> m54_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m55_3 -> m55_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_23 -> m55_25  [color=green, key=1, label=bar, style=dashed];
m55_33 -> m55_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
m55_33 -> m55_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
m55_33 -> m55_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
m55_33 -> m55_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
m55_33 -> m55_17  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
m55_33 -> m55_24  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenReleasingAnObject", style=dashed];
}
