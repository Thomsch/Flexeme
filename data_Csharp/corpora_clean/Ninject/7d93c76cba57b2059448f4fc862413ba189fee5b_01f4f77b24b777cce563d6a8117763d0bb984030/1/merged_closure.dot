digraph  {
d24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", prediction=0, span="57-57"];
d23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
d25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="58-58"];
d4 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="579-579"];
d21 [cluster="string.ToNotEmptyLines()", label="Entry string.ToNotEmptyLines()", span="10-10"];
d38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
d26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="59-59"];
d27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="60-60"];
d28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="61-61"];
d29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="62-62"];
d30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="63-63"];
d31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="64-64"];
d32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, label="lines[7].ShouldBeEquivalentTo(''post-options'')", prediction=0, span="65-65"];
d33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
d5 [cluster="Unk.ShouldBeEquivalentTo", label="Entry Unk.ShouldBeEquivalentTo", span=""];
d40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", prediction=2, span="74-77"];
d39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
d41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", prediction=3, span="81-81"];
d3 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="35-35"];
d19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="321-321"];
d34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
d35 [cluster="CommandLine.TypeInfo.Create(System.Type)", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
d36 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="388-388"];
d20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="332-332"];
d42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[0].ShouldBeEquivalentTo(''pre-options'')", prediction=4, span="82-82"];
d43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", prediction=3, span="83-83"];
d44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", prediction=3, span="84-84"];
d45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[3].ShouldBeEquivalentTo(''Triangle'')", prediction=3, span="85-85"];
d46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", prediction=3, span="86-86"];
d47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", prediction=3, span="87-87"];
d48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, label="lines[6].ShouldBeEquivalentTo(''post-options'')", prediction=3, span="88-88"];
d49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
d22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
d1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18"];
d8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
d52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
d62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
d70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
d82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
d94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
d152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="274-274"];
d169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="302-302"];
d181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="328-328"];
d194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="352-352"];
d221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="var text = helpText.ToString()", span="404-404"];
d107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var lines = errorsText.ToNotEmptyLines()", span="246-246"];
d208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="var lines = text.ToNotEmptyLines()", span="377-377"];
d222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="405-405"];
d9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
d10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
d11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
d12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
d13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
d14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41"];
d53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105"];
d54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106"];
d55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107"];
d56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108"];
d57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109"];
d58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110"];
d63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
d71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
d72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
d73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
d74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
d75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149"];
d83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
d84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
d85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
d86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
d87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
d88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
d95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
d96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
d97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
d98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
d99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
d100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
d108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="248-248"];
d109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="249-249"];
d110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="250-250"];
d111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="251-251"];
d112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="252-252"];
d113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="253-253"];
d114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="254-254"];
d155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="277-277"];
d156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="278-278"];
d157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="279-279"];
d158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="280-280"];
d159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="281-281"];
d160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="282-282"];
d161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="283-283"];
d172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="306-306"];
d173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="307-307"];
d174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="308-308"];
d175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="309-309"];
d184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="332-332"];
d185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="333-333"];
d186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="334-334"];
d187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="335-335"];
d188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="336-336"];
d195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="353-353"];
d196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="354-354"];
d197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="355-355"];
d198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="356-356"];
d199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="357-357"];
d200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="358-358"];
d201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="359-359"];
d202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="360-360"];
d203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="361-361"];
d209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="380-380"];
d210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="381-381"];
d211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="382-382"];
d212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="383-383"];
d213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="384-384"];
d214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="385-385"];
d215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="386-386"];
d225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="408-408"];
d226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="409-409"];
d227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="410-410"];
d228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="411-411"];
d229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="412-412"];
d230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="413-413"];
d231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="414-414"];
d232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="415-415"];
d233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="416-416"];
d234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="417-417"];
d235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="418-418"];
d236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="419-419"];
d237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="420-420"];
d238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="421-421"];
d239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="422-422"];
d240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="423-423"];
d241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="424-424"];
d51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="97-100"];
d193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="345-348"];
d7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
d93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
d61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
d69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140"];
d81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
d103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-216"];
d150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="262-268"];
d167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="291-296"];
d179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="319-322"];
d206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="369-371"];
d219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="393-398"];
d178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="317-318"];
d0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
d2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
d67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135"];
d77 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
d79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
d91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
d151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="271-271"];
d153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="275-275"];
d154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="276-276"];
d168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="299-299"];
d170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="304-304"];
d171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="305-305"];
d180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="325-325"];
d182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="330-330"];
d183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="331-331"];
d220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="401-401"];
d106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="243-243"];
d207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="var text = HelpText.RenderUsageText(result)", span="374-374"];
d223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="406-406"];
d224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="407-407"];
d15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
d59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
d64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
d76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
d89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
d101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
d115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
d162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
d176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
d189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
d204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
d216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
d242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
d50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
d192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
d6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
d16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="81-81"];
d17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
d18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
d92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="sut.MaximumDisplayWidth = 40", span="182-182"];
d60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
d65 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="58-58"];
d68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="sut.MaximumDisplayWidth = 40", span="136-136"];
d80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="sut.MaximumDisplayWidth = 40", span="159-159"];
d102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
d104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="217-238"];
d116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
d117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
d118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
d119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
d120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
d121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
d122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
d123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
d124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
d125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
d149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
d166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
d191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
d205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
d218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
d177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
d190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
d78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
d90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
d163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="259-259"];
d164 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d165 [cluster="Unk.StartWithEquivalent", label="Entry Unk.StartWithEquivalent", span=""];
d105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="239-240"];
d126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="457-457"];
d217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="515-515"];
d128 [cluster="lambda expression", label="err.Tag", span="219-219"];
d130 [cluster="lambda expression", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="222-222"];
d132 [cluster="lambda expression", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="224-224"];
d134 [cluster="lambda expression", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="226-226"];
d136 [cluster="lambda expression", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="228-228"];
d138 [cluster="lambda expression", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="230-230"];
d142 [cluster="lambda expression", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="234-234"];
d127 [cluster="lambda expression", label="Entry lambda expression", span="217-238"];
d129 [cluster="lambda expression", label="ErrorType.BadFormatTokenError", span="221-221"];
d131 [cluster="lambda expression", label="ErrorType.MissingValueOptionError", span="223-223"];
d133 [cluster="lambda expression", label="ErrorType.UnknownOptionError", span="225-225"];
d135 [cluster="lambda expression", label="ErrorType.MissingRequiredOptionError", span="227-227"];
d137 [cluster="lambda expression", label="ErrorType.SequenceOutOfRangeError", span="229-229"];
d139 [cluster="lambda expression", label="ErrorType.NoVerbSelectedError", span="231-231"];
d141 [cluster="lambda expression", label="ErrorType.BadVerbSelectedError", span="233-233"];
d143 [cluster="lambda expression", label="throw new InvalidOperationException();", span="236-236"];
d144 [cluster="lambda expression", label="Exit lambda expression", span="217-238"];
d140 [cluster="lambda expression", label="return ''ERR no-verb-selected'';", span="232-232"];
d145 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
d24 -> d26  [color=green, key=1, label=lines, style=dashed];
d24 -> d27  [color=green, key=1, label=lines, style=dashed];
d24 -> d28  [color=green, key=1, label=lines, style=dashed];
d24 -> d29  [color=green, key=1, label=lines, style=dashed];
d24 -> d30  [color=green, key=1, label=lines, style=dashed];
d24 -> d31  [color=green, key=1, label=lines, style=dashed];
d24 -> d32  [color=green, key=1, label=lines, style=dashed];
d41 -> d43  [color=green, key=1, label=lines, style=dashed];
d41 -> d44  [color=green, key=1, label=lines, style=dashed];
d41 -> d45  [color=green, key=1, label=lines, style=dashed];
d41 -> d46  [color=green, key=1, label=lines, style=dashed];
d41 -> d47  [color=green, key=1, label=lines, style=dashed];
d41 -> d48  [color=green, key=1, label=lines, style=dashed];
d8 -> d10  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d11  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d12  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d13  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d14  [color=darkseagreen4, key=1, label=lines, style=dashed];
d52 -> d54  [color=darkseagreen4, key=1, label=lines, style=dashed];
d52 -> d55  [color=darkseagreen4, key=1, label=lines, style=dashed];
d52 -> d56  [color=darkseagreen4, key=1, label=lines, style=dashed];
d52 -> d57  [color=darkseagreen4, key=1, label=lines, style=dashed];
d52 -> d58  [color=darkseagreen4, key=1, label=lines, style=dashed];
d70 -> d72  [color=darkseagreen4, key=1, label=lines, style=dashed];
d70 -> d73  [color=darkseagreen4, key=1, label=lines, style=dashed];
d70 -> d74  [color=darkseagreen4, key=1, label=lines, style=dashed];
d70 -> d75  [color=darkseagreen4, key=1, label=lines, style=dashed];
d82 -> d84  [color=darkseagreen4, key=1, label=lines, style=dashed];
d82 -> d85  [color=darkseagreen4, key=1, label=lines, style=dashed];
d82 -> d86  [color=darkseagreen4, key=1, label=lines, style=dashed];
d82 -> d87  [color=darkseagreen4, key=1, label=lines, style=dashed];
d82 -> d88  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d96  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d97  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d98  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d99  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d100  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d154  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d155  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d156  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d157  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d158  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d159  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d160  [color=darkseagreen4, key=1, label=lines, style=dashed];
d152 -> d161  [color=darkseagreen4, key=1, label=lines, style=dashed];
d169 -> d171  [color=darkseagreen4, key=1, label=lines, style=dashed];
d169 -> d172  [color=darkseagreen4, key=1, label=lines, style=dashed];
d169 -> d173  [color=darkseagreen4, key=1, label=lines, style=dashed];
d169 -> d174  [color=darkseagreen4, key=1, label=lines, style=dashed];
d169 -> d175  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d183  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d184  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d185  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d186  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d187  [color=darkseagreen4, key=1, label=lines, style=dashed];
d181 -> d188  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d196  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d197  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d198  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d199  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d200  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d201  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d202  [color=darkseagreen4, key=1, label=lines, style=dashed];
d194 -> d203  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d109  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d111  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d112  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d113  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d114  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d210  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d211  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d212  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d213  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d214  [color=darkseagreen4, key=1, label=lines, style=dashed];
d208 -> d215  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d224  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d225  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d226  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d227  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d228  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d229  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d230  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d231  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d232  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d233  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d234  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d235  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d236  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d237  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d238  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d239  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d240  [color=darkseagreen4, key=1, label=lines, style=dashed];
d222 -> d241  [color=darkseagreen4, key=1, label=lines, style=dashed];
d67 -> d69  [color=darkseagreen4, key=1, label=sut, style=dashed];
d79 -> d81  [color=darkseagreen4, key=1, label=sut, style=dashed];
d91 -> d93  [color=darkseagreen4, key=1, label=sut, style=dashed];
d104 -> d128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d104 -> d142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d127 -> d142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
}
