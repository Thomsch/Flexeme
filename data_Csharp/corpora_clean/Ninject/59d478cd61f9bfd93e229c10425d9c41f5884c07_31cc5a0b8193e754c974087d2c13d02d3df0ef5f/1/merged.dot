digraph  {
m0_0 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="40-40", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="ActivationStrategyTests.cs"];
m0_1 [label="Exit Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="40-40", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="ActivationStrategyTests.cs"];
m0_2 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="47-47", cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="ActivationStrategyTests.cs"];
m0_3 [label="Exit Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="47-47", cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="ActivationStrategyTests.cs"];
m0_4 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="54-54", cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="ActivationStrategyTests.cs"];
m0_5 [label="Exit Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="54-54", cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="ActivationStrategyTests.cs"];
m0_6 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="63-63", cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="ActivationStrategyTests.cs"];
m0_7 [label="Exit Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="63-63", cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="ActivationStrategyTests.cs"];
m1_3 [label="Entry Ninject.Infrastructure.Future<T>.implicit operator T(Ninject.Infrastructure.Future<T>)", span="61-61", cluster="Ninject.Infrastructure.Future<T>.implicit operator T(Ninject.Infrastructure.Future<T>)", file="CircularDependenciesTests.cs"];
m1_4 [label="return future.Value;", span="63-63", cluster="Ninject.Infrastructure.Future<T>.implicit operator T(Ninject.Infrastructure.Future<T>)", file="CircularDependenciesTests.cs"];
m1_5 [label="Exit Ninject.Infrastructure.Future<T>.implicit operator T(Ninject.Infrastructure.Future<T>)", span="61-61", cluster="Ninject.Infrastructure.Future<T>.implicit operator T(Ninject.Infrastructure.Future<T>)", file="CircularDependenciesTests.cs"];
m1_0 [label="Entry Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", span="51-51", cluster="Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", file="CircularDependenciesTests.cs"];
m1_1 [label="Callback = callback", span="53-53", cluster="Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", file="CircularDependenciesTests.cs"];
m1_2 [label="Exit Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", span="51-51", cluster="Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", file="CircularDependenciesTests.cs"];
m1_6 [label="Ninject.Infrastructure.Future<T>", span="", file="CircularDependenciesTests.cs"];
m2_12 [label="Entry Mock<IKernelConfiguration>.cstr", span="", cluster="Mock<IKernelConfiguration>.cstr", file="ConditionalAttributeBindingTests.cs"];
m2_27 [label="Entry Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="63-63", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ConditionalAttributeBindingTests.cs"];
m2_0 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="18-18", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="ConditionalAttributeBindingTests.cs"];
m2_1 [label="this.SetUp()", span="20-20", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="ConditionalAttributeBindingTests.cs"];
m2_2 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="18-18", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="ConditionalAttributeBindingTests.cs"];
m2_88 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="146-146", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_89 [label="container.Add<ITestService, TestServiceA>()", span="148-148", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_90 [label="var service1 = container.Get<ITestService>()", span="150-150", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_91 [label="service1.Should().NotBeNull()", span="151-151", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_92 [label="container.RemoveAll<ITestService>()", span="153-153", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_93 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="154-154", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_94 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="146-146", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="ConditionalAttributeBindingTests.cs"];
m2_28 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConditionalAttributeBindingTests.cs"];
m2_16 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConditionalAttributeBindingTests.cs"];
m2_60 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="ConditionalAttributeBindingTests.cs"];
m2_70 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ConditionalAttributeBindingTests.cs"];
m2_59 [label="Entry Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="75-75", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ConditionalAttributeBindingTests.cs"];
m2_30 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="54-54", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_31 [label="container.Add<ITestService, TestServiceA>()", span="56-56", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_32 [label="container.Add<ITestService, TestServiceB>()", span="57-57", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_33 [label="var service = container.Get<ITestService>()", span="59-59", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_34 [label="service.Should().NotBeNull()", span="61-61", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_35 [label="service.Should().BeOfType<TestServiceA>()", span="62-62", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_36 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="54-54", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_37 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="66-66", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_38 [label="container.Add<ITestService, TestServiceA>()", span="68-68", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_39 [label="container.Add<ITestService, TestServiceB>()", span="69-69", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_40 [label="container.Add<IAsksForEnumerable, AsksForEnumerable>()", span="70-70", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_41 [label="var asks = container.Get<IAsksForEnumerable>()", span="72-72", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_42 [label="asks.Should().NotBeNull()", span="74-74", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_43 [label="asks.SecondService.Should().NotBeNull()", span="75-75", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_44 [label="asks.SecondService.Should().BeOfType<TestServiceB>()", span="76-76", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_45 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="66-66", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="ConditionalAttributeBindingTests.cs"];
m2_80 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="130-130", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_81 [label="container.Add<ITestService, TestServiceA>()", span="132-132", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_82 [label="var service1 = container.Get<ITestService>()", span="134-134", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_83 [label="var service2 = container.Get<ITestService>()", span="135-135", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_84 [label="service1.Should().NotBeNull()", span="137-137", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_86 [label="service1.Should().BeSameAs(service2)", span="139-139", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_85 [label="service2.Should().NotBeNull()", span="138-138", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_87 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="130-130", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="ConditionalAttributeBindingTests.cs"];
m2_61 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="105-105", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_62 [label="container.Add<ITestService, TestServiceA>()", span="107-107", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_63 [label="var services = container.GetAll<ITestService>().ToList()", span="109-109", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_64 [label="services.Should().NotBeNull()", span="111-111", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_65 [label="services.Count.Should().Be(1)", span="112-112", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_66 [label="services[0].Should().BeOfType<TestServiceA>()", span="113-113", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_67 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="105-105", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="ConditionalAttributeBindingTests.cs"];
m2_53 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="91-91", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_54 [label="container.AddTransient<ITestService, TestServiceA>()", span="93-93", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_55 [label="var service1 = container.Get<ITestService>()", span="95-95", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_56 [label="var service2 = container.Get<ITestService>()", span="96-96", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_57 [label="service1.Should().NotBeSameAs(service2)", span="98-98", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_58 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="91-91", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="ConditionalAttributeBindingTests.cs"];
m2_71 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="117-117", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_72 [label="container.Add<ITestService, TestServiceA>()", span="119-119", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_73 [label="container.Add<ITestService, TestServiceB>()", span="120-120", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_74 [label="var services = container.GetAll<ITestService>().ToList()", span="121-121", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_75 [label="services.Should().NotBeNull()", span="123-123", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_76 [label="services.Count.Should().Be(2)", span="124-124", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_77 [label="services[0].Should().BeOfType<TestServiceA>()", span="125-125", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_78 [label="services[1].Should().BeOfType<TestServiceB>()", span="126-126", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_79 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="117-117", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="ConditionalAttributeBindingTests.cs"];
m2_21 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="43-43", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="ConditionalAttributeBindingTests.cs"];
m2_22 [label="container.Add<ITestService, TestServiceA>()", span="45-45", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="ConditionalAttributeBindingTests.cs"];
m2_23 [label="var service = container.Get<ITestService>()", span="47-47", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", color=red, community=0, file="ConditionalAttributeBindingTests.cs"];
m2_24 [label="service.Should().NotBeNull()", span="49-49", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="ConditionalAttributeBindingTests.cs"];
m2_25 [label="service.Should().BeOfType<TestServiceA>()", span="50-50", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="ConditionalAttributeBindingTests.cs"];
m2_26 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="43-43", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="ConditionalAttributeBindingTests.cs"];
m2_69 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ConditionalAttributeBindingTests.cs"];
m2_99 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="158-158", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_100 [label="container.Add<ITestService, TestServiceA>()", span="160-160", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_101 [label="container.Add<ITestService, TestServiceB>()", span="161-161", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_102 [label="var services = container.GetAll<ITestService>().ToList()", span="163-163", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_103 [label="services.Should().NotBeNull()", span="164-164", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_104 [label="services.Count.Should().Be(2)", span="165-165", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_106 [label="services[0].IsDisposed.Should().BeTrue()", span="169-169", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_107 [label="services[1].IsDisposed.Should().BeTrue()", span="170-170", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_105 [label="container.RemoveAll<ITestService>()", span="167-167", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_108 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="158-158", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="ConditionalAttributeBindingTests.cs"];
m2_68 [label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="145-145", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ConditionalAttributeBindingTests.cs"];
m2_29 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ConditionalAttributeBindingTests.cs"];
m2_114 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ConditionalAttributeBindingTests.cs"];
m2_52 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ConditionalAttributeBindingTests.cs"];
m2_96 [label="Entry lambda expression", span="154-154", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_17 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_18 [label="container.Get<ITestService>()", span="39-39", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_19 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_97 [label="container.Get<ITestService>()", span="154-154", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_98 [label="Exit lambda expression", span="154-154", cluster="lambda expression", file="ConditionalAttributeBindingTests.cs"];
m2_46 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="80-80", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="ConditionalAttributeBindingTests.cs"];
m2_47 [label="container.Add<ITestService, TestServiceA>()", span="82-82", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="ConditionalAttributeBindingTests.cs"];
m2_48 [label="var service1 = container.Get<ITestService>()", span="84-84", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", color=red, community=0, file="ConditionalAttributeBindingTests.cs"];
m2_49 [label="var service2 = container.Get<ITestService>()", span="85-85", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="ConditionalAttributeBindingTests.cs"];
m2_50 [label="service1.Should().BeSameAs(service2)", span="87-87", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="ConditionalAttributeBindingTests.cs"];
m2_51 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="80-80", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="ConditionalAttributeBindingTests.cs"];
m2_110 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="178-178", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="ConditionalAttributeBindingTests.cs"];
m2_111 [label="SecondService = services.Skip(1).First()", span="180-180", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="ConditionalAttributeBindingTests.cs"];
m2_112 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="178-178", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="ConditionalAttributeBindingTests.cs"];
m2_3 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="23-23", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_4 [label="this.container = new ComponentContainer()", span="25-25", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_5 [label="this.kernelMock = new Mock<IKernel>()", span="26-26", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_6 [label="this.kernelConfigurationMock = new Mock<IKernelConfiguration>()", span="27-27", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_7 [label="this.container.Kernel = this.kernelMock.Object", span="29-29", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", color=red, community=0, file="ConditionalAttributeBindingTests.cs"];
m2_8 [label="this.container.KernelConfiguration = this.kernelConfigurationMock.Object", span="30-30", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_9 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="23-23", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="ConditionalAttributeBindingTests.cs"];
m2_10 [label="Entry Ninject.Components.ComponentContainer.ComponentContainer()", span="25-25", cluster="Ninject.Components.ComponentContainer.ComponentContainer()", file="ConditionalAttributeBindingTests.cs"];
m2_13 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="37-37", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="ConditionalAttributeBindingTests.cs"];
m2_14 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="39-39", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="ConditionalAttributeBindingTests.cs"];
m2_15 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="37-37", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="ConditionalAttributeBindingTests.cs"];
m2_109 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ConditionalAttributeBindingTests.cs"];
m2_11 [label="Entry Mock<IKernel>.cstr", span="", cluster="Mock<IKernel>.cstr", file="ConditionalAttributeBindingTests.cs"];
m2_95 [label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="87-87", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ConditionalAttributeBindingTests.cs"];
m2_20 [label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="134-134", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ConditionalAttributeBindingTests.cs"];
m2_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ConditionalAttributeBindingTests.cs"];
m2_115 [label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext", span="", file="ConditionalAttributeBindingTests.cs"];
m2_116 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled", span="", file="ConditionalAttributeBindingTests.cs"];
m2_117 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer", span="", file="ConditionalAttributeBindingTests.cs"];
m2_118 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled", span="", file="ConditionalAttributeBindingTests.cs"];
m2_119 [label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable", span="", file="ConditionalAttributeBindingTests.cs"];
m3_12 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="66-66", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="ConditionalBindingWhenParentTests.cs"];
m3_14 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="66-66", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="ConditionalBindingWhenParentTests.cs"];
m3_6 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="59-59", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="ConditionalBindingWhenParentTests.cs"];
m3_13 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="59-59", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="ConditionalBindingWhenParentTests.cs"];
m3_7 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="46-46", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_8 [label="Ensure.ArgumentNotNull(context, ''context'')", span="48-48", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_9 [label="context.Instance is T", span="50-50", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_10 [label="Deactivate(context, (T)context.Instance)", span="51-51", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_11 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="46-46", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_5 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ConditionalBindingWhenParentTests.cs"];
m3_0 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="34-34", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_1 [label="Ensure.ArgumentNotNull(context, ''context'')", span="36-36", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_2 [label="context.Instance is T", span="38-38", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_3 [label="Activate(context, (T)context.Instance)", span="39-39", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_4 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="34-34", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="ConditionalBindingWhenParentTests.cs"];
m3_15 [label="Ninject.Activation.Strategies.ActivationStrategyFor<T>", span="", file="ConditionalBindingWhenParentTests.cs"];
m4_38 [label="Entry Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="37-37", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_39 [label="return root.Resolve(typeof(T), new[] { new PredicateConstraint(predicate) }, parameters).Select(ctx => ctx.Resolve()).Cast<T>();", span="39-39", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_40 [label="Exit Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="37-37", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_57 [label="Entry Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="52-52", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_58 [label="return root.Resolve(type, new[] { new PredicateConstraint(predicate) }, parameters).Select(ctx => ctx.Resolve()).FirstOrDefault();", span="54-54", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_59 [label="Exit Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="52-52", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_0 [label="Entry Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="12-12", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_1 [label="return root.Resolve(typeof(T), new IConstraint[0], parameters).Select(ctx => ctx.Resolve()).Cast<T>().FirstOrDefault();", span="14-14", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", color=green, community=0, file="ConstantTests.cs"];
m4_2 [label="Exit Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="12-12", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_76 [label="Entry Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="67-67", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_77 [label="return root.Resolve(type, new[] { new PredicateConstraint(predicate) }, parameters).Select(ctx => ctx.Resolve());", span="69-69", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_78 [label="Exit Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="67-67", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_5 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConstantTests.cs"];
m4_21 [label="Entry Ninject.Resolution.PredicateConstraint.PredicateConstraint(System.Func<Ninject.Bindings.IBindingMetadata, bool>)", span="9-9", cluster="Ninject.Resolution.PredicateConstraint.PredicateConstraint(System.Func<Ninject.Bindings.IBindingMetadata, bool>)", file="ConstantTests.cs"];
m4_10 [label="Entry Ninject.Activation.IContext.Resolve()", span="18-18", cluster="Ninject.Activation.IContext.Resolve()", file="ConstantTests.cs"];
m4_44 [label="Entry Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="42-42", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_45 [label="return root.Resolve(type, new IConstraint[0], parameters).Select(ctx => ctx.Resolve()).FirstOrDefault();", span="44-44", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_46 [label="Exit Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="42-42", cluster="Ninject.ExtensionsForIResolutionRoot.Get(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_63 [label="Entry Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="57-57", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_64 [label="return root.Resolve(type, new IConstraint[0], parameters).Select(ctx => ctx.Resolve());", span="59-59", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_65 [label="Exit Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", span="57-57", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll(Ninject.Infrastructure.IResolutionRoot, System.Type, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_11 [label="Entry Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="17-17", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_12 [label="return root.Get<T>(m => m.Name == name, parameters);", span="19-19", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", color=green, community=0, file="ConstantTests.cs"];
m4_13 [label="Exit Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", span="17-17", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, string, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_14 [label="Entry Ninject.Infrastructure.IResolutionRoot.Get<T>(System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="22-22", cluster="Ninject.Infrastructure.IResolutionRoot.Get<T>(System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_25 [label="Entry Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="27-27", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_26 [label="return root.Resolve(typeof(T), new IConstraint[0], parameters).Select(ctx => ctx.Resolve()).Cast<T>();", span="29-29", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_27 [label="Exit Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", span="27-27", cluster="Ninject.ExtensionsForIResolutionRoot.GetAll<T>(Ninject.Infrastructure.IResolutionRoot, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_18 [label="Entry Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="22-22", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_19 [label="return (T)root.Resolve(typeof(T), new[] { new PredicateConstraint(predicate) }, parameters).Select(ctx => ctx.Resolve()).FirstOrDefault();", span="24-24", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_20 [label="Exit Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", span="22-22", cluster="Ninject.ExtensionsForIResolutionRoot.Get<T>(Ninject.Infrastructure.IResolutionRoot, System.Func<Ninject.Bindings.IBindingMetadata, bool>, params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m4_3 [label="Entry Ninject.Infrastructure.IResolutionRoot.Resolve(System.Type, System.Collections.Generic.IEnumerable<Ninject.Resolution.IConstraint>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="10-10", cluster="Ninject.Infrastructure.IResolutionRoot.Resolve(System.Type, System.Collections.Generic.IEnumerable<Ninject.Resolution.IConstraint>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ConstantTests.cs"];
m4_79 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="ConstantTests.cs"];
m4_7 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="ConstantTests.cs"];
m4_8 [label="ctx.Resolve()", span="14-14", cluster="lambda expression", color=green, community=0, file="ConstantTests.cs"];
m4_9 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="ConstantTests.cs"];
m4_15 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ConstantTests.cs"];
m4_16 [label="m.Name == name", span="19-19", cluster="lambda expression", color=green, community=0, file="ConstantTests.cs"];
m4_17 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ConstantTests.cs"];
m4_23 [label="ctx.Resolve()", span="24-24", cluster="lambda expression", file="ConstantTests.cs"];
m4_29 [label="ctx.Resolve()", span="29-29", cluster="lambda expression", file="ConstantTests.cs"];
m4_42 [label="ctx.Resolve()", span="39-39", cluster="lambda expression", file="ConstantTests.cs"];
m4_48 [label="ctx.Resolve()", span="44-44", cluster="lambda expression", file="ConstantTests.cs"];
m4_61 [label="ctx.Resolve()", span="54-54", cluster="lambda expression", file="ConstantTests.cs"];
m4_67 [label="ctx.Resolve()", span="59-59", cluster="lambda expression", file="ConstantTests.cs"];
m4_80 [label="ctx.Resolve()", span="69-69", cluster="lambda expression", file="ConstantTests.cs"];
m4_22 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ConstantTests.cs"];
m4_28 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ConstantTests.cs"];
m4_41 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ConstantTests.cs"];
m4_47 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="ConstantTests.cs"];
m4_60 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ConstantTests.cs"];
m4_66 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="ConstantTests.cs"];
m4_24 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ConstantTests.cs"];
m4_30 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ConstantTests.cs"];
m4_43 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ConstantTests.cs"];
m4_49 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="ConstantTests.cs"];
m4_62 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ConstantTests.cs"];
m4_68 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="ConstantTests.cs"];
m4_81 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="ConstantTests.cs"];
m4_6 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="ConstantTests.cs"];
m4_4 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConstantTests.cs"];
m4_82 [label=string, span="", file="ConstantTests.cs"];
m5_0 [label="Entry Ninject.Planning.Bindings.Resolvers.StandardBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", span="31-31", cluster="Ninject.Planning.Bindings.Resolvers.StandardBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="ConstructorSelectionTests.cs"];
m5_1 [label="return bindings[service].ToEnumerable();", span="33-33", cluster="Ninject.Planning.Bindings.Resolvers.StandardBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", color=red, community=0, file="ConstructorSelectionTests.cs"];
m5_2 [label="Exit Ninject.Planning.Bindings.Resolvers.StandardBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", span="31-31", cluster="Ninject.Planning.Bindings.Resolvers.StandardBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="ConstructorSelectionTests.cs"];
m5_3 [label="Ninject.Tests.Fakes.Shield", span="", cluster="System.Collections.Generic.IEnumerable<T>.ToEnumerable<T>()", file="ConstructorSelectionTests.cs"];
m6_9 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="41-41", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="DefaultParameterTests.cs"];
m6_14 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="23-23", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m6_15 [label="IKernel kernel = new StandardKernel()", span="25-25", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_16 [label="kernel.Bind<Shield>().ToSelf()", span="27-27", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_17 [label="kernel.Bind<ShieldColor>().ToConstant(ShieldColor.Blue)", span="28-28", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_18 [label="var shield = kernel.Get<Shield>()", span="30-30", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_19 [label="shield.Should().NotBeNull()", span="31-31", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_20 [label="shield.Color.Should().Be(ShieldColor.Blue)", span="32-32", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_21 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="23-23", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m6_8 [label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="38-38", cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="DefaultParameterTests.cs"];
m6_22 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="107-107", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="DefaultParameterTests.cs"];
m6_23 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="37-37", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m6_24 [label="IKernel kernel = new StandardKernel()", span="39-39", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_25 [label="kernel.Bind<Shield>().ToSelf().WithConstructorArgument(''color'', ShieldColor.Orange)", span="41-41", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_26 [label="var shield = kernel.Get<Shield>()", span="43-43", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_27 [label="shield.Should().NotBeNull()", span="44-44", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_28 [label="shield.Color.Should().Be(ShieldColor.Orange)", span="45-45", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_29 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="37-37", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m6_31 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", span="50-50", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m6_32 [label="IKernel kernel = new StandardKernel()", span="52-52", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_33 [label="kernel.Bind<Shield>().ToSelf()", span="54-54", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_34 [label="kernel.Bind<KiteShield>().ToSelf()", span="55-55", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_35 [label="var shield1 = kernel.Get<Shield>()", span="57-57", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_36 [label="var shield2 = kernel.Get<KiteShield>()", span="58-58", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_37 [label="shield1.Should().NotBeNull()", span="60-60", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_38 [label="shield1.Color.Should().Be(ShieldColor.Red)", span="61-61", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_39 [label="shield2.Should().NotBeNull()", span="63-63", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="DefaultParameterTests.cs"];
m6_40 [label="shield2.Color.Should().Be(ShieldColor.Orange)", span="64-64", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_41 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", span="50-50", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m6_13 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="DefaultParameterTests.cs"];
m6_30 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="43-43", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="DefaultParameterTests.cs"];
m6_7 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="45-45", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="DefaultParameterTests.cs"];
m6_10 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="DefaultParameterTests.cs"];
m6_12 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="DefaultParameterTests.cs"];
m6_0 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="10-10", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m6_1 [label="IKernel kernel = new StandardKernel()", span="12-12", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_2 [label="kernel.Bind<Shield>().ToSelf()", span="14-14", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_3 [label="var shield = kernel.Get<Shield>()", span="16-16", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_4 [label="shield.Should().NotBeNull()", span="17-17", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_5 [label="shield.Color.Should().Be(ShieldColor.Red)", span="18-18", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m6_6 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="10-10", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m6_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="DefaultParameterTests.cs"];
m7_6 [label="Entry Ninject.Web.Mvc.IControllerRegistry.GetController(RequestContext, string)", span="12-12", cluster="Ninject.Web.Mvc.IControllerRegistry.GetController(RequestContext, string)", file="EnumerableDependenciesContext.cs"];
m7_7 [label="Exit Ninject.Web.Mvc.IControllerRegistry.GetController(RequestContext, string)", span="12-12", cluster="Ninject.Web.Mvc.IControllerRegistry.GetController(RequestContext, string)", file="EnumerableDependenciesContext.cs"];
m7_2 [label="Entry Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(System.Reflection.Assembly)", span="9-9", cluster="Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(System.Reflection.Assembly)", file="EnumerableDependenciesContext.cs"];
m7_3 [label="Exit Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(System.Reflection.Assembly)", span="9-9", cluster="Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(System.Reflection.Assembly)", file="EnumerableDependenciesContext.cs"];
m7_4 [label="Entry Ninject.Web.Mvc.IControllerRegistry.Register(string, System.Type)", span="11-11", cluster="Ninject.Web.Mvc.IControllerRegistry.Register(string, System.Type)", file="EnumerableDependenciesContext.cs"];
m7_5 [label="Exit Ninject.Web.Mvc.IControllerRegistry.Register(string, System.Type)", span="11-11", cluster="Ninject.Web.Mvc.IControllerRegistry.Register(string, System.Type)", file="EnumerableDependenciesContext.cs"];
m7_0 [label="Entry Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(string)", span="8-8", cluster="Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(string)", file="EnumerableDependenciesContext.cs"];
m7_1 [label="Exit Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(string)", span="8-8", cluster="Ninject.Web.Mvc.IControllerRegistry.RegisterAllControllersIn(string)", file="EnumerableDependenciesContext.cs"];
m8_4 [label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="53-53", cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="ExternalInjectionTests.cs"];
m8_5 [label="Exit Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="53-53", cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="ExternalInjectionTests.cs"];
m8_2 [label="Entry Ninject.Syntax.IResolutionRoot.Resolve(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="46-46", cluster="Ninject.Syntax.IResolutionRoot.Resolve(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ExternalInjectionTests.cs"];
m8_3 [label="Exit Ninject.Syntax.IResolutionRoot.Resolve(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="46-46", cluster="Ninject.Syntax.IResolutionRoot.Resolve(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ExternalInjectionTests.cs"];
m8_0 [label="Entry Ninject.Syntax.IResolutionRoot.CanResolve(Ninject.Activation.IRequest)", span="37-37", cluster="Ninject.Syntax.IResolutionRoot.CanResolve(Ninject.Activation.IRequest)", file="ExternalInjectionTests.cs"];
m8_1 [label="Exit Ninject.Syntax.IResolutionRoot.CanResolve(Ninject.Activation.IRequest)", span="37-37", cluster="Ninject.Syntax.IResolutionRoot.CanResolve(Ninject.Activation.IRequest)", file="ExternalInjectionTests.cs"];
m10_18 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", span="28-28", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="ModuleLoadingContext.cs"];
m10_19 [label="return this.CreateModuleMock(name).Object;", span="30-30", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="ModuleLoadingContext.cs"];
m10_20 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", span="28-28", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="ModuleLoadingContext.cs"];
m10_4 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.GetRegularMockModuleName()", span="15-15", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.GetRegularMockModuleName()", file="ModuleLoadingContext.cs"];
m10_5 [label="return ''TestModuleName'';", span="17-17", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.GetRegularMockModuleName()", file="ModuleLoadingContext.cs"];
m10_6 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.GetRegularMockModuleName()", span="15-15", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.GetRegularMockModuleName()", file="ModuleLoadingContext.cs"];
m10_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="45-45", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ModuleLoadingContext.cs"];
m10_13 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="ModuleLoadingContext.cs"];
m10_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ModuleLoadingContext.cs"];
m10_12 [label="Entry Mock<INinjectModule>.cstr", span="", cluster="Mock<INinjectModule>.cstr", file="ModuleLoadingContext.cs"];
m10_15 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="ModuleLoadingContext.cs"];
m10_16 [label="x.Name", span="23-23", cluster="lambda expression", file="ModuleLoadingContext.cs"];
m10_17 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="ModuleLoadingContext.cs"];
m10_0 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", span="8-8", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", file="ModuleLoadingContext.cs"];
m10_1 [label="this.Kernel = new StandardKernel()", span="10-10", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", file="ModuleLoadingContext.cs"];
m10_2 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", span="8-8", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", file="ModuleLoadingContext.cs"];
m10_7 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="20-20", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="ModuleLoadingContext.cs"];
m10_8 [label="var moduleMock = new Mock<INinjectModule>()", span="22-22", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="ModuleLoadingContext.cs"];
m10_9 [label="moduleMock.SetupGet(x => x.Name).Returns(name)", span="23-23", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="ModuleLoadingContext.cs"];
m10_10 [label="return moduleMock;", span="25-25", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="ModuleLoadingContext.cs"];
m10_11 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="20-20", cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="ModuleLoadingContext.cs"];
m10_21 [label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", span="", file="ModuleLoadingContext.cs"];
m11_9 [label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="38-38", cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="NamedPropertyInjectionTests.cs"];
m11_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="48-48", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="NamedPropertyInjectionTests.cs"];
m11_11 [label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="37-37", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="NamedPropertyInjectionTests.cs"];
m11_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="NamedPropertyInjectionTests.cs"];
m11_22 [label="Entry Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", span="32-32", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_23 [label="var ninja = this.kernel.Get<NinjaWithSpecialMaster>()", span="34-34", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_24 [label="ninja.MainWeapon.Should().BeOfType<Sword>()", span="36-36", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_25 [label="ninja.OffhandWeapon.Should().BeOfType<ShortSword>()", span="37-37", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_26 [label="ninja.SecretWeaponAccessor.Should().BeOfType<Shuriken>()", span="38-38", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_27 [label="ninja.VerySecretWeaponAccessor.Should().BeOfType<Dagger>()", span="39-39", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_28 [label="Exit Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", span="32-32", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesDefinedOnBaseClassAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_8 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="19-19", cluster="Ninject.NinjectSettings.NinjectSettings()", file="NamedPropertyInjectionTests.cs"];
m11_12 [label="Entry Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", span="21-21", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_13 [label="var ninja = this.kernel.Get<OwnStyleNinja>()", span="23-23", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_14 [label="ninja.MainWeapon.Should().BeOfType<Sword>()", span="25-25", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_15 [label="ninja.OffhandWeapon.Should().BeOfType<ShortSword>()", span="26-26", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_16 [label="ninja.SecretWeaponAccessor.Should().BeOfType<Shuriken>()", span="27-27", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_17 [label="ninja.VerySecretWeaponAccessor.Should().BeOfType<Dagger>()", span="28-28", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_18 [label="Exit Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", span="21-21", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedAttributeOfPropertiesAreRespected()", file="NamedPropertyInjectionTests.cs"];
m11_7 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="54-54", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="NamedPropertyInjectionTests.cs"];
m11_19 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="NamedPropertyInjectionTests.cs"];
m11_0 [label="Entry Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", span="11-11", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_1 [label="this.kernel = new StandardKernel(new NinjectSettings() { InjectNonPublic = true, InjectParentPrivateProperties = true })", span="13-13", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_2 [label="this.kernel.Bind<IWeapon>().To<Sword>().Named(''Main'')", span="14-14", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_3 [label="this.kernel.Bind<IWeapon>().To<ShortSword>().Named(''Offhand'')", span="15-15", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_4 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().Named(''Secret'')", span="16-16", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_5 [label="this.kernel.Bind<IWeapon>().To<Dagger>().Named(''VerySecret'')", span="17-17", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_6 [label="Exit Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", span="11-11", cluster="Ninject.Tests.Integration.NamedPropertyInjectionTests.NamedPropertyInjectionTests()", file="NamedPropertyInjectionTests.cs"];
m11_20 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="NamedPropertyInjectionTests.cs"];
m11_29 [label="Ninject.Tests.Integration.NamedPropertyInjectionTests", span="", file="NamedPropertyInjectionTests.cs"];
m12_163 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="ProviderTests.cs"];
m12_78 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_82 [label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_79 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_83 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_84 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_85 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_86 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_87 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_88 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_81 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_80 [label="sut.MaximumDisplayWidth = 40", span="162-162", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_89 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ProviderTests.cs"];
m12_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ProviderTests.cs"];
m12_35 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="ProviderTests.cs"];
m12_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_71 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_72 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_73 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_74 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_75 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_69 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_68 [label="sut.MaximumDisplayWidth = 40", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="ProviderTests.cs"];
m12_126 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ProviderTests.cs"];
m12_116 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="ProviderTests.cs"];
m12_122 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="ProviderTests.cs"];
m12_37 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ProviderTests.cs"];
m12_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ProviderTests.cs"];
m12_1 [label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ProviderTests.cs"];
m12_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ProviderTests.cs"];
m12_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="ProviderTests.cs"];
m12_217 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ProviderTests.cs"];
m12_118 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="ProviderTests.cs"];
m12_165 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="ProviderTests.cs"];
m12_164 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ProviderTests.cs"];
m12_121 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ProviderTests.cs"];
m12_252 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="ProviderTests.cs"];
m12_145 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ProviderTests.cs"];
m12_125 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ProviderTests.cs"];
m12_38 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ProviderTests.cs"];
m12_253 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ProviderTests.cs"];
m12_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ProviderTests.cs"];
m12_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ProviderTests.cs"];
m12_149 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_152 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_155 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_156 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_157 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_158 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_159 [label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_160 [label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_161 [label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_151 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_153 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_154 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_150 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_162 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_243 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_246 [label="var text = helpText.ToString()", span="445-445", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_247 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="446-446", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_245 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="442-442", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_248 [label="lines[4].Should().Be(''-z, --strarr    (Default: a b c)'')", span="448-448", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_249 [label="lines[5].Should().Be(''-y, --intarr    (Default: 1 2 3)'')", span="449-449", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_250 [label="lines[6].Should().Be(''-q, --dblarr    (Default: 1.1 2.2 3.3)'')", span="450-450", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_244 [label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="436-439", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_251 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ProviderTests.cs"];
m12_77 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="ProviderTests.cs"];
m12_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_94 [label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_95 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_96 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_97 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_98 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_99 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_100 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_91 [label="var sut = new HelpText(''Heading Info.'')", span="184-184", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_92 [label="sut.MaximumDisplayWidth = 40", span="185-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ProviderTests.cs"];
m12_60 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ProviderTests.cs"];
m12_62 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ProviderTests.cs"];
m12_63 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ProviderTests.cs"];
m12_61 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ProviderTests.cs"];
m12_64 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ProviderTests.cs"];
m12_36 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ProviderTests.cs"];
m12_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=green, community=0, file="ProviderTests.cs"];
m12_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ProviderTests.cs"];
m12_102 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_107 [label="var lines = errorsText.ToNotEmptyLines()", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_108 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_109 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_110 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_111 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_112 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_113 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_114 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_103 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_104 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_105 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_115 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_120 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ProviderTests.cs"];
m12_117 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ProviderTests.cs"];
m12_190 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ProviderTests.cs"];
m12_39 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_41 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_40 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_42 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_43 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_44 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_45 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_46 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_47 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_48 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_49 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ProviderTests.cs"];
m12_34 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ProviderTests.cs"];
m12_127 [label="Entry lambda expression", span="220-241", cluster="lambda expression", file="ProviderTests.cs"];
m12_128 [label="err.Tag", span="222-222", cluster="lambda expression", file="ProviderTests.cs"];
m12_130 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225", cluster="lambda expression", file="ProviderTests.cs"];
m12_132 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227", cluster="lambda expression", file="ProviderTests.cs"];
m12_134 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229", cluster="lambda expression", file="ProviderTests.cs"];
m12_136 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231", cluster="lambda expression", file="ProviderTests.cs"];
m12_138 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233", cluster="lambda expression", file="ProviderTests.cs"];
m12_142 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237", cluster="lambda expression", file="ProviderTests.cs"];
m12_129 [label="ErrorType.BadFormatTokenError", span="224-224", cluster="lambda expression", file="ProviderTests.cs"];
m12_131 [label="ErrorType.MissingValueOptionError", span="226-226", cluster="lambda expression", file="ProviderTests.cs"];
m12_133 [label="ErrorType.UnknownOptionError", span="228-228", cluster="lambda expression", file="ProviderTests.cs"];
m12_135 [label="ErrorType.MissingRequiredOptionError", span="230-230", cluster="lambda expression", file="ProviderTests.cs"];
m12_137 [label="ErrorType.SequenceOutOfRangeError", span="232-232", cluster="lambda expression", file="ProviderTests.cs"];
m12_139 [label="ErrorType.NoVerbSelectedError", span="234-234", cluster="lambda expression", file="ProviderTests.cs"];
m12_141 [label="ErrorType.BadVerbSelectedError", span="236-236", cluster="lambda expression", file="ProviderTests.cs"];
m12_143 [label="throw new InvalidOperationException();", span="239-239", cluster="lambda expression", file="ProviderTests.cs"];
m12_140 [label="return ''ERR no-verb-selected'';", span="235-235", cluster="lambda expression", file="ProviderTests.cs"];
m12_144 [label="Exit lambda expression", span="220-241", cluster="lambda expression", file="ProviderTests.cs"];
m12_191 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ProviderTests.cs"];
m12_119 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="ProviderTests.cs"];
m12_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="ProviderTests.cs"];
m12_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ProviderTests.cs"];
m12_205 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_208 [label="var lines = text.ToNotEmptyLines()", span="380-380", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_209 [label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="383-383", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_210 [label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="384-384", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_211 [label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="385-385", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_212 [label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_213 [label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="387-387", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_214 [label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="388-388", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_215 [label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="389-389", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_207 [label="var text = HelpText.RenderUsageText(result)", span="377-377", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_206 [label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="372-374", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_216 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ProviderTests.cs"];
m12_50 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_52 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_51 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_53 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_54 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_55 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_56 [label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_57 [label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_58 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ProviderTests.cs"];
m12_166 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_169 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_172 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="309-309", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_173 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_174 [label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="311-311", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_175 [label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_168 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_170 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_171 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_167 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="294-299", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_176 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ProviderTests.cs"];
m12_124 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ProviderTests.cs"];
m12_65 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="ProviderTests.cs"];
m12_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()", file="ProviderTests.cs"];
m12_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_25 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_26 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_27 [label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_28 [label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_29 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_30 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_31 [label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_32 [label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_33 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ProviderTests.cs"];
m12_123 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ProviderTests.cs"];
m12_192 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_194 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="355-355", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_193 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="348-351", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_195 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="356-356", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_196 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="357-357", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_197 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_198 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_199 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="360-360", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_200 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="361-361", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_201 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="362-362", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_202 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="363-363", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_203 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="364-364", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_204 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ProviderTests.cs"];
m12_177 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_181 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_184 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_185 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_186 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_187 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="338-338", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_188 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="339-339", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_180 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="328-328", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_182 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_183 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_179 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="322-325", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_178 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="320-321", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_189 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ProviderTests.cs"];
m12_218 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_221 [label="var text = helpText.ToString()", span="407-407", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_222 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="408-408", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_225 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="411-411", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_226 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="412-412", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_227 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="413-413", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_228 [label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="414-414", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_229 [label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="415-415", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_230 [label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="416-416", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_231 [label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="417-417", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_232 [label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="418-418", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_233 [label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="419-419", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_234 [label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="420-420", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_235 [label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="421-421", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_236 [label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="422-422", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_237 [label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="423-423", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_238 [label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="424-424", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_239 [label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="425-425", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_240 [label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="426-426", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_241 [label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="427-427", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_220 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="404-404", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_223 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="409-409", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_224 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="410-410", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_219 [label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="396-401", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m12_242 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ProviderTests.cs"];
m14_3 [label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="17-17", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="SpecialResolutionTests.cs"];
m14_4 [label="ConstructorInfo constructor = Selector.SelectConstructor(plan.Type)", span="19-19", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="SpecialResolutionTests.cs"];
m14_6 [label="plan.Add(new ConstructorInjectionDirective(constructor))", span="22-22", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="SpecialResolutionTests.cs"];
m14_5 [label="constructor != null", span="21-21", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="SpecialResolutionTests.cs"];
m14_7 [label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="17-17", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="SpecialResolutionTests.cs"];
m14_10 [label="Entry Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", span="10-10", cluster="Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", file="SpecialResolutionTests.cs"];
m14_9 [label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo)", span="7-7", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo)", file="SpecialResolutionTests.cs"];
m14_0 [label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector)", span="12-12", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector)", file="SpecialResolutionTests.cs"];
m14_1 [label="Selector = selector", span="14-14", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector)", file="SpecialResolutionTests.cs"];
m14_2 [label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector)", span="12-12", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector)", file="SpecialResolutionTests.cs"];
m14_8 [label="Entry Ninject.Selection.ISelector.SelectConstructor(System.Type)", span="16-16", cluster="Ninject.Selection.ISelector.SelectConstructor(System.Type)", file="SpecialResolutionTests.cs"];
m14_11 [label="Ninject.Planning.Strategies.ConstructorReflectionStrategy", span="", file="SpecialResolutionTests.cs"];
m15_14 [label="Entry object.ShouldNotBeSameAs(object)", span="84-84", cluster="object.ShouldNotBeSameAs(object)", file="ThreadScopeTests.cs"];
m15_12 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="156-156", cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="ThreadScopeTests.cs"];
m15_56 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", span="104-104", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_57 [label="kernel.Bind<IWeapon>().ToMethod(x => new Sword()).InTransientScope()", span="106-106", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_58 [label="var instance1 = kernel.Get<IWeapon>()", span="108-108", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_59 [label="var instance2 = kernel.Get<IWeapon>()", span="109-109", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_60 [label="instance1.ShouldNotBeSameAs(instance2)", span="111-111", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_61 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", span="104-104", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_41 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", span="76-76", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_42 [label="kernel.Bind<IWeapon>().ToProvider<SwordProvider>().InTransientScope()", span="78-78", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_43 [label="var instance1 = kernel.Get<IWeapon>()", span="80-80", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_44 [label="var instance2 = kernel.Get<IWeapon>()", span="81-81", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_45 [label="instance1.ShouldNotBeSameAs(instance2)", span="83-83", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_46 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", span="76-76", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_0 [label="Entry Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext.TransientScopeContext()", span="11-11", cluster="Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext.TransientScopeContext()", file="ThreadScopeTests.cs"];
m15_1 [label="kernel = new StandardKernel()", span="13-13", cluster="Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext.TransientScopeContext()", file="ThreadScopeTests.cs"];
m15_2 [label="Exit Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext.TransientScopeContext()", span="11-11", cluster="Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext.TransientScopeContext()", file="ThreadScopeTests.cs"];
m15_62 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="64-64", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", file="ThreadScopeTests.cs"];
m15_26 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", span="48-48", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_27 [label="kernel.Bind<Sword>().ToSelf().InTransientScope()", span="50-50", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_28 [label="var sword1 = kernel.Get<Sword>()", span="52-52", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_29 [label="var sword2 = kernel.Get<Sword>()", span="53-53", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_30 [label="sword1.ShouldNotBeSameAs(sword2)", span="55-55", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_31 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", span="48-48", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_78 [label="Entry Ninject.Tests.Integration.TransientScopeTests.SwordProvider.CreateInstance(Ninject.Activation.IContext)", span="131-131", cluster="Ninject.Tests.Integration.TransientScopeTests.SwordProvider.CreateInstance(Ninject.Activation.IContext)", file="ThreadScopeTests.cs"];
m15_79 [label="return new Sword();", span="133-133", cluster="Ninject.Tests.Integration.TransientScopeTests.SwordProvider.CreateInstance(Ninject.Activation.IContext)", file="ThreadScopeTests.cs"];
m15_80 [label="Exit Ninject.Tests.Integration.TransientScopeTests.SwordProvider.CreateInstance(Ninject.Activation.IContext)", span="131-131", cluster="Ninject.Tests.Integration.TransientScopeTests.SwordProvider.CreateInstance(Ninject.Activation.IContext)", file="ThreadScopeTests.cs"];
m15_25 [label="Entry bool.ShouldBeFalse()", span="99-99", cluster="bool.ShouldBeFalse()", file="ThreadScopeTests.cs"];
m15_11 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="39-39", cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ThreadScopeTests.cs"];
m15_66 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ThreadScopeTests.cs"];
m15_48 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="87-87", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_49 [label="kernel.Bind<IWeapon>().ToProvider<SwordProvider>().InTransientScope()", span="89-89", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_50 [label="var instance = kernel.Get<IWeapon>()", span="91-91", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_51 [label="var reference = new WeakReference(instance)", span="92-92", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_52 [label="instance = null", span="94-94", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_54 [label="reference.IsAlive.ShouldBeFalse()", span="97-97", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_53 [label="GC.Collect()", span="95-95", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_55 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="87-87", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.IModule[])", span="42-42", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.IModule[])", file="ThreadScopeTests.cs"];
m15_33 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="59-59", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_34 [label="kernel.Bind<Sword>().ToSelf().InTransientScope()", span="61-61", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_35 [label="var instance = kernel.Get<Sword>()", span="63-63", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_36 [label="var reference = new WeakReference(instance)", span="64-64", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_37 [label="instance = null", span="66-66", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_39 [label="reference.IsAlive.ShouldBeFalse()", span="69-69", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_38 [label="GC.Collect()", span="67-67", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_40 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="59-59", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_13 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="39-39", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ThreadScopeTests.cs"];
m15_32 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="33-33", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ThreadScopeTests.cs"];
m15_47 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", span="52-52", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", file="ThreadScopeTests.cs"];
m15_75 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_63 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_64 [label="new Sword()", span="106-106", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_65 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_76 [label="new Sword()", span="117-117", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_77 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="ThreadScopeTests.cs"];
m15_15 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="31-31", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_16 [label="kernel.Bind<IWeapon>().To<Sword>().InTransientScope()", span="33-33", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_17 [label="var instance = kernel.Get<IWeapon>()", span="35-35", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_18 [label="var reference = new WeakReference(instance)", span="36-36", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_19 [label="instance = null", span="38-38", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_21 [label="reference.IsAlive.ShouldBeFalse()", span="41-41", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_20 [label="GC.Collect()", span="39-39", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_22 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="31-31", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_24 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="ThreadScopeTests.cs"];
m15_23 [label="Entry System.WeakReference.WeakReference(object)", span="0-0", cluster="System.WeakReference.WeakReference(object)", file="ThreadScopeTests.cs"];
m15_10 [label="Entry Ninject.KernelBase.Bind<T>()", span="168-168", cluster="Ninject.KernelBase.Bind<T>()", file="ThreadScopeTests.cs"];
m15_4 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", span="20-20", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_5 [label="kernel.Bind<IWeapon>().To<Sword>().InTransientScope()", span="22-22", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_6 [label="var instance1 = kernel.Get<IWeapon>()", span="24-24", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_7 [label="var instance2 = kernel.Get<IWeapon>()", span="25-25", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_8 [label="instance1.ShouldNotBeSameAs(instance2)", span="27-27", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_9 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", span="20-20", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope.NewInstanceIsReturnedForEachRequest()", file="ThreadScopeTests.cs"];
m15_67 [label="Entry Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="115-115", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_68 [label="kernel.Bind<IWeapon>().ToMethod(x => new Sword()).InTransientScope()", span="117-117", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_69 [label="var instance = kernel.Get<IWeapon>()", span="119-119", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_70 [label="var reference = new WeakReference(instance)", span="120-120", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_71 [label="instance = null", span="122-122", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_73 [label="reference.IsAlive.ShouldBeFalse()", span="125-125", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_72 [label="GC.Collect()", span="123-123", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_74 [label="Exit Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", span="115-115", cluster="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope.InstancesAreGarbageCollectedIfAllExternalReferencesAreDropped()", file="ThreadScopeTests.cs"];
m15_81 [label="Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext", span="", file="ThreadScopeTests.cs"];
m15_82 [label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope", span="", file="ThreadScopeTests.cs"];
m15_83 [label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope", span="", file="ThreadScopeTests.cs"];
m15_84 [label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope", span="", file="ThreadScopeTests.cs"];
m15_85 [label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope", span="", file="ThreadScopeTests.cs"];
m16_2 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="48-48", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="TransientScopeTests.cs"];
m16_3 [label="Exit Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="48-48", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="TransientScopeTests.cs"];
m16_0 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="38-38", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="TransientScopeTests.cs"];
m16_1 [label="Exit Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="38-38", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="TransientScopeTests.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_3  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.Future<T>"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_27  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_20  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_28  [key=2, style=dotted];
m2_91 -> m2_29  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_16  [key=2, style=dotted];
m2_93 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_94 -> m2_88  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_27  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_27  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_20  [key=2, style=dotted];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=service];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_28  [key=2, style=dotted];
m2_34 -> m2_29  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_28  [key=2, style=dotted];
m2_35 -> m2_16  [key=2, style=dotted];
m2_36 -> m2_30  [key=0, style=bold, color=blue];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_27  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_27  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_27  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_20  [key=2, style=dotted];
m2_41 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=asks];
m2_41 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=asks];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_28  [key=2, style=dotted];
m2_42 -> m2_29  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_28  [key=2, style=dotted];
m2_43 -> m2_29  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_28  [key=2, style=dotted];
m2_44 -> m2_16  [key=2, style=dotted];
m2_45 -> m2_37  [key=0, style=bold, color=blue];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_27  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_20  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=service1];
m2_82 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=service1];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_20  [key=2, style=dotted];
m2_83 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=service2];
m2_83 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=service2];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_28  [key=2, style=dotted];
m2_84 -> m2_29  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_28  [key=2, style=dotted];
m2_86 -> m2_52  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_28  [key=2, style=dotted];
m2_85 -> m2_29  [key=2, style=dotted];
m2_87 -> m2_80  [key=0, style=bold, color=blue];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_27  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_68  [key=2, style=dotted];
m2_63 -> m2_69  [key=2, style=dotted];
m2_63 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_63 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_28  [key=2, style=dotted];
m2_64 -> m2_29  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_28  [key=2, style=dotted];
m2_65 -> m2_70  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_28  [key=2, style=dotted];
m2_66 -> m2_16  [key=2, style=dotted];
m2_67 -> m2_61  [key=0, style=bold, color=blue];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_59  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_20  [key=2, style=dotted];
m2_55 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=service1];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_20  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_28  [key=2, style=dotted];
m2_57 -> m2_60  [key=2, style=dotted];
m2_58 -> m2_53  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_27  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_27  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_68  [key=2, style=dotted];
m2_74 -> m2_69  [key=2, style=dotted];
m2_74 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_74 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_74 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_28  [key=2, style=dotted];
m2_75 -> m2_29  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_28  [key=2, style=dotted];
m2_76 -> m2_70  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_28  [key=2, style=dotted];
m2_77 -> m2_16  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_28  [key=2, style=dotted];
m2_78 -> m2_16  [key=2, style=dotted];
m2_79 -> m2_71  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid, color=red];
m2_22 -> m2_27  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid, color=red];
m2_23 -> m2_20  [key=2, style=dotted, color=red];
m2_23 -> m2_25  [key=1, style=dashed, color=red, label=service];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=2, style=dotted];
m2_24 -> m2_29  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_28  [key=2, style=dotted];
m2_25 -> m2_16  [key=2, style=dotted];
m2_26 -> m2_21  [key=0, style=bold, color=blue];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_27  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_27  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_68  [key=2, style=dotted];
m2_102 -> m2_69  [key=2, style=dotted];
m2_102 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_102 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_102 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=services];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_28  [key=2, style=dotted];
m2_103 -> m2_29  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_28  [key=2, style=dotted];
m2_104 -> m2_70  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_28  [key=2, style=dotted];
m2_106 -> m2_109  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_28  [key=2, style=dotted];
m2_107 -> m2_109  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_95  [key=2, style=dotted];
m2_108 -> m2_99  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_20  [key=2, style=dotted];
m2_98 -> m2_96  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid, color=red];
m2_47 -> m2_27  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid, color=red];
m2_48 -> m2_20  [key=2, style=dotted, color=red];
m2_48 -> m2_50  [key=1, style=dashed, color=red, label=service1];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_20  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_28  [key=2, style=dotted];
m2_50 -> m2_52  [key=2, style=dotted];
m2_51 -> m2_46  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=2, style=dotted];
m2_111 -> m2_114  [key=2, style=dotted];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_12  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_3  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_115 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_115 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_115 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_115 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_115 -> m2_7  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_115 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m2_116 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_23  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_48  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_116 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m2_117 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_117 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m2_118 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_118 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m2_119 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable"];
m3_12 -> m3_14  [key=0, style=solid];
m3_14 -> m3_12  [key=0, style=bold, color=blue];
m3_6 -> m3_13  [key=0, style=solid];
m3_13 -> m3_6  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m3_7 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_11 -> m3_7  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_15 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>"];
m3_15 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>"];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_3  [key=2, style=dotted];
m4_39 -> m4_4  [key=2, style=dotted];
m4_39 -> m4_5  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_21  [key=2, style=dotted];
m4_39 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_3  [key=2, style=dotted];
m4_58 -> m4_4  [key=2, style=dotted];
m4_58 -> m4_6  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_21  [key=2, style=dotted];
m4_58 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_59 -> m4_57  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=2, style=dotted, color=green];
m4_1 -> m4_4  [key=2, style=dotted, color=green];
m4_1 -> m4_5  [key=2, style=dotted, color=green];
m4_1 -> m4_6  [key=2, style=dotted, color=green];
m4_1 -> m4_7  [key=1, style=dashed, color=green, label="lambda expression"];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_3  [key=2, style=dotted];
m4_77 -> m4_4  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_21  [key=2, style=dotted];
m4_77 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_3  [key=2, style=dotted];
m4_45 -> m4_4  [key=2, style=dotted];
m4_45 -> m4_6  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_46 -> m4_44  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_64 -> m4_3  [key=2, style=dotted];
m4_64 -> m4_4  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_65 -> m4_63  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid, color=green];
m4_11 -> m4_16  [key=1, style=dashed, color=green, label=string];
m4_11 -> m4_14  [key=3, color=darkorchid, style=bold, label="method methodReturn T Get"];
m4_12 -> m4_13  [key=0, style=solid, color=green];
m4_12 -> m4_14  [key=2, style=dotted, color=green];
m4_12 -> m4_15  [key=1, style=dashed, color=green, label="lambda expression"];
m4_13 -> m4_11  [key=0, style=bold, color=blue];
m4_14 -> m4_12  [key=3, color=green, style=bold, label="Parameter variable System.Func<Ninject.Bindings.IBindingMetadata, bool> predicate"];
m4_14 -> m4_11  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Parameters.IParameter[] parameters"];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_3  [key=2, style=dotted];
m4_26 -> m4_4  [key=2, style=dotted];
m4_26 -> m4_5  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_3  [key=2, style=dotted];
m4_19 -> m4_4  [key=2, style=dotted];
m4_19 -> m4_6  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_19 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_8 -> m4_9  [key=0, style=solid, color=green];
m4_8 -> m4_10  [key=2, style=dotted, color=green];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid, color=green];
m4_16 -> m4_17  [key=0, style=solid, color=green];
m4_17 -> m4_15  [key=0, style=bold, color=blue];
m4_23 -> m4_10  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_29 -> m4_10  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_42 -> m4_10  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_48 -> m4_10  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_61 -> m4_10  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_67 -> m4_10  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_80 -> m4_10  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_24 -> m4_22  [key=0, style=bold, color=blue];
m4_30 -> m4_28  [key=0, style=bold, color=blue];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_62 -> m4_60  [key=0, style=bold, color=blue];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_82 -> m4_16  [key=1, style=dashed, color=green, label=string];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_3  [key=2, style=dotted, color=red];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Shield"];
m6_14 -> m6_15  [key=0, style=solid, color=red];
m6_15 -> m6_16  [key=0, style=solid, color=green];
m6_15 -> m6_7  [key=2, style=dotted, color=red];
m6_15 -> m6_17  [key=1, style=dashed, color=green, label=kernel];
m6_15 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=kernel];
m6_16 -> m6_17  [key=0, style=solid, color=green];
m6_16 -> m6_8  [key=2, style=dotted, color=green];
m6_16 -> m6_9  [key=2, style=dotted, color=green];
m6_17 -> m6_18  [key=0, style=solid, color=green];
m6_17 -> m6_8  [key=2, style=dotted, color=green];
m6_17 -> m6_22  [key=2, style=dotted, color=green];
m6_18 -> m6_19  [key=0, style=solid, color=red];
m6_18 -> m6_10  [key=2, style=dotted, color=red];
m6_18 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=shield];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_11  [key=2, style=dotted, color=red];
m6_19 -> m6_12  [key=2, style=dotted, color=red];
m6_20 -> m6_21  [key=0, style=solid, color=red];
m6_20 -> m6_11  [key=2, style=dotted, color=red];
m6_20 -> m6_13  [key=2, style=dotted, color=red];
m6_21 -> m6_14  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid, color=green];
m6_24 -> m6_25  [key=0, style=solid, color=green];
m6_24 -> m6_7  [key=2, style=dotted, color=green];
m6_24 -> m6_26  [key=1, style=dashed, color=green, label=kernel];
m6_25 -> m6_26  [key=0, style=solid, color=red];
m6_25 -> m6_8  [key=2, style=dotted, color=red];
m6_25 -> m6_9  [key=2, style=dotted, color=red];
m6_25 -> m6_30  [key=2, style=dotted, color=red];
m6_26 -> m6_27  [key=0, style=solid, color=red];
m6_26 -> m6_10  [key=2, style=dotted, color=red];
m6_26 -> m6_28  [key=1, style=dashed, color=green, label=shield];
m6_27 -> m6_28  [key=0, style=solid, color=green];
m6_27 -> m6_11  [key=2, style=dotted, color=red];
m6_27 -> m6_12  [key=2, style=dotted, color=red];
m6_28 -> m6_29  [key=0, style=solid, color=green];
m6_28 -> m6_11  [key=2, style=dotted, color=green];
m6_28 -> m6_13  [key=2, style=dotted, color=green];
m6_29 -> m6_23  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid, color=red];
m6_32 -> m6_33  [key=0, style=solid, color=red];
m6_32 -> m6_7  [key=2, style=dotted, color=red];
m6_32 -> m6_34  [key=1, style=dashed, color=green, label=kernel];
m6_32 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label=kernel];
m6_32 -> m6_36  [key=1, style=dashed, color=green, label=kernel];
m6_33 -> m6_34  [key=0, style=solid, color=green];
m6_33 -> m6_8  [key=2, style=dotted, color=red];
m6_33 -> m6_9  [key=2, style=dotted, color=red];
m6_34 -> m6_35  [key=0, style=solid, color=green];
m6_34 -> m6_8  [key=2, style=dotted, color=green];
m6_34 -> m6_9  [key=2, style=dotted, color=green];
m6_35 -> m6_36  [key=0, style=solid, color=green];
m6_35 -> m6_10  [key=2, style=dotted, color=red];
m6_35 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=shield1];
m6_35 -> m6_38  [key=1, style=dashed, color=green, label=shield1];
m6_36 -> m6_37  [key=0, style=solid, color=green];
m6_36 -> m6_10  [key=2, style=dotted, color=green];
m6_36 -> m6_39  [key=1, style=dashed, color=green, label=shield2];
m6_36 -> m6_40  [key=1, style=dashed, color=green, label=shield2];
m6_37 -> m6_38  [key=0, style=solid, color=green];
m6_37 -> m6_11  [key=2, style=dotted, color=red];
m6_37 -> m6_12  [key=2, style=dotted, color=red];
m6_38 -> m6_39  [key=0, style=solid, color=green];
m6_38 -> m6_11  [key=2, style=dotted, color=green];
m6_38 -> m6_13  [key=2, style=dotted, color=green];
m6_39 -> m6_40  [key=0, style=solid, color=green];
m6_39 -> m6_11  [key=2, style=dotted, color=red];
m6_39 -> m6_12  [key=2, style=dotted, color=red];
m6_40 -> m6_41  [key=0, style=solid, color=green];
m6_40 -> m6_11  [key=2, style=dotted, color=green];
m6_40 -> m6_13  [key=2, style=dotted, color=green];
m6_41 -> m6_31  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_7  [key=2, style=dotted, color=green];
m6_1 -> m6_3  [key=1, style=dashed, color=green, label=kernel];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_8  [key=2, style=dotted, color=green];
m6_2 -> m6_9  [key=2, style=dotted, color=green];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_10  [key=2, style=dotted, color=green];
m6_3 -> m6_5  [key=1, style=dashed, color=green, label=shield];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_11  [key=2, style=dotted, color=green];
m6_4 -> m6_12  [key=2, style=dotted, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_11  [key=2, style=dotted, color=green];
m6_5 -> m6_13  [key=2, style=dotted, color=green];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_6  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_7  [key=2, style=dotted];
m10_20 -> m10_18  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_4  [key=0, style=bold, color=blue];
m10_15 -> m10_16  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_15  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_7 -> m10_18  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_12  [key=2, style=dotted];
m10_8 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label=moduleMock];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_13  [key=2, style=dotted];
m10_9 -> m10_14  [key=2, style=dotted];
m10_9 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_7  [key=0, style=bold, color=blue];
m10_21 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext"];
m10_21 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext"];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_19  [key=2, style=dotted];
m11_23 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_23 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_23 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_20  [key=2, style=dotted];
m11_24 -> m11_21  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_20  [key=2, style=dotted];
m11_25 -> m11_21  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_20  [key=2, style=dotted];
m11_26 -> m11_21  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_20  [key=2, style=dotted];
m11_27 -> m11_21  [key=2, style=dotted];
m11_28 -> m11_22  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_19  [key=2, style=dotted];
m11_13 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_13 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_13 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_20  [key=2, style=dotted];
m11_14 -> m11_21  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_20  [key=2, style=dotted];
m11_15 -> m11_21  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_20  [key=2, style=dotted];
m11_16 -> m11_21  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_20  [key=2, style=dotted];
m11_17 -> m11_21  [key=2, style=dotted];
m11_18 -> m11_12  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_7  [key=2, style=dotted];
m11_1 -> m11_8  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_9  [key=2, style=dotted];
m11_2 -> m11_10  [key=2, style=dotted];
m11_2 -> m11_11  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_9  [key=2, style=dotted];
m11_3 -> m11_10  [key=2, style=dotted];
m11_3 -> m11_11  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_11  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_9  [key=2, style=dotted];
m11_5 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_11  [key=2, style=dotted];
m11_6 -> m11_0  [key=0, style=bold, color=blue];
m11_29 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m11_29 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.NamedPropertyInjectionTests"];
m12_78 -> m12_79  [key=0, style=solid];
m12_82 -> m12_4  [key=2, style=dotted];
m12_82 -> m12_21  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_82 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_82 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_82 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_82 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_79 -> m12_17  [key=2, style=dotted];
m12_79 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_65  [key=2, style=dotted];
m12_79 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_83 -> m12_5  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_84 -> m12_5  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_85 -> m12_5  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_86 -> m12_5  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_87 -> m12_5  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_88 -> m12_5  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_34  [key=2, style=dotted];
m12_81 -> m12_35  [key=2, style=dotted];
m12_81 -> m12_36  [key=2, style=dotted];
m12_81 -> m12_37  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_89 -> m12_78  [key=0, style=bold, color=blue];
m12_66 -> m12_67  [key=0, style=solid];
m12_70 -> m12_4  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_77  [key=2, style=dotted];
m12_70 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_70 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_70 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_70 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_67 -> m12_17  [key=2, style=dotted];
m12_67 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_65  [key=2, style=dotted];
m12_67 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_71 -> m12_5  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_72 -> m12_5  [key=2, style=dotted];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_5  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_5  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_75 -> m12_5  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_34  [key=2, style=dotted];
m12_69 -> m12_35  [key=2, style=dotted];
m12_69 -> m12_36  [key=2, style=dotted];
m12_69 -> m12_37  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_76 -> m12_66  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_4  [key=2, style=dotted];
m12_1 -> m12_5  [key=2, style=dotted];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_149 -> m12_150  [key=0, style=solid];
m12_152 -> m12_4  [key=2, style=dotted];
m12_152 -> m12_21  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_38  [key=2, style=dotted];
m12_152 -> m12_154  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_152 -> m12_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_155 -> m12_5  [key=2, style=dotted];
m12_155 -> m12_156  [key=0, style=solid];
m12_156 -> m12_5  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_157 -> m12_5  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_158 -> m12_5  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_159 -> m12_5  [key=2, style=dotted];
m12_159 -> m12_160  [key=0, style=solid];
m12_160 -> m12_5  [key=2, style=dotted];
m12_160 -> m12_161  [key=0, style=solid];
m12_161 -> m12_5  [key=2, style=dotted];
m12_161 -> m12_162  [key=0, style=solid];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_163  [key=2, style=dotted];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_164  [key=2, style=dotted];
m12_153 -> m12_165  [key=2, style=dotted];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_164  [key=2, style=dotted];
m12_154 -> m12_165  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_34  [key=2, style=dotted];
m12_150 -> m12_35  [key=2, style=dotted];
m12_150 -> m12_116  [key=2, style=dotted];
m12_150 -> m12_121  [key=2, style=dotted];
m12_150 -> m12_118  [key=2, style=dotted];
m12_162 -> m12_149  [key=0, style=bold, color=blue];
m12_243 -> m12_244  [key=0, style=solid];
m12_246 -> m12_4  [key=2, style=dotted];
m12_246 -> m12_247  [key=0, style=solid];
m12_247 -> m12_21  [key=2, style=dotted];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_38  [key=2, style=dotted];
m12_247 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_247 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_163  [key=2, style=dotted];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_164  [key=2, style=dotted];
m12_248 -> m12_253  [key=2, style=dotted];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_164  [key=2, style=dotted];
m12_249 -> m12_253  [key=2, style=dotted];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_164  [key=2, style=dotted];
m12_250 -> m12_253  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_244 -> m12_34  [key=2, style=dotted];
m12_244 -> m12_252  [key=2, style=dotted];
m12_244 -> m12_116  [key=2, style=dotted];
m12_251 -> m12_243  [key=0, style=bold, color=blue];
m12_90 -> m12_91  [key=0, style=solid];
m12_94 -> m12_4  [key=2, style=dotted];
m12_94 -> m12_21  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_94 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_94 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_94 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_94 -> m12_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_93 -> m12_19  [key=2, style=dotted];
m12_93 -> m12_20  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_34  [key=2, style=dotted];
m12_93 -> m12_35  [key=2, style=dotted];
m12_93 -> m12_36  [key=2, style=dotted];
m12_93 -> m12_37  [key=2, style=dotted];
m12_95 -> m12_5  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_96 -> m12_5  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_97 -> m12_5  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_98 -> m12_5  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_99 -> m12_5  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_100 -> m12_5  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_91 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_91 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_65  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_101 -> m12_90  [key=0, style=bold, color=blue];
m12_60 -> m12_61  [key=0, style=solid];
m12_62 -> m12_4  [key=2, style=dotted];
m12_62 -> m12_21  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_38  [key=2, style=dotted];
m12_63 -> m12_5  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_65  [key=2, style=dotted];
m12_61 -> m12_34  [key=2, style=dotted];
m12_61 -> m12_35  [key=2, style=dotted];
m12_61 -> m12_36  [key=2, style=dotted];
m12_61 -> m12_37  [key=2, style=dotted];
m12_64 -> m12_60  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid, color=green];
m12_8 -> m12_4  [key=2, style=dotted, color=green];
m12_8 -> m12_21  [key=2, style=dotted, color=green];
m12_8 -> m12_10  [key=1, style=dashed, color=green, label=lines];
m12_8 -> m12_11  [key=1, style=dashed, color=green, label=lines];
m12_8 -> m12_12  [key=1, style=dashed, color=green, label=lines];
m12_8 -> m12_13  [key=1, style=dashed, color=green, label=lines];
m12_8 -> m12_14  [key=1, style=dashed, color=green, label=lines];
m12_8 -> m12_22  [key=3, color=green, style=bold, label="method methodReturn string Get"];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_16  [key=2, style=dotted];
m12_7 -> m12_17  [key=2, style=dotted];
m12_7 -> m12_18  [key=2, style=dotted];
m12_7 -> m12_19  [key=2, style=dotted];
m12_7 -> m12_20  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_5  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_5  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_5  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_5  [key=2, style=dotted];
m12_12 -> m12_14  [key=3, color=darkorchid, style=bold, label="Field variable string name"];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_5  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_5  [key=2, style=dotted];
m12_15 -> m12_6  [key=0, style=bold, color=blue];
m12_102 -> m12_103  [key=0, style=solid];
m12_107 -> m12_21  [key=2, style=dotted];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_107 -> m12_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_107 -> m12_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_107 -> m12_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_107 -> m12_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_107 -> m12_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_108 -> m12_5  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid];
m12_109 -> m12_5  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_110 -> m12_5  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_111 -> m12_5  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_112 -> m12_5  [key=2, style=dotted];
m12_112 -> m12_113  [key=0, style=solid];
m12_113 -> m12_5  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_114 -> m12_5  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_126  [key=2, style=dotted];
m12_103 -> m12_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m12_103 -> m12_34  [key=2, style=dotted];
m12_103 -> m12_35  [key=2, style=dotted];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_116  [key=2, style=dotted];
m12_103 -> m12_117  [key=2, style=dotted];
m12_103 -> m12_118  [key=2, style=dotted];
m12_103 -> m12_119  [key=2, style=dotted];
m12_103 -> m12_120  [key=2, style=dotted];
m12_103 -> m12_121  [key=2, style=dotted];
m12_103 -> m12_122  [key=2, style=dotted];
m12_103 -> m12_123  [key=2, style=dotted];
m12_103 -> m12_124  [key=2, style=dotted];
m12_103 -> m12_125  [key=2, style=dotted];
m12_104 -> m12_106  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m12_104 -> m12_104  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_104 -> m12_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer"];
m12_115 -> m12_102  [key=0, style=bold, color=blue];
m12_39 -> m12_40  [key=0, style=solid];
m12_41 -> m12_4  [key=2, style=dotted];
m12_41 -> m12_21  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_38  [key=2, style=dotted];
m12_41 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_41 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_41 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_41 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_41 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_41 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_40 -> m12_19  [key=2, style=dotted];
m12_40 -> m12_20  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_3  [key=2, style=dotted];
m12_40 -> m12_34  [key=2, style=dotted];
m12_40 -> m12_35  [key=2, style=dotted];
m12_40 -> m12_36  [key=2, style=dotted];
m12_40 -> m12_37  [key=2, style=dotted];
m12_42 -> m12_5  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_5  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_44 -> m12_5  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_45 -> m12_5  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_46 -> m12_5  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_47 -> m12_5  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_48 -> m12_5  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_49 -> m12_39  [key=0, style=bold, color=blue];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_127 -> m12_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_127 -> m12_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_127 -> m12_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_127 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_127 -> m12_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_131  [key=0, style=solid];
m12_128 -> m12_133  [key=0, style=solid];
m12_128 -> m12_135  [key=0, style=solid];
m12_128 -> m12_137  [key=0, style=solid];
m12_128 -> m12_139  [key=0, style=solid];
m12_128 -> m12_141  [key=0, style=solid];
m12_128 -> m12_143  [key=0, style=solid];
m12_130 -> m12_144  [key=0, style=solid];
m12_132 -> m12_144  [key=0, style=solid];
m12_134 -> m12_144  [key=0, style=solid];
m12_136 -> m12_144  [key=0, style=solid];
m12_138 -> m12_144  [key=0, style=solid];
m12_142 -> m12_144  [key=0, style=solid];
m12_129 -> m12_130  [key=0, style=solid];
m12_131 -> m12_132  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_135 -> m12_136  [key=0, style=solid];
m12_137 -> m12_138  [key=0, style=solid];
m12_139 -> m12_140  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_145  [key=2, style=dotted];
m12_140 -> m12_144  [key=0, style=solid];
m12_144 -> m12_127  [key=0, style=bold, color=blue];
m12_205 -> m12_206  [key=0, style=solid];
m12_208 -> m12_21  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_210  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_208 -> m12_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_208 -> m12_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_208 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_208 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_208 -> m12_215  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_209 -> m12_5  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_210 -> m12_5  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_211 -> m12_5  [key=2, style=dotted];
m12_211 -> m12_212  [key=0, style=solid];
m12_212 -> m12_5  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_213 -> m12_5  [key=2, style=dotted];
m12_213 -> m12_214  [key=0, style=solid];
m12_214 -> m12_5  [key=2, style=dotted];
m12_214 -> m12_215  [key=0, style=solid];
m12_215 -> m12_5  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_217  [key=2, style=dotted];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_34  [key=2, style=dotted];
m12_206 -> m12_35  [key=2, style=dotted];
m12_206 -> m12_36  [key=2, style=dotted];
m12_216 -> m12_205  [key=0, style=bold, color=blue];
m12_50 -> m12_51  [key=0, style=solid];
m12_52 -> m12_4  [key=2, style=dotted];
m12_52 -> m12_21  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_38  [key=2, style=dotted];
m12_52 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_52 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_52 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_52 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_52 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_51 -> m12_19  [key=2, style=dotted];
m12_51 -> m12_20  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_3  [key=2, style=dotted];
m12_51 -> m12_34  [key=2, style=dotted];
m12_51 -> m12_35  [key=2, style=dotted];
m12_51 -> m12_36  [key=2, style=dotted];
m12_51 -> m12_37  [key=2, style=dotted];
m12_53 -> m12_5  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_54 -> m12_5  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_55 -> m12_5  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_5  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_5  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_58 -> m12_5  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_59 -> m12_50  [key=0, style=bold, color=blue];
m12_166 -> m12_167  [key=0, style=solid];
m12_169 -> m12_4  [key=2, style=dotted];
m12_169 -> m12_21  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_38  [key=2, style=dotted];
m12_169 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_169 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_169 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_169 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_169 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_172 -> m12_5  [key=2, style=dotted];
m12_172 -> m12_173  [key=0, style=solid];
m12_173 -> m12_5  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_174 -> m12_5  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_175 -> m12_5  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_163  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_164  [key=2, style=dotted];
m12_170 -> m12_165  [key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_164  [key=2, style=dotted];
m12_171 -> m12_165  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_34  [key=2, style=dotted];
m12_167 -> m12_35  [key=2, style=dotted];
m12_167 -> m12_125  [key=2, style=dotted];
m12_176 -> m12_166  [key=0, style=bold, color=blue];
m12_22 -> m12_12  [key=3, color=darkorchid, style=bold, label="method methodReturn string Get"];
m12_22 -> m12_23  [key=0, style=solid];
m12_24 -> m12_4  [key=2, style=dotted];
m12_24 -> m12_21  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_38  [key=2, style=dotted];
m12_24 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_24 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_23 -> m12_19  [key=2, style=dotted];
m12_23 -> m12_20  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_3  [key=2, style=dotted];
m12_23 -> m12_34  [key=2, style=dotted];
m12_23 -> m12_35  [key=2, style=dotted];
m12_23 -> m12_36  [key=2, style=dotted];
m12_23 -> m12_37  [key=2, style=dotted];
m12_25 -> m12_5  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_26 -> m12_5  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_5  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_5  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_29 -> m12_5  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_30 -> m12_5  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_5  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_5  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_22  [key=0, style=bold, color=blue];
m12_192 -> m12_193  [key=0, style=solid];
m12_194 -> m12_4  [key=2, style=dotted];
m12_194 -> m12_21  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_38  [key=2, style=dotted];
m12_194 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_198  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_194 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_193 -> m12_19  [key=2, style=dotted];
m12_193 -> m12_20  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_3  [key=2, style=dotted];
m12_193 -> m12_34  [key=2, style=dotted];
m12_193 -> m12_35  [key=2, style=dotted];
m12_193 -> m12_36  [key=2, style=dotted];
m12_193 -> m12_37  [key=2, style=dotted];
m12_195 -> m12_5  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_196 -> m12_5  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_197 -> m12_5  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_198 -> m12_5  [key=2, style=dotted];
m12_198 -> m12_199  [key=0, style=solid];
m12_199 -> m12_5  [key=2, style=dotted];
m12_199 -> m12_200  [key=0, style=solid];
m12_200 -> m12_5  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_201 -> m12_5  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_202 -> m12_5  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_203 -> m12_5  [key=2, style=dotted];
m12_203 -> m12_204  [key=0, style=solid];
m12_204 -> m12_192  [key=0, style=bold, color=blue];
m12_177 -> m12_178  [key=0, style=solid];
m12_181 -> m12_4  [key=2, style=dotted];
m12_181 -> m12_21  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_38  [key=2, style=dotted];
m12_181 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_181 -> m12_184  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_181 -> m12_185  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_181 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_181 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_181 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_184 -> m12_5  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_5  [key=2, style=dotted];
m12_185 -> m12_186  [key=0, style=solid];
m12_186 -> m12_5  [key=2, style=dotted];
m12_186 -> m12_187  [key=0, style=solid];
m12_187 -> m12_5  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_188 -> m12_5  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_163  [key=2, style=dotted];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_164  [key=2, style=dotted];
m12_182 -> m12_165  [key=2, style=dotted];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_164  [key=2, style=dotted];
m12_183 -> m12_165  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_34  [key=2, style=dotted];
m12_179 -> m12_191  [key=2, style=dotted];
m12_179 -> m12_125  [key=2, style=dotted];
m12_178 -> m12_36  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_190  [key=2, style=dotted];
m12_189 -> m12_177  [key=0, style=bold, color=blue];
m12_218 -> m12_219  [key=0, style=solid];
m12_221 -> m12_4  [key=2, style=dotted];
m12_221 -> m12_222  [key=0, style=solid];
m12_222 -> m12_21  [key=2, style=dotted];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_38  [key=2, style=dotted];
m12_222 -> m12_224  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_231  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_232  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_233  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_234  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_235  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_236  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_237  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_238  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_222 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label=lines];
m12_225 -> m12_5  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_226 -> m12_5  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_227 -> m12_5  [key=2, style=dotted];
m12_227 -> m12_228  [key=0, style=solid];
m12_228 -> m12_5  [key=2, style=dotted];
m12_228 -> m12_229  [key=0, style=solid];
m12_229 -> m12_5  [key=2, style=dotted];
m12_229 -> m12_230  [key=0, style=solid];
m12_230 -> m12_5  [key=2, style=dotted];
m12_230 -> m12_231  [key=0, style=solid];
m12_231 -> m12_5  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_232 -> m12_5  [key=2, style=dotted];
m12_232 -> m12_233  [key=0, style=solid];
m12_233 -> m12_5  [key=2, style=dotted];
m12_233 -> m12_234  [key=0, style=solid];
m12_234 -> m12_5  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_235 -> m12_5  [key=2, style=dotted];
m12_235 -> m12_236  [key=0, style=solid];
m12_236 -> m12_5  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_237 -> m12_5  [key=2, style=dotted];
m12_237 -> m12_238  [key=0, style=solid];
m12_238 -> m12_5  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_239 -> m12_5  [key=2, style=dotted];
m12_239 -> m12_240  [key=0, style=solid];
m12_240 -> m12_5  [key=2, style=dotted];
m12_240 -> m12_241  [key=0, style=solid];
m12_241 -> m12_5  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_163  [key=2, style=dotted];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_164  [key=2, style=dotted];
m12_223 -> m12_165  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_164  [key=2, style=dotted];
m12_224 -> m12_165  [key=2, style=dotted];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_34  [key=2, style=dotted];
m12_219 -> m12_35  [key=2, style=dotted];
m12_219 -> m12_116  [key=2, style=dotted];
m12_242 -> m12_218  [key=0, style=bold, color=blue];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.IPlan"];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_9  [key=2, style=dotted];
m14_6 -> m14_10  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=0, style=solid];
m14_7 -> m14_3  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_11 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m14_11 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m15_56 -> m15_57  [key=0, style=solid];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_10  [key=2, style=dotted];
m15_57 -> m15_62  [key=2, style=dotted];
m15_57 -> m15_12  [key=2, style=dotted];
m15_57 -> m15_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_13  [key=2, style=dotted];
m15_58 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label=instance1];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_13  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_14  [key=2, style=dotted];
m15_61 -> m15_56  [key=0, style=bold, color=blue];
m15_41 -> m15_42  [key=0, style=solid];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_10  [key=2, style=dotted];
m15_42 -> m15_47  [key=2, style=dotted];
m15_42 -> m15_12  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_13  [key=2, style=dotted];
m15_43 -> m15_45  [key=1, style=dashed, color=darkseagreen4, label=instance1];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_13  [key=2, style=dotted];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_14  [key=2, style=dotted];
m15_46 -> m15_41  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_10  [key=2, style=dotted];
m15_27 -> m15_32  [key=2, style=dotted];
m15_27 -> m15_12  [key=2, style=dotted];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_13  [key=2, style=dotted];
m15_28 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label=sword1];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_13  [key=2, style=dotted];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_14  [key=2, style=dotted];
m15_31 -> m15_26  [key=0, style=bold, color=blue];
m15_78 -> m15_79  [key=0, style=solid];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_66  [key=2, style=dotted];
m15_80 -> m15_78  [key=0, style=bold, color=blue];
m15_48 -> m15_49  [key=0, style=solid];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_10  [key=2, style=dotted];
m15_49 -> m15_47  [key=2, style=dotted];
m15_49 -> m15_12  [key=2, style=dotted];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_13  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_23  [key=2, style=dotted];
m15_51 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=reference];
m15_52 -> m15_53  [key=0, style=solid];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_25  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_24  [key=2, style=dotted];
m15_55 -> m15_48  [key=0, style=bold, color=blue];
m15_33 -> m15_34  [key=0, style=solid];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_10  [key=2, style=dotted];
m15_34 -> m15_32  [key=2, style=dotted];
m15_34 -> m15_12  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_13  [key=2, style=dotted];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_23  [key=2, style=dotted];
m15_36 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label=reference];
m15_37 -> m15_38  [key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_25  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_24  [key=2, style=dotted];
m15_40 -> m15_33  [key=0, style=bold, color=blue];
m15_75 -> m15_76  [key=0, style=solid];
m15_63 -> m15_64  [key=0, style=solid];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_66  [key=2, style=dotted];
m15_65 -> m15_63  [key=0, style=bold, color=blue];
m15_76 -> m15_77  [key=0, style=solid];
m15_76 -> m15_66  [key=2, style=dotted];
m15_77 -> m15_75  [key=0, style=bold, color=blue];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_10  [key=2, style=dotted];
m15_16 -> m15_11  [key=2, style=dotted];
m15_16 -> m15_12  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_13  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_23  [key=2, style=dotted];
m15_18 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=reference];
m15_19 -> m15_20  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_22 -> m15_15  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_10  [key=2, style=dotted];
m15_5 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_12  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_13  [key=2, style=dotted];
m15_6 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=instance1];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_13  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_14  [key=2, style=dotted];
m15_9 -> m15_4  [key=0, style=bold, color=blue];
m15_67 -> m15_68  [key=0, style=solid];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_10  [key=2, style=dotted];
m15_68 -> m15_62  [key=2, style=dotted];
m15_68 -> m15_12  [key=2, style=dotted];
m15_68 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_13  [key=2, style=dotted];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_23  [key=2, style=dotted];
m15_70 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label=reference];
m15_71 -> m15_72  [key=0, style=solid];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_25  [key=2, style=dotted];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_24  [key=2, style=dotted];
m15_74 -> m15_67  [key=0, style=bold, color=blue];
m15_81 -> m15_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.TransientScopeContext"];
m15_82 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope"];
m15_82 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope"];
m15_82 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope"];
m15_82 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope"];
m15_82 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToInterfaceInTransientScope"];
m15_83 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope"];
m15_83 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope"];
m15_83 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope"];
m15_83 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope"];
m15_83 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToSelfInTransientScope"];
m15_84 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope"];
m15_84 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope"];
m15_84 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope"];
m15_84 -> m15_49  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope"];
m15_84 -> m15_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToProviderInTransientScope"];
m15_85 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope"];
m15_85 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope"];
m15_85 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope"];
m15_85 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope"];
m15_85 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.TransientScopeTests.WhenServiceIsBoundToMethodInTransientScope"];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
}
