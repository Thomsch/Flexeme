digraph  {
n24 [label="Ninject.Injection.Linq.ConstructorInjector", span=""];
n0 [cluster="Ninject.Injection.Linq.ConstructorInjector.ConstructorInjector(System.Reflection.ConstructorInfo)", label="Entry Ninject.Injection.Linq.ConstructorInjector.ConstructorInjector(System.Reflection.ConstructorInfo)", span="33-33"];
n1 [cluster="Ninject.Injection.Linq.ConstructorInjector.ConstructorInjector(System.Reflection.ConstructorInfo)", label="Exit Ninject.Injection.Linq.ConstructorInjector.ConstructorInjector(System.Reflection.ConstructorInfo)", span="33-33"];
n2 [cluster="Ninject.Injection.Linq.ConstructorInjector.Invoke(params object[])", label="Entry Ninject.Injection.Linq.ConstructorInjector.Invoke(params object[])", span="40-40"];
n3 [cluster="Ninject.Injection.Linq.ConstructorInjector.Invoke(params object[])", label="return Callback.Invoke(values);", span="42-42"];
n4 [cluster="Ninject.Injection.Linq.ConstructorInjector.Invoke(params object[])", label="Exit Ninject.Injection.Linq.ConstructorInjector.Invoke(params object[])", span="40-40"];
n5 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n6 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", label="Entry Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", span="51-51"];
n7 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="1: ParameterExpression argumentParameter = Expression.Parameter(typeof(object[]), ''arguments'')", span="53-53"];
n8 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="0: ParameterInfo[] parameters = member.GetParameters()", span="55-55"];
n14 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", label="NewExpression newCall = Expression.New(member, arguments)", span="65-65"];
n17 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
n12 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=1, label="0: arguments[idx] = Expression.Convert(\r\n					Expression.ArrayIndex(argumentParameter, Expression.Constant(idx)),\r\n					parameters[idx].ParameterType)", span="60-62"];
n15 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="0: return Expression.Lambda<Func<object[], object>>(newCall, argumentParameter);", span="67-67"];
n9 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="1: Expression[] arguments = new Expression[parameters.Length]", span="56-56"];
n18 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n11 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="0: idx < parameters.Length", span="58-58"];
n10 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="1: int idx = 0", span="58-58"];
n13 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=red, community=0, label="1: idx++", span="58-58"];
n19 [cluster="System.Linq.Expressions.Expression.Constant(object)", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
n20 [cluster="System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", label="Entry System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
n21 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
n22 [cluster="System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", label="Entry System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
n16 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", label="Exit Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", span="51-51"];
n23 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
d7 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=green, community=0, label="1: ParameterExpression argumentsParameter = Expression.Parameter(typeof(object[]), ''arguments'')", span="54-54"];
d8 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=green, community=0, label="1: var arguments = MethodInjectionExpressionHelper.CreateParameterExpressions(member, argumentsParameter)", span="55-55"];
d10 [cluster="Ninject.Injection.Linq.ConstructorInjector.BuildExpression(System.Reflection.ConstructorInfo)", color=green, community=0, label="0: return Expression.Lambda<Func<object[], object>>(newCall, argumentsParameter);", span="59-59"];
d13 [cluster="Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", label="Entry Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", span="27-27"];
m0_0 [cluster="Ninject.Injection.IConstructorInjector.Invoke(params object[])", file="IConstructorInjector.cs", label="Entry Ninject.Injection.IConstructorInjector.Invoke(params object[])", span="32-32"];
m0_1 [cluster="Ninject.Injection.IConstructorInjector.Invoke(params object[])", file="IConstructorInjector.cs", label="Exit Ninject.Injection.IConstructorInjector.Invoke(params object[])", span="32-32"];
m1_0 [cluster="Ninject.Injection.IMethodInjector.Invoke(object, params object[])", file="IMethodInjector.cs", label="Entry Ninject.Injection.IMethodInjector.Invoke(object, params object[])", span="33-33"];
m1_1 [cluster="Ninject.Injection.IMethodInjector.Invoke(object, params object[])", file="IMethodInjector.cs", label="Exit Ninject.Injection.IMethodInjector.Invoke(object, params object[])", span="33-33"];
m2_0 [cluster="Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo)", file="MethodInjectionDirective.cs", label="Entry Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo)", span="32-32"];
m2_1 [cluster="Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo)", file="MethodInjectionDirective.cs", label="Exit Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo)", span="32-32"];
m3_13 [cluster="Ninject.Planning.Targets.ParameterTarget.ParameterTarget(System.Reflection.MethodBase, System.Reflection.ParameterInfo)", file="MethodInjectionDirectiveBase.cs", label="Entry Ninject.Planning.Targets.ParameterTarget.ParameterTarget(System.Reflection.MethodBase, System.Reflection.ParameterInfo)", span="49-49"];
m3_4 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.GetParameterTargets(T)", file="MethodInjectionDirectiveBase.cs", label="Entry Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.GetParameterTargets(T)", span="57-57"];
m3_5 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.GetParameterTargets(T)", file="MethodInjectionDirectiveBase.cs", label="return method.GetParameters().Select(parameter => new ParameterTarget(method, parameter)).ToArray();", span="59-59"];
m3_6 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.GetParameterTargets(T)", file="MethodInjectionDirectiveBase.cs", label="Exit Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.GetParameterTargets(T)", span="57-57"];
m3_0 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", file="MethodInjectionDirectiveBase.cs", label="Entry Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", span="46-46"];
m3_1 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", color=green, community=0, file="MethodInjectionDirectiveBase.cs", label="1: Member = method", span="57-57"];
m3_2 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", color=red, community=0, file="MethodInjectionDirectiveBase.cs", label="1: Targets = GetParameterTargets(member)", span="49-49"];
m3_3 [cluster="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", file="MethodInjectionDirectiveBase.cs", label="Exit Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>.MethodInjectionDirectiveBase(T)", span="46-46"];
m3_10 [cluster="lambda expression", file="MethodInjectionDirectiveBase.cs", label="Entry lambda expression", span="59-59"];
m3_11 [cluster="lambda expression", file="MethodInjectionDirectiveBase.cs", label="new ParameterTarget(method, parameter)", span="59-59"];
m3_12 [cluster="lambda expression", file="MethodInjectionDirectiveBase.cs", label="Exit lambda expression", span="59-59"];
m3_9 [cluster="Unk.ToArray", file="MethodInjectionDirectiveBase.cs", label="Entry Unk.ToArray", span=""];
m3_8 [cluster="Unk.Select", file="MethodInjectionDirectiveBase.cs", label="Entry Unk.Select", span=""];
m3_14 [file="MethodInjectionDirectiveBase.cs", label="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>", span=""];
m3_15 [file="MethodInjectionDirectiveBase.cs", label=T, span=""];
m4_0 [cluster="Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", file="MethodInjectionExpressionHelper.cs", label="Entry Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", span="27-27"];
m4_1 [cluster="Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", color=green, community=1, file="MethodInjectionExpressionHelper.cs", label="0: return method.GetParameters().Select((parameter, index) =>\r\n				Expression.Convert(\r\n					Expression.ArrayIndex(argumentArrayExpression, Expression.Constant(index)),\r\n					parameter.ParameterType)).ToArray();", span="29-32"];
m4_2 [cluster="Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", file="MethodInjectionExpressionHelper.cs", label="Exit Ninject.Injection.Linq.MethodInjectionExpressionHelper.CreateParameterExpressions(System.Reflection.MethodBase, System.Linq.Expressions.Expression)", span="27-27"];
m4_3 [cluster="System.Reflection.MethodBase.GetParameters()", file="MethodInjectionExpressionHelper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_11 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="MethodInjectionExpressionHelper.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m4_6 [cluster="lambda expression", file="MethodInjectionExpressionHelper.cs", label="Entry lambda expression", span="29-32"];
m4_7 [cluster="lambda expression", color=green, community=1, file="MethodInjectionExpressionHelper.cs", label="1: Expression.Convert(\r\n					Expression.ArrayIndex(argumentArrayExpression, Expression.Constant(index)),\r\n					parameter.ParameterType)", span="30-32"];
m4_8 [cluster="lambda expression", file="MethodInjectionExpressionHelper.cs", label="Exit lambda expression", span="29-32"];
m4_5 [cluster="Unk.ToArray", file="MethodInjectionExpressionHelper.cs", label="Entry Unk.ToArray", span=""];
m4_10 [cluster="System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="MethodInjectionExpressionHelper.cs", label="Entry System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m4_4 [cluster="Unk.Select", file="MethodInjectionExpressionHelper.cs", label="Entry Unk.Select", span=""];
m4_12 [file="MethodInjectionExpressionHelper.cs", label="System.Linq.Expressions.Expression", span=""];
m5_33 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="39-39"];
m5_18 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: contextMock.SetupGet(x => x.Instance).Returns(instance)", span="48-48"];
m5_17 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: contextMock.SetupGet(x => x.Plan).Returns(planMock.Object)", span="47-47"];
m5_6 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", span="30-30"];
m5_7 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var instance = new Dummy()", span="32-32"];
m5_8 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var method1 = typeof(Dummy).GetMethod(''Foo'')", span="34-34"];
m5_10 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var contextMock = new Mock<IContext>()", span="37-37"];
m5_12 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", file="MethodInjectionStrategyTests.cs", label="var methodInjectorMock1 = new Mock<IMethodInjector>()", span="39-39"];
m5_13 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var methodInjectorMock2 = new Mock<IMethodInjector>()", span="40-40"];
m5_9 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var method2 = typeof(Dummy).GetMethod(''Bar'')", span="35-35"];
m5_11 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var planMock = new Mock<IPlan>()", span="38-38"];
m5_14 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: var directives = new[] { new FakeMethodInjectionDirective(method1), new FakeMethodInjectionDirective(method2) }", span="42-42"];
m5_15 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: injectorFactoryMock.Setup(x => x.GetMethodInjector(method1)).Returns(methodInjectorMock1.Object).AtMostOnce()", span="44-44"];
m5_29 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="35-35"];
m5_16 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: injectorFactoryMock.Setup(x => x.GetMethodInjector(method2)).Returns(methodInjectorMock2.Object).AtMostOnce()", span="45-45"];
m5_4 [cluster="Mock<IInjectorFactory>.cstr", file="MethodInjectionStrategyTests.cs", label="Entry Mock<IInjectorFactory>.cstr", span=""];
m5_30 [cluster="lambda expression", color=red, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetAll<MethodInjectionDirective>()", span="35-35"];
m5_24 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: injectorFactoryMock.Verify(x => x.GetMethodInjector(method2))", span="57-57"];
m5_34 [cluster="lambda expression", color=red, community=0, file="MethodInjectionStrategyTests.cs", label="0: x.Plan", span="39-39"];
m5_95 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo)", span="68-68"];
m5_32 [cluster="Unk.>", file="MethodInjectionStrategyTests.cs", label="Entry Unk.>", span=""];
m5_42 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="MethodInjectionStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="7-7"];
m5_102 [cluster="Unk.ToArray", file="MethodInjectionStrategyTests.cs", label="Entry Unk.ToArray", span=""];
m5_21 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: contextMock.VerifyGet(x => x.Plan)", span="54-54"];
m5_23 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: injectorFactoryMock.Verify(x => x.GetMethodInjector(method1))", span="56-56"];
m5_5 [cluster="MethodInjectionStrategy.cstr", file="MethodInjectionStrategyTests.cs", label="Entry MethodInjectionStrategy.cstr", span=""];
m5_22 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", file="MethodInjectionStrategyTests.cs", label="planMock.Verify(x => x.GetAll<MethodInjectionDirective>())", span="55-55"];
m5_19 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: planMock.Setup(x => x.GetAll<MethodInjectionDirective>()).Returns(directives)", span="50-50"];
m5_85 [cluster="Unk.Invoke", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Invoke", span=""];
m5_92 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="60-60"];
m5_26 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", file="MethodInjectionStrategyTests.cs", label="methodInjectorMock1.Verify(x => x.Invoke(instance, It.Is<object[]>(a => a.Length == 2)))", span="59-59"];
m5_36 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="40-40"];
m5_27 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", color=red, community=0, file="MethodInjectionStrategyTests.cs", label="1: methodInjectorMock2.Verify(x => x.Invoke(instance, It.Is<object[]>(a => a.Length == 1)))", span="60-60"];
m5_28 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesAndInvokesMethodInjectorsAsDescribedByMethodInjectionDirectivesInPlan()", span="30-30"];
m5_31 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="35-35"];
m5_35 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="39-39"];
m5_37 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="x.GetAll<MethodInjectionDirective>()", span="40-40"];
m5_38 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="40-40"];
m5_83 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="x.Invoke(instance, It.Is<object[]>(a => a.Length == 2))", span="59-59"];
m5_90 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="x.Invoke(instance, It.Is<object[]>(a => a.Length == 1))", span="60-60"];
m5_44 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetMethodInjector(method1)", span="44-44"];
m5_67 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetMethodInjector(method1)", span="56-56"];
m5_53 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="48-48"];
m5_48 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetMethodInjector(method2)", span="45-45"];
m5_70 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetMethodInjector(method2)", span="57-57"];
m5_66 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="56-56"];
m5_68 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="56-56"];
m5_73 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(contextMock.Object)))", span="58-58"];
m5_76 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: m.Verify(x => x.ResolveWithin(contextMock.Object))", span="58-58"];
m5_79 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.ResolveWithin(contextMock.Object)", span="58-58"];
m5_69 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="57-57"];
m5_71 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="57-57"];
m5_60 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="54-54"];
m5_72 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="58-58"];
m5_74 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="58-58"];
m5_75 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="58-58"];
m5_77 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="58-58"];
m5_78 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="58-58"];
m5_80 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="58-58"];
m5_56 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="50-50"];
m5_51 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="0: x.Plan", span="47-47"];
m5_54 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.Instance", span="48-48"];
m5_55 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="48-48"];
m5_57 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: x.GetAll<MethodInjectionDirective>()", span="50-50"];
m5_58 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="50-50"];
m5_61 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="0: x.Plan", span="54-54"];
m5_62 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="54-54"];
m5_103 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="72-72"];
m5_107 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="73-73"];
m5_104 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: new Mock<ITarget>()", span="72-72"];
m5_105 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="72-72"];
m5_108 [cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="0: m.Object", span="73-73"];
m5_109 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="73-73"];
m5_82 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="59-59"];
m5_84 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="59-59"];
m5_86 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="59-59"];
m5_89 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Entry lambda expression", span="60-60"];
m5_91 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="60-60"];
m5_88 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="59-59"];
m5_87 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="a.Length == 2", span="59-59"];
m5_93 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="a.Length == 1", span="60-60"];
m5_94 [cluster="lambda expression", file="MethodInjectionStrategyTests.cs", label="Exit lambda expression", span="60-60"];
m5_101 [cluster="Unk.Select", file="MethodInjectionStrategyTests.cs", label="Entry Unk.Select", span=""];
m5_25 [cluster="Unk.Verify", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: Entry Unk.Verify", span=""];
m5_20 [cluster="Unk.Returns", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="1: Entry Unk.Returns", span=""];
m5_106 [cluster="Mock<ITarget>.cstr", file="MethodInjectionStrategyTests.cs", label="Entry Mock<ITarget>.cstr", span=""];
m5_96 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", span="70-70"];
m5_97 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="0: TargetMocks = method.GetParameters().Select(p => new Mock<ITarget>()).ToArray()", span="72-72"];
m5_98 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs", label="0: return TargetMocks.Select(m => m.Object).ToArray();", span="73-73"];
m5_99 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.GetParameterTargets(System.Reflection.MethodInfo)", span="70-70"];
m5_81 [cluster="Unk.ResolveWithin", file="MethodInjectionStrategyTests.cs", label="Entry Unk.ResolveWithin", span=""];
m5_0 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="17-17"];
m5_1 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="injectorFactoryMock = new Mock<IInjectorFactory>()", span="19-19"];
m5_2 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="strategy = new MethodInjectionStrategy(injectorFactoryMock.Object)", span="20-20"];
m5_3 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="17-17"];
m5_46 [cluster="Unk.GetMethodInjector", file="MethodInjectionStrategyTests.cs", label="Entry Unk.GetMethodInjector", span=""];
m5_39 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span=""];
m5_40 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span=""];
m5_116 [file="MethodInjectionStrategyTests.cs", label=method1, span=""];
m5_117 [file="MethodInjectionStrategyTests.cs", label=method2, span=""];
m5_118 [file="MethodInjectionStrategyTests.cs", label=contextMock, span=""];
m5_120 [file="MethodInjectionStrategyTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", span=""];
m5_119 [file="MethodInjectionStrategyTests.cs", label=instance, span=""];
m6_4 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", span="50-50"];
m6_5 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="ParameterExpression instanceParameter = Expression.Parameter(typeof(object), ''instance'')", span="52-52"];
m6_6 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="Expression instance = Expression.Convert(instanceParameter, member.DeclaringType)", span="53-53"];
m6_8 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: ParameterInfo[] parameters = member.GetParameters()", span="57-57"];
m6_14 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="MethodCallExpression call = Expression.Call(instance, member, arguments)", span="67-67"];
m6_15 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: return Expression.Lambda<TDelegate>(call, instanceParameter, argumentParameter);", span="69-69"];
m6_7 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: ParameterExpression argumentParameter = Expression.Parameter(typeof(object[]), ''arguments'')", span="55-55"];
m6_12 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=1, file="MethodInjectorBase.cs", label="0: arguments[idx] = Expression.Convert(\r\n					Expression.ArrayIndex(argumentParameter, Expression.Constant(idx)),\r\n					parameters[idx].ParameterType)", span="62-64"];
m6_9 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: Expression[] arguments = new Expression[parameters.Length]", span="58-58"];
m6_11 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: idx < parameters.Length", span="60-60"];
m6_10 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: int idx = 0", span="60-60"];
m6_13 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", color=red, community=0, file="MethodInjectorBase.cs", label="0: idx++", span="60-60"];
m6_16 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.BuildExpression(System.Reflection.MethodInfo)", span="50-50"];
m6_0 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", span="34-34"];
m6_1 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", file="MethodInjectorBase.cs", label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.MethodInjectorBase(System.Reflection.MethodInfo)", span="34-34"];
m6_23 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="MethodInjectorBase.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m6_20 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="MethodInjectorBase.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m6_22 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="MethodInjectorBase.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m6_19 [cluster="System.Reflection.MethodBase.GetParameters()", file="MethodInjectorBase.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m6_18 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="MethodInjectorBase.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m6_21 [cluster="System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="MethodInjectorBase.cs", label="Entry System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m6_2 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", file="MethodInjectorBase.cs", label="Entry Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", span="42-42"];
m6_3 [cluster="Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", file="MethodInjectorBase.cs", label="Exit Ninject.Injection.Linq.MethodInjectorBase<TDelegate>.Invoke(object, params object[])", span="42-42"];
m8_4 [cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="PropertyInjectionDirective.cs", label="Entry Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="48-48"];
m8_0 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", file="PropertyInjectionDirective.cs", label="Entry Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", span="43-43"];
m8_1 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionDirective.cs", label="0: Member = member", span="45-45"];
m8_2 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionDirective.cs", label="0: Target = new PropertyTarget(member)", span="46-46"];
m8_3 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", file="PropertyInjectionDirective.cs", label="Exit Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo)", span="43-43"];
m8_5 [file="PropertyInjectionDirective.cs", label="Ninject.Planning.Directives.PropertyInjectionDirective", span=""];
n24 -> n3  [color=darkseagreen4, key=1, label="Ninject.Injection.Linq.ConstructorInjector", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n4 -> n2  [color=blue, key=0, style=bold];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n8  [color=red, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
n6 -> n14  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
n6 -> d7  [color=green, key=0, style=solid];
n6 -> d8  [color=green, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n17  [color=red, key=2, style=dotted];
n7 -> n12  [color=red, key=1, label=argumentParameter, style=dashed];
n7 -> n15  [color=red, key=1, label=argumentParameter, style=dashed];
n8 -> n9  [color=red, key=0, style=solid];
n8 -> n18  [color=red, key=2, style=dotted];
n8 -> n11  [color=red, key=1, label=parameters, style=dashed];
n8 -> n12  [color=red, key=1, label=parameters, style=dashed];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> d10  [color=green, key=0, style=solid];
n12 -> n13  [color=red, key=0, style=solid];
n12 -> n19  [color=red, key=2, style=dotted];
n12 -> n20  [color=red, key=2, style=dotted];
n12 -> n21  [color=red, key=2, style=dotted];
n15 -> n16  [color=red, key=0, style=solid];
n15 -> n23  [color=red, key=2, style=dotted];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n12  [color=red, key=1, label=arguments, style=dashed];
n9 -> n14  [color=red, key=1, label=arguments, style=dashed];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n14  [color=red, key=0, style=solid];
n11 -> n11  [color=red, key=3, label="Local variable int idx", style=bold];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> n12  [color=red, key=1, label=idx, style=dashed];
n10 -> n13  [color=red, key=1, label=idx, style=dashed];
n13 -> n11  [color=red, key=0, style=solid];
n13 -> n13  [color=red, key=1, label=idx, style=dashed];
n16 -> n6  [color=blue, key=0, style=bold];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> n17  [color=green, key=2, style=dotted];
d7 -> d10  [color=green, key=1, label=argumentsParameter, style=dashed];
d8 -> n14  [color=green, key=0, style=solid];
d8 -> d13  [color=green, key=2, style=dotted];
d10 -> n16  [color=green, key=0, style=solid];
d10 -> n23  [color=green, key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_4 -> m3_0  [color=darkorchid, key=3, label="Parameter variable T method", style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> n18  [key=2, style=dotted];
m3_5 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_0 -> m3_2  [color=red, key=1, label=T, style=dashed];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_3  [color=red, key=0, style=solid];
m3_2 -> m3_4  [color=red, key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_14 -> m3_1  [color=green, key=1, label="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>", style=dashed];
m3_14 -> m3_2  [color=red, key=1, label="Ninject.Planning.Directives.MethodInjectionDirectiveBase<T>", style=dashed];
m3_15 -> m3_11  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_0 -> m4_7  [color=green, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_1 -> m4_4  [color=green, key=2, style=dotted];
m4_1 -> m4_5  [color=green, key=2, style=dotted];
m4_1 -> m4_6  [color=green, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> n19  [color=green, key=2, style=dotted];
m4_7 -> m4_10  [color=green, key=2, style=dotted];
m4_7 -> m4_11  [color=green, key=2, style=dotted];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_12 -> m4_7  [color=green, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m5_33 -> m5_34  [color=red, key=0, style=solid];
m5_33 -> m5_51  [color=green, key=0, style=solid];
m5_18 -> m5_19  [color=green, key=0, style=solid];
m5_18 -> m5_20  [color=green, key=2, style=dotted];
m5_18 -> m5_53  [color=green, key=1, label="lambda expression", style=dashed];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_19  [color=green, key=2, style=dotted];
m5_17 -> m5_20  [color=green, key=2, style=dotted];
m5_17 -> m5_33  [color=green, key=1, label="lambda expression", style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> m5_16  [color=red, key=2, style=dotted];
m5_7 -> m5_10  [color=red, key=1, label=contextMock, style=dashed];
m5_7 -> m5_12  [color=red, key=1, label=contextMock, style=dashed];
m5_7 -> m5_13  [color=red, key=1, label=contextMock, style=dashed];
m5_7 -> m5_29  [color=green, key=2, style=dotted];
m5_7 -> m5_18  [color=green, key=1, label=instance, style=dashed];
m5_7 -> m5_26  [color=green, key=1, label=instance, style=dashed];
m5_7 -> m5_83  [color=green, key=1, label=instance, style=dashed];
m5_7 -> m5_27  [color=green, key=1, label=instance, style=dashed];
m5_7 -> m5_90  [color=green, key=1, label=instance, style=dashed];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_17  [color=red, key=2, style=dotted];
m5_8 -> m5_10  [color=red, key=1, label=planMock, style=dashed];
m5_8 -> m5_11  [color=red, key=1, label=planMock, style=dashed];
m5_8 -> m5_14  [color=green, key=1, label=method1, style=dashed];
m5_8 -> m5_30  [color=green, key=2, style=dotted];
m5_8 -> m5_15  [color=green, key=1, label=method1, style=dashed];
m5_8 -> m5_44  [color=green, key=1, label=method1, style=dashed];
m5_8 -> m5_23  [color=green, key=1, label=method1, style=dashed];
m5_8 -> m5_67  [color=green, key=1, label=method1, style=dashed];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_19  [color=red, key=2, style=dotted];
m5_10 -> m5_20  [color=red, key=2, style=dotted];
m5_10 -> m5_21  [color=red, key=2, style=dotted];
m5_10 -> m5_26  [color=red, key=1, label="lambda expression", style=dashed];
m5_10 -> m5_18  [color=green, key=1, label=contextMock, style=dashed];
m5_10 -> m5_16  [color=green, key=2, style=dotted];
m5_10 -> m5_17  [color=green, key=1, label=contextMock, style=dashed];
m5_10 -> m5_25  [color=green, key=1, label=contextMock, style=dashed];
m5_10 -> m5_73  [color=green, key=1, label=contextMock, style=dashed];
m5_10 -> m5_76  [color=green, key=1, label=contextMock, style=dashed];
m5_10 -> m5_79  [color=green, key=1, label=contextMock, style=dashed];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_12 -> m5_23  [key=2, style=dotted];
m5_12 -> m5_15  [color=green, key=1, label=methodInjectorMock1, style=dashed];
m5_12 -> m5_26  [color=darkseagreen4, key=1, label=methodInjectorMock1, style=dashed];
m5_12 -> m5_33  [key=2, style=dotted];
m5_13 -> m5_14  [color=green, key=0, style=solid];
m5_13 -> m5_24  [color=red, key=2, style=dotted];
m5_13 -> m5_33  [color=red, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_16  [color=green, key=1, label=methodInjectorMock2, style=dashed];
m5_13 -> m5_27  [color=green, key=1, label=methodInjectorMock2, style=dashed];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_18  [color=red, key=2, style=dotted];
m5_9 -> m5_11  [color=red, key=1, label=directives, style=dashed];
m5_9 -> m5_30  [color=green, key=2, style=dotted];
m5_9 -> m5_14  [color=green, key=1, label=method2, style=dashed];
m5_9 -> m5_16  [color=green, key=1, label=method2, style=dashed];
m5_9 -> m5_48  [color=green, key=1, label=method2, style=dashed];
m5_9 -> m5_24  [color=green, key=1, label=method2, style=dashed];
m5_9 -> m5_70  [color=green, key=1, label=method2, style=dashed];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_22  [color=red, key=2, style=dotted];
m5_11 -> m5_20  [color=red, key=2, style=dotted];
m5_11 -> m5_21  [color=red, key=2, style=dotted];
m5_11 -> m5_29  [color=red, key=1, label="lambda expression", style=dashed];
m5_11 -> m5_17  [color=green, key=2, style=dotted];
m5_11 -> m5_19  [color=green, key=1, label=planMock, style=dashed];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_14 -> m5_25  [key=2, style=dotted];
m5_14 -> m5_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_14 -> m5_34  [color=green, key=2, style=dotted];
m5_14 -> m5_19  [color=green, key=1, label=directives, style=dashed];
m5_15 -> m5_6  [color=blue, key=0, style=bold];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_15 -> m5_22  [color=green, key=2, style=dotted];
m5_15 -> m5_20  [color=green, key=2, style=dotted];
m5_15 -> m5_21  [color=green, key=2, style=dotted];
m5_15 -> m5_26  [color=green, key=1, label="lambda expression", style=dashed];
m5_29 -> m5_30  [color=red, key=0, style=solid];
m5_29 -> m5_48  [color=green, key=0, style=solid];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_22  [color=green, key=2, style=dotted];
m5_16 -> m5_20  [color=green, key=2, style=dotted];
m5_16 -> m5_21  [color=green, key=2, style=dotted];
m5_16 -> m5_29  [color=green, key=1, label="lambda expression", style=dashed];
m5_30 -> m5_31  [color=red, key=0, style=solid];
m5_30 -> m5_32  [color=red, key=2, style=dotted];
m5_24 -> m5_25  [color=green, key=0, style=solid];
m5_24 -> m5_69  [color=green, key=1, label="lambda expression", style=dashed];
m5_34 -> m5_95  [key=0, style=solid];
m5_34 -> m5_35  [color=red, key=0, style=solid];
m5_95 -> m5_34  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [color=green, key=0, style=solid];
m5_21 -> m5_24  [color=green, key=2, style=dotted];
m5_21 -> m5_60  [color=green, key=1, label="lambda expression", style=dashed];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_25  [color=green, key=2, style=dotted];
m5_23 -> m5_66  [color=green, key=1, label="lambda expression", style=dashed];
m5_22 -> m5_23  [color=green, key=0, style=solid];
m5_22 -> m5_25  [key=2, style=dotted];
m5_22 -> m5_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_19 -> m5_20  [color=green, key=0, style=solid];
m5_19 -> m5_22  [color=green, key=2, style=dotted];
m5_19 -> m5_56  [color=green, key=1, label="lambda expression", style=dashed];
m5_92 -> m5_93  [key=0, style=solid];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_26 -> m5_44  [color=green, key=0, style=solid];
m5_26 -> m5_25  [key=2, style=dotted];
m5_26 -> m5_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_37  [key=0, style=solid];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_25  [key=2, style=dotted];
m5_27 -> m5_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_28 -> m5_6  [color=blue, key=0, style=bold];
m5_31 -> m5_29  [color=blue, key=0, style=bold];
m5_35 -> m5_33  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_32  [key=2, style=dotted];
m5_38 -> m5_36  [color=blue, key=0, style=bold];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_32  [key=2, style=dotted];
m5_83 -> m5_85  [key=2, style=dotted];
m5_83 -> m5_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_32  [key=2, style=dotted];
m5_90 -> m5_85  [key=2, style=dotted];
m5_90 -> m5_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_44 -> m5_28  [color=green, key=0, style=solid];
m5_44 -> m5_46  [color=green, key=2, style=dotted];
m5_67 -> m5_68  [color=green, key=0, style=solid];
m5_67 -> m5_46  [color=green, key=2, style=dotted];
m5_53 -> m5_54  [color=green, key=0, style=solid];
m5_48 -> m5_31  [color=green, key=0, style=solid];
m5_48 -> m5_46  [color=green, key=2, style=dotted];
m5_70 -> m5_71  [color=green, key=0, style=solid];
m5_70 -> m5_46  [color=green, key=2, style=dotted];
m5_66 -> m5_67  [color=green, key=0, style=solid];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_73 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_42  [color=green, key=2, style=dotted];
m5_73 -> m5_75  [color=green, key=1, label="lambda expression", style=dashed];
m5_76 -> m5_77  [color=green, key=0, style=solid];
m5_76 -> m5_25  [color=green, key=2, style=dotted];
m5_76 -> m5_78  [color=green, key=1, label="lambda expression", style=dashed];
m5_79 -> m5_80  [color=green, key=0, style=solid];
m5_79 -> m5_81  [color=green, key=2, style=dotted];
m5_69 -> m5_70  [color=green, key=0, style=solid];
m5_71 -> m5_69  [color=blue, key=0, style=bold];
m5_60 -> m5_61  [color=green, key=0, style=solid];
m5_72 -> m5_73  [color=green, key=0, style=solid];
m5_74 -> m5_72  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [color=green, key=0, style=solid];
m5_77 -> m5_75  [color=blue, key=0, style=bold];
m5_78 -> m5_79  [color=green, key=0, style=solid];
m5_80 -> m5_78  [color=blue, key=0, style=bold];
m5_56 -> m5_57  [color=green, key=0, style=solid];
m5_51 -> m5_35  [color=green, key=0, style=solid];
m5_54 -> m5_55  [color=green, key=0, style=solid];
m5_55 -> m5_53  [color=blue, key=0, style=bold];
m5_57 -> m5_58  [color=green, key=0, style=solid];
m5_57 -> m5_32  [color=green, key=2, style=dotted];
m5_58 -> m5_56  [color=blue, key=0, style=bold];
m5_61 -> m5_62  [color=green, key=0, style=solid];
m5_62 -> m5_60  [color=blue, key=0, style=bold];
m5_103 -> m5_104  [color=green, key=0, style=solid];
m5_107 -> m5_108  [color=green, key=0, style=solid];
m5_104 -> m5_105  [color=green, key=0, style=solid];
m5_104 -> m5_106  [color=green, key=2, style=dotted];
m5_105 -> m5_103  [color=blue, key=0, style=bold];
m5_108 -> m5_109  [color=green, key=0, style=solid];
m5_109 -> m5_107  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_84 -> m5_82  [color=blue, key=0, style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_91 -> m5_89  [color=blue, key=0, style=bold];
m5_88 -> m5_86  [color=blue, key=0, style=bold];
m5_87 -> m5_88  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_94 -> m5_92  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [color=green, key=0, style=solid];
m5_25 -> m5_42  [color=green, key=2, style=dotted];
m5_25 -> m5_72  [color=green, key=1, label="lambda expression", style=dashed];
m5_20 -> m5_21  [color=green, key=0, style=solid];
m5_20 -> m5_23  [color=green, key=2, style=dotted];
m5_96 -> m5_97  [color=green, key=0, style=solid];
m5_97 -> m5_98  [color=green, key=0, style=solid];
m5_97 -> n18  [color=green, key=2, style=dotted];
m5_97 -> m5_101  [color=green, key=2, style=dotted];
m5_97 -> m5_102  [color=green, key=2, style=dotted];
m5_97 -> m5_103  [color=green, key=1, label="lambda expression", style=dashed];
m5_98 -> m5_99  [color=green, key=0, style=solid];
m5_98 -> m5_101  [color=green, key=2, style=dotted];
m5_98 -> m5_102  [color=green, key=2, style=dotted];
m5_98 -> m5_107  [color=green, key=1, label="lambda expression", style=dashed];
m5_99 -> m5_96  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_0  [color=blue, key=0, style=bold];
m5_39 -> m5_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", style=dashed];
m5_39 -> m5_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", style=dashed];
m5_40 -> m5_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_40 -> m5_15  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_40 -> m5_23  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_40 -> m5_16  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_40 -> m5_24  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_40 -> m5_20  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m5_116 -> m5_44  [color=green, key=1, label=method1, style=dashed];
m5_116 -> m5_67  [color=green, key=1, label=method1, style=dashed];
m5_117 -> m5_48  [color=green, key=1, label=method2, style=dashed];
m5_117 -> m5_70  [color=green, key=1, label=method2, style=dashed];
m5_118 -> m5_73  [color=green, key=1, label=contextMock, style=dashed];
m5_118 -> m5_76  [color=green, key=1, label=contextMock, style=dashed];
m5_118 -> m5_79  [color=green, key=1, label=contextMock, style=dashed];
m5_120 -> m5_97  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", style=dashed];
m5_120 -> m5_98  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", style=dashed];
m5_119 -> m5_83  [color=darkseagreen4, key=1, label=instance, style=dashed];
m5_119 -> m5_90  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_4 -> m6_8  [color=red, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_4 -> m6_14  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> n17  [key=2, style=dotted];
m6_5 -> m6_15  [color=red, key=1, label=instanceParameter, style=dashed];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_18  [key=2, style=dotted];
m6_6 -> m6_14  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_19  [color=red, key=2, style=dotted];
m6_8 -> m6_11  [color=red, key=1, label=parameters, style=dashed];
m6_8 -> m6_12  [color=red, key=1, label=parameters, style=dashed];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_14 -> m6_22  [key=2, style=dotted];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_23  [color=red, key=2, style=dotted];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> n17  [color=red, key=2, style=dotted];
m6_7 -> m6_12  [color=red, key=1, label=argumentParameter, style=dashed];
m6_7 -> m6_15  [color=red, key=1, label=argumentParameter, style=dashed];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_12 -> m6_20  [color=red, key=2, style=dotted];
m6_12 -> m6_21  [color=red, key=2, style=dotted];
m6_12 -> m6_18  [color=red, key=2, style=dotted];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_12  [color=red, key=1, label=arguments, style=dashed];
m6_9 -> m6_14  [color=red, key=1, label=arguments, style=dashed];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_11 -> m6_14  [color=red, key=0, style=solid];
m6_11 -> m6_11  [color=red, key=3, label="Local variable int idx", style=bold];
m6_10 -> m6_11  [color=red, key=0, style=solid];
m6_10 -> m6_12  [color=red, key=1, label=idx, style=dashed];
m6_10 -> m6_13  [color=red, key=1, label=idx, style=dashed];
m6_13 -> m6_11  [color=red, key=0, style=solid];
m6_13 -> m6_13  [color=red, key=1, label=idx, style=dashed];
m6_16 -> m6_4  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_2  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_2 -> m8_3  [color=green, key=0, style=solid];
m8_2 -> m8_4  [color=green, key=2, style=dotted];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m8_5 -> m8_1  [color=green, key=1, label="Ninject.Planning.Directives.PropertyInjectionDirective", style=dashed];
m8_5 -> m8_2  [color=green, key=1, label="Ninject.Planning.Directives.PropertyInjectionDirective", style=dashed];
}
