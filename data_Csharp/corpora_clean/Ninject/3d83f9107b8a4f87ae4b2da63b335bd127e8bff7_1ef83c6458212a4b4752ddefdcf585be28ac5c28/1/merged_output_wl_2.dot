digraph  {
n7 [label="Ninject.NinjectSettings", span=""];
n0 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", label="Entry Ninject.NinjectSettings.Get<T>(string, T)", span="133-133"];
n1 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", label="return _values.ContainsKey(key) ? (T)_values[key] : defaultValue;", span="135-135"];
n2 [cluster="Ninject.NinjectSettings.Get<T>(string, T)", label="Exit Ninject.NinjectSettings.Get<T>(string, T)", span="133-133"];
n3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n4 [cluster="Ninject.NinjectSettings.Set(string, object)", label="Entry Ninject.NinjectSettings.Set(string, object)", span="143-143"];
n5 [cluster="Ninject.NinjectSettings.Set(string, object)", label="_values[key] = value", span="145-145"];
n6 [cluster="Ninject.NinjectSettings.Set(string, object)", label="Exit Ninject.NinjectSettings.Set(string, object)", span="143-143"];
m0_49 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="277-277"];
m0_79 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", span="121-121"];
m0_86 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", color=green, community=0, file="ActivationStrategyTests.cs", label="0: kernel.Get<IWarrior>()", span="131-131"];
m0_80 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel()", span="123-123"];
m0_85 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="var testActivationStrategy = kernel.Components.GetAll<IActivationStrategy>().OfType<TestActivationStrategy>().Single()", span="129-129"];
m0_87 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="testActivationStrategy.ActivationCount.ShouldBe(2)", span="133-133"];
m0_81 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="kernel.Components.Add<IActivationStrategy, TestActivationStrategy>()", span="125-125"];
m0_82 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="126-126"];
m0_83 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="kernel.Bind<Sword>().ToSelf()", span="127-127"];
m0_84 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="kernel.Bind<IWeapon>().ToMethod(ctx => ctx.Kernel.Get<Sword>())", span="128-128"];
m0_88 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", file="ActivationStrategyTests.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.ObjectsActivatedOnlyOnce()", span="121-121"];
m0_22 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", span="40-40"];
m0_25 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="var barracks = kernel.Get<Barracks>()", span="52-52"];
m0_23 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel()", span="42-42"];
m0_24 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .OnActivation((ctx, instance) =>\r\n                    {\r\n                        instance.Warrior = new FootSoldier();\r\n                        instance.Weapon = new Shuriken();\r\n                    })", span="44-50"];
m0_26 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldNotBeNull()", span="53-53"];
m0_27 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="54-54"];
m0_28 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldNotBeNull()", span="55-55"];
m0_29 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="56-56"];
m0_30 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", file="ActivationStrategyTests.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreationWithContext()", span="40-40"];
m0_15 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="23-23"];
m0_95 [cluster="Unk.ShouldBe", file="ActivationStrategyTests.cs", label="Entry Unk.ShouldBe", span=""];
m0_10 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m0_48 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="165-165"];
m0_0 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", span="19-19"];
m0_1 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel()", span="21-21"];
m0_2 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="ActivationStrategyTests.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .OnActivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = new FootSoldier();\r\n                                        instance.Weapon = new Shuriken();\r\n                                    })", span="23-29"];
m0_3 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsActivatedOnCreation()", file="ActivationStrategyTests.cs", label="var barracks = kernel.Get<Barracks>()", span="31-31"];
m0_89 [cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="ActivationStrategyTests.cs", label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="31-31"];
m0_91 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="72-72"];
m0_14 [cluster="Unk.Invoke", file="ActivationStrategyTests.cs", label="Entry Unk.Invoke", span=""];
m0_94 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ActivationStrategyTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_90 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m0_13 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m0_31 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="271-271"];
m0_4 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", span="18-18"];
m0_5 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="context.Plan.GetAll<MethodInjectionDirective>()", span="20-20"];
m0_6 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="var injector = InjectorFactory.GetMethodInjector(directive.Member)", span="22-22"];
m0_7 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="var arguments = directive.Targets.Select(target => target.ResolveWithin(context))", span="23-23"];
m0_8 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="injector.Invoke(context.Instance, arguments.ToArray())", span="24-24"];
m0_99 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", span="138-138"];
m0_105 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", color=green, community=0, file="ActivationStrategyTests.cs", label="0: kernel.Get<IWarrior>()", span="147-147"];
m0_100 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel(new NinjectSettings { AllowNullInjection = true })", span="140-140"];
m0_104 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="var testActivationStrategy = kernel.Components.GetAll<IActivationStrategy>().OfType<TestActivationStrategy>().Single()", span="145-145"];
m0_106 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="testActivationStrategy.ActivationCount.ShouldBe(1)", span="149-149"];
m0_101 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="kernel.Components.Add<IActivationStrategy, TestActivationStrategy>()", span="142-142"];
m0_102 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="143-143"];
m0_103 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="kernel.Bind<IWeapon>().ToConstant(null)", span="144-144"];
m0_107 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", file="ActivationStrategyTests.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.NullIsNotActivated()", span="138-138"];
m0_92 [cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="ActivationStrategyTests.cs", label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="59-59"];
m0_9 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Exit Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext)", span="18-18"];
m0_21 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m0_108 [cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="ActivationStrategyTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="43-43"];
m0_11 [cluster="Ninject.Injection.IInjectorFactory.GetMethodInjector(System.Reflection.MethodInfo)", file="ActivationStrategyTests.cs", label="Entry Ninject.Injection.IInjectorFactory.GetMethodInjector(System.Reflection.MethodInfo)", span="11-11"];
m0_12 [cluster="Unk.Select", file="ActivationStrategyTests.cs", label="Entry Unk.Select", span=""];
m0_93 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ActivationStrategyTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_75 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="104-108"];
m0_16 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="25-29"];
m0_17 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = new FootSoldier()", span="27-27"];
m0_97 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="ctx.Kernel.Get<Sword>()", span="128-128"];
m0_96 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="128-128"];
m0_98 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="128-128"];
m0_32 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="46-50"];
m0_51 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="69-73"];
m0_55 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="74-78"];
m0_71 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Entry lambda expression", span="99-103"];
m0_19 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Ninject.Activation.Strategies.MethodInjectionStrategy", span=""];
m0_18 [cluster="Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs", label="Entry Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", span="12-12"];
m0_35 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="46-50"];
m0_33 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = new FootSoldier()", span="48-48"];
m0_34 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Weapon = new Shuriken()", span="49-49"];
m0_54 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="69-73"];
m0_52 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = new FootSoldier()", span="71-71"];
m0_53 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Weapon = new Shuriken()", span="72-72"];
m0_58 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="74-78"];
m0_56 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = null", span="76-76"];
m0_57 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Weapon = null", span="77-77"];
m0_74 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="99-103"];
m0_72 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = new FootSoldier()", span="101-101"];
m0_73 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Weapon = new Shuriken()", span="102-102"];
m0_76 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Warrior = null", span="106-106"];
m0_77 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="instance.Weapon = null", span="107-107"];
m0_78 [cluster="lambda expression", file="ActivationStrategyTests.cs", label="Exit lambda expression", span="104-108"];
m0_20 [cluster="Ninject.Tests.Fakes.FootSoldier.FootSoldier()", file="ActivationStrategyTests.cs", label="Ninject.Activation.IContext", span=""];
m0_36 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", span="61-61"];
m0_40 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks = kernel.Get<Barracks>()", span="80-80"];
m0_38 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel()", span="64-64"];
m0_39 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .InSingletonScope()\r\n                    .OnActivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = new FootSoldier();\r\n                                        instance.Weapon = new Shuriken();\r\n                                    })\r\n                    .OnDeactivation(instance =>\r\n                                    {\r\n                                        instance.Warrior = null;\r\n                                        instance.Weapon = null;\r\n                                    })", span="66-78"];
m0_41 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldNotBeNull()", span="81-81"];
m0_42 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="82-82"];
m0_43 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldNotBeNull()", span="83-83"];
m0_44 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="84-84"];
m0_45 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldBeNull()", span="86-86"];
m0_46 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldBeNull()", span="87-87"];
m0_37 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="Barracks barracks", span="63-63"];
m0_47 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", file="ActivationStrategyTests.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScope()", span="61-61"];
m0_110 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ActivationStrategyTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="78-78"];
m0_109 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="ActivationStrategyTests.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="19-19"];
m0_59 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="Entry Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", span="91-91"];
m0_63 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks = kernel.Get<Barracks>()", span="110-110"];
m0_61 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="var kernel = new StandardKernel()", span="94-94"];
m0_62 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="kernel.Bind<Barracks>()\r\n                    .ToSelf()\r\n                    .InSingletonScope()\r\n                    .OnActivation((ctx, instance) =>\r\n                    {\r\n                        instance.Warrior = new FootSoldier();\r\n                        instance.Weapon = new Shuriken();\r\n                    })\r\n                    .OnDeactivation(instance =>\r\n                    {\r\n                        instance.Warrior = null;\r\n                        instance.Weapon = null;\r\n                    })", span="96-108"];
m0_64 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldNotBeNull()", span="111-111"];
m0_65 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldBeInstanceOf<FootSoldier>()", span="112-112"];
m0_66 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldNotBeNull()", span="113-113"];
m0_67 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldBeInstanceOf<Shuriken>()", span="114-114"];
m0_68 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Warrior.ShouldBeNull()", span="116-116"];
m0_69 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="barracks.Weapon.ShouldBeNull()", span="117-117"];
m0_60 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="Barracks barracks", span="93-93"];
m0_70 [cluster="Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", file="ActivationStrategyTests.cs", label="Exit Ninject.Tests.Integration.ActivationStrategyTests.InstanceIsDeactivatedWhenItLeavesScopeWithContext()", span="91-91"];
m0_50 [cluster="Unk.ShouldBeNull", file="ActivationStrategyTests.cs", label="Entry Unk.ShouldBeNull", span=""];
m4_84 [cluster="Unk.ToMaybe", file="CircularDependenciesTests.cs", label="Entry Unk.ToMaybe", span=""];
m4_14 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CircularDependenciesTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m4_16 [cluster="CommandLine.Core.Token.Value(string)", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m4_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20"];
m4_38 [cluster="Unk.Activate", file="CircularDependenciesTests.cs", label="Entry Unk.Activate", span=""];
m4_67 [cluster="Unk.BeTrue", file="CircularDependenciesTests.cs", label="Entry Unk.BeTrue", span=""];
m4_170 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="CircularDependenciesTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m4_17 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97"];
m4_156 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="154-154"];
m4_160 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="yield return Token.Name(text);", span="160-160"];
m4_161 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="yield break;", span="161-161"];
m4_164 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="yield break;", span="166-166"];
m4_166 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="yield return Token.Name(parts[0]);", span="169-169"];
m4_167 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="yield return Token.Value(parts[1], true);", span="170-170"];
m4_157 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="var text = value.Substring(2)", span="156-156"];
m4_163 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="onError(new BadFormatTokenError(value))", span="165-165"];
m4_158 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="var equalIndex = text.IndexOf('=')", span="157-157"];
m4_165 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="var parts = text.Split('=')", span="168-168"];
m4_159 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="equalIndex <= 0", span="158-158"];
m4_162 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="equalIndex == 1", span="163-163"];
m4_168 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="150-150"];
m4_66 [cluster="Unk.Should", file="CircularDependenciesTests.cs", label="Entry Unk.Should", span=""];
m4_93 [cluster="Unk.Split", file="CircularDependenciesTests.cs", label="Entry Unk.Split", span=""];
m4_149 [cluster="char.IsDigit(char)", file="CircularDependenciesTests.cs", label="Entry char.IsDigit(char)", span="0-0"];
m4_15 [cluster="string.StartsWith(string, System.StringComparison)", file="CircularDependenciesTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m4_152 [cluster="string.String(char, int)", file="CircularDependenciesTests.cs", label="Entry string.String(char, int)", span="0-0"];
m4_26 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="49-49"];
m4_19 [cluster="Unk.Returns", file="CircularDependenciesTests.cs", label="Entry Unk.Returns", span=""];
m4_113 [cluster="CSharpx.Maybe.Nothing<T>()", file="CircularDependenciesTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m4_104 [cluster="Unk.Except", file="CircularDependenciesTests.cs", label="Entry Unk.Except", span=""];
m4_4 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="17-17"];
m4_10 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", color=green, community=0, file="CircularDependenciesTests.cs", label="2: var normalized = normalize(tokens)", span="37-37"];
m4_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="28-35"];
m4_11 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="var unkTokens = (from t in normalized where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="39-39"];
m4_5 [cluster="lambda expression", file="CircularDependenciesTests.cs", label=tokens, span="17-17"];
m4_6 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="17-17"];
m4_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="var errors = new List<Error>()", span="25-25"];
m4_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="Action<Error> onError = errors.Add", span="26-26"];
m4_12 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="return Result.Succeed(normalized.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="41-41"];
m4_13 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20"];
m4_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="CircularDependenciesTests.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="50-50"];
m4_150 [cluster="CommandLine.Core.Token.Name(string)", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m4_18 [cluster="Unk.SetupGet", file="CircularDependenciesTests.cs", label="Entry Unk.SetupGet", span=""];
m4_129 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="109-109"];
m4_132 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield return Token.Value(value);", span="115-115"];
m4_133 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield break;", span="116-116"];
m4_135 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield return Token.Name(text);", span="121-121"];
m4_136 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield break;", span="122-122"];
m4_138 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield return Token.Name(first);", span="126-126"];
m4_144 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield return Token.Name(n);", span="136-136"];
m4_146 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="145-145"];
m4_130 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var text = value.Substring(1)", span="111-111"];
m4_134 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="value.Length == 2", span="119-119"];
m4_142 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="!seen.Contains(c) && nameLookup(n)", span="133-133"];
m4_131 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="char.IsDigit(text[0])", span="113-113"];
m4_137 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var first = text.Substring(0, 1)", span="125-125"];
m4_140 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="text.Substring(1)", span="130-130"];
m4_145 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="seen.Count() < text.Length", span="143-143"];
m4_139 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var seen = new List<char> { first[0] }", span="128-128"];
m4_143 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="seen.Add(c)", span="135-135"];
m4_141 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var n = new string(c, 1)", span="132-132"];
m4_147 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="105-105"];
m4_22 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="this.injector1WasCalled = true", span="48-48"];
m4_40 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="67-67"];
m4_110 [cluster="T.ToMaybe<T>()", file="CircularDependenciesTests.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m4_34 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="CircularDependenciesTests.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="51-51"];
m4_35 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="CircularDependenciesTests.cs", label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="52-52"];
m4_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="CircularDependenciesTests.cs", label="return tokenizer(arguments);", span="54-54"];
m4_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m4_20 [cluster="Unk.Setup", file="CircularDependenciesTests.cs", label="Entry Unk.Setup", span=""];
m4_31 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.GetAll<MethodInjectionDirective>()", span="59-59"];
m4_32 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="59-59"];
m4_153 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m4_24 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="49-49"];
m4_50 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="50-50"];
m4_61 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="CircularDependenciesTests.cs", label="var flattened = exploded.SelectMany(x => x)", span="73-73"];
m4_62 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="CircularDependenciesTests.cs", label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="75-75"];
m4_63 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m4_64 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="CircularDependenciesTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m4_65 [cluster="Unk.SkipWhile", file="CircularDependenciesTests.cs", label="Entry Unk.SkipWhile", span=""];
m4_171 [cluster="System.Action<T>.Invoke(T)", file="CircularDependenciesTests.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m4_122 [cluster="Unk.IsJust", file="CircularDependenciesTests.cs", label="Entry Unk.IsJust", span=""];
m4_43 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="CircularDependenciesTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m4_44 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="48-48"];
m4_45 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="arg.EqualsOrdinal(''--'')", span="48-48"];
m4_23 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="48-48"];
m4_57 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="81-81"];
m4_58 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="2: x.ResolveWithin(this.contextMock.Object)", span="81-81"];
m4_59 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="81-81"];
m4_60 [cluster="Unk.ResolveWithin", file="CircularDependenciesTests.cs", label="Entry Unk.ResolveWithin", span=""];
m4_151 [cluster="string.Substring(int, int)", file="CircularDependenciesTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_112 [cluster="CSharpx.Maybe.Just<T>(T)", file="CircularDependenciesTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m4_47 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="79-79"];
m4_71 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="CircularDependenciesTests.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m4_148 [cluster="string.Substring(int)", file="CircularDependenciesTests.cs", label="Entry string.Substring(int)", span="0-0"];
m4_173 [cluster="CommandLine.Core.Token.Value(string, bool)", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m4_68 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="63-66"];
m4_97 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m4_98 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJust()", span="81-92"];
m4_99 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJust()", span="94-98"];
m4_100 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="var normalized = tokens.Except(toExclude)", span="100-100"];
m4_101 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="return normalized;", span="102-102"];
m4_102 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="CircularDependenciesTests.cs", label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m4_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m4_111 [cluster="CommandLine.Core.Token.IsValue()", file="CircularDependenciesTests.cs", label="Entry CommandLine.Core.Token.IsValue()", span="133-133"];
m4_21 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="48-48"];
m4_28 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.Plan", span="57-57"];
m4_27 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="57-57"];
m4_29 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="57-57"];
m4_48 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="CircularDependenciesTests.cs", label="1: this.directives.Map(d => d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object))))", span="81-81"];
m4_51 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="51-51"];
m4_55 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="2: m.Verify(x => x.ResolveWithin(this.contextMock.Object))", span="81-81"];
m4_54 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="52-52"];
m4_46 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m4_49 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m4_52 [cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs", label="1: d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object)))", span="81-81"];
m4_53 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="51-51"];
m4_56 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="52-52"];
m4_69 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="64-66"];
m4_77 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="66-66"];
m4_81 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="69-71"];
m4_80 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="68-71"];
m4_94 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="73-73"];
m4_74 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Tuple.Create(i + 1, sep)", span="65-65"];
m4_70 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="63-66"];
m4_73 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="65-65"];
m4_75 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="65-65"];
m4_78 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.Item1 < 0", span="66-66"];
m4_79 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="66-66"];
m4_88 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span=""];
m4_91 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="70-70"];
m4_82 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="68-71"];
m4_87 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span=""];
m4_90 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="70-70"];
m4_89 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="69-69"];
m4_92 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="70-70"];
m4_95 [cluster="lambda expression", file="CircularDependenciesTests.cs", label=x, span="73-73"];
m4_96 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="73-73"];
m4_106 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe()", span="86-86"];
m4_107 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();", span="87-90"];
m4_115 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="p.IsName() && !nameLookup(p.Text)", span="88-88"];
m4_105 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="84-91"];
m4_119 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="91-91"];
m4_124 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>()", span="96-96"];
m4_123 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="96-96"];
m4_126 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="97-97"];
m4_108 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="84-91"];
m4_114 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="88-88"];
m4_116 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="88-88"];
m4_120 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="i.IsJust()", span="91-91"];
m4_121 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="91-91"];
m4_125 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="96-96"];
m4_127 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="t.IsJust()", span="97-97"];
m4_128 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="97-97"];
m4_25 [cluster="Unk.Concat", file="CircularDependenciesTests.cs", label="Entry Unk.Concat", span=""];
m4_30 [cluster="Unk.Contains", file="CircularDependenciesTests.cs", label="Entry Unk.Contains", span=""];
m4_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m4_42 [cluster="Unk.Select", file="CircularDependenciesTests.cs", label="Entry Unk.Select", span=""];
m4_83 [cluster="Unk.FirstOrDefault", file="CircularDependenciesTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_155 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_172 [cluster="string.Split(params char[])", file="CircularDependenciesTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m4_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m4_0 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m4_1 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", color=green, community=0, file="CircularDependenciesTests.cs", label="1: this.strategy = new MethodInjectionStrategy()", span="24-24"];
m4_2 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m4_117 [cluster="Unk.IsName", file="CircularDependenciesTests.cs", label="Entry Unk.IsName", span=""];
m4_154 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0"];
m4_76 [cluster="Unk.Create", file="CircularDependenciesTests.cs", label="Entry Unk.Create", span=""];
m4_118 [cluster="Unk.nameLookup", file="CircularDependenciesTests.cs", label="Entry Unk.nameLookup", span=""];
m4_169 [cluster="string.IndexOf(char)", file="CircularDependenciesTests.cs", label="Entry string.IndexOf(char)", span="0-0"];
m4_103 [cluster="Unk.FromJust", file="CircularDependenciesTests.cs", label="Entry Unk.FromJust", span=""];
m4_85 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CircularDependenciesTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m4_72 [cluster="Unk.Return", file="CircularDependenciesTests.cs", label="Entry Unk.Return", span=""];
m4_174 [file="CircularDependenciesTests.cs", label=unkTokens, span=""];
m4_175 [file="CircularDependenciesTests.cs", label=values, span=""];
m4_176 [file="CircularDependenciesTests.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m4_177 [file="CircularDependenciesTests.cs", label=int, span=""];
m4_178 [file="CircularDependenciesTests.cs", label=replaces, span=""];
m4_179 [file="CircularDependenciesTests.cs", label=int, span=""];
m4_180 [file="CircularDependenciesTests.cs", label="CommandLine.Core.Token", span=""];
m4_181 [file="CircularDependenciesTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m4_182 [file="CircularDependenciesTests.cs", label="System.Func<string, bool>", span=""];
m4_183 [file="CircularDependenciesTests.cs", label=indexes, span=""];
m5_11 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="100-100"];
m5_12 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: var attackAbility = _kernel.Get<IAttackAbility>()", span="102-102"];
m5_13 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="2: Assert.IsType<UnknownAttack>( attackAbility )", span="103-103"];
m5_14 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="100-100"];
m5_24 [cluster="Unk.NotNull", file="ConditionalAttributeBindingTests.cs", label="Entry Unk.NotNull", span=""];
m5_8 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="26-26"];
m5_0 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="90-90"];
m5_1 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel = new StandardKernel()", span="92-92"];
m5_2 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel.Bind<IVarialbeWeapon>().To<Hammer>()", span="93-93"];
m5_3 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel.Bind<IAttackAbility>().To<UnknownAttack>()", span="94-94"];
m5_4 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel.Bind<IAttackAbility>().To<StrongAttack>().WhenTargetHas<StrongAttribute>()", span="95-95"];
m5_5 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel.Bind<IAttackAbility>().To<WeakAttack>().WhenTargetHas<WeakAttribute>()", span="96-96"];
m5_6 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="90-90"];
m5_16 [cluster="Unk.>", file="ConditionalAttributeBindingTests.cs", label="Entry Unk.>", span=""];
m5_32 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m5_7 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m5_10 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="124-124"];
m5_15 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m5_31 [cluster="System.IDisposable.Dispose()", file="ConditionalAttributeBindingTests.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m5_25 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="116-116"];
m5_26 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="disposing && !IsDisposed", span="118-118"];
m5_29 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="base.Dispose( disposing )", span="123-123"];
m5_27 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="2: _kernel.Dispose()", span="120-120"];
m5_28 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: _kernel = null", span="121-121"];
m5_30 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="116-116"];
m5_17 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="107-107"];
m5_18 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: var hammer = _kernel.Get<IVarialbeWeapon>()", span="109-109"];
m5_19 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="2: Assert.NotNull( hammer )", span="110-110"];
m5_20 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="2: Assert.IsType<StrongAttack>( hammer.StrongAttack )", span="111-111"];
m5_21 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="0: Assert.IsType<WeakAttack>( hammer.WeakAttack )", span="112-112"];
m5_22 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", color=red, community=0, file="ConditionalAttributeBindingTests.cs", label="2: Assert.IsType<UnknownAttack>( hammer.WtfAttack )", span="113-113"];
m5_23 [cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="107-107"];
m5_33 [file="ConditionalAttributeBindingTests.cs", label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", span=""];
m6_27 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="40-40"];
m6_28 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="42-42"];
m6_29 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="43-43"];
m6_30 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="44-44"];
m6_31 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="45-45"];
m6_32 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Assert.Throws<ActivationException>(() => kernel.Get<Samurai>())", span="46-46"];
m6_33 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="40-40"];
m6_41 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="57-57"];
m6_42 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="59-59"];
m6_43 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: Assert.IsType<Sword>(weapon)", span="60-60"];
m6_44 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>()", span="61-61"];
m6_45 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="62-62"];
m6_46 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<ShortSword>(weapon)", span="63-63"];
m6_47 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="57-57"];
m6_12 [cluster="Unk.>", file="ConditionalBindingTests.cs", label="Entry Unk.>", span=""];
m6_65 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="80-80"];
m6_66 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="82-82"];
m6_67 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="84-84"];
m6_68 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: Assert.IsType<Sword>(weapon)", span="85-85"];
m6_69 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>()", span="87-87"];
m6_70 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="88-88"];
m6_71 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<Sword>(weapon)", span="89-89"];
m6_72 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="80-80"];
m6_20 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="30-30"];
m6_21 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="32-32"];
m6_22 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="33-33"];
m6_23 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="34-34"];
m6_24 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="35-35"];
m6_25 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<Sword>(warrior.Weapon)", span="36-36"];
m6_26 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="30-30"];
m6_48 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="67-67"];
m6_49 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="69-69"];
m6_50 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="71-71"];
m6_51 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: Assert.IsType<Sword>(weapon)", span="72-72"];
m6_52 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>().When(_ => true)", span="74-74"];
m6_53 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="75-75"];
m6_54 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<ShortSword>(weapon)", span="76-76"];
m6_55 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="67-67"];
m6_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m6_58 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="91-91"];
m6_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m6_13 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="20-20"];
m6_14 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22"];
m6_15 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="23-23"];
m6_16 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="24-24"];
m6_17 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="25-25"];
m6_18 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<Sword>(warrior.Weapon)", span="26-26"];
m6_19 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="20-20"];
m6_10 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m6_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m6_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_73 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="84-84"];
m6_34 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="46-46"];
m6_35 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="kernel.Get<Samurai>()", span="46-46"];
m6_36 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="46-46"];
m6_62 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="74-74"];
m6_59 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="71-71"];
m6_60 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="71-71"];
m6_61 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="71-71"];
m6_63 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="74-74"];
m6_64 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="74-74"];
m6_74 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="84-84"];
m6_75 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="84-84"];
m6_37 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="50-50"];
m6_38 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="var weapon = kernel.Get<Sword>()", span="52-52"];
m6_39 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<Sword>(weapon)", span="53-53"];
m6_40 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="50-50"];
m6_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="97-97"];
m6_56 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="397-397"];
m6_0 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="10-10"];
m6_1 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="12-12"];
m6_2 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="13-13"];
m6_3 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="14-14"];
m6_4 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="15-15"];
m6_5 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=red, community=0, file="ConditionalBindingTests.cs", label="2: Assert.IsType<Shuriken>(warrior.Weapon)", span="16-16"];
m6_6 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="10-10"];
m6_76 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests", span=""];
m7_0 [cluster="Ninject.Injection.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs", label="Entry Ninject.Injection.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", span="32-32"];
m7_1 [cluster="Ninject.Injection.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", file="ConditionalBindingWhenParentTests.cs", label="Exit Ninject.Injection.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", span="32-32"];
m7_2 [cluster="Ninject.Injection.Linq.MethodInjector.Invoke(object, params object[])", file="ConditionalBindingWhenParentTests.cs", label="Entry Ninject.Injection.Linq.MethodInjector.Invoke(object, params object[])", span="40-40"];
m7_3 [cluster="Ninject.Injection.Linq.MethodInjector.Invoke(object, params object[])", file="ConditionalBindingWhenParentTests.cs", label="return Callback.Invoke(target, values);", span="42-42"];
m7_4 [cluster="Ninject.Injection.Linq.MethodInjector.Invoke(object, params object[])", file="ConditionalBindingWhenParentTests.cs", label="Exit Ninject.Injection.Linq.MethodInjector.Invoke(object, params object[])", span="40-40"];
m7_5 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ConditionalBindingWhenParentTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m7_6 [file="ConditionalBindingWhenParentTests.cs", label="Ninject.Injection.Linq.MethodInjector", span=""];
m8_0 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="30-30"];
m8_1 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=red, community=0, file="ConstructorSelectionTests.cs", label="0: Ensure.ArgumentNotNull(context, ''context'')", span="32-32"];
m8_2 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=red, community=0, file="ConstructorSelectionTests.cs", label="0: Ensure.ArgumentNotNull(reference, ''reference'')", span="33-33"];
m8_3 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="context.Plan.GetAll<MethodInjectionDirective>()", span="35-35"];
m8_4 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="var arguments = directive.Targets.Select(target => target.ResolveWithin(context))", span="37-37"];
m8_5 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="directive.Injector(reference.Instance, arguments.ToArray())", span="38-38"];
m8_6 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="Exit Ninject.Activation.Strategies.MethodInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="30-30"];
m8_15 [cluster="Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", span="54-54"];
m8_8 [cluster="Ninject.Planning.IPlan.GetAll<TDirective>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Planning.IPlan.GetAll<TDirective>()", span="52-52"];
m8_11 [cluster="Unk.Injector", file="ConstructorSelectionTests.cs", label="Entry Unk.Injector", span=""];
m8_12 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="37-37"];
m8_13 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="target.ResolveWithin(context)", span="37-37"];
m8_14 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="37-37"];
m8_10 [cluster="Unk.ToArray", file="ConstructorSelectionTests.cs", label="Entry Unk.ToArray", span=""];
m8_7 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m8_9 [cluster="Unk.Select", file="ConstructorSelectionTests.cs", label="Entry Unk.Select", span=""];
m8_16 [file="ConstructorSelectionTests.cs", label="Ninject.Activation.IContext", span=""];
m10_16 [cluster="Unk.>", file="ExternalInjectionTests.cs", label="Entry Unk.>", span=""];
m10_4 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
m10_5 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22"];
m10_6 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="var warrior = new ExternalWarrior()", span="24-24"];
m10_7 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="kernel.Inject(warrior)", span="25-25"];
m10_8 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="warrior.Weapon.ShouldNotBeNull()", span="27-27"];
m10_9 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="28-28"];
m10_10 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
m10_14 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="264-264"];
m10_11 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ExternalInjectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m10_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ExternalInjectionTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m10_0 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
m10_1 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", color=red, community=0, file="ExternalInjectionTests.cs", label="0: kernel = new StandardKernel()", span="13-13"];
m10_2 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
m10_15 [cluster="Unk.ShouldNotBeNull", file="ExternalInjectionTests.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m10_13 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="43-43"];
m10_17 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
m10_18 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="var instance = new NotifiesWhenDisposed()", span="34-34"];
m10_19 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="kernel.Inject(instance)", span="36-36"];
m10_21 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="instance.IsDisposed.ShouldBeFalse()", span="39-39"];
m10_20 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="kernel.Dispose()", span="37-37"];
m10_22 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
m10_12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ExternalInjectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m10_23 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="ExternalInjectionTests.cs", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
m10_24 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ExternalInjectionTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29"];
m10_25 [cluster="Unk.ShouldBeFalse", file="ExternalInjectionTests.cs", label="Entry Unk.ShouldBeFalse", span=""];
m10_26 [file="ExternalInjectionTests.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span=""];
m10_27 [file="ExternalInjectionTests.cs", label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span=""];
m11_11 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", span="23-23"];
m11_12 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Settings.InjectNonPublic = true", span="25-25"];
m11_13 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="var warrior = this.kernel.Get<SpecialNinja>()", span="26-26"];
m11_14 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.ShouldNotBeNull()", span="28-28"];
m11_15 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldNotBeNull()", span="29-29"];
m11_16 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldBeInstanceOf(typeof(Shuriken))", span="30-30"];
m11_17 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldNotBeNull()", span="31-31"];
m11_18 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldBeInstanceOf(typeof(Sword))", span="32-32"];
m11_19 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldNotBeNull()", span="33-33"];
m11_20 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldBeInstanceOf(typeof(ShortSword))", span="34-34"];
m11_21 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", span="23-23"];
m11_10 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="205-205"];
m11_24 [cluster="Unk.ShouldBeInstanceOf", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Unk.ShouldBeInstanceOf", span=""];
m11_25 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", span="39-39"];
m11_26 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="var warrior = this.kernel.Get<SpecialNinja>()", span="41-41"];
m11_27 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.ShouldNotBeNull()", span="43-43"];
m11_28 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldBeNull()", span="44-44"];
m11_29 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldBeNull()", span="45-45"];
m11_30 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldBeNull()", span="46-46"];
m11_31 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", span="39-39"];
m11_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m11_0 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", span="9-9"];
m11_1 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Bind<IWarrior>().To<SpecialNinja>()", span="11-11"];
m11_2 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Bind<UltraSpecialNinja>().ToSelf()", span="12-12"];
m11_3 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().Named(''Weapon'')", span="13-13"];
m11_4 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().Named(''SecretWeapon'')", span="14-14"];
m11_5 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>().Named(''UltraSecretWeapon'')", span="15-15"];
m11_6 [cluster="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Exit Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext.PublicPropertyWithMoreRestrictiveSetterContext()", span="9-9"];
m11_23 [cluster="Unk.ShouldNotBeNull", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m11_22 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m11_33 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", span="54-54"];
m11_34 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="this.kernel.Settings.InjectNonPublic = true", span="56-56"];
m11_35 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="var warrior = this.kernel.Get<UltraSpecialNinja>()", span="57-57"];
m11_36 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.ShouldNotBeNull()", span="59-59"];
m11_37 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldNotBeNull()", span="60-60"];
m11_38 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldBeInstanceOf(typeof(Shuriken))", span="61-61"];
m11_39 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldNotBeNull()", span="62-62"];
m11_40 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldBeInstanceOf(typeof(Sword))", span="63-63"];
m11_41 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldNotBeNull()", span="64-64"];
m11_42 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldBeInstanceOf(typeof(ShortSword))", span="65-65"];
m11_43 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", span="54-54"];
m11_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m11_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m11_32 [cluster="Unk.ShouldBeNull", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Unk.ShouldBeNull", span=""];
m11_44 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", span="70-70"];
m11_45 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="var warrior = this.kernel.Get<UltraSpecialNinja>()", span="72-72"];
m11_46 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.ShouldNotBeNull()", span="74-74"];
m11_47 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.Weapon.ShouldBeNull()", span="75-75"];
m11_48 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.SecretWeapon.ShouldBeNull()", span="76-76"];
m11_49 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="warrior.UltraSecretWeapon.ShouldBeNull()", span="77-77"];
m11_50 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", span="70-70"];
m11_51 [file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", span=""];
m11_52 [file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", span=""];
m11_53 [file="InjectOnPropertyWithMoreRestrictiveSetter.cs", label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", span=""];
m12_58 [cluster="System.Threading.Thread.Join()", file="ManualReleaseTests.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m12_30 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="49-49"];
m12_31 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="51-51"];
m12_32 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="bool instanceWasDisposed = false", span="53-53"];
m12_33 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="var instance = kernel.Get<NotifiesWhenDisposed>()", span="55-55"];
m12_34 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="instance.Disposed += (o, e) => instanceWasDisposed = true", span="56-56"];
m12_35 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="kernel.Dispose()", span="58-58"];
m12_36 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="Assert.True(instanceWasDisposed)", span="60-60"];
m12_37 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="49-49"];
m12_0 [cluster="Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext.BuiltInScopeContext()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext.BuiltInScopeContext()", span="12-12"];
m12_1 [cluster="Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext.BuiltInScopeContext()", file="ManualReleaseTests.cs", label="kernel = new StandardKernel()", span="14-14"];
m12_2 [cluster="Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext.BuiltInScopeContext()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext.BuiltInScopeContext()", span="12-12"];
m12_13 [cluster="Ninject.Infrastructure.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ManualReleaseTests.cs", label="Entry Ninject.Infrastructure.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="12-12"];
m12_14 [cluster="Unk.Same", file="ManualReleaseTests.cs", label="Entry Unk.Same", span=""];
m12_57 [cluster="System.Threading.Thread.Start()", file="ManualReleaseTests.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m12_15 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="32-32"];
m12_16 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="34-34"];
m12_17 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="bool instanceWasDisposed = false", span="36-36"];
m12_18 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="var instance = kernel.Get<NotifiesWhenDisposed>()", span="38-38"];
m12_19 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="instance.Disposed += (o, e) => instanceWasDisposed = true", span="39-39"];
m12_20 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="instance = null", span="41-41"];
m12_21 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="GC.Collect()", span="43-43"];
m12_22 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="Assert.False(instanceWasDisposed)", span="45-45"];
m12_23 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="32-32"];
m12_24 [cluster="Ninject.Syntax.IBindingToSyntax.ToSelf()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax.ToSelf()", span="8-8"];
m12_55 [cluster="Ninject.Syntax.IBindingInScopeSyntax.InThreadScope()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingInScopeSyntax.InThreadScope()", span="9-9"];
m12_11 [cluster="Ninject.Syntax.IBindingToSyntax.To<TImplementation>()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax.To<TImplementation>()", span="9-9"];
m12_93 [cluster="System.Threading.Thread.Sleep(int)", file="ManualReleaseTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m12_26 [cluster="Unk.False", file="ManualReleaseTests.cs", label="Entry Unk.False", span=""];
m12_64 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="91-91"];
m12_65 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", span="93-93"];
m12_66 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="IWeapon weapon1 = kernel.Get<IWeapon>()", span="95-95"];
m12_67 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="IWeapon weapon2 = null", span="96-96"];
m12_72 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="Assert.NotNull(weapon1)", span="105-105"];
m12_74 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="Assert.NotSame(weapon1, weapon2)", span="107-107"];
m12_68 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="ThreadStart callback = () => weapon2 = kernel.Get<IWeapon>()", span="98-98"];
m12_69 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="var thread = new Thread(callback)", span="100-100"];
m12_70 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="thread.Start()", span="102-102"];
m12_71 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="thread.Join()", span="103-103"];
m12_73 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="Assert.NotNull(weapon2)", span="106-106"];
m12_75 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="91-91"];
m12_80 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", span="111-111"];
m12_81 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="kernel.Bind<NotifiesWhenDisposed>().ToSelf().InThreadScope()", span="113-113"];
m12_82 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="NotifiesWhenDisposed instance = null", span="115-115"];
m12_83 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="ThreadStart callback = () => instance = kernel.Get<NotifiesWhenDisposed>()", span="117-117"];
m12_84 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="var thread = new Thread(callback)", span="119-119"];
m12_85 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="thread.Start()", span="121-121"];
m12_86 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="thread.Join()", span="122-122"];
m12_87 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="thread = null", span="124-124"];
m12_88 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="GC.Collect()", span="126-126"];
m12_89 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="Thread.Sleep(1500)", span="127-127"];
m12_90 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="Assert.NotNull(instance)", span="129-129"];
m12_91 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="Assert.True(instance.IsDisposed)", span="130-130"];
m12_92 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedWithinASecondOfThreadEnding()", span="111-111"];
m12_59 [cluster="Unk.NotNull", file="ManualReleaseTests.cs", label="Entry Unk.NotNull", span=""];
m12_38 [cluster="Ninject.KernelBase.Dispose()", file="ManualReleaseTests.cs", label="Entry Ninject.KernelBase.Dispose()", span="37-37"];
m12_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.IModule[])", file="ManualReleaseTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.IModule[])", span="18-18"];
m12_4 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", span="21-21"];
m12_5 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().InSingletonScope()", span="23-23"];
m12_6 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="var weapon1 = kernel.Get<IWeapon>()", span="25-25"];
m12_7 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="var weapon2 = kernel.Get<IWeapon>()", span="26-26"];
m12_8 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="Assert.Same(weapon1, weapon2)", span="28-28"];
m12_9 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope.FirstActivatedInstanceIsReused()", span="21-21"];
m12_94 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Entry lambda expression", span="117-117"];
m12_27 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Entry lambda expression", span="39-39"];
m12_28 [cluster="lambda expression", file="ManualReleaseTests.cs", label="instanceWasDisposed = true", span="39-39"];
m12_29 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Exit lambda expression", span="39-39"];
m12_40 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Entry lambda expression", span="56-56"];
m12_41 [cluster="lambda expression", file="ManualReleaseTests.cs", label="instanceWasDisposed = true", span="56-56"];
m12_42 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Exit lambda expression", span="56-56"];
m12_60 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Entry lambda expression", span="74-78"];
m12_61 [cluster="lambda expression", file="ManualReleaseTests.cs", label="weapon1 = kernel.Get<IWeapon>()", span="76-76"];
m12_62 [cluster="lambda expression", file="ManualReleaseTests.cs", label="weapon2 = kernel.Get<IWeapon>()", span="77-77"];
m12_63 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Exit lambda expression", span="74-78"];
m12_77 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Entry lambda expression", span="98-98"];
m12_78 [cluster="lambda expression", file="ManualReleaseTests.cs", label="weapon2 = kernel.Get<IWeapon>()", span="98-98"];
m12_79 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Exit lambda expression", span="98-98"];
m12_95 [cluster="lambda expression", file="ManualReleaseTests.cs", label="instance = kernel.Get<NotifiesWhenDisposed>()", span="117-117"];
m12_96 [cluster="lambda expression", file="ManualReleaseTests.cs", label="Exit lambda expression", span="117-117"];
m12_12 [cluster="Ninject.Syntax.IBindingInScopeSyntax.InSingletonScope()", file="ManualReleaseTests.cs", label="Entry Ninject.Syntax.IBindingInScopeSyntax.InSingletonScope()", span="7-7"];
m12_25 [cluster="System.GC.Collect()", file="ManualReleaseTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m12_10 [cluster="Ninject.Infrastructure.IBindingRoot.Bind<T>()", file="ManualReleaseTests.cs", label="Entry Ninject.Infrastructure.IBindingRoot.Bind<T>()", span="8-8"];
m12_39 [cluster="Unk.True", file="ManualReleaseTests.cs", label="Entry Unk.True", span=""];
m12_76 [cluster="Unk.NotSame", file="ManualReleaseTests.cs", label="Entry Unk.NotSame", span=""];
m12_56 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ManualReleaseTests.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m12_43 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="Entry Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="67-67"];
m12_44 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", span="69-69"];
m12_45 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="IWeapon weapon1 = null", span="71-71"];
m12_46 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="IWeapon weapon2 = null", span="72-72"];
m12_47 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="ThreadStart callback = () =>\r\n			{\r\n				weapon1 = kernel.Get<IWeapon>();\r\n				weapon2 = kernel.Get<IWeapon>();\r\n			}", span="74-78"];
m12_48 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="var thread = new Thread(callback)", span="80-80"];
m12_49 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="thread.Start()", span="82-82"];
m12_50 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="thread.Join()", span="83-83"];
m12_51 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="Assert.NotNull(weapon1)", span="85-85"];
m12_52 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="Assert.NotNull(weapon2)", span="86-86"];
m12_53 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="Assert.Same(weapon1, weapon2)", span="87-87"];
m12_54 [cluster="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ManualReleaseTests.cs", label="Exit Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="67-67"];
m12_97 [file="ManualReleaseTests.cs", label="Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext", span=""];
m12_98 [file="ManualReleaseTests.cs", label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", span=""];
m12_99 [file="ManualReleaseTests.cs", label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", span=""];
m14_0 [cluster="Ninject.Selection.Heuristics.StandardPropertyInjectionHeuristic.ShouldInject(System.Reflection.PropertyInfo)", file="PropertyInjectionTests.cs", label="Entry Ninject.Selection.Heuristics.StandardPropertyInjectionHeuristic.ShouldInject(System.Reflection.PropertyInfo)", span="9-9"];
m14_1 [cluster="Ninject.Selection.Heuristics.StandardPropertyInjectionHeuristic.ShouldInject(System.Reflection.PropertyInfo)", file="PropertyInjectionTests.cs", label="return property.HasAttribute<InjectAttribute>();", span="11-11"];
m14_2 [cluster="Ninject.Selection.Heuristics.StandardPropertyInjectionHeuristic.ShouldInject(System.Reflection.PropertyInfo)", file="PropertyInjectionTests.cs", label="Exit Ninject.Selection.Heuristics.StandardPropertyInjectionHeuristic.ShouldInject(System.Reflection.PropertyInfo)", span="9-9"];
m14_3 [cluster="System.Reflection.ICustomAttributeProvider.HasAttribute<T>()", file="PropertyInjectionTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.HasAttribute<T>()", span="31-31"];
m15_19 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", file="ReferenceEqualWeakReference.cs", label="this.IsAlive", span="95-95"];
m15_48 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveProperyForValueInjection(Ninject.Activation.IRequest, string)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveProperyForValueInjection(Ninject.Activation.IRequest, string)", span="171-171"];
m15_23 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Entry lambda expression", span="69-69"];
m15_16 [cluster="Unk.Where", file="ReferenceEqualWeakReference.cs", label="Entry Unk.Where", span=""];
m15_44 [cluster="object.GetType()", file="ReferenceEqualWeakReference.cs", label="Entry object.GetType()", span="0-0"];
m15_47 [cluster="Ninject.ActivationException.ActivationException(string)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.ActivationException.ActivationException(string)", span="35-35"];
m15_21 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", color=green, community=0, file="ReferenceEqualWeakReference.cs", label="2: return this.cashedHashCode;", span="100-100"];
m15_0 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="53-53"];
m15_1 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="ReferenceEqualWeakReference.cs", label="InjectorFactory = injectorFactory", span="55-55"];
m15_2 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="ReferenceEqualWeakReference.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="53-53"];
m15_18 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", span="93-93"];
m15_33 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="91-91"];
m15_34 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="var properties = reference.Instance.GetType().GetProperties( Flags )", span="93-93"];
m15_35 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label=propertyValues, span="94-94"];
m15_39 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="throw new ActivationException(ExceptionFormatter.CouldNotResolveProperyForValueInjection(context.Request, propertyName));", span="102-102"];
m15_41 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="object value = GetValue(context, target.Target)", span="105-105"];
m15_42 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="target.Injector(reference.Instance, value)", span="106-106"];
m15_37 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="var propertyInfo = properties\r\n					.Where(property => string.Equals(property.Name, propertyName, StringComparison.Ordinal))\r\n					.FirstOrDefault()", span="97-99"];
m15_36 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="string propertyName = propertyValue.Name", span="96-96"];
m15_38 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="propertyInfo == null", span="101-101"];
m15_40 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="var target = new PropertyInjectionDirective( propertyInfo, InjectorFactory.Create( propertyInfo ) )", span="104-104"];
m15_43 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="ReferenceEqualWeakReference.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="91-91"];
m15_15 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="Exit Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", span="66-66"];
m15_3 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="64-64"];
m15_4 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ReferenceEqualWeakReference.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="66-66"];
m15_5 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ReferenceEqualWeakReference.cs", label="Ensure.ArgumentNotNull(reference, ''reference'')", span="67-67"];
m15_6 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", span="66-66"];
m15_8 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", color=green, community=0, file="ReferenceEqualWeakReference.cs", label="1: return base.Equals(obj);", span="70-70"];
m15_11 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="!weakReference.IsAlive", span="76-76"];
m15_12 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="return false;", span="78-78"];
m15_13 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="obj = weakReference.Target", span="81-81"];
m15_7 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", color=green, community=0, file="ReferenceEqualWeakReference.cs", label="2: !this.IsAlive", span="68-68"];
m15_10 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="weakReference != null", span="74-74"];
m15_9 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", color=red, community=0, file="ReferenceEqualWeakReference.cs", label="2: var weakReference = obj as WeakReference", span="73-73"];
m15_14 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.Equals(object)", file="ReferenceEqualWeakReference.cs", label="return ReferenceEquals(this.Target, obj);", span="84-84"];
m15_49 [cluster="PropertyInjectionDirective.cstr", file="ReferenceEqualWeakReference.cs", label="Entry PropertyInjectionDirective.cstr", span=""];
m15_45 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReferenceEqualWeakReference.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m15_60 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ReferenceEqualWeakReference.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m15_64 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Entry lambda expression", span="121-121"];
m15_26 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Entry lambda expression", span="70-70"];
m15_30 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="string.Equals(name, propertyInjectionDirective)", span="75-75"];
m15_29 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Entry lambda expression", span="75-75"];
m15_24 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Ninject.Infrastructure.ReferenceEqualWeakReference", span=""];
m15_25 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Exit lambda expression", span="69-69"];
m15_27 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="parameter.Name", span="70-70"];
m15_28 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Exit lambda expression", span="70-70"];
m15_31 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Exit lambda expression", span="75-75"];
m15_52 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="string.Equals(property.Name, propertyName, StringComparison.Ordinal)", span="98-98"];
m15_51 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Entry lambda expression", span="98-98"];
m15_53 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Exit lambda expression", span="98-98"];
m15_65 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="p.Name == target.Name", span="121-121"];
m15_66 [cluster="lambda expression", file="ReferenceEqualWeakReference.cs", label="Exit lambda expression", span="121-121"];
m15_54 [cluster="string.Equals(string, string, System.StringComparison)", file="ReferenceEqualWeakReference.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m15_46 [cluster="Unk.FirstOrDefault", file="ReferenceEqualWeakReference.cs", label="Entry Unk.FirstOrDefault", span=""];
m15_20 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", color=green, community=0, file="ReferenceEqualWeakReference.cs", label="2: this.cashedHashCode = this.Target.GetHashCode()", span="97-97"];
m15_55 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ReferenceEqualWeakReference.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="118-118"];
m15_56 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ReferenceEqualWeakReference.cs", label="Ensure.ArgumentNotNull(target, ''target'')", span="119-119"];
m15_57 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ReferenceEqualWeakReference.cs", label="var parameter = context.Parameters.OfType<PropertyValue>().Where(p => p.Name == target.Name).SingleOrDefault()", span="121-121"];
m15_58 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ReferenceEqualWeakReference.cs", label="return parameter != null ? parameter.GetValue(context) : target.ResolveWithin(context);", span="122-122"];
m15_59 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ReferenceEqualWeakReference.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="116-116"];
m15_17 [cluster="Unk.Select", file="ReferenceEqualWeakReference.cs", label="Entry Unk.Select", span=""];
m15_22 [cluster="Unk.AssignProperyOverrides", file="ReferenceEqualWeakReference.cs", label="Entry Unk.AssignProperyOverrides", span=""];
m15_63 [cluster="Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", file="ReferenceEqualWeakReference.cs", label="Entry Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", span="54-54"];
m15_62 [cluster="Unk.GetValue", file="ReferenceEqualWeakReference.cs", label="Entry Unk.GetValue", span=""];
m15_32 [cluster="object.Equals(object, object)", file="ReferenceEqualWeakReference.cs", label="Entry object.Equals(object, object)", span="0-0"];
m15_50 [cluster="Unk.Create", file="ReferenceEqualWeakReference.cs", label="Entry Unk.Create", span=""];
m15_61 [cluster="Unk.SingleOrDefault", file="ReferenceEqualWeakReference.cs", label="Entry Unk.SingleOrDefault", span=""];
m15_67 [file="ReferenceEqualWeakReference.cs", label="Ninject.Activation.Strategies.PropertyInjectionStrategy", span=""];
m15_68 [file="ReferenceEqualWeakReference.cs", label=propertyInjectionDirective, span=""];
m15_69 [file="ReferenceEqualWeakReference.cs", label=propertyName, span=""];
m15_70 [file="ReferenceEqualWeakReference.cs", label="Ninject.Planning.Targets.ITarget", span=""];
m16_100 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", span="166-166"];
m16_101 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.CompareTo(other) <= 0)", span="169-169"];
m16_102 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T)", span="166-166"];
m16_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ShouldExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m16_64 [cluster="Unk.AreSame", file="ShouldExtensions.cs", label="Entry Unk.AreSame", span=""];
m16_34 [cluster="System.Collections.IEnumerator.MoveNext()", file="ShouldExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m16_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="ShouldExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m16_3 [cluster="string.Contains(string)", file="ShouldExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m16_69 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", span="101-101"];
m16_70 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self)", span="103-103"];
m16_71 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool)", span="101-101"];
m16_81 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", span="133-133"];
m16_82 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.CompareTo(other) > 0)", span="136-136"];
m16_83 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T)", span="133-133"];
m16_128 [cluster="object.GetHashCode()", file="ShouldExtensions.cs", label="Entry object.GetHashCode()", span="0-0"];
m16_27 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="46-46"];
m16_28 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="2: Assert.IsFalse(series.Contains(item, new EqualityComparerUsingComparer<T>(comparer)))", span="48-48"];
m16_29 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="46-46"];
m16_4 [cluster="Unk.IsTrue", file="ShouldExtensions.cs", label="Entry Unk.IsTrue", span=""];
m16_5 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", span="16-16"];
m16_6 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.Contains(str))", span="18-18"];
m16_7 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain(string, string, System.StringComparison)", span="16-16"];
m16_21 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", span="36-36"];
m16_22 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(self.Contains(str))", span="38-38"];
m16_23 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string, System.StringComparison)", span="36-36"];
m16_57 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", span="86-86"];
m16_58 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsNotNull(self)", span="88-88"];
m16_59 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeNull(object)", span="86-86"];
m16_94 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", span="155-155"];
m16_95 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.CompareTo(other) < 0)", span="158-158"];
m16_96 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T)", span="155-155"];
m16_103 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="172-172"];
m16_104 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(comparer.Compare(self, other) <= 0)", span="174-174"];
m16_105 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="172-172"];
m16_68 [cluster="Unk.AreNotSame", file="ShouldExtensions.cs", label="Entry Unk.AreNotSame", span=""];
m16_33 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="ShouldExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m16_49 [cluster="Unk.AreNotEqual", file="ShouldExtensions.cs", label="Entry Unk.AreNotEqual", span=""];
m16_42 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="66-66"];
m16_43 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(comparer.Compare(self, other) == 0)", span="68-68"];
m16_44 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="66-66"];
m16_84 [cluster="System.IComparable<T>.CompareTo(T)", file="ShouldExtensions.cs", label="Entry System.IComparable<T>.CompareTo(T)", span="0-0"];
m16_85 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="139-139"];
m16_86 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(comparer.Compare(self, other) > 0)", span="141-141"];
m16_87 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="139-139"];
m16_91 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="150-150"];
m16_92 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(comparer.Compare(self, other) >= 0)", span="152-152"];
m16_93 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, System.Collections.Generic.IComparer<T>)", span="150-150"];
m16_15 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", span="209-209"];
m16_120 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="5: this.comparer = comparer", span="211-211"];
m16_121 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.EqualityComparerUsingComparer(System.Collections.Generic.IComparer<T>)", span="209-209"];
m16_117 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", span="192-192"];
m16_118 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsNotInstanceOfType(type, self)", span="194-194"];
m16_119 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf(object, System.Type)", span="192-192"];
m16_20 [cluster="Unk.IsFalse", file="ShouldExtensions.cs", label="Entry Unk.IsFalse", span=""];
m16_41 [cluster="Unk.AreEqual", file="ShouldExtensions.cs", label="Entry Unk.AreEqual", span=""];
m16_8 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="21-21"];
m16_9 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(series.Contains(item))", span="23-23"];
m16_10 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="21-21"];
m16_38 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", span="61-61"];
m16_39 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.AreEqual(other, self)", span="63-63"];
m16_40 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBe<T>(T, T)", span="61-61"];
m16_88 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", span="144-144"];
m16_89 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.CompareTo(other) >= 0)", span="147-147"];
m16_90 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T)", span="144-144"];
m16_122 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", span="220-220"];
m16_123 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: return this.comparer.Compare(x, y) == 0;", span="222-222"];
m16_124 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.Equals(T, T)", span="220-220"];
m16_56 [cluster="Unk.IsNull", file="ShouldExtensions.cs", label="Entry Unk.IsNull", span=""];
m16_78 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", span="116-116"];
m16_79 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(self, message)", span="118-118"];
m16_80 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool, string)", span="116-116"];
m16_53 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", span="81-81"];
m16_54 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsNull(self)", span="83-83"];
m16_55 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeNull(object)", span="81-81"];
m16_116 [cluster="Unk.IsNotInstanceOfType", file="ShouldExtensions.cs", label="Entry Unk.IsNotInstanceOfType", span=""];
m16_12 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="26-26"];
m16_13 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="2: Assert.IsTrue(series.Contains(item, new EqualityComparerUsingComparer<T>(comparer)))", span="28-28"];
m16_14 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IComparer<T>)", span="26-26"];
m16_50 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="76-76"];
m16_51 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(comparer.Compare(self, other) == 0)", span="78-78"];
m16_52 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T, System.Collections.Generic.IComparer<T>)", span="76-76"];
m16_65 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", span="96-96"];
m16_66 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.AreNotSame(other, self)", span="98-98"];
m16_67 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeSameAs(object, object)", span="96-96"];
m16_109 [cluster="Unk.IsInstanceOfType", file="ShouldExtensions.cs", label="Entry Unk.IsInstanceOfType", span=""];
m16_17 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", span="31-31"];
m16_18 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(self.Contains(str))", span="33-33"];
m16_19 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain(string, string)", span="31-31"];
m16_106 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", span="177-177"];
m16_107 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsInstanceOfType(typeof(T), self)", span="179-179"];
m16_108 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf<T>(object)", span="177-177"];
m16_46 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", span="71-71"];
m16_47 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.AreNotEqual(other, self)", span="73-73"];
m16_48 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBe<T>(T, T)", span="71-71"];
m16_35 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", span="56-56"];
m16_36 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(series.GetEnumerator().MoveNext())", span="58-58"];
m16_37 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeEmpty(System.Collections.IEnumerable)", span="56-56"];
m16_30 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", span="51-51"];
m16_31 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(series.GetEnumerator().MoveNext())", span="53-53"];
m16_32 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeEmpty(System.Collections.IEnumerable)", span="51-51"];
m16_60 [cluster="Unk.IsNotNull", file="ShouldExtensions.cs", label="Entry Unk.IsNotNull", span=""];
m16_61 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", span="91-91"];
m16_62 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.AreSame(other, self)", span="93-93"];
m16_63 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeSameAs(object, object)", span="91-91"];
m16_45 [cluster="System.Collections.Generic.IComparer<T>.Compare(T, T)", file="ShouldExtensions.cs", label="Entry System.Collections.Generic.IComparer<T>.Compare(T, T)", span="0-0"];
m16_72 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", span="106-106"];
m16_73 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self, message)", span="108-108"];
m16_74 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeTrue(bool, string)", span="106-106"];
m16_24 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="41-41"];
m16_25 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(series.Contains(item))", span="43-43"];
m16_26 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T)", span="41-41"];
m16_125 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", span="232-232"];
m16_126 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", color=green, community=0, file="ShouldExtensions.cs", label="0: return obj.GetHashCode();", span="234-234"];
m16_127 [cluster="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>.GetHashCode(T)", span="232-232"];
m16_113 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", span="187-187"];
m16_114 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsNotInstanceOfType(typeof(T), self)", span="189-189"];
m16_115 [cluster="UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldNotBeInstanceOf<T>(object)", span="187-187"];
m16_97 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="161-161"];
m16_98 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(comparer.Compare(self, other) < 0)", span="163-163"];
m16_99 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeLessThan<T>(T, T, System.Collections.Generic.IComparer<T>)", span="161-161"];
m16_110 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", span="182-182"];
m16_111 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsInstanceOfType(type, self)", span="184-184"];
m16_112 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeInstanceOf(object, System.Type)", span="182-182"];
m16_0 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", span="11-11"];
m16_1 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsTrue(self.Contains(str))", span="13-13"];
m16_2 [cluster="UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldContain(string, string)", span="11-11"];
m16_75 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", file="ShouldExtensions.cs", label="Entry UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", span="111-111"];
m16_76 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", color=green, community=0, file="ShouldExtensions.cs", label="0: Assert.IsFalse(self)", span="113-113"];
m16_77 [cluster="UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", file="ShouldExtensions.cs", label="Exit UnitDriven.Should.ShouldExtensions.ShouldBeFalse(bool)", span="111-111"];
m16_129 [file="ShouldExtensions.cs", label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>", span=""];
m17_0 [cluster="Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="SingletonScopeTests.cs", label="Entry Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="28-28"];
m17_1 [cluster="Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="SingletonScopeTests.cs", label="Exit Ninject.Planning.Directives.MethodInjectionDirective.MethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="28-28"];
m18_4 [cluster="Ninject.Activation.IContext.Resolve()", file="SpecialResolutionTests.cs", label="Entry Ninject.Activation.IContext.Resolve()", span="77-77"];
m18_5 [cluster="Ninject.Activation.IContext.Resolve()", color=green, community=0, file="SpecialResolutionTests.cs", label="3: Exit Ninject.Activation.IContext.Resolve()", span="77-77"];
m18_6 [cluster="Ninject.Resolution.Strategies.KernelResolutionStrategy.Resolve(Ninject.Activation.IContext)", file="SpecialResolutionTests.cs", label="Exit Ninject.Resolution.Strategies.KernelResolutionStrategy.Resolve(Ninject.Activation.IContext)", span="13-13"];
m18_2 [cluster="Ninject.Resolution.Strategies.KernelResolutionStrategy.Supports(Ninject.Activation.IRequest)", file="SpecialResolutionTests.cs", label="Exit Ninject.Resolution.Strategies.KernelResolutionStrategy.Supports(Ninject.Activation.IRequest)", span="8-8"];
m18_3 [cluster="System.Type.IsAssignableFrom(System.Type)", file="SpecialResolutionTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m18_0 [cluster="Ninject.Activation.IContext.GetProvider()", file="SpecialResolutionTests.cs", label="Entry Ninject.Activation.IContext.GetProvider()", span="65-65"];
m18_1 [cluster="Ninject.Activation.IContext.GetProvider()", color=green, community=0, file="SpecialResolutionTests.cs", label="4: Exit Ninject.Activation.IContext.GetProvider()", span="65-65"];
m19_15 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.~DisposableObject()", file="StandardKernelTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.~DisposableObject()", span="61-61"];
m19_16 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.~DisposableObject()", file="StandardKernelTests.cs", label="Dispose(false)", span="63-63"];
m19_17 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.~DisposableObject()", file="StandardKernelTests.cs", label="Exit Ninject.Infrastructure.Disposal.DisposableObject.~DisposableObject()", span="61-61"];
m19_3 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="42-42"];
m19_4 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", color=green, community=0, file="StandardKernelTests.cs", label="2: this", span="44-44"];
m19_5 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="disposing && !IsDisposed", span="46-46"];
m19_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardKernelTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m19_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="evt != null", span="49-49"];
m19_8 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="evt(this, EventArgs.Empty)", span="49-49"];
m19_9 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="Disposed = null", span="50-50"];
m19_10 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="IsDisposed = true", span="52-52"];
m19_11 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="GC.SuppressFinalize(this)", span="53-53"];
m19_12 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardKernelTests.cs", label="Exit Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="42-42"];
m19_14 [cluster="System.GC.SuppressFinalize(object)", file="StandardKernelTests.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m19_13 [cluster="System.EventHandler.Invoke(object, System.EventArgs)", file="StandardKernelTests.cs", label="Entry System.EventHandler.Invoke(object, System.EventArgs)", span="0-0"];
m19_0 [cluster="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext.StandardKernelContext()", file="StandardKernelTests.cs", label="Entry Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext.StandardKernelContext()", span="20-20"];
m19_1 [cluster="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext.StandardKernelContext()", color=green, community=0, file="StandardKernelTests.cs", label="3: this.SetUp()", span="22-22"];
m19_2 [cluster="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext.StandardKernelContext()", file="StandardKernelTests.cs", label="Exit Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext.StandardKernelContext()", span="20-20"];
m19_18 [file="StandardKernelTests.cs", label="Ninject.Infrastructure.Disposal.DisposableObject", span=""];
m19_237 [file="StandardKernelTests.cs", label="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext", span=""];
n7 -> n1  [color=darkseagreen4, key=1, label="Ninject.NinjectSettings", style=dashed];
n7 -> n5  [color=darkseagreen4, key=1, label="Ninject.NinjectSettings", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n4  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_86 -> m0_87  [color=green, key=0, style=solid];
m0_86 -> m0_13  [color=green, key=2, style=dotted];
m0_80 -> m0_86  [color=green, key=1, label=kernel, style=dashed];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_9  [key=2, style=dotted];
m0_80 -> m0_82  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_80 -> m0_83  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_80 -> m0_84  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_80 -> m0_85  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_85 -> m0_86  [color=green, key=0, style=solid];
m0_85 -> m0_92  [key=2, style=dotted];
m0_85 -> m0_93  [key=2, style=dotted];
m0_85 -> m0_94  [key=2, style=dotted];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label=testActivationStrategy, style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_95  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_89  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_10  [key=2, style=dotted];
m0_82 -> m0_90  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_10  [key=2, style=dotted];
m0_83 -> m0_11  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_10  [key=2, style=dotted];
m0_84 -> m0_91  [key=2, style=dotted];
m0_84 -> m0_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_79  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_25 -> m0_13  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_25 -> m0_29  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_23 -> m0_9  [key=2, style=dotted];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_10  [key=2, style=dotted];
m0_24 -> m0_11  [key=2, style=dotted];
m0_24 -> m0_31  [key=2, style=dotted];
m0_24 -> m0_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_14  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_15  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_14  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_15  [key=2, style=dotted];
m0_30 -> m0_22  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Ninject.Injection.IInjectorFactory", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_9  [key=2, style=dotted];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_3 -> m0_6  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_3 -> m0_7  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_4 -> m0_8  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_9  [key=0, style=solid];
m0_5 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label=directive, style=dashed];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=injector, style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_12  [key=2, style=dotted];
m0_8 -> m0_0  [color=blue, key=0, style=bold];
m0_8 -> m0_5  [key=0, style=solid];
m0_8 -> m0_13  [key=2, style=dotted];
m0_8 -> m0_14  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_105 -> m0_106  [color=green, key=0, style=solid];
m0_105 -> m0_13  [color=green, key=2, style=dotted];
m0_100 -> m0_105  [color=green, key=1, label=kernel, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_108  [key=2, style=dotted];
m0_100 -> m0_109  [key=2, style=dotted];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_100 -> m0_103  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_100 -> m0_104  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_104 -> m0_105  [color=green, key=0, style=solid];
m0_104 -> m0_92  [key=2, style=dotted];
m0_104 -> m0_93  [key=2, style=dotted];
m0_104 -> m0_94  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=testActivationStrategy, style=dashed];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_95  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_89  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_10  [key=2, style=dotted];
m0_102 -> m0_90  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_10  [key=2, style=dotted];
m0_103 -> m0_110  [key=2, style=dotted];
m0_107 -> m0_99  [color=blue, key=0, style=bold];
m0_9 -> m0_4  [color=blue, key=0, style=bold];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=2, style=dotted];
m0_97 -> m0_13  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_98 -> m0_96  [color=blue, key=0, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.Barracks", style=dashed];
m0_19 -> m0_16  [color=blue, key=0, style=bold];
m0_19 -> m0_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.MethodInjectionStrategy", style=dashed];
m0_19 -> m0_2  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.MethodInjectionStrategy", style=dashed];
m0_19 -> m0_6  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.MethodInjectionStrategy", style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=2, style=dotted];
m0_35 -> m0_32  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_20  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_21  [key=2, style=dotted];
m0_54 -> m0_51  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_20  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_21  [key=2, style=dotted];
m0_58 -> m0_55  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_74 -> m0_71  [color=blue, key=0, style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_20  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_21  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_75  [color=blue, key=0, style=bold];
m0_20 -> m0_16  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_36 -> m0_37  [key=0, style=solid];
m0_40 -> m0_13  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_40 -> m0_43  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_40 -> m0_44  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_40 -> m0_45  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_40 -> m0_46  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_38 -> m0_9  [key=2, style=dotted];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_10  [key=2, style=dotted];
m0_39 -> m0_11  [key=2, style=dotted];
m0_39 -> m0_48  [key=2, style=dotted];
m0_39 -> m0_12  [key=2, style=dotted];
m0_39 -> m0_49  [key=2, style=dotted];
m0_39 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_14  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_15  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_14  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_15  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_50  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_50  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_47 -> m0_36  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_63 -> m0_13  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_63 -> m0_67  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_63 -> m0_68  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_63 -> m0_69  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m0_61 -> m0_9  [key=2, style=dotted];
m0_61 -> m0_63  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_10  [key=2, style=dotted];
m0_62 -> m0_11  [key=2, style=dotted];
m0_62 -> m0_48  [key=2, style=dotted];
m0_62 -> m0_31  [key=2, style=dotted];
m0_62 -> m0_49  [key=2, style=dotted];
m0_62 -> m0_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_62 -> m0_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_14  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_15  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_14  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_15  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_50  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_50  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_70 -> m0_59  [color=blue, key=0, style=bold];
m4_3 -> m4_7  [key=0, style=solid];
m4_3 -> m4_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_3 -> m4_10  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m4_3 -> m4_11  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_17 -> m4_156  [key=0, style=solid];
m4_17 -> m4_160  [color=crimson, key=0, style=bold];
m4_17 -> m4_161  [color=crimson, key=0, style=bold];
m4_17 -> m4_164  [color=crimson, key=0, style=bold];
m4_17 -> m4_166  [color=crimson, key=0, style=bold];
m4_17 -> m4_167  [color=crimson, key=0, style=bold];
m4_17 -> m4_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_17 -> m4_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_17 -> m4_68  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_168  [key=0, style=solid];
m4_156 -> m4_15  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_150  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_150  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_173  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_148  [key=2, style=dotted];
m4_157 -> m4_160  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_157 -> m4_165  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_170  [key=2, style=dotted];
m4_163 -> m4_171  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_169  [key=2, style=dotted];
m4_158 -> m4_162  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_172  [key=2, style=dotted];
m4_165 -> m4_167  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_162  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_165  [key=0, style=solid];
m4_168 -> m4_17  [color=blue, key=0, style=bold];
m4_26 -> m4_24  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_10 -> m4_11  [color=green, key=0, style=solid];
m4_10 -> m4_17  [color=green, key=2, style=dotted];
m4_10 -> m4_20  [key=2, style=dotted];
m4_10 -> m4_12  [color=darkseagreen4, key=1, label=normalized, style=dashed];
m4_9 -> m4_10  [color=green, key=0, style=solid];
m4_9 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_17  [key=2, style=dotted];
m4_9 -> m4_18  [key=2, style=dotted];
m4_9 -> m4_19  [key=2, style=dotted];
m4_9 -> m4_9  [color=darkseagreen4, key=1, label=arg, style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_18  [key=2, style=dotted];
m4_11 -> m4_19  [key=2, style=dotted];
m4_11 -> m4_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_11 -> m4_21  [key=2, style=dotted];
m4_11 -> m4_22  [key=2, style=dotted];
m4_11 -> m4_11  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_11 -> m4_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_14  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=2, style=dotted];
m4_7 -> m4_14  [key=2, style=dotted];
m4_7 -> m4_12  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_20  [key=2, style=dotted];
m4_12 -> m4_19  [key=2, style=dotted];
m4_12 -> m4_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_23  [key=2, style=dotted];
m4_12 -> m4_24  [key=2, style=dotted];
m4_12 -> m4_25  [key=2, style=dotted];
m4_12 -> m4_26  [key=2, style=dotted];
m4_12 -> m4_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_12  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_13 -> m4_4  [color=blue, key=0, style=bold];
m4_13 -> m4_3  [color=blue, key=0, style=bold];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_39  [key=2, style=dotted];
m4_33 -> m4_22  [key=2, style=dotted];
m4_33 -> m4_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_33 -> m4_35  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m4_18 -> m4_129  [key=0, style=solid];
m4_18 -> m4_132  [color=crimson, key=0, style=bold];
m4_18 -> m4_133  [color=crimson, key=0, style=bold];
m4_18 -> m4_135  [color=crimson, key=0, style=bold];
m4_18 -> m4_136  [color=crimson, key=0, style=bold];
m4_18 -> m4_138  [color=crimson, key=0, style=bold];
m4_18 -> m4_144  [color=crimson, key=0, style=bold];
m4_18 -> m4_146  [color=crimson, key=0, style=bold];
m4_18 -> m4_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_18 -> m4_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_18 -> m4_142  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_147  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_16  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_150  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_150  [key=2, style=dotted];
m4_144 -> m4_140  [key=0, style=solid];
m4_144 -> m4_150  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_155  [key=2, style=dotted];
m4_146 -> m4_148  [key=2, style=dotted];
m4_146 -> m4_16  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_148  [key=2, style=dotted];
m4_130 -> m4_135  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_130 -> m4_137  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_130 -> m4_140  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_130 -> m4_145  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_130 -> m4_146  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_137  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_145  [key=0, style=solid];
m4_142 -> m4_153  [key=2, style=dotted];
m4_142 -> m4_22  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [key=0, style=solid];
m4_131 -> m4_149  [key=2, style=dotted];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_151  [key=2, style=dotted];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label=first, style=dashed];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_145  [key=0, style=solid];
m4_140 -> m4_148  [key=2, style=dotted];
m4_140 -> m4_142  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_140 -> m4_143  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_147  [key=0, style=solid];
m4_145 -> m4_155  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_14  [key=2, style=dotted];
m4_139 -> m4_142  [color=darkseagreen4, key=1, label=seen, style=dashed];
m4_139 -> m4_143  [color=darkseagreen4, key=1, label=seen, style=dashed];
m4_139 -> m4_145  [color=darkseagreen4, key=1, label=seen, style=dashed];
m4_139 -> m4_146  [color=darkseagreen4, key=1, label=seen, style=dashed];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_154  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_152  [key=2, style=dotted];
m4_141 -> m4_144  [color=darkseagreen4, key=1, label=n, style=dashed];
m4_147 -> m4_18  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_40  [key=2, style=dotted];
m4_34 -> m4_41  [key=2, style=dotted];
m4_34 -> m4_42  [key=2, style=dotted];
m4_34 -> m4_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_38  [key=2, style=dotted];
m4_35 -> m4_37  [key=0, style=solid];
m4_35 -> m4_43  [key=2, style=dotted];
m4_35 -> m4_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_39  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_22  [key=2, style=dotted];
m4_37 -> m4_34  [color=blue, key=0, style=bold];
m4_37 -> m4_31  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_31 -> m4_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_31 -> m4_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_36  [key=0, style=solid];
m4_32 -> m4_38  [key=2, style=dotted];
m4_32 -> m4_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_32 -> m4_30  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_50 -> m4_48  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_66  [key=2, style=dotted];
m4_61 -> m4_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_38  [key=2, style=dotted];
m4_62 -> m4_67  [key=2, style=dotted];
m4_62 -> m4_26  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [key=2, style=dotted];
m4_63 -> m4_67  [key=2, style=dotted];
m4_63 -> m4_57  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=2, style=dotted];
m4_64 -> m4_67  [key=2, style=dotted];
m4_65 -> m4_61  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_38  [key=2, style=dotted];
m4_44 -> m4_55  [color=green, key=0, style=solid];
m4_45 -> m4_43  [color=blue, key=0, style=bold];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=2, style=dotted];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [color=green, key=0, style=solid];
m4_57 -> m4_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m4_57 -> m4_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m4_57 -> m4_62  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m4_58 -> m4_59  [color=green, key=0, style=solid];
m4_58 -> m4_64  [key=2, style=dotted];
m4_58 -> m4_60  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_42  [key=2, style=dotted];
m4_59 -> m4_65  [key=2, style=dotted];
m4_59 -> m4_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_59 -> m4_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_59 -> m4_81  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m4_59 -> m4_57  [color=blue, key=0, style=bold];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_42  [key=2, style=dotted];
m4_60 -> m4_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_47 -> m4_38  [key=2, style=dotted];
m4_68 -> m4_17  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m4_97 -> m4_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_97 -> m4_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_97 -> m4_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m4_97 -> m4_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_42  [key=2, style=dotted];
m4_98 -> m4_23  [key=2, style=dotted];
m4_98 -> m4_103  [key=2, style=dotted];
m4_98 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_98 -> m4_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_98 -> m4_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_98 -> m4_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_42  [key=2, style=dotted];
m4_99 -> m4_23  [key=2, style=dotted];
m4_99 -> m4_103  [key=2, style=dotted];
m4_99 -> m4_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_99  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_104  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_102 -> m4_97  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_52  [color=green, key=0, style=solid];
m4_29 -> m4_27  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [color=green, key=0, style=solid];
m4_48 -> m4_50  [color=green, key=2, style=dotted];
m4_48 -> m4_27  [color=green, key=1, label="lambda expression", style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_25  [key=2, style=dotted];
m4_55 -> m4_53  [color=green, key=0, style=solid];
m4_55 -> m4_39  [color=green, key=2, style=dotted];
m4_55 -> m4_57  [color=green, key=1, label="lambda expression", style=dashed];
m4_54 -> m4_55  [key=0, style=solid];
m4_46 -> m4_44  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_47  [key=2, style=dotted];
m4_49 -> m4_46  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_47  [key=2, style=dotted];
m4_52 -> m4_29  [color=green, key=0, style=solid];
m4_52 -> m4_50  [color=green, key=2, style=dotted];
m4_52 -> m4_44  [color=green, key=1, label="lambda expression", style=dashed];
m4_53 -> m4_51  [color=blue, key=0, style=bold];
m4_53 -> m4_44  [color=green, key=0, style=bold];
m4_56 -> m4_54  [color=blue, key=0, style=bold];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_22  [key=2, style=dotted];
m4_69 -> m4_71  [key=2, style=dotted];
m4_69 -> m4_72  [key=2, style=dotted];
m4_69 -> m4_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_83  [key=2, style=dotted];
m4_81 -> m4_84  [key=2, style=dotted];
m4_81 -> m4_85  [key=2, style=dotted];
m4_81 -> m4_86  [key=2, style=dotted];
m4_81 -> m4_72  [key=2, style=dotted];
m4_81 -> m4_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_81 -> m4_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_80 -> m4_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_76  [key=2, style=dotted];
m4_70 -> m4_68  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_75 -> m4_73  [color=blue, key=0, style=bold];
m4_78 -> m4_79  [key=0, style=solid];
m4_79 -> m4_77  [color=blue, key=0, style=bold];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_10  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_48  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_52  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_55  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_58  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_8  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_9  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_25  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_47  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_62  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_63  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_88 -> m4_64  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=2, style=dotted];
m4_91 -> m4_42  [key=2, style=dotted];
m4_82 -> m4_80  [color=blue, key=0, style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_1  [color=green, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", style=dashed];
m4_90 -> m4_91  [key=0, style=solid];
m4_89 -> m4_87  [color=blue, key=0, style=bold];
m4_92 -> m4_90  [color=blue, key=0, style=bold];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_94  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_109  [key=2, style=dotted];
m4_106 -> m4_110  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_111  [key=2, style=dotted];
m4_107 -> m4_72  [key=2, style=dotted];
m4_107 -> m4_112  [key=2, style=dotted];
m4_107 -> m4_113  [key=2, style=dotted];
m4_107 -> m4_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [key=2, style=dotted];
m4_115 -> m4_118  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_107  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_30  [key=2, style=dotted];
m4_124 -> m4_112  [key=2, style=dotted];
m4_124 -> m4_113  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_108 -> m4_105  [color=blue, key=0, style=bold];
m4_114 -> m4_115  [key=0, style=solid];
m4_116 -> m4_114  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=2, style=dotted];
m4_121 -> m4_119  [color=blue, key=0, style=bold];
m4_125 -> m4_123  [color=blue, key=0, style=bold];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_122  [key=2, style=dotted];
m4_128 -> m4_126  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_33  [key=2, style=dotted];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_174 -> m4_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m4_175 -> m4_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_176 -> m4_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m4_177 -> m4_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_178 -> m4_81  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m4_179 -> m4_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_180 -> m4_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m4_181 -> m4_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m4_182 -> m4_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_182 -> m4_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m4_183 -> m4_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m5_11 -> m5_12  [color=red, key=0, style=solid];
m5_12 -> m5_13  [color=red, key=0, style=solid];
m5_12 -> m5_15  [color=red, key=2, style=dotted];
m5_13 -> m5_14  [color=red, key=0, style=solid];
m5_13 -> m5_16  [color=red, key=2, style=dotted];
m5_14 -> m5_11  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=red, key=0, style=solid];
m5_1 -> m5_2  [color=red, key=0, style=solid];
m5_1 -> m5_7  [color=red, key=2, style=dotted];
m5_2 -> m5_3  [color=red, key=0, style=solid];
m5_2 -> m5_8  [color=red, key=2, style=dotted];
m5_2 -> m5_9  [color=red, key=2, style=dotted];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_8  [color=red, key=2, style=dotted];
m5_3 -> m5_9  [color=red, key=2, style=dotted];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_4 -> m5_8  [color=red, key=2, style=dotted];
m5_4 -> m5_9  [color=red, key=2, style=dotted];
m5_4 -> m5_10  [color=red, key=2, style=dotted];
m5_5 -> m5_6  [color=red, key=0, style=solid];
m5_5 -> m5_8  [color=red, key=2, style=dotted];
m5_5 -> m5_9  [color=red, key=2, style=dotted];
m5_5 -> m5_10  [color=red, key=2, style=dotted];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_29  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_26 -> m5_29  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_31  [color=red, key=2, style=dotted];
m5_28 -> m5_29  [color=red, key=0, style=solid];
m5_30 -> m5_25  [color=blue, key=0, style=bold];
m5_17 -> m5_18  [color=red, key=0, style=solid];
m5_18 -> m5_19  [color=red, key=0, style=solid];
m5_18 -> m5_15  [color=red, key=2, style=dotted];
m5_18 -> m5_20  [color=red, key=1, label=hammer, style=dashed];
m5_18 -> m5_21  [color=red, key=1, label=hammer, style=dashed];
m5_18 -> m5_22  [color=red, key=1, label=hammer, style=dashed];
m5_19 -> m5_20  [color=red, key=0, style=solid];
m5_19 -> m5_24  [color=red, key=2, style=dotted];
m5_20 -> m5_21  [color=red, key=0, style=solid];
m5_20 -> m5_16  [color=red, key=2, style=dotted];
m5_21 -> m5_22  [color=red, key=0, style=solid];
m5_21 -> m5_16  [color=red, key=2, style=dotted];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_22 -> m5_16  [color=red, key=2, style=dotted];
m5_23 -> m5_17  [color=blue, key=0, style=bold];
m5_33 -> m5_1  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_2  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_3  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_4  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_5  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_12  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_18  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_27  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_28  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m5_33 -> m5_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", style=dashed];
m6_27 -> m6_28  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_7  [key=2, style=dotted];
m6_28 -> m6_8  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_7  [key=2, style=dotted];
m6_29 -> m6_8  [key=2, style=dotted];
m6_29 -> m6_9  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_7  [key=2, style=dotted];
m6_30 -> m6_8  [key=2, style=dotted];
m6_30 -> m6_9  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_7  [key=2, style=dotted];
m6_31 -> m6_10  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_12  [key=2, style=dotted];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_33 -> m6_27  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_42 -> m6_43  [color=red, key=0, style=solid];
m6_42 -> m6_11  [key=2, style=dotted];
m6_43 -> m6_44  [color=red, key=0, style=solid];
m6_43 -> m6_12  [color=red, key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_7  [key=2, style=dotted];
m6_44 -> m6_8  [key=2, style=dotted];
m6_45 -> m6_46  [color=red, key=0, style=solid];
m6_45 -> m6_11  [key=2, style=dotted];
m6_46 -> m6_47  [color=red, key=0, style=solid];
m6_46 -> m6_12  [color=red, key=2, style=dotted];
m6_47 -> m6_41  [color=blue, key=0, style=bold];
m6_65 -> m6_66  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_11  [key=2, style=dotted];
m6_66 -> m6_68  [color=red, key=1, label=weapon, style=dashed];
m6_67 -> m6_68  [color=red, key=0, style=solid];
m6_67 -> m6_56  [key=2, style=dotted];
m6_67 -> m6_57  [key=2, style=dotted];
m6_68 -> m6_69  [color=red, key=0, style=solid];
m6_68 -> m6_12  [color=red, key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_7  [key=2, style=dotted];
m6_69 -> m6_8  [key=2, style=dotted];
m6_70 -> m6_71  [color=red, key=0, style=solid];
m6_70 -> m6_11  [key=2, style=dotted];
m6_71 -> m6_72  [color=red, key=0, style=solid];
m6_71 -> m6_12  [color=red, key=2, style=dotted];
m6_72 -> m6_65  [color=blue, key=0, style=bold];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_7  [key=2, style=dotted];
m6_21 -> m6_8  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_7  [key=2, style=dotted];
m6_22 -> m6_8  [key=2, style=dotted];
m6_22 -> m6_9  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_7  [key=2, style=dotted];
m6_23 -> m6_10  [key=2, style=dotted];
m6_24 -> m6_25  [color=red, key=0, style=solid];
m6_24 -> m6_11  [key=2, style=dotted];
m6_25 -> m6_26  [color=red, key=0, style=solid];
m6_25 -> m6_12  [color=red, key=2, style=dotted];
m6_26 -> m6_20  [color=blue, key=0, style=bold];
m6_48 -> m6_49  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_11  [key=2, style=dotted];
m6_49 -> m6_51  [color=red, key=1, label=weapon, style=dashed];
m6_50 -> m6_51  [color=red, key=0, style=solid];
m6_50 -> m6_56  [key=2, style=dotted];
m6_50 -> m6_57  [key=2, style=dotted];
m6_51 -> m6_52  [color=red, key=0, style=solid];
m6_51 -> m6_12  [color=red, key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_7  [key=2, style=dotted];
m6_52 -> m6_8  [key=2, style=dotted];
m6_52 -> m6_58  [key=2, style=dotted];
m6_52 -> m6_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_54  [color=red, key=0, style=solid];
m6_53 -> m6_11  [key=2, style=dotted];
m6_54 -> m6_55  [color=red, key=0, style=solid];
m6_54 -> m6_12  [color=red, key=2, style=dotted];
m6_55 -> m6_48  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_7  [key=2, style=dotted];
m6_14 -> m6_8  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_7  [key=2, style=dotted];
m6_15 -> m6_8  [key=2, style=dotted];
m6_15 -> m6_9  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_7  [key=2, style=dotted];
m6_16 -> m6_10  [key=2, style=dotted];
m6_17 -> m6_18  [color=red, key=0, style=solid];
m6_17 -> m6_11  [key=2, style=dotted];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_12  [color=red, key=2, style=dotted];
m6_19 -> m6_13  [color=blue, key=0, style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_11  [key=2, style=dotted];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_62 -> m6_63  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_61 -> m6_59  [color=blue, key=0, style=bold];
m6_63 -> m6_64  [key=0, style=solid];
m6_64 -> m6_62  [color=blue, key=0, style=bold];
m6_74 -> m6_75  [key=0, style=solid];
m6_75 -> m6_73  [color=blue, key=0, style=bold];
m6_37 -> m6_38  [key=0, style=solid];
m6_38 -> m6_39  [color=red, key=0, style=solid];
m6_38 -> m6_11  [key=2, style=dotted];
m6_39 -> m6_40  [color=red, key=0, style=solid];
m6_39 -> m6_12  [color=red, key=2, style=dotted];
m6_40 -> m6_37  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_9  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_6  [color=red, key=0, style=solid];
m6_5 -> m6_12  [color=red, key=2, style=dotted];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_76 -> m6_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_17  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_21  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_24  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_28  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_31  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_42  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_49  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_50  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_69  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m6_76 -> m6_70  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=2, style=dotted];
m7_4 -> m7_2  [color=blue, key=0, style=bold];
m7_6 -> m7_3  [color=darkseagreen4, key=1, label="Ninject.Injection.Linq.MethodInjector", style=dashed];
m8_0 -> m8_1  [color=red, key=0, style=solid];
m8_0 -> m8_2  [color=red, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m8_0 -> m8_13  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m8_1 -> m8_2  [color=red, key=0, style=solid];
m8_1 -> m8_7  [color=red, key=2, style=dotted];
m8_2 -> m8_3  [color=red, key=0, style=solid];
m8_2 -> m8_7  [color=red, key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=directive, style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_9  [key=2, style=dotted];
m8_4 -> m8_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_5 -> m8_3  [key=0, style=solid];
m8_5 -> m8_10  [key=2, style=dotted];
m8_5 -> m8_11  [key=2, style=dotted];
m8_6 -> m8_0  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=2, style=dotted];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_16 -> m8_13  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_11  [key=2, style=dotted];
m10_5 -> m10_12  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_13  [key=2, style=dotted];
m10_6 -> m10_8  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m10_6 -> m10_9  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_14  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_15  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_16  [key=2, style=dotted];
m10_10 -> m10_4  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=red, key=0, style=solid];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_3  [color=red, key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_23  [key=2, style=dotted];
m10_18 -> m10_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_14  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_25  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_24  [key=2, style=dotted];
m10_22 -> m10_17  [color=blue, key=0, style=bold];
m10_26 -> m10_1  [color=red, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", style=dashed];
m10_27 -> m10_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m10_27 -> m10_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m10_27 -> m10_19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m10_27 -> m10_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_22  [key=2, style=dotted];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_16  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_17  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_18  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_19  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_20  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_23  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_23  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_24  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_23  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_24  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_23  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_24  [key=2, style=dotted];
m11_21 -> m11_11  [color=blue, key=0, style=bold];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_22  [key=2, style=dotted];
m11_26 -> m11_28  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_26 -> m11_29  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_26 -> m11_30  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_23  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_32  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_32  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_31 -> m11_25  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_7  [key=2, style=dotted];
m11_1 -> m11_8  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_9  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_8  [key=2, style=dotted];
m11_3 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_5 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_10  [key=2, style=dotted];
m11_6 -> m11_0  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_22  [key=2, style=dotted];
m11_35 -> m11_37  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_38  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_39  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_40  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_41  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_42  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_23  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_23  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_24  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_23  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_24  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_23  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_24  [key=2, style=dotted];
m11_43 -> m11_33  [color=blue, key=0, style=bold];
m11_44 -> m11_45  [key=0, style=solid];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_22  [key=2, style=dotted];
m11_45 -> m11_47  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_45 -> m11_48  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_45 -> m11_49  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_23  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_32  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_32  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_32  [key=2, style=dotted];
m11_50 -> m11_44  [color=blue, key=0, style=bold];
m11_51 -> m11_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_52 -> m11_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_52 -> m11_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_52 -> m11_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_53 -> m11_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m11_53 -> m11_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m11_53 -> m11_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_10  [key=2, style=dotted];
m12_31 -> m12_24  [key=2, style=dotted];
m12_31 -> m12_12  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_13  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_38  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_39  [key=2, style=dotted];
m12_37 -> m12_30  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_10  [key=2, style=dotted];
m12_16 -> m12_24  [key=2, style=dotted];
m12_16 -> m12_12  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_13  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_25  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_26  [key=2, style=dotted];
m12_23 -> m12_15  [color=blue, key=0, style=bold];
m12_64 -> m12_65  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_10  [key=2, style=dotted];
m12_65 -> m12_11  [key=2, style=dotted];
m12_65 -> m12_55  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_13  [key=2, style=dotted];
m12_66 -> m12_72  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_66 -> m12_74  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_67 -> m12_68  [key=0, style=solid];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_59  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_76  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_56  [key=2, style=dotted];
m12_69 -> m12_71  [color=darkseagreen4, key=1, label=thread, style=dashed];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_57  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_58  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_59  [key=2, style=dotted];
m12_75 -> m12_64  [color=blue, key=0, style=bold];
m12_80 -> m12_81  [key=0, style=solid];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_10  [key=2, style=dotted];
m12_81 -> m12_24  [key=2, style=dotted];
m12_81 -> m12_55  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_83 -> m12_84  [key=0, style=solid];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_56  [key=2, style=dotted];
m12_84 -> m12_86  [color=darkseagreen4, key=1, label=thread, style=dashed];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_57  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_58  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_25  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_93  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_59  [key=2, style=dotted];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_39  [key=2, style=dotted];
m12_92 -> m12_80  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_10  [key=2, style=dotted];
m12_5 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_6 -> m12_8  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_13  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_14  [key=2, style=dotted];
m12_9 -> m12_4  [color=blue, key=0, style=bold];
m12_94 -> m12_95  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_22  [color=darkseagreen4, key=1, label=instanceWasDisposed, style=dashed];
m12_29 -> m12_27  [color=blue, key=0, style=bold];
m12_40 -> m12_41  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_36  [color=darkseagreen4, key=1, label=instanceWasDisposed, style=dashed];
m12_42 -> m12_40  [color=blue, key=0, style=bold];
m12_60 -> m12_61  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_13  [key=2, style=dotted];
m12_61 -> m12_51  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_61 -> m12_53  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_61 -> m12_63  [color=darkseagreen4, key=1, label=weapon1, style=dashed];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_13  [key=2, style=dotted];
m12_62 -> m12_52  [color=darkseagreen4, key=1, label=weapon2, style=dashed];
m12_62 -> m12_53  [color=darkseagreen4, key=1, label=weapon2, style=dashed];
m12_63 -> m12_60  [color=blue, key=0, style=bold];
m12_77 -> m12_78  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_13  [key=2, style=dotted];
m12_78 -> m12_73  [color=darkseagreen4, key=1, label=weapon2, style=dashed];
m12_78 -> m12_74  [color=darkseagreen4, key=1, label=weapon2, style=dashed];
m12_79 -> m12_77  [color=blue, key=0, style=bold];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_13  [key=2, style=dotted];
m12_95 -> m12_90  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_95 -> m12_91  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_96 -> m12_94  [color=blue, key=0, style=bold];
m12_43 -> m12_44  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_10  [key=2, style=dotted];
m12_44 -> m12_11  [key=2, style=dotted];
m12_44 -> m12_55  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_56  [key=2, style=dotted];
m12_48 -> m12_50  [color=darkseagreen4, key=1, label=thread, style=dashed];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_57  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_58  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_59  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_59  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_14  [key=2, style=dotted];
m12_54 -> m12_43  [color=blue, key=0, style=bold];
m12_97 -> m12_1  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.BuiltInScopeContext", style=dashed];
m12_98 -> m12_5  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_6  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_7  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_16  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_18  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_31  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_33  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_98 -> m12_35  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithSingletonScope", style=dashed];
m12_99 -> m12_44  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_47  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_61  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_62  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_65  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_66  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_68  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_78  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_81  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_83  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m12_99 -> m12_95  [color=darkseagreen4, key=1, label="Ninject.Tests.BuiltInScopeTests.WhenServiceIsBoundWithThreadScope", style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [color=green, key=0, style=solid];
m15_19 -> m15_21  [color=green, key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_21 -> m15_22  [color=green, key=0, style=solid];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [key=0, style=solid];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>", style=dashed];
m15_33 -> m15_39  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_33 -> m15_41  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_33 -> m15_42  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_44  [key=2, style=dotted];
m15_34 -> m15_45  [key=2, style=dotted];
m15_34 -> m15_37  [color=darkseagreen4, key=1, label=properties, style=dashed];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_43  [key=0, style=solid];
m15_39 -> m15_43  [key=0, style=solid];
m15_39 -> m15_47  [key=2, style=dotted];
m15_39 -> m15_48  [key=2, style=dotted];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_20  [key=2, style=dotted];
m15_42 -> m15_35  [key=0, style=solid];
m15_42 -> m15_21  [key=2, style=dotted];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_16  [key=2, style=dotted];
m15_37 -> m15_46  [key=2, style=dotted];
m15_37 -> m15_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_37 -> m15_40  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_52  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_36 -> m15_39  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_40  [key=0, style=solid];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_49  [key=2, style=dotted];
m15_40 -> m15_50  [key=2, style=dotted];
m15_40 -> m15_42  [color=darkseagreen4, key=1, label=target, style=dashed];
m15_43 -> m15_33  [color=blue, key=0, style=bold];
m15_15 -> m15_6  [color=blue, key=0, style=bold];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m15_3 -> m15_6  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_3 -> m15_8  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_3 -> m15_11  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_3 -> m15_12  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m15_3 -> m15_13  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_15  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_15  [key=2, style=dotted];
m15_6 -> m15_7  [color=green, key=0, style=solid];
m15_6 -> m15_16  [key=2, style=dotted];
m15_6 -> m15_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_6 -> m15_13  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m15_6 -> m15_8  [color=green, key=1, label=object, style=dashed];
m15_6 -> m15_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_6 -> m15_14  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_6 -> m15_12  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m15_8 -> m15_9  [color=red, key=0, style=solid];
m15_8 -> m15_13  [key=0, style=solid];
m15_8 -> m15_18  [key=2, style=dotted];
m15_8 -> m15_11  [color=darkseagreen4, key=1, label=directive, style=dashed];
m15_8 -> m15_12  [color=darkseagreen4, key=1, label=directive, style=dashed];
m15_8 -> m15_15  [color=green, key=0, style=solid];
m15_8 -> m15_16  [color=green, key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_20  [key=2, style=dotted];
m15_11 -> m15_13  [key=0, style=solid];
m15_12 -> m15_8  [key=0, style=solid];
m15_12 -> m15_21  [key=2, style=dotted];
m15_12 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_22  [key=2, style=dotted];
m15_7 -> m15_8  [color=green, key=0, style=solid];
m15_7 -> m15_17  [key=2, style=dotted];
m15_7 -> m15_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_7 -> m15_10  [color=darkseagreen4, key=1, label=parameterNames, style=dashed];
m15_7 -> m15_9  [color=green, key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_8  [key=0, style=solid];
m15_10 -> m15_19  [key=2, style=dotted];
m15_10 -> m15_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_10 -> m15_14  [key=0, style=solid];
m15_9 -> m15_10  [color=red, key=0, style=solid];
m15_9 -> m15_30  [color=red, key=1, label=propertyInjectionDirective, style=dashed];
m15_9 -> m15_8  [color=red, key=3, label="Local variable Ninject.Planning.Directives.PropertyInjectionDirective propertyInjectionDirective", style=bold];
m15_9 -> m15_11  [color=darkseagreen4, key=1, label=weakReference, style=dashed];
m15_9 -> m15_13  [color=darkseagreen4, key=1, label=weakReference, style=dashed];
m15_14 -> m15_3  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_17  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_7  [color=green, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_24 -> m15_8  [color=green, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_24 -> m15_20  [color=green, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_24 -> m15_21  [color=green, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_24 -> m15_14  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_24 -> m15_19  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.ReferenceEqualWeakReference", style=dashed];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [key=0, style=solid];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_31 -> m15_29  [color=blue, key=0, style=bold];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_54  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_53 -> m15_51  [color=blue, key=0, style=bold];
m15_65 -> m15_66  [key=0, style=solid];
m15_66 -> m15_64  [color=blue, key=0, style=bold];
m15_20 -> m15_55  [key=0, style=solid];
m15_20 -> m15_56  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m15_20 -> m15_57  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_20 -> m15_65  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m15_20 -> m15_58  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m15_20 -> m15_3  [color=darkorchid, key=3, label="Parameter variable Ninject.Activation.IContext context", style=bold];
m15_20 -> m15_33  [color=darkorchid, key=3, label="Parameter variable Ninject.Activation.IContext context", style=bold];
m15_20 -> m15_21  [color=green, key=0, style=solid];
m15_20 -> m15_23  [color=green, key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_15  [key=2, style=dotted];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_15  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_60  [key=2, style=dotted];
m15_57 -> m15_16  [key=2, style=dotted];
m15_57 -> m15_61  [key=2, style=dotted];
m15_57 -> m15_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_62  [key=2, style=dotted];
m15_58 -> m15_63  [key=2, style=dotted];
m15_59 -> m15_20  [color=blue, key=0, style=bold];
m15_22 -> m15_18  [color=blue, key=0, style=bold];
m15_67 -> m15_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_67 -> m15_11  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_67 -> m15_13  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_67 -> m15_34  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_67 -> m15_40  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_67 -> m15_41  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m15_68 -> m15_30  [color=darkseagreen4, key=1, label=propertyInjectionDirective, style=dashed];
m15_69 -> m15_52  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_70 -> m15_65  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m16_100 -> m16_101  [color=green, key=0, style=solid];
m16_101 -> m16_102  [color=green, key=0, style=solid];
m16_101 -> m16_84  [color=green, key=2, style=dotted];
m16_101 -> m16_4  [color=green, key=2, style=dotted];
m16_102 -> m16_100  [color=blue, key=0, style=bold];
m16_69 -> m16_70  [color=green, key=0, style=solid];
m16_70 -> m16_71  [color=green, key=0, style=solid];
m16_70 -> m16_4  [color=green, key=2, style=dotted];
m16_71 -> m16_69  [color=blue, key=0, style=bold];
m16_81 -> m16_82  [color=green, key=0, style=solid];
m16_82 -> m16_83  [color=green, key=0, style=solid];
m16_82 -> m16_84  [color=green, key=2, style=dotted];
m16_82 -> m16_4  [color=green, key=2, style=dotted];
m16_83 -> m16_81  [color=blue, key=0, style=bold];
m16_27 -> m16_28  [color=green, key=0, style=solid];
m16_28 -> m16_29  [color=green, key=0, style=solid];
m16_28 -> m16_15  [color=green, key=2, style=dotted];
m16_28 -> m16_16  [color=green, key=2, style=dotted];
m16_28 -> m16_20  [color=green, key=2, style=dotted];
m16_29 -> m16_27  [color=blue, key=0, style=bold];
m16_5 -> m16_6  [color=green, key=0, style=solid];
m16_6 -> m16_7  [color=green, key=0, style=solid];
m16_6 -> m16_3  [color=green, key=2, style=dotted];
m16_6 -> m16_4  [color=green, key=2, style=dotted];
m16_7 -> m16_5  [color=blue, key=0, style=bold];
m16_21 -> m16_22  [color=green, key=0, style=solid];
m16_22 -> m16_23  [color=green, key=0, style=solid];
m16_22 -> m16_3  [color=green, key=2, style=dotted];
m16_22 -> m16_20  [color=green, key=2, style=dotted];
m16_23 -> m16_21  [color=blue, key=0, style=bold];
m16_57 -> m16_58  [color=green, key=0, style=solid];
m16_58 -> m16_59  [color=green, key=0, style=solid];
m16_58 -> m16_60  [color=green, key=2, style=dotted];
m16_59 -> m16_57  [color=blue, key=0, style=bold];
m16_94 -> m16_95  [color=green, key=0, style=solid];
m16_95 -> m16_96  [color=green, key=0, style=solid];
m16_95 -> m16_84  [color=green, key=2, style=dotted];
m16_95 -> m16_4  [color=green, key=2, style=dotted];
m16_96 -> m16_94  [color=blue, key=0, style=bold];
m16_103 -> m16_104  [color=green, key=0, style=solid];
m16_104 -> m16_105  [color=green, key=0, style=solid];
m16_104 -> m16_45  [color=green, key=2, style=dotted];
m16_104 -> m16_4  [color=green, key=2, style=dotted];
m16_105 -> m16_103  [color=blue, key=0, style=bold];
m16_42 -> m16_43  [color=green, key=0, style=solid];
m16_43 -> m16_44  [color=green, key=0, style=solid];
m16_43 -> m16_45  [color=green, key=2, style=dotted];
m16_43 -> m16_4  [color=green, key=2, style=dotted];
m16_44 -> m16_42  [color=blue, key=0, style=bold];
m16_85 -> m16_86  [color=green, key=0, style=solid];
m16_86 -> m16_87  [color=green, key=0, style=solid];
m16_86 -> m16_45  [color=green, key=2, style=dotted];
m16_86 -> m16_4  [color=green, key=2, style=dotted];
m16_87 -> m16_85  [color=blue, key=0, style=bold];
m16_91 -> m16_92  [color=green, key=0, style=solid];
m16_92 -> m16_93  [color=green, key=0, style=solid];
m16_92 -> m16_45  [color=green, key=2, style=dotted];
m16_92 -> m16_4  [color=green, key=2, style=dotted];
m16_93 -> m16_91  [color=blue, key=0, style=bold];
m16_15 -> m16_120  [color=green, key=0, style=solid];
m16_120 -> m16_121  [color=green, key=0, style=solid];
m16_121 -> m16_15  [color=blue, key=0, style=bold];
m16_117 -> m16_118  [color=green, key=0, style=solid];
m16_118 -> m16_119  [color=green, key=0, style=solid];
m16_118 -> m16_116  [color=green, key=2, style=dotted];
m16_119 -> m16_117  [color=blue, key=0, style=bold];
m16_8 -> m16_9  [color=green, key=0, style=solid];
m16_9 -> m16_10  [color=green, key=0, style=solid];
m16_9 -> m16_11  [color=green, key=2, style=dotted];
m16_9 -> m16_4  [color=green, key=2, style=dotted];
m16_10 -> m16_8  [color=blue, key=0, style=bold];
m16_38 -> m16_39  [color=green, key=0, style=solid];
m16_39 -> m16_40  [color=green, key=0, style=solid];
m16_39 -> m16_41  [color=green, key=2, style=dotted];
m16_40 -> m16_38  [color=blue, key=0, style=bold];
m16_88 -> m16_89  [color=green, key=0, style=solid];
m16_89 -> m16_90  [color=green, key=0, style=solid];
m16_89 -> m16_84  [color=green, key=2, style=dotted];
m16_89 -> m16_4  [color=green, key=2, style=dotted];
m16_90 -> m16_88  [color=blue, key=0, style=bold];
m16_122 -> m16_123  [color=green, key=0, style=solid];
m16_123 -> m16_124  [color=green, key=0, style=solid];
m16_123 -> m16_45  [color=green, key=2, style=dotted];
m16_124 -> m16_122  [color=blue, key=0, style=bold];
m16_78 -> m16_79  [color=green, key=0, style=solid];
m16_79 -> m16_80  [color=green, key=0, style=solid];
m16_79 -> m16_20  [color=green, key=2, style=dotted];
m16_80 -> m16_78  [color=blue, key=0, style=bold];
m16_53 -> m16_54  [color=green, key=0, style=solid];
m16_54 -> m16_55  [color=green, key=0, style=solid];
m16_54 -> m16_56  [color=green, key=2, style=dotted];
m16_55 -> m16_53  [color=blue, key=0, style=bold];
m16_12 -> m16_13  [color=green, key=0, style=solid];
m16_13 -> m16_14  [color=green, key=0, style=solid];
m16_13 -> m16_15  [color=green, key=2, style=dotted];
m16_13 -> m16_16  [color=green, key=2, style=dotted];
m16_13 -> m16_4  [color=green, key=2, style=dotted];
m16_14 -> m16_12  [color=blue, key=0, style=bold];
m16_50 -> m16_51  [color=green, key=0, style=solid];
m16_51 -> m16_52  [color=green, key=0, style=solid];
m16_51 -> m16_45  [color=green, key=2, style=dotted];
m16_51 -> m16_20  [color=green, key=2, style=dotted];
m16_52 -> m16_50  [color=blue, key=0, style=bold];
m16_65 -> m16_66  [color=green, key=0, style=solid];
m16_66 -> m16_67  [color=green, key=0, style=solid];
m16_66 -> m16_68  [color=green, key=2, style=dotted];
m16_67 -> m16_65  [color=blue, key=0, style=bold];
m16_17 -> m16_18  [color=green, key=0, style=solid];
m16_18 -> m16_19  [color=green, key=0, style=solid];
m16_18 -> m16_3  [color=green, key=2, style=dotted];
m16_18 -> m16_20  [color=green, key=2, style=dotted];
m16_19 -> m16_17  [color=blue, key=0, style=bold];
m16_106 -> m16_107  [color=green, key=0, style=solid];
m16_107 -> m16_108  [color=green, key=0, style=solid];
m16_107 -> m16_109  [color=green, key=2, style=dotted];
m16_108 -> m16_106  [color=blue, key=0, style=bold];
m16_46 -> m16_47  [color=green, key=0, style=solid];
m16_47 -> m16_48  [color=green, key=0, style=solid];
m16_47 -> m16_49  [color=green, key=2, style=dotted];
m16_48 -> m16_46  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [color=green, key=0, style=solid];
m16_36 -> m16_37  [color=green, key=0, style=solid];
m16_36 -> m16_33  [color=green, key=2, style=dotted];
m16_36 -> m16_34  [color=green, key=2, style=dotted];
m16_36 -> m16_4  [color=green, key=2, style=dotted];
m16_37 -> m16_35  [color=blue, key=0, style=bold];
m16_30 -> m16_31  [color=green, key=0, style=solid];
m16_31 -> m16_32  [color=green, key=0, style=solid];
m16_31 -> m16_33  [color=green, key=2, style=dotted];
m16_31 -> m16_34  [color=green, key=2, style=dotted];
m16_31 -> m16_20  [color=green, key=2, style=dotted];
m16_32 -> m16_30  [color=blue, key=0, style=bold];
m16_61 -> m16_62  [color=green, key=0, style=solid];
m16_62 -> m16_63  [color=green, key=0, style=solid];
m16_62 -> m16_64  [color=green, key=2, style=dotted];
m16_63 -> m16_61  [color=blue, key=0, style=bold];
m16_72 -> m16_73  [color=green, key=0, style=solid];
m16_73 -> m16_74  [color=green, key=0, style=solid];
m16_73 -> m16_4  [color=green, key=2, style=dotted];
m16_74 -> m16_72  [color=blue, key=0, style=bold];
m16_24 -> m16_25  [color=green, key=0, style=solid];
m16_25 -> m16_26  [color=green, key=0, style=solid];
m16_25 -> m16_11  [color=green, key=2, style=dotted];
m16_25 -> m16_20  [color=green, key=2, style=dotted];
m16_26 -> m16_24  [color=blue, key=0, style=bold];
m16_125 -> m16_126  [color=green, key=0, style=solid];
m16_126 -> m16_127  [color=green, key=0, style=solid];
m16_126 -> m16_128  [color=green, key=2, style=dotted];
m16_127 -> m16_125  [color=blue, key=0, style=bold];
m16_113 -> m16_114  [color=green, key=0, style=solid];
m16_114 -> m16_115  [color=green, key=0, style=solid];
m16_114 -> m16_116  [color=green, key=2, style=dotted];
m16_115 -> m16_113  [color=blue, key=0, style=bold];
m16_97 -> m16_98  [color=green, key=0, style=solid];
m16_98 -> m16_99  [color=green, key=0, style=solid];
m16_98 -> m16_45  [color=green, key=2, style=dotted];
m16_98 -> m16_4  [color=green, key=2, style=dotted];
m16_99 -> m16_97  [color=blue, key=0, style=bold];
m16_110 -> m16_111  [color=green, key=0, style=solid];
m16_111 -> m16_112  [color=green, key=0, style=solid];
m16_111 -> m16_109  [color=green, key=2, style=dotted];
m16_112 -> m16_110  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [color=green, key=0, style=solid];
m16_1 -> m16_2  [color=green, key=0, style=solid];
m16_1 -> m16_3  [color=green, key=2, style=dotted];
m16_1 -> m16_4  [color=green, key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_75 -> m16_76  [color=green, key=0, style=solid];
m16_76 -> m16_77  [color=green, key=0, style=solid];
m16_76 -> m16_20  [color=green, key=2, style=dotted];
m16_77 -> m16_75  [color=blue, key=0, style=bold];
m16_129 -> m16_120  [color=green, key=1, label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>", style=dashed];
m16_129 -> m16_123  [color=green, key=1, label="UnitDriven.Should.ShouldExtensions.EqualityComparerUsingComparer<T>", style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [color=green, key=0, style=solid];
m18_5 -> m18_6  [color=green, key=0, style=solid];
m18_5 -> m18_4  [color=blue, key=0, style=bold];
m18_6 -> m18_4  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_1 -> m18_3  [color=green, key=2, style=dotted];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m19_15 -> m19_16  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_3  [key=2, style=dotted];
m19_17 -> m19_15  [color=blue, key=0, style=bold];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m19_4 -> m19_5  [color=green, key=0, style=solid];
m19_4 -> m19_6  [color=green, key=2, style=dotted];
m19_5 -> m19_3  [color=blue, key=0, style=bold];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_12  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_8  [color=darkseagreen4, key=1, label=evt, style=dashed];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_9  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_13  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_14  [key=2, style=dotted];
m19_12 -> m19_3  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_3  [color=green, key=2, style=dotted];
m19_2 -> m19_0  [color=blue, key=0, style=bold];
m19_18 -> m19_1  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_4  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_5  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_6  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_8  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_9  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_10  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_11  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_18 -> m19_16  [color=darkseagreen4, key=1, label="Ninject.Infrastructure.Disposal.DisposableObject", style=dashed];
m19_237 -> m19_1  [color=green, key=1, label="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext", style=dashed];
m19_237 -> m19_4  [color=green, key=1, label="Ninject.Tests.Integration.StandardKernelTests.StandardKernelContext", style=dashed];
}
