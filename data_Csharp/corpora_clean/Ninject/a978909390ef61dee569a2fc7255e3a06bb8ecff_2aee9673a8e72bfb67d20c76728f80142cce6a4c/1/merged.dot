digraph  {
m1_38 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="ExtensionsForMemberInfoTest.cs"];
m1_25 [label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", span="109-109", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_31 [label="var targetType = target.Type", span="111-111", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_34 [label="targetType.IsGenericType && targetType.GetInterfaces().Any(type => type == typeof(IEnumerable))", span="117-117", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_36 [label="return targetType;", span="122-122", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_32 [label="targetType.IsArray", span="112-112", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_33 [label="targetType = targetType.GetElementType()", span="114-114", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_35 [label="targetType = targetType.GetGenericArguments()[0]", span="119-119", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_37 [label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", span="109-109", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.GetTargetType(Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_27 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ExtensionsForMemberInfoTest.cs"];
m1_50 [label="Entry Ninject.Parameters.IConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="19-19", cluster="Ninject.Parameters.IConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_26 [label="Entry Ninject.IKernel.GetBindings(System.Type)", span="90-90", cluster="Ninject.IKernel.GetBindings(System.Type)", file="ExtensionsForMemberInfoTest.cs"];
m1_17 [label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.ParameterExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="131-131", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.ParameterExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_44 [label="return context\r\n                .Parameters.OfType<IConstructorArgument>()\r\n                .Any(parameter => parameter.AppliesToTarget(context, target));", span="133-135", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.ParameterExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_45 [label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.ParameterExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="131-131", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.ParameterExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_39 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="ExtensionsForMemberInfoTest.cs"];
m1_0 [label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", span="49-49", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_1 [label="Ensure.ArgumentNotNull(context, ''context'')", span="51-51", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_2 [label="Ensure.ArgumentNotNull(directive, ''constructor'')", span="52-52", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_3 [label="directive.HasInjectAttribute", span="54-54", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_4 [label="return int.MaxValue;", span="56-56", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_5 [label="var score = 1", span="59-59", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_6 [label="directive.Targets", span="60-60", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_8 [label="score++", span="64-64", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_10 [label="score++", span="70-70", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_12 [label="score > 0", span="75-75", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_13 [label="score += int.MinValue", span="77-77", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_7 [label="ParameterExists(context, target)", span="62-62", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_14 [label="return score;", span="81-81", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_9 [label="BindingExists(context, target)", span="68-68", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", color=green, community=0, file="ExtensionsForMemberInfoTest.cs"];
m1_11 [label="score++", span="74-74", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_15 [label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", span="49-49", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(Ninject.Activation.IContext, Ninject.Planning.Directives.ConstructorInjectionDirective)", file="ExtensionsForMemberInfoTest.cs"];
m1_18 [label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="90-90", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_19 [label="return this.BindingExists(context.Kernel, context, target);", span="92-92", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_20 [label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="90-90", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_40 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ExtensionsForMemberInfoTest.cs"];
m1_21 [label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="102-102", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_22 [label="var targetType = GetTargetType(target)", span="104-104", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_23 [label="return kernel.GetBindings(targetType).Any(b => !b.IsImplicit)\r\n                   || target.HasDefaultValue;", span="105-106", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_24 [label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="102-102", cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.BindingExists(Ninject.IKernel, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ExtensionsForMemberInfoTest.cs"];
m1_46 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ExtensionsForMemberInfoTest.cs"];
m1_41 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_48 [label="parameter.AppliesToTarget(context, target)", span="135-135", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_47 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_49 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_28 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_30 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_29 [label="!b.IsImplicit", span="105-105", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_42 [label="type == typeof(IEnumerable)", span="117-117", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_43 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="ExtensionsForMemberInfoTest.cs"];
m1_16 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ExtensionsForMemberInfoTest.cs"];
m1_51 [label="Ninject.Selection.Heuristics.StandardConstructorScorer", span="", file="ExtensionsForMemberInfoTest.cs"];
m1_52 [label="Ninject.Activation.IContext", span="", file="ExtensionsForMemberInfoTest.cs"];
m1_53 [label="Ninject.Planning.Targets.ITarget", span="", file="ExtensionsForMemberInfoTest.cs"];
m3_27 [label="Entry Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", span="144-144", cluster="Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_28 [label="this.KernelConfiguration.AddBinding(binding)", span="146-146", cluster="Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_29 [label="this.Bindings.Add(binding)", span="147-147", cluster="Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_30 [label="Exit Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", span="144-144", cluster="Ninject.Modules.NinjectModule.AddBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IFluentSyntax.cs"];
m3_8 [label="Entry Ninject.Modules.NinjectModule.Load()", span="115-115", cluster="Ninject.Modules.NinjectModule.Load()", file="IFluentSyntax.cs"];
m3_20 [label="Exit Ninject.Modules.NinjectModule.Load()", span="115-115", cluster="Ninject.Modules.NinjectModule.Load()", file="IFluentSyntax.cs"];
m3_23 [label="Entry Ninject.Modules.NinjectModule.Unbind(System.Type)", span="135-135", cluster="Ninject.Modules.NinjectModule.Unbind(System.Type)", file="IFluentSyntax.cs"];
m3_24 [label="this.KernelConfiguration.Unbind(service)", span="137-137", cluster="Ninject.Modules.NinjectModule.Unbind(System.Type)", file="IFluentSyntax.cs"];
m3_25 [label="Exit Ninject.Modules.NinjectModule.Unbind(System.Type)", span="135-135", cluster="Ninject.Modules.NinjectModule.Unbind(System.Type)", file="IFluentSyntax.cs"];
m3_32 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="IFluentSyntax.cs"];
m3_0 [label="Entry Ninject.Modules.NinjectModule.NinjectModule()", span="39-39", cluster="Ninject.Modules.NinjectModule.NinjectModule()", file="IFluentSyntax.cs"];
m3_1 [label="this.Bindings = new List<IBinding>()", span="41-41", cluster="Ninject.Modules.NinjectModule.NinjectModule()", file="IFluentSyntax.cs"];
m3_2 [label="Exit Ninject.Modules.NinjectModule.NinjectModule()", span="39-39", cluster="Ninject.Modules.NinjectModule.NinjectModule()", file="IFluentSyntax.cs"];
m3_14 [label="Entry Ninject.Modules.NinjectModule.Unload()", span="120-120", cluster="Ninject.Modules.NinjectModule.Unload()", file="IFluentSyntax.cs"];
m3_21 [label="Exit Ninject.Modules.NinjectModule.Unload()", span="120-120", cluster="Ninject.Modules.NinjectModule.Unload()", file="IFluentSyntax.cs"];
m3_38 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="IFluentSyntax.cs"];
m3_37 [label="Entry Ninject.Syntax.IBindingRoot.RemoveBinding(Ninject.Planning.Bindings.IBinding)", span="137-137", cluster="Ninject.Syntax.IBindingRoot.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_15 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="IFluentSyntax.cs"];
m3_4 [label="Entry Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", span="87-87", cluster="Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_5 [label="this.KernelConfiguration = kernelConfiguration", span="89-89", cluster="Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_6 [label="this.Load()", span="90-90", cluster="Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_7 [label="Exit Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", span="87-87", cluster="Ninject.Modules.NinjectModule.OnLoad(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_33 [label="Entry Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", span="154-154", cluster="Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_34 [label="this.KernelConfiguration.RemoveBinding(binding)", span="156-156", cluster="Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_35 [label="this.Bindings.Remove(binding)", span="157-157", cluster="Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_36 [label="Exit Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", span="154-154", cluster="Ninject.Modules.NinjectModule.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_16 [label="Entry Ninject.Modules.NinjectModule.OnVerifyRequiredModules()", span="107-107", cluster="Ninject.Modules.NinjectModule.OnVerifyRequiredModules()", file="IFluentSyntax.cs"];
m3_17 [label="this.VerifyRequiredModulesAreLoaded()", span="109-109", cluster="Ninject.Modules.NinjectModule.OnVerifyRequiredModules()", file="IFluentSyntax.cs"];
m3_18 [label="Exit Ninject.Modules.NinjectModule.OnVerifyRequiredModules()", span="107-107", cluster="Ninject.Modules.NinjectModule.OnVerifyRequiredModules()", file="IFluentSyntax.cs"];
m3_26 [label="Entry Ninject.Syntax.IBindingRoot.Unbind(System.Type)", span="84-84", cluster="Ninject.Syntax.IBindingRoot.Unbind(System.Type)", file="IFluentSyntax.cs"];
m3_31 [label="Entry Ninject.Syntax.IBindingRoot.AddBinding(Ninject.Planning.Bindings.IBinding)", span="131-131", cluster="Ninject.Syntax.IBindingRoot.AddBinding(Ninject.Planning.Bindings.IBinding)", file="IFluentSyntax.cs"];
m3_19 [label="Entry Ninject.Modules.NinjectModule.VerifyRequiredModulesAreLoaded()", span="127-127", cluster="Ninject.Modules.NinjectModule.VerifyRequiredModulesAreLoaded()", file="IFluentSyntax.cs"];
m3_22 [label="Exit Ninject.Modules.NinjectModule.VerifyRequiredModulesAreLoaded()", span="127-127", cluster="Ninject.Modules.NinjectModule.VerifyRequiredModulesAreLoaded()", file="IFluentSyntax.cs"];
m3_9 [label="Entry Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", span="97-97", cluster="Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_10 [label="this.Unload()", span="99-99", cluster="Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_11 [label="this.Bindings.Map(this.KernelConfiguration.RemoveBinding)", span="100-100", cluster="Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_12 [label="this.KernelConfiguration = null", span="101-101", cluster="Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_13 [label="Exit Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", span="97-97", cluster="Ninject.Modules.NinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="IFluentSyntax.cs"];
m3_39 [label="Ninject.Modules.NinjectModule", span="", file="IFluentSyntax.cs"];
m5_0 [label="Entry Ninject.NinjectSettings.Get<T>(string, T)", span="145-145", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="ReferenceEqualWeakReference.cs"];
m5_1 [label="object value", span="147-147", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="ReferenceEqualWeakReference.cs"];
m5_2 [label="return _values.TryGetValue(key, out value) ? (T)value : defaultValue;", span="148-148", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="ReferenceEqualWeakReference.cs"];
m5_3 [label="Exit Ninject.NinjectSettings.Get<T>(string, T)", span="145-145", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="ReferenceEqualWeakReference.cs"];
m5_4 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReferenceEqualWeakReference.cs"];
m5_5 [label="Entry Ninject.NinjectSettings.Set(string, object)", span="156-156", cluster="Ninject.NinjectSettings.Set(string, object)", file="ReferenceEqualWeakReference.cs"];
m5_6 [label="_values[key] = value", span="158-158", cluster="Ninject.NinjectSettings.Set(string, object)", file="ReferenceEqualWeakReference.cs"];
m5_7 [label="Exit Ninject.NinjectSettings.Set(string, object)", span="156-156", cluster="Ninject.NinjectSettings.Set(string, object)", file="ReferenceEqualWeakReference.cs"];
m5_8 [label="Ninject.NinjectSettings", span="", file="ReferenceEqualWeakReference.cs"];
m6_237 [label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="37-37", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="WhenLoadIsCalledWithModule.cs"];
m6_42 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="59-59", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_43 [label="IWeapon weapon = kernel.Get<Sword>()", span="61-61", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_45 [label="kernel.Bind<Sword>().To<ShortSword>()", span="63-63", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_46 [label="weapon = kernel.Get<Sword>()", span="64-64", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_44 [label="weapon.Should().BeOfType<Sword>()", span="62-62", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_47 [label="weapon.Should().BeOfType<ShortSword>()", span="65-65", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_48 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="59-59", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_13 [label="Entry Unk.>", span="", cluster="Unk.>", file="WhenLoadIsCalledWithModule.cs"];
m6_86 [label="Entry Ninject.Tests.Fakes.ShortSword.ShortSword()", span="2-2", cluster="Ninject.Tests.Fakes.ShortSword.ShortSword()", file="WhenLoadIsCalledWithModule.cs"];
m6_213 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="280-280", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_214 [label="kernel.Bind<IWeapon>().To<Sword>()", span="282-282", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_215 [label="kernel.Bind<IWarrior>().To<FootSoldier>()", span="283-283", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_216 [label="kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="284-285", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_217 [label="kernel.Bind<Samurai>().ToSelf()", span="287-287", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_218 [label="kernel.Bind<Barracks>().ToSelf()", span="288-288", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_219 [label="kernel.Bind<NinjaBarracks>().ToSelf()", span="289-289", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_220 [label="var warrior = kernel.Get<Samurai>()", span="291-291", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_221 [label="var barracks = kernel.Get<Barracks>()", span="292-292", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_222 [label="var ninja = kernel.Get<NinjaBarracks>()", span="293-293", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_223 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="295-295", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_224 [label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="296-296", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_225 [label="ninja.Weapon.Should().BeOfType<Sword>()", span="297-297", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_226 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="280-280", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_130 [label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="118-118", cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="WhenLoadIsCalledWithModule.cs"];
m6_142 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="174-174", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_143 [label="kernel.Bind<IWeapon>().To<Sword>()", span="176-176", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_144 [label="kernel.Bind<IWarrior>().To<FootSoldier>()", span="177-177", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_145 [label="kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="178-179", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_146 [label="kernel.Bind<Samurai>().ToSelf()", span="181-181", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_147 [label="kernel.Bind<Barracks>().ToSelf()", span="182-182", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_148 [label="kernel.Bind<NinjaBarracks>().ToSelf()", span="183-183", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_149 [label="var warrior = kernel.Get<Samurai>()", span="185-185", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_150 [label="var barracks = kernel.Get<Barracks>()", span="186-186", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_151 [label="var ninja = kernel.Get<NinjaBarracks>()", span="187-187", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_152 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="189-189", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_153 [label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="190-190", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_154 [label="ninja.Weapon.Should().BeOfType<Sword>()", span="191-191", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_155 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="174-174", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_77 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="95-95", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_78 [label="var shortSword = new ShortSword()", span="97-97", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_79 [label="var shuriken = new Shuriken()", span="98-98", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_80 [label="kernel.Bind<IWeapon>().ToConstant(shortSword)", span="100-100", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_83 [label="result.Should().Contain(shortSword)", span="103-103", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_81 [label="kernel.Bind<IWeapon>().ToConstant(shuriken).When(_ => true)", span="101-101", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_82 [label="var result = kernel.GetAll<IWeapon>()", span="102-102", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_84 [label="result.Should().Contain(shuriken)", span="104-104", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_85 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="95-95", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_157 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="195-195", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_158 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="197-197", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_159 [label="kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>))", span="198-198", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_160 [label="kernel.Bind<IWeapon>().To<Sword>()", span="199-199", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_161 [label="var service = kernel.Get<ClosedGenericService>()", span="201-201", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_162 [label="service.Warrior.Should().BeOfType<Samurai>()", span="203-203", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_163 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="195-195", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_132 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="160-160", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_133 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="162-162", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_134 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(new[] { typeof(IGenericService<>) })", span="163-163", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_135 [label="kernel.Bind<IWeapon>().To<Sword>()", span="164-164", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_136 [label="var service = kernel.Get<GenericService<int>>()", span="166-166", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_137 [label="var anotherService = kernel.Get<AnotherGenericService<int>>()", span="167-167", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_138 [label="service.Warrior.Should().BeOfType<Samurai>()", span="169-169", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_139 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="170-170", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_140 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="160-160", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_238 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", span="164-164", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", file="WhenLoadIsCalledWithModule.cs"];
m6_117 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="137-137", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_118 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="139-139", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_119 [label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<IWarrior>()", span="140-140", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_120 [label="var warrior = kernel.Get<IWarrior>()", span="142-142", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_121 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="144-144", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_122 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="137-137", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_12 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="WhenLoadIsCalledWithModule.cs"];
m6_9 [label="DeactivationActions = new List<Action<IContext, object>>()", span="102-102", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_0 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="86-86", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="WhenLoadIsCalledWithModule.cs"];
m6_1 [label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="86-86", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="WhenLoadIsCalledWithModule.cs"];
m6_2 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", span="93-93", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_3 [label="Ensure.ArgumentNotNull(service, ''service'')", span="95-95", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_4 [label="Ensure.ArgumentNotNull(metadata, ''metadata'')", span="96-96", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_5 [label="Service = service", span="98-98", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_6 [label="Metadata = metadata", span="99-99", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_88 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="105-105", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="WhenLoadIsCalledWithModule.cs"];
m6_203 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="74-74", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="WhenLoadIsCalledWithModule.cs"];
m6_8 [label="ActivationActions = new List<Action<IContext, object>>()", span="101-101", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_18 [label="var warrior = kernel.Get<Samurai>()", span="27-27", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_94 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="108-108", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_95 [label="var shortSword = new ShortSword()", span="110-110", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="WhenLoadIsCalledWithModule.cs"];
m6_96 [label="var sword = new Sword()", span="111-111", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_98 [label="kernel.Bind<IWeapon>().ToConstant(shortSword)", span="114-114", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_102 [label="result.Should().Contain(shortSword)", span="118-118", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_97 [label="var shuriken = new Shuriken()", span="112-112", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_99 [label="kernel.Bind<IWeapon>().ToConstant(sword)", span="115-115", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_103 [label="result.Should().Contain(sword)", span="119-119", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_101 [label="var result = kernel.GetAll<IWeapon>()", span="117-117", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_104 [label="result.Should().NotContain(shuriken)", span="120-120", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_100 [label="kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="116-116", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_105 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="108-108", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_7 [label="Parameters = new List<IParameter>()", span="100-100", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", file="WhenLoadIsCalledWithModule.cs"];
m6_131 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="56-56", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="WhenLoadIsCalledWithModule.cs"];
m6_227 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="301-301", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_229 [label="kernel.Bind<Barracks>().ToSelf().Named(Name)", span="304-304", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_230 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="305-305", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_231 [label="kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorNamed(Name)", span="306-306", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_232 [label="kernel.Bind<IWeapon>().To<Dagger>()", span="307-307", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_233 [label="var barack = kernel.Get<Barracks>()", span="309-309", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_234 [label="barack.Weapon.Should().BeOfType<Sword>()", span="311-311", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_235 [label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="312-312", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_228 [label="string Name = ''SomeName''", span="303-303", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_236 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="301-301", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_259 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="130-130", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="WhenLoadIsCalledWithModule.cs"];
m6_108 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="124-124", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_109 [label="var shortSword = new ShortSword()", span="126-126", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_110 [label="var shuriken = new Shuriken()", span="127-127", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_111 [label="kernel.Bind<IWeapon>().ToConstant(shortSword).BindingConfiguration.IsImplicit = true", span="129-129", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_114 [label="result.Should().Contain(shortSword)", span="132-132", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_112 [label="kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="130-130", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_113 [label="var result = kernel.GetAll<IWeapon>()", span="131-131", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_115 [label="result.Should().Contain(shuriken)", span="133-133", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_116 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="124-124", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_14 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_15 [label="kernel.Bind<IWeapon>().To<Sword>()", span="24-24", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_16 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="25-25", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_17 [label="kernel.Bind<Samurai>().ToSelf()", span="26-26", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_107 [label="Entry Unk.NotContain", span="", cluster="Unk.NotContain", file="WhenLoadIsCalledWithModule.cs"];
m6_106 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="WhenLoadIsCalledWithModule.cs"];
m6_38 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_39 [label="var weapon = kernel.Get<Sword>()", span="54-54", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_40 [label="weapon.Should().BeOfType<Sword>()", span="55-55", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_41 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_277 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="185-185", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="WhenLoadIsCalledWithModule.cs"];
m6_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="39-39", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="WhenLoadIsCalledWithModule.cs"];
m6_11 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="WhenLoadIsCalledWithModule.cs"];
m6_268 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="346-346", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_269 [label="kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="348-348", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_270 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="349-349", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_271 [label="kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="351-351", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_272 [label="kernel.Bind<IWeapon>().To<Dagger>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="352-352", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_273 [label="var barack = kernel.Get<Barracks>()", span="354-354", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_274 [label="barack.Weapon.Should().BeOfType<Dagger>()", span="356-356", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_275 [label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="357-357", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_276 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="346-346", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_207 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="269-269", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_208 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="271-271", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_209 [label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<Samurai>()", span="272-272", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_210 [label="var warrior = kernel.Get<IWarrior>()", span="274-274", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_211 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="276-276", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_212 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="269-269", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="WhenLoadIsCalledWithModule.cs"];
m6_87 [label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4", cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="WhenLoadIsCalledWithModule.cs"];
m6_197 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="258-258", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_198 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="260-260", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_199 [label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<IWarrior>()", span="261-261", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_200 [label="Action getWarrior = () => kernel.Get<IWarrior>()", span="263-263", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_201 [label="getWarrior.ShouldThrow<ActivationException>()", span="265-265", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_202 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="258-258", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_156 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", span="93-93", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", file="WhenLoadIsCalledWithModule.cs"];
m6_250 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="332-332", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_251 [label="kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="334-334", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_252 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="335-335", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_253 [label="kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="336-336", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_254 [label="kernel.Bind<IWeapon>().To<Dagger>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="337-337", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_255 [label="var barack = kernel.Get<Barracks>()", span="339-339", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_256 [label="barack.Weapon.Should().BeOfType<Sword>()", span="341-341", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_257 [label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="342-342", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_258 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="332-332", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_23 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="35-35", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_24 [label="kernel.Bind<Samurai>().ToSelf()", span="36-36", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_25 [label="var warrior = kernel.Get<Samurai>()", span="37-37", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_26 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="38-38", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_19 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="28-28", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_20 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_21 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_22 [label="kernel.Bind<IWeapon>().To<Sword>()", span="34-34", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_58 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="WhenLoadIsCalledWithModule.cs"];
m6_281 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_36 [label="kernel.Get<Samurai>()", span="48-48", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_205 [label="kernel.Get<IWarrior>()", span="263-263", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_35 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_37 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_63 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_91 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_204 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_206 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_261 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_265 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_278 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_65 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_64 [label=true, span="76-76", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_93 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_92 [label=true, span="101-101", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_263 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_262 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="336-336", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_267 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_266 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="337-337", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_280 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_279 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="351-351", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_282 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="352-352", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_283 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs"];
m6_173 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="221-221", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_174 [label="kernel.Bind<IWeapon>().To<Sword>()", span="224-224", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_175 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto(new[] { typeof(Samurai) })", span="225-225", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_176 [label="kernel.Bind<Samurai>().ToSelf()", span="226-226", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_177 [label="var warrior = kernel.Get<Samurai>()", span="227-227", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_178 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="228-228", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_179 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="221-221", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="WhenLoadIsCalledWithModule.cs"];
m6_188 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="244-244", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_189 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="246-246", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_190 [label="kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="247-247", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_191 [label="kernel.Bind<IWeapon>().To<Sword>()", span="248-248", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_192 [label="var service = kernel.Get<GenericService<int>>()", span="250-250", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_193 [label="var anotherService = kernel.Get<AnotherGenericService<int>>()", span="251-251", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_194 [label="service.Warrior.Should().BeOfType<Samurai>()", span="253-253", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_195 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="254-254", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_196 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="244-244", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_28 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_29 [label="kernel.Bind<IWeapon>().To<Sword>()", span="44-44", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_30 [label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="45-45", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_31 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="46-46", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_32 [label="kernel.Bind<Samurai>().ToSelf()", span="47-47", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_33 [label="Assert.Throws<ActivationException>(() => kernel.Get<Samurai>())", span="48-48", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_34 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="WhenLoadIsCalledWithModule.cs"];
m6_57 [label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="429-429", cluster="Ninject.KernelBase.GetBindings(System.Type)", file="WhenLoadIsCalledWithModule.cs"];
m6_141 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", span="65-65", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", file="WhenLoadIsCalledWithModule.cs"];
m6_66 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="82-82", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_67 [label="IWeapon weapon = kernel.Get<Sword>()", span="84-84", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_68 [label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="86-86", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_70 [label="kernel.Bind<Sword>().To<ShortSword>()", span="89-89", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_71 [label="weapon = kernel.Get<Sword>()", span="90-90", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_69 [label="weapon.Should().BeOfType<Sword>()", span="87-87", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_72 [label="weapon.Should().BeOfType<Sword>()", span="91-91", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_73 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="82-82", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_260 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="178-178", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="WhenLoadIsCalledWithModule.cs"];
m6_27 [label="Ninject.Planning.Bindings.Binding", span="", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="WhenLoadIsCalledWithModule.cs"];
m6_49 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_50 [label="IWeapon weapon = kernel.Get<Sword>()", span="71-71", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_51 [label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="73-73", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_53 [label="kernel.Bind<Sword>().To<ShortSword>().When(_ => true)", span="76-76", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_54 [label="weapon = kernel.Get<Sword>()", span="77-77", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_52 [label="weapon.Should().BeOfType<Sword>()", span="74-74", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_55 [label="weapon.Should().BeOfType<ShortSword>()", span="78-78", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_56 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="WhenLoadIsCalledWithModule.cs"];
m6_164 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="207-207", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_165 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="209-209", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_166 [label="kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="210-210", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_167 [label="kernel.Bind<IWeapon>().To<Sword>()", span="211-211", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_168 [label="var service = kernel.Get<ClosedGenericService>()", span="213-213", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_169 [label="var anotherService = kernel.Get<ClosedAnotherGenericService>()", span="214-214", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_170 [label="service.Warrior.Should().BeOfType<Samurai>()", span="216-216", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_171 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="217-217", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_172 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="207-207", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="WhenLoadIsCalledWithModule.cs"];
m6_264 [label="Entry Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", span="47-47", cluster="Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", file="WhenLoadIsCalledWithModule.cs"];
m6_89 [label="Entry Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", span="148-148", cluster="Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", file="WhenLoadIsCalledWithModule.cs"];
m6_90 [label="Entry Unk.Contain", span="", cluster="Unk.Contain", file="WhenLoadIsCalledWithModule.cs"];
m6_123 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="148-148", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_124 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="150-150", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_125 [label="kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(IGenericService<>))", span="151-151", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_126 [label="kernel.Bind<IWeapon>().To<Sword>()", span="152-152", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_127 [label="var service = kernel.Get<GenericService<int>>()", span="154-154", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_128 [label="service.Warrior.Should().BeOfType<Samurai>()", span="156-156", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_129 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="148-148", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_59 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="40-40", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="WhenLoadIsCalledWithModule.cs"];
m6_180 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="232-232", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_181 [label="kernel.Bind(typeof(GenericService<>)).ToSelf()", span="234-234", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_182 [label="kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>))", span="235-235", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_183 [label="kernel.Bind<IWeapon>().To<Sword>()", span="236-236", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_184 [label="var service = kernel.Get<GenericService<int>>()", span="238-238", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_185 [label="service.Warrior.Should().BeOfType<Samurai>()", span="240-240", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_186 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="232-232", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="WhenLoadIsCalledWithModule.cs"];
m6_239 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="316-316", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_241 [label="kernel.Bind<Barracks>().ToSelf().Named(Name)", span="319-319", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_242 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="320-320", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_243 [label="kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorNamed(Name)", span="322-322", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_244 [label="kernel.Bind<IWeapon>().To<Dagger>()", span="323-323", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_245 [label="var barack = kernel.Get<Barracks>()", span="325-325", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_246 [label="barack.Weapon.Should().BeOfType<Dagger>()", span="327-327", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_247 [label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="328-328", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_240 [label="string Name = ''SomeName''", span="318-318", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_248 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="316-316", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="WhenLoadIsCalledWithModule.cs"];
m6_249 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", span="171-171", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", file="WhenLoadIsCalledWithModule.cs"];
m6_187 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="83-83", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="WhenLoadIsCalledWithModule.cs"];
m6_294 [label="Ninject.Tests.Integration.ConditionalBindingTests", span="", file="WhenLoadIsCalledWithModule.cs"];
m1_25 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_31 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_31 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_34 -> m1_27  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_34 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_33 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_33 -> m1_38  [key=2, style=dotted];
m1_33 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=targetType];
m1_35 -> m1_40  [key=2, style=dotted];
m1_37 -> m1_25  [key=0, style=bold, color=blue];
m1_17 -> m1_44  [key=0, style=solid];
m1_17 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_44 -> m1_27  [key=2, style=dotted];
m1_44 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_17  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_0 -> m1_2  [key=1, style=dashed, color=green, label="Ninject.Planning.Directives.ConstructorInjectionDirective"];
m1_0 -> m1_3  [key=1, style=dashed, color=green, label="Ninject.Planning.Directives.ConstructorInjectionDirective"];
m1_0 -> m1_6  [key=1, style=dashed, color=green, label="Ninject.Planning.Directives.ConstructorInjectionDirective"];
m1_0 -> m1_7  [key=1, style=dashed, color=green, label="Ninject.Activation.IContext"];
m1_0 -> m1_9  [key=1, style=dashed, color=green, label="Ninject.Activation.IContext"];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_16  [key=2, style=dotted, color=green];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_16  [key=2, style=dotted, color=green];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_15  [key=0, style=solid, color=green];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_8  [key=1, style=dashed, color=green, label=score];
m1_5 -> m1_10  [key=1, style=dashed, color=green, label=score];
m1_5 -> m1_11  [key=1, style=dashed, color=green, label=score];
m1_5 -> m1_14  [key=1, style=dashed, color=green, label=score];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_14  [key=0, style=solid, color=green];
m1_6 -> m1_9  [key=1, style=dashed, color=green, label=target];
m1_8 -> m1_6  [key=0, style=solid, color=green];
m1_8 -> m1_8  [key=1, style=dashed, color=green, label=score];
m1_8 -> m1_10  [key=1, style=dashed, color=green, label=score];
m1_8 -> m1_11  [key=1, style=dashed, color=green, label=score];
m1_10 -> m1_6  [key=0, style=solid, color=green];
m1_10 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_10 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_12 -> m1_6  [key=0, style=solid, color=green];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_6  [key=0, style=solid, color=green];
m1_13 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_13 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_9  [key=0, style=solid, color=green];
m1_7 -> m1_17  [key=2, style=dotted, color=green];
m1_14 -> m1_15  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_9 -> m1_11  [key=0, style=solid, color=green];
m1_9 -> m1_18  [key=2, style=dotted, color=green];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_11 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_11 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=score];
m1_15 -> m1_0  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IKernel"];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [key=2, style=dotted];
m1_23 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_24 -> m1_21  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_50  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_49 -> m1_47  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_51 -> m1_7  [key=1, style=dashed, color=green, label="Ninject.Selection.Heuristics.StandardConstructorScorer"];
m1_51 -> m1_9  [key=1, style=dashed, color=green, label="Ninject.Selection.Heuristics.StandardConstructorScorer"];
m1_51 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Heuristics.StandardConstructorScorer"];
m1_51 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Heuristics.StandardConstructorScorer"];
m1_52 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m1_53 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.ITarget"];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBinding"];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_31  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_32  [key=2, style=dotted];
m3_30 -> m3_27  [key=0, style=bold, color=blue];
m3_8 -> m3_20  [key=0, style=solid];
m3_20 -> m3_8  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=2, style=dotted];
m3_25 -> m3_23  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_14 -> m3_21  [key=0, style=solid];
m3_21 -> m3_14  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=2, style=dotted];
m3_7 -> m3_4  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBinding"];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_33  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_19 -> m3_22  [key=0, style=solid];
m3_22 -> m3_19  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_14  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_15  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_9  [key=0, style=bold, color=blue];
m3_39 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m3_39 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.NinjectModule"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=value];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_8 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.NinjectSettings"];
m5_8 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.NinjectSettings"];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_11  [key=2, style=dotted];
m6_45 -> m6_7  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_8  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_11  [key=2, style=dotted];
m6_44 -> m6_12  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_13  [key=2, style=dotted];
m6_47 -> m6_12  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_13  [key=2, style=dotted];
m6_48 -> m6_42  [key=0, style=bold, color=blue];
m6_213 -> m6_214  [key=0, style=solid];
m6_214 -> m6_7  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_8  [key=2, style=dotted];
m6_215 -> m6_7  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_8  [key=2, style=dotted];
m6_216 -> m6_7  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_8  [key=2, style=dotted];
m6_216 -> m6_156  [key=2, style=dotted];
m6_217 -> m6_7  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_10  [key=2, style=dotted];
m6_218 -> m6_7  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_10  [key=2, style=dotted];
m6_219 -> m6_7  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_10  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_11  [key=2, style=dotted];
m6_220 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_11  [key=2, style=dotted];
m6_221 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label=barracks];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_11  [key=2, style=dotted];
m6_222 -> m6_225  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m6_223 -> m6_12  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_13  [key=2, style=dotted];
m6_224 -> m6_12  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_13  [key=2, style=dotted];
m6_225 -> m6_12  [key=2, style=dotted];
m6_225 -> m6_226  [key=0, style=solid];
m6_225 -> m6_13  [key=2, style=dotted];
m6_226 -> m6_213  [key=0, style=bold, color=blue];
m6_142 -> m6_143  [key=0, style=solid];
m6_143 -> m6_7  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_8  [key=2, style=dotted];
m6_144 -> m6_7  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_8  [key=2, style=dotted];
m6_145 -> m6_7  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_8  [key=2, style=dotted];
m6_145 -> m6_156  [key=2, style=dotted];
m6_146 -> m6_7  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_10  [key=2, style=dotted];
m6_147 -> m6_7  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_10  [key=2, style=dotted];
m6_148 -> m6_7  [key=2, style=dotted];
m6_148 -> m6_134  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementation"];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_10  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_11  [key=2, style=dotted];
m6_149 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_11  [key=2, style=dotted];
m6_150 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=barracks];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_11  [key=2, style=dotted];
m6_151 -> m6_154  [key=1, style=dashed, color=darkseagreen4, label=ninja];
m6_152 -> m6_12  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_13  [key=2, style=dotted];
m6_153 -> m6_12  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_13  [key=2, style=dotted];
m6_154 -> m6_12  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_13  [key=2, style=dotted];
m6_155 -> m6_142  [key=0, style=bold, color=blue];
m6_77 -> m6_78  [key=0, style=solid];
m6_78 -> m6_86  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m6_78 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m6_79 -> m6_104  [key=3, color=darkorchid, style=bold, label="method methodReturn T Get"];
m6_79 -> m6_87  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_79 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_80 -> m6_7  [key=2, style=dotted];
m6_80 -> m6_88  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_83 -> m6_12  [key=2, style=dotted];
m6_83 -> m6_90  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_81 -> m6_7  [key=2, style=dotted];
m6_81 -> m6_88  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_59  [key=2, style=dotted];
m6_81 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_89  [key=2, style=dotted];
m6_82 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_84 -> m6_12  [key=2, style=dotted];
m6_84 -> m6_90  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_85 -> m6_77  [key=0, style=bold, color=blue];
m6_157 -> m6_158  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_130  [key=2, style=dotted];
m6_158 -> m6_10  [key=2, style=dotted];
m6_159 -> m6_7  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_8  [key=2, style=dotted];
m6_159 -> m6_131  [key=2, style=dotted];
m6_160 -> m6_7  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_8  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_11  [key=2, style=dotted];
m6_162 -> m6_12  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_13  [key=2, style=dotted];
m6_163 -> m6_157  [key=0, style=bold, color=blue];
m6_132 -> m6_133  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_130  [key=2, style=dotted];
m6_133 -> m6_10  [key=2, style=dotted];
m6_134 -> m6_7  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_8  [key=2, style=dotted];
m6_134 -> m6_141  [key=2, style=dotted];
m6_134 -> m6_139  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateNewInstance"];
m6_134 -> m6_145  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateNewInstance"];
m6_135 -> m6_7  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_8  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_11  [key=2, style=dotted];
m6_136 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=service];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_11  [key=2, style=dotted];
m6_137 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=anotherService];
m6_138 -> m6_12  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_13  [key=2, style=dotted];
m6_139 -> m6_12  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_13  [key=2, style=dotted];
m6_140 -> m6_132  [key=0, style=bold, color=blue];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_7  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_8  [key=2, style=dotted];
m6_119 -> m6_7  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_8  [key=2, style=dotted];
m6_119 -> m6_9  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_11  [key=2, style=dotted];
m6_121 -> m6_12  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_13  [key=2, style=dotted];
m6_122 -> m6_117  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_13  [key=2, style=dotted];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_8  [key=2, style=dotted];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_7  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_9  [key=2, style=dotted];
m6_2 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_2 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m6_3 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_12  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_4 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_13  [key=2, style=dotted];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_11  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid, color=green];
m6_95 -> m6_96  [key=0, style=solid, color=green];
m6_95 -> m6_86  [key=2, style=dotted, color=green];
m6_95 -> m6_98  [key=1, style=dashed, color=green, label=shortSword];
m6_95 -> m6_102  [key=1, style=dashed, color=green, label=shortSword];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_106  [key=2, style=dotted];
m6_96 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=sword];
m6_96 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=sword];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_7  [key=2, style=dotted];
m6_98 -> m6_88  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_12  [key=2, style=dotted];
m6_102 -> m6_90  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_87  [key=2, style=dotted];
m6_97 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_97 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_7  [key=2, style=dotted];
m6_99 -> m6_88  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_12  [key=2, style=dotted];
m6_103 -> m6_90  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_101 -> m6_89  [key=2, style=dotted];
m6_101 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_12  [key=2, style=dotted];
m6_104 -> m6_107  [key=2, style=dotted];
m6_100 -> m6_7  [key=2, style=dotted];
m6_100 -> m6_88  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_105 -> m6_94  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_13  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_229 -> m6_7  [key=2, style=dotted];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_10  [key=2, style=dotted];
m6_229 -> m6_237  [key=2, style=dotted];
m6_230 -> m6_7  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_8  [key=2, style=dotted];
m6_231 -> m6_7  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_8  [key=2, style=dotted];
m6_231 -> m6_238  [key=2, style=dotted];
m6_232 -> m6_7  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_8  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_11  [key=2, style=dotted];
m6_233 -> m6_235  [key=1, style=dashed, color=darkseagreen4, label=barack];
m6_234 -> m6_12  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_13  [key=2, style=dotted];
m6_235 -> m6_12  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_13  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label=Name];
m6_236 -> m6_227  [key=0, style=bold, color=blue];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_86  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m6_109 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m6_110 -> m6_87  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_110 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m6_111 -> m6_7  [key=2, style=dotted];
m6_111 -> m6_88  [key=2, style=dotted];
m6_111 -> m6_112  [key=0, style=solid];
m6_114 -> m6_12  [key=2, style=dotted];
m6_114 -> m6_90  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_112 -> m6_7  [key=2, style=dotted];
m6_112 -> m6_88  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_89  [key=2, style=dotted];
m6_113 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_115 -> m6_12  [key=2, style=dotted];
m6_115 -> m6_90  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_116 -> m6_108  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_12  [key=2, style=dotted];
m6_15 -> m6_7  [key=2, style=dotted];
m6_15 -> m6_8  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_16 -> m6_7  [key=2, style=dotted];
m6_16 -> m6_8  [key=2, style=dotted];
m6_16 -> m6_9  [key=2, style=dotted];
m6_17 -> m6_14  [key=0, style=bold, color=blue];
m6_17 -> m6_7  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_10  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_11  [key=2, style=dotted];
m6_40 -> m6_12  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_13  [key=2, style=dotted];
m6_41 -> m6_38  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_2  [key=0, style=bold, color=blue];
m6_268 -> m6_269  [key=0, style=solid];
m6_269 -> m6_7  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_10  [key=2, style=dotted];
m6_269 -> m6_259  [key=2, style=dotted];
m6_270 -> m6_7  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_8  [key=2, style=dotted];
m6_271 -> m6_7  [key=2, style=dotted];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_8  [key=2, style=dotted];
m6_271 -> m6_277  [key=2, style=dotted];
m6_271 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_272 -> m6_7  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_8  [key=2, style=dotted];
m6_272 -> m6_277  [key=2, style=dotted];
m6_272 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_11  [key=2, style=dotted];
m6_273 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=barack];
m6_274 -> m6_12  [key=2, style=dotted];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_13  [key=2, style=dotted];
m6_275 -> m6_12  [key=2, style=dotted];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_13  [key=2, style=dotted];
m6_276 -> m6_268  [key=0, style=bold, color=blue];
m6_207 -> m6_208  [key=0, style=solid];
m6_208 -> m6_7  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_8  [key=2, style=dotted];
m6_209 -> m6_7  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_8  [key=2, style=dotted];
m6_209 -> m6_203  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_11  [key=2, style=dotted];
m6_211 -> m6_12  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_13  [key=2, style=dotted];
m6_212 -> m6_207  [key=0, style=bold, color=blue];
m6_197 -> m6_198  [key=0, style=solid];
m6_198 -> m6_7  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_8  [key=2, style=dotted];
m6_199 -> m6_7  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_8  [key=2, style=dotted];
m6_199 -> m6_203  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_201 -> m6_13  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_202 -> m6_197  [key=0, style=bold, color=blue];
m6_250 -> m6_251  [key=0, style=solid];
m6_251 -> m6_7  [key=2, style=dotted];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_10  [key=2, style=dotted];
m6_251 -> m6_259  [key=2, style=dotted];
m6_252 -> m6_7  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_8  [key=2, style=dotted];
m6_253 -> m6_7  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_8  [key=2, style=dotted];
m6_253 -> m6_260  [key=2, style=dotted];
m6_253 -> m6_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_254 -> m6_7  [key=2, style=dotted];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_8  [key=2, style=dotted];
m6_254 -> m6_260  [key=2, style=dotted];
m6_254 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_11  [key=2, style=dotted];
m6_255 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=barack];
m6_256 -> m6_12  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_13  [key=2, style=dotted];
m6_257 -> m6_12  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_13  [key=2, style=dotted];
m6_258 -> m6_250  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m6_23 -> m6_7  [key=2, style=dotted];
m6_23 -> m6_8  [key=2, style=dotted];
m6_23 -> m6_9  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_12  [key=2, style=dotted];
m6_24 -> m6_7  [key=2, style=dotted];
m6_24 -> m6_10  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_18  [key=2, style=dotted];
m6_25 -> m6_11  [key=2, style=dotted];
m6_26 -> m6_23  [key=0, style=bold, color=blue];
m6_26 -> m6_12  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_13  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m6_19 -> m6_12  [key=2, style=dotted];
m6_19 -> m6_13  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_12  [key=2, style=dotted];
m6_20 -> m6_14  [key=0, style=bold, color=blue];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_18  [key=2, style=dotted];
m6_22 -> m6_19  [key=0, style=bold, color=blue];
m6_22 -> m6_7  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_8  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_11  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_11  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_35  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_204 -> m6_205  [key=0, style=solid];
m6_206 -> m6_204  [key=0, style=bold, color=blue];
m6_261 -> m6_262  [key=0, style=solid];
m6_265 -> m6_266  [key=0, style=solid];
m6_278 -> m6_279  [key=0, style=solid];
m6_65 -> m6_63  [key=0, style=bold, color=blue];
m6_64 -> m6_65  [key=0, style=solid];
m6_93 -> m6_91  [key=0, style=bold, color=blue];
m6_92 -> m6_93  [key=0, style=solid];
m6_263 -> m6_261  [key=0, style=bold, color=blue];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_264  [key=2, style=dotted];
m6_267 -> m6_265  [key=0, style=bold, color=blue];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_264  [key=2, style=dotted];
m6_280 -> m6_278  [key=0, style=bold, color=blue];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_264  [key=2, style=dotted];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_264  [key=2, style=dotted];
m6_283 -> m6_281  [key=0, style=bold, color=blue];
m6_173 -> m6_174  [key=0, style=solid];
m6_174 -> m6_7  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_8  [key=2, style=dotted];
m6_175 -> m6_7  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_8  [key=2, style=dotted];
m6_175 -> m6_141  [key=2, style=dotted];
m6_176 -> m6_7  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_10  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_11  [key=2, style=dotted];
m6_178 -> m6_12  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_13  [key=2, style=dotted];
m6_179 -> m6_173  [key=0, style=bold, color=blue];
m6_188 -> m6_189  [key=0, style=solid];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_130  [key=2, style=dotted];
m6_189 -> m6_10  [key=2, style=dotted];
m6_190 -> m6_7  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_8  [key=2, style=dotted];
m6_190 -> m6_156  [key=2, style=dotted];
m6_191 -> m6_7  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_8  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_11  [key=2, style=dotted];
m6_192 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label=service];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_11  [key=2, style=dotted];
m6_193 -> m6_195  [key=1, style=dashed, color=darkseagreen4, label=anotherService];
m6_194 -> m6_12  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_13  [key=2, style=dotted];
m6_195 -> m6_12  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_13  [key=2, style=dotted];
m6_196 -> m6_188  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_7  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_8  [key=2, style=dotted];
m6_30 -> m6_7  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_8  [key=2, style=dotted];
m6_30 -> m6_9  [key=2, style=dotted];
m6_31 -> m6_7  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_8  [key=2, style=dotted];
m6_31 -> m6_9  [key=2, style=dotted];
m6_32 -> m6_7  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_10  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_13  [key=2, style=dotted];
m6_33 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_34 -> m6_28  [key=0, style=bold, color=blue];
m6_66 -> m6_67  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_11  [key=2, style=dotted];
m6_67 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=weapon];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_57  [key=2, style=dotted];
m6_68 -> m6_58  [key=2, style=dotted];
m6_70 -> m6_7  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_8  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_11  [key=2, style=dotted];
m6_69 -> m6_12  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_13  [key=2, style=dotted];
m6_72 -> m6_12  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_13  [key=2, style=dotted];
m6_73 -> m6_66  [key=0, style=bold, color=blue];
m6_27 -> m6_21  [key=0, style=bold, color=blue];
m6_27 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_27 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m6_49 -> m6_50  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_11  [key=2, style=dotted];
m6_50 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=weapon];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_57  [key=2, style=dotted];
m6_51 -> m6_58  [key=2, style=dotted];
m6_53 -> m6_7  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_8  [key=2, style=dotted];
m6_53 -> m6_59  [key=2, style=dotted];
m6_53 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_11  [key=2, style=dotted];
m6_52 -> m6_12  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_13  [key=2, style=dotted];
m6_55 -> m6_12  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_13  [key=2, style=dotted];
m6_56 -> m6_49  [key=0, style=bold, color=blue];
m6_164 -> m6_165  [key=0, style=solid];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_130  [key=2, style=dotted];
m6_165 -> m6_10  [key=2, style=dotted];
m6_166 -> m6_7  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_8  [key=2, style=dotted];
m6_166 -> m6_141  [key=2, style=dotted];
m6_167 -> m6_7  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_8  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_11  [key=2, style=dotted];
m6_168 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label=service];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_11  [key=2, style=dotted];
m6_169 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label=anotherService];
m6_170 -> m6_12  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_13  [key=2, style=dotted];
m6_171 -> m6_12  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_13  [key=2, style=dotted];
m6_172 -> m6_164  [key=0, style=bold, color=blue];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_130  [key=2, style=dotted];
m6_124 -> m6_10  [key=2, style=dotted];
m6_125 -> m6_7  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_8  [key=2, style=dotted];
m6_125 -> m6_131  [key=2, style=dotted];
m6_126 -> m6_7  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_8  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_11  [key=2, style=dotted];
m6_128 -> m6_12  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_13  [key=2, style=dotted];
m6_129 -> m6_123  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_130  [key=2, style=dotted];
m6_181 -> m6_10  [key=2, style=dotted];
m6_182 -> m6_7  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_8  [key=2, style=dotted];
m6_182 -> m6_187  [key=2, style=dotted];
m6_183 -> m6_7  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_8  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_11  [key=2, style=dotted];
m6_185 -> m6_12  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_13  [key=2, style=dotted];
m6_186 -> m6_180  [key=0, style=bold, color=blue];
m6_239 -> m6_240  [key=0, style=solid];
m6_241 -> m6_7  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_10  [key=2, style=dotted];
m6_241 -> m6_237  [key=2, style=dotted];
m6_242 -> m6_7  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_8  [key=2, style=dotted];
m6_243 -> m6_7  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_8  [key=2, style=dotted];
m6_243 -> m6_249  [key=2, style=dotted];
m6_244 -> m6_7  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_8  [key=2, style=dotted];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_11  [key=2, style=dotted];
m6_245 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=barack];
m6_246 -> m6_12  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_13  [key=2, style=dotted];
m6_247 -> m6_12  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_13  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=Name];
m6_248 -> m6_239  [key=0, style=bold, color=blue];
m6_294 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_119  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_174  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_198  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_205  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_218  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_229  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_230  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_241  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_251  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_253  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_254  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_255  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_269  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_270  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_271  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_272  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m6_294 -> m6_273  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
}
