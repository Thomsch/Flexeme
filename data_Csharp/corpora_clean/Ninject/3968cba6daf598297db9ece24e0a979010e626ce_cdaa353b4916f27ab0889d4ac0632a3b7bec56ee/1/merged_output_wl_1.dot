digraph  {
n0 [cluster="Ninject.Infrastructure.Tracing.TraceInfoProvider.TraceInfoProvider()", label="Entry Ninject.Infrastructure.Tracing.TraceInfoProvider.TraceInfoProvider()", span="35-35"];
n1 [cluster="Ninject.Infrastructure.Tracing.TraceInfoProvider.TraceInfoProvider()", label="Exit Ninject.Infrastructure.Tracing.TraceInfoProvider.TraceInfoProvider()", span="35-35"];
m0_4 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.Dispose()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.Dispose()", span="35-35"];
m0_5 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.Dispose()", color=red, community=0, file="BindingBuilder.cs", label="0: this.kernel.Dispose()", span="37-37"];
m0_6 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.Dispose()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.Dispose()", span="35-35"];
m0_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24"];
m0_17 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument<TValue>(TValue)", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument<TValue>(TValue)", span="52-52"];
m0_28 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", span="63-63"];
m0_29 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", color=red, community=0, file="BindingBuilder.cs", label="0: var expectedWeapon = new Shuriken()", span="65-65"];
m0_30 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", color=red, community=0, file="BindingBuilder.cs", label="0: this.kernel.Bind<Samurai>().ToSelf().WithConstructorArgument(typeof(IWeapon), context => expectedWeapon)", span="66-66"];
m0_32 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", color=red, community=0, file="BindingBuilder.cs", label="0: samurai.Weapon.Should().Be(expectedWeapon)", span="70-70"];
m0_31 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", color=red, community=0, file="BindingBuilder.cs", label="0: var samurai = this.kernel.Get<Samurai>()", span="68-68"];
m0_33 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContext()", span="63-63"];
m0_20 [cluster="Unk.Be", file="BindingBuilder.cs", label="Entry Unk.Be", span=""];
m0_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="BindingBuilder.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34"];
m0_35 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, object>)", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, object>)", span="76-76"];
m0_21 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", span="52-52"];
m0_22 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", color=red, community=0, file="BindingBuilder.cs", label="0: var expectedWeapon = new Dagger()", span="54-54"];
m0_23 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", color=red, community=0, file="BindingBuilder.cs", label="0: this.kernel.Bind<Samurai>().ToSelf().WithConstructorArgument(typeof(IWeapon), expectedWeapon)", span="55-55"];
m0_25 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", color=red, community=0, file="BindingBuilder.cs", label="0: samurai.Weapon.Should().Be(expectedWeapon)", span="59-59"];
m0_24 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", color=red, community=0, file="BindingBuilder.cs", label="0: var samurai = this.kernel.Get<Samurai>()", span="57-57"];
m0_26 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingExplicitTypeArgumentSyntax()", span="52-52"];
m0_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="BindingBuilder.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31"];
m0_34 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m0_27 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, object)", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, object)", span="60-60"];
m0_39 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", span="74-74"];
m0_40 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", color=red, community=0, file="BindingBuilder.cs", label="0: var expectedWeapon = new Shuriken()", span="76-76"];
m0_41 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", color=red, community=0, file="BindingBuilder.cs", label="0: this.kernel.Bind<Samurai>().ToSelf().WithConstructorArgument(typeof(IWeapon), (context, target) => expectedWeapon)", span="77-77"];
m0_43 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", color=red, community=0, file="BindingBuilder.cs", label="0: samurai.Weapon.Should().Be(expectedWeapon)", span="81-81"];
m0_42 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", color=red, community=0, file="BindingBuilder.cs", label="0: var samurai = this.kernel.Get<Samurai>()", span="79-79"];
m0_44 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsedIfUsingCallbackWithContextAndTarget()", span="74-74"];
m0_18 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30"];
m0_45 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="BindingBuilder.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="92-92"];
m0_14 [cluster="Ninject.Tests.Fakes.Dagger.Dagger()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Fakes.Dagger.Dagger()", span="2-2"];
m0_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="BindingBuilder.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38"];
m0_46 [cluster="lambda expression", file="BindingBuilder.cs", label="Entry lambda expression", span="77-77"];
m0_37 [cluster="lambda expression", color=red, community=0, file="BindingBuilder.cs", label="0: expectedWeapon", span="66-66"];
m0_36 [cluster="lambda expression", file="BindingBuilder.cs", label="Entry lambda expression", span="66-66"];
m0_38 [cluster="lambda expression", file="BindingBuilder.cs", label="Exit lambda expression", span="66-66"];
m0_47 [cluster="lambda expression", color=red, community=0, file="BindingBuilder.cs", label="0: expectedWeapon", span="77-77"];
m0_48 [cluster="lambda expression", file="BindingBuilder.cs", label="Exit lambda expression", span="77-77"];
m0_8 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", span="41-41"];
m0_9 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", color=red, community=0, file="BindingBuilder.cs", label="0: var expectedWeapon = new Dagger()", span="43-43"];
m0_10 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", color=red, community=0, file="BindingBuilder.cs", label="0: this.kernel.Bind<Samurai>().ToSelf().WithConstructorArgument<IWeapon>(expectedWeapon)", span="44-44"];
m0_12 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", file="BindingBuilder.cs", label="samurai.Weapon.Should().Be(expectedWeapon)", span="48-48"];
m0_11 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", file="BindingBuilder.cs", label="var samurai = this.kernel.Get<Samurai>()", span="46-46"];
m0_13 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentWithMatchingTypeShouldBeUsed()", span="41-41"];
m0_19 [cluster="Unk.Should", file="BindingBuilder.cs", label="Entry Unk.Should", span=""];
m0_0 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentInBindingConfigurationBuilderTest()", file="BindingBuilder.cs", label="Entry Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentInBindingConfigurationBuilderTest()", span="30-30"];
m0_1 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentInBindingConfigurationBuilderTest()", file="BindingBuilder.cs", label="this.kernel = new StandardKernel()", span="32-32"];
m0_2 [cluster="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentInBindingConfigurationBuilderTest()", file="BindingBuilder.cs", label="Exit Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest.ConstructorArgumentInBindingConfigurationBuilderTest()", span="30-30"];
m0_49 [file="BindingBuilder.cs", label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", span=""];
m0_50 [file="BindingBuilder.cs", label=expectedWeapon, span=""];
m0_51 [file="BindingBuilder.cs", label=expectedWeapon, span=""];
m5_0 [cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="BindingConfiguration.cs", label="Entry Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="52-52"];
m5_1 [cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="BindingConfiguration.cs", label="Exit Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="52-52"];
m7_22 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="BindingRoot.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", span="35-35"];
m7_23 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="BindingRoot.cs", label="return this.CreateModuleMock(name).Object;", span="37-37"];
m7_24 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="BindingRoot.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", span="35-35"];
m7_2 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", file="BindingRoot.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.ModuleLoadingContext()", span="10-10"];
m7_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="BindingRoot.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="48-48"];
m7_17 [cluster="Unk.SetupGet", file="BindingRoot.cs", label="Entry Unk.SetupGet", span=""];
m7_18 [cluster="Unk.Returns", file="BindingRoot.cs", label="Entry Unk.Returns", span=""];
m7_16 [cluster="Mock<INinjectModule>.cstr", file="BindingRoot.cs", label="Entry Mock<INinjectModule>.cstr", span=""];
m7_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="BindingRoot.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29"];
m7_19 [cluster="lambda expression", file="BindingRoot.cs", label="Entry lambda expression", span="30-30"];
m7_20 [cluster="lambda expression", color=green, community=0, file="BindingRoot.cs", label="0: x.Name", span="30-30"];
m7_21 [cluster="lambda expression", file="BindingRoot.cs", label="Exit lambda expression", span="30-30"];
m7_0 [cluster="Ninject.Activation.Strategies.IActivationStrategy.Activate(Ninject.Activation.IContext)", file="BindingRoot.cs", label="Entry Ninject.Activation.Strategies.IActivationStrategy.Activate(Ninject.Activation.IContext)", span="33-33"];
m7_1 [cluster="Ninject.Activation.Strategies.IActivationStrategy.Activate(Ninject.Activation.IContext)", color=green, community=0, file="BindingRoot.cs", label="1: Exit Ninject.Activation.Strategies.IActivationStrategy.Activate(Ninject.Activation.IContext)", span="33-33"];
m7_11 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="BindingRoot.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="27-27"];
m7_12 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", color=green, community=0, file="BindingRoot.cs", label="0: var moduleMock = new Mock<INinjectModule>()", span="29-29"];
m7_13 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", color=green, community=0, file="BindingRoot.cs", label="0: moduleMock.SetupGet(x => x.Name).Returns(name)", span="30-30"];
m7_14 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", color=green, community=0, file="BindingRoot.cs", label="0: return moduleMock;", span="32-32"];
m7_15 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="BindingRoot.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="27-27"];
m7_4 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", file="BindingRoot.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", span="15-15"];
m7_5 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", color=green, community=0, file="BindingRoot.cs", label="0: this.Kernel.Dispose()", span="17-17"];
m7_6 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", file="BindingRoot.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", span="15-15"];
m7_25 [file="BindingRoot.cs", label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", span=""];
m8_76 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="324-324"];
m8_77 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="324-324"];
m8_52 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="232-232"];
m8_53 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="232-232"];
m8_62 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="274-274"];
m8_63 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="274-274"];
m8_74 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="318-318"];
m8_75 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="318-318"];
m8_48 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="211-211"];
m8_49 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="211-211"];
m8_46 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="206-206"];
m8_47 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="206-206"];
m8_32 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="152-152"];
m8_33 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="152-152"];
m8_42 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", span="187-187"];
m8_43 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", span="187-187"];
m8_16 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstructor(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, T>>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstructor(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, T>>)", span="87-87"];
m8_17 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstructor(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, T>>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToConstructor(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, T>>)", span="87-87"];
m8_20 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="108-108"];
m8_21 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="108-108"];
m8_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", span="62-62"];
m8_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", span="62-62"];
m8_24 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="123-123"];
m8_25 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="123-123"];
m8_56 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="253-253"];
m8_57 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="253-253"];
m8_44 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="200-200"];
m8_45 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="200-200"];
m8_64 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="281-281"];
m8_65 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="281-281"];
m8_4 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To(System.Type)", span="48-48"];
m8_5 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.To(System.Type)", span="48-48"];
m8_12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="74-74"];
m8_13 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="74-74"];
m8_22 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="115-115"];
m8_23 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="115-115"];
m8_38 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas(System.Type)", span="173-173"];
m8_39 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas(System.Type)", span="173-173"];
m8_68 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="294-294"];
m8_69 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="294-294"];
m8_58 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="260-260"];
m8_59 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="260-260"];
m8_2 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m8_3 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m8_50 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="218-218"];
m8_51 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="218-218"];
m8_28 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas<TAttribute>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas<TAttribute>()", span="138-138"];
m8_29 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas<TAttribute>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas<TAttribute>()", span="138-138"];
m8_30 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", span="145-145"];
m8_31 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", span="145-145"];
m8_60 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="267-267"];
m8_61 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="267-267"];
m8_72 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="312-312"];
m8_73 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="312-312"];
m8_34 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas(System.Type)", span="159-159"];
m8_35 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenClassHas(System.Type)", span="159-159"];
m8_6 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", span="55-55"];
m8_7 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider<TProvider>()", span="55-55"];
m8_0 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m8_1 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m8_70 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="307-307"];
m8_71 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="307-307"];
m8_54 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="246-246"];
m8_55 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="246-246"];
m8_14 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m8_15 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m8_40 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", span="180-180"];
m8_41 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", span="180-180"];
m8_66 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="287-287"];
m8_67 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="287-287"];
m8_10 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", span="68-68"];
m8_11 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", span="68-68"];
m8_18 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="101-101"];
m8_19 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="101-101"];
m8_36 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", span="166-166"];
m8_37 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", span="166-166"];
m8_26 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="BindingSyntax.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="131-131"];
m8_27 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="BindingSyntax.cs", label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="131-131"];
m9_148 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="232-232"];
m9_42 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m9_43 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="61-61"];
m9_44 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="62-62"];
m9_45 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>()", span="63-63"];
m9_46 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="64-64"];
m9_47 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="65-65"];
m9_48 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m9_86 [cluster="Ninject.Tests.Fakes.ShortSword.ShortSword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.ShortSword.ShortSword()", span="2-2"];
m9_77 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="95-95"];
m9_78 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="97-97"];
m9_79 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="98-98"];
m9_80 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().ToConstant(shortSword)", span="100-100"];
m9_83 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="103-103"];
m9_81 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().ToConstant(shuriken).When(_ => true)", span="101-101"];
m9_84 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="104-104"];
m9_82 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = kernel.GetAll<IWeapon>()", span="102-102"];
m9_85 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="95-95"];
m9_149 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAnchestorNamed(string)", span="187-187"];
m9_117 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="137-137"];
m9_118 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="139-139"];
m9_119 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<IWarrior>()", span="140-140"];
m9_120 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<IWarrior>()", span="142-142"];
m9_121 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="144-144"];
m9_122 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="137-137"];
m9_12 [cluster="Unk.Should", file="ConditionalBindingTests.cs", label="Entry Unk.Should", span=""];
m9_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="108-108"];
m9_0 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m9_1 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="14-14"];
m9_2 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="15-15"];
m9_3 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="16-16"];
m9_4 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="17-17"];
m9_5 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="18-18"];
m9_6 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m9_129 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="123-123"];
m9_13 [cluster="Unk.>", file="ConditionalBindingTests.cs", label="Entry Unk.>", span=""];
m9_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m9_94 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="108-108"];
m9_95 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="110-110"];
m9_96 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var sword = new Sword()", span="111-111"];
m9_98 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().ToConstant(shortSword)", span="114-114"];
m9_102 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="118-118"];
m9_97 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="112-112"];
m9_99 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().ToConstant(sword)", span="115-115"];
m9_103 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(sword)", span="119-119"];
m9_100 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: kernel.Bind<IWeapon>().ToConstant(shuriken).Binding.IsImplicit = true", span="116-116"];
m9_104 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().NotContain(shuriken)", span="120-120"];
m9_101 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = kernel.GetAll<IWeapon>()", span="117-117"];
m9_105 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="108-108"];
m9_108 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="124-124"];
m9_109 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="126-126"];
m9_110 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="127-127"];
m9_111 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: kernel.Bind<IWeapon>().ToConstant(shortSword).Binding.IsImplicit = true", span="129-129"];
m9_114 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="132-132"];
m9_112 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: kernel.Bind<IWeapon>().ToConstant(shuriken).Binding.IsImplicit = true", span="130-130"];
m9_115 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="133-133"];
m9_113 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = kernel.GetAll<IWeapon>()", span="131-131"];
m9_116 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="124-124"];
m9_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m9_139 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", span="170-170"];
m9_140 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="string Name = ''SomeName''", span="172-172"];
m9_141 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="kernel.Bind<Barracks>().ToSelf().Named(Name)", span="173-173"];
m9_143 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenAnyAnchestorNamed(Name)", span="175-175"];
m9_142 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="174-174"];
m9_144 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="var barack = kernel.Get<Barracks>()", span="177-177"];
m9_145 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Sword>()", span="179-179"];
m9_146 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="180-180"];
m9_147 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAnchestorNamedAppliesToGrandParentAndParent()", span="170-170"];
m9_107 [cluster="Unk.NotContain", file="ConditionalBindingTests.cs", label="Entry Unk.NotContain", span=""];
m9_38 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m9_39 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="var weapon = kernel.Get<Sword>()", span="54-54"];
m9_40 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="55-55"];
m9_41 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m9_106 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m9_133 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="159-159"];
m9_134 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="161-161"];
m9_135 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<Samurai>()", span="162-162"];
m9_136 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<IWarrior>()", span="164-164"];
m9_137 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="166-166"];
m9_138 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="159-159"];
m9_87 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m9_123 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="148-148"];
m9_124 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWarrior>().To<Samurai>()", span="150-150"];
m9_125 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<IWarrior>()", span="151-151"];
m9_126 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Action getWarrior = () => kernel.Get<IWarrior>()", span="153-153"];
m9_127 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="getWarrior.ShouldThrow<ActivationException>()", span="155-155"];
m9_128 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="148-148"];
m9_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m9_10 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36"];
m9_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ConditionalBindingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m9_130 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="153-153"];
m9_35 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="48-48"];
m9_36 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="kernel.Get<Samurai>()", span="48-48"];
m9_37 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="48-48"];
m9_63 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="76-76"];
m9_60 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="73-73"];
m9_61 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="73-73"];
m9_62 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="73-73"];
m9_64 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="76-76"];
m9_65 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="76-76"];
m9_74 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="86-86"];
m9_75 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="86-86"];
m9_76 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="86-86"];
m9_91 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="101-101"];
m9_92 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="101-101"];
m9_93 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="101-101"];
m9_131 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="kernel.Get<IWarrior>()", span="153-153"];
m9_132 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="153-153"];
m9_57 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="425-425"];
m9_28 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m9_29 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="44-44"];
m9_30 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="45-45"];
m9_31 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="46-46"];
m9_32 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="47-47"];
m9_33 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Assert.Throws<ActivationException>(() => kernel.Get<Samurai>())", span="48-48"];
m9_34 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m9_66 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="82-82"];
m9_67 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="84-84"];
m9_68 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="86-86"];
m9_69 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="87-87"];
m9_70 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>()", span="89-89"];
m9_71 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="90-90"];
m9_72 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="91-91"];
m9_73 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="82-82"];
m9_21 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m9_22 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="34-34"];
m9_23 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="35-35"];
m9_24 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="36-36"];
m9_25 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="37-37"];
m9_26 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="38-38"];
m9_27 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m9_49 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m9_50 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = kernel.Get<Sword>()", span="71-71"];
m9_51 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="73-73"];
m9_52 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="74-74"];
m9_53 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="kernel.Bind<Sword>().To<ShortSword>().When(_ => true)", span="76-76"];
m9_54 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = kernel.Get<Sword>()", span="77-77"];
m9_55 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="78-78"];
m9_56 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m9_88 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m9_89 [cluster="Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", span="110-110"];
m9_90 [cluster="Unk.Contain", file="ConditionalBindingTests.cs", label="Entry Unk.Contain", span=""];
m9_59 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="101-101"];
m9_14 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m9_15 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Sword>()", span="24-24"];
m9_16 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="25-25"];
m9_17 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="kernel.Bind<Samurai>().ToSelf()", span="26-26"];
m9_18 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = kernel.Get<Samurai>()", span="27-27"];
m9_19 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="28-28"];
m9_20 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m9_150 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests", span=""];
m10_19 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="34-34"];
m10_21 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="kernel.Bind<IWeapon>().ToConstant(sword).WhenInjectedInto<Samurai>()", span="37-37"];
m10_22 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="kernel.Bind<IWeapon>().To<Shuriken>()", span="38-38"];
m10_23 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="var samurai = kernel.Get<Samurai>()", span="40-40"];
m10_25 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="var weapon = kernel.Get<IWeapon>()", span="42-42"];
m10_20 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="var sword = new Sword()", span="36-36"];
m10_24 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="samurai.Weapon.Should().BeSameAs(sword)", span="41-41"];
m10_26 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="weapon.Should().BeOfType<Shuriken>()", span="43-43"];
m10_27 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="34-34"];
m10_30 [cluster="Unk.>", file="ConstantTests.cs", label="Entry Unk.>", span=""];
m10_31 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="47-47"];
m10_33 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs", label="0: var provider = new ResolveCountingProvider(builder.Binding.ProviderCallback)", span="50-50"];
m10_32 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="var builder = kernel.Bind<IWeapon>().ToConstant(new Sword())", span="49-49"];
m10_34 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs", label="0: builder.Binding.ProviderCallback = ctx => provider.Callback(ctx)", span="51-51"];
m10_37 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="provider.Count.Should().Be(1)", span="57-57"];
m10_35 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="kernel.Get<IWeapon>()", span="54-54"];
m10_36 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="kernel.Get<IWeapon>()", span="55-55"];
m10_38 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="47-47"];
m10_40 [cluster="Unk.Be", file="ConstantTests.cs", label="Entry Unk.Be", span=""];
m10_39 [cluster="Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", span="12-12"];
m10_44 [cluster="Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", span="17-17"];
m10_15 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80"];
m10_14 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m10_7 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="Ninject.Selection.Heuristics.StandardConstructorScorer", span=""];
m10_9 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="kernel.Bind<IWeapon>().ToConstant(sword)", span="27-27"];
m10_10 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="var instance = kernel.Get<IWeapon>()", span="29-29"];
m10_8 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="var sword = new Sword()", span="26-26"];
m10_11 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="instance.Should().BeSameAs(sword)", span="30-30"];
m10_12 [cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs", label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", span="24-24"];
m10_28 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="108-108"];
m10_18 [cluster="Unk.BeSameAs", file="ConstantTests.cs", label="Entry Unk.BeSameAs", span=""];
m10_16 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstantTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m10_6 [cluster="System.Reflection.MethodBase.GetParameters()", file="ConstantTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m10_29 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="ConstantTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m10_0 [cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", file="ConstantTests.cs", label="Entry Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", span="37-37"];
m10_1 [cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", file="ConstantTests.cs", label="Ensure.ArgumentNotNull(constructor, ''constructor'')", span="39-39"];
m10_2 [cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", file="ConstantTests.cs", label="return constructor.HasAttribute(Settings.InjectAttribute) ? Int32.MaxValue : constructor.GetParameters().Length;", span="40-40"];
m10_3 [cluster="Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", file="ConstantTests.cs", label="Exit Ninject.Selection.Heuristics.StandardConstructorScorer.Score(System.Reflection.ConstructorInfo)", span="37-37"];
m10_41 [cluster="lambda expression", file="ConstantTests.cs", label="Entry lambda expression", span="51-51"];
m10_42 [cluster="lambda expression", color=green, community=0, file="ConstantTests.cs", label="0: provider.Callback(ctx)", span="51-51"];
m10_43 [cluster="lambda expression", file="ConstantTests.cs", label="Exit lambda expression", span="51-51"];
m10_13 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstantTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m10_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ConstantTests.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24"];
m10_17 [cluster="Unk.Should", file="ConstantTests.cs", label="Entry Unk.Should", span=""];
m10_5 [cluster="System.Reflection.ICustomAttributeProvider.HasAttribute(System.Type)", file="ConstantTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.HasAttribute(System.Type)", span="38-38"];
m10_47 [file="ConstantTests.cs", label=provider, span=""];
m10_46 [file="ConstantTests.cs", label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", span=""];
m11_144 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191"];
m11_145 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var sword = new Sword()", span="193-193"];
m11_146 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="194-194"];
m11_147 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="195-195"];
m11_149 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="198-198"];
m11_150 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context2, reference)", span="199-199"];
m11_148 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="196-196"];
m11_152 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var instance1 = this.cache.TryGet(context1)", span="201-201"];
m11_153 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var instance2 = this.cache.TryGet(context2)", span="202-202"];
m11_151 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Clear()", span="200-200"];
m11_154 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="instance1.Should().BeNull()", span="204-204"];
m11_155 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="instance2.Should().BeNull()", span="205-205"];
m11_156 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191"];
m11_128 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172"];
m11_129 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="174-174"];
m11_130 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var sword = new Sword()", span="175-175"];
m11_132 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="177-177"];
m11_136 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Clear(scope)", span="182-182"];
m11_131 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="176-176"];
m11_134 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="180-180"];
m11_135 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context2, reference)", span="181-181"];
m11_133 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="178-178"];
m11_137 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var instance1 = this.cache.TryGet(context1)", span="183-183"];
m11_138 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="var instance2 = this.cache.TryGet(context2)", span="184-184"];
m11_139 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="instance1.Should().BeNull()", span="186-186"];
m11_140 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="instance2.Should().NotBeNull()", span="187-187"];
m11_141 [cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172"];
m11_157 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Caching.Cache.Clear()", span="202-202"];
m11_20 [cluster="Mock<IContext>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m11_174 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231"];
m11_175 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="233-233"];
m11_176 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var scopeOfScope = new TestObject(42)", span="234-234"];
m11_178 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var context = CreateContext(scope, this.bindingConfiguration)", span="236-236"];
m11_180 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(CreateContext(scopeOfScope, this.bindingConfiguration), new InstanceReference { Instance = scope })", span="239-239"];
m11_177 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var sword = new Sword()", span="235-235"];
m11_181 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Clear(scopeOfScope)", span="240-240"];
m11_179 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context, new InstanceReference { Instance = sword })", span="238-238"];
m11_182 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var instance = this.cache.TryGet(context)", span="241-241"];
m11_183 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="243-243"];
m11_184 [cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231"];
m11_49 [cluster="Unk.Should", file="ConstructorSelectionTests.cs", label="Entry Unk.Should", span=""];
m11_7 [cluster="Mock<IBindingConfiguration>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<IBindingConfiguration>.cstr", span=""];
m11_10 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28"];
m11_11 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="var contextMock = new Mock<IContext>()", span="30-30"];
m11_13 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="bindingMock.SetupGet(binding => binding.BindingConfiguration).Returns(bindingConfiguration)", span="32-32"];
m11_15 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="contextMock.Setup(context => context.GetScope()).Returns(scope)", span="34-34"];
m11_16 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="contextMock.SetupGet(context => context.GenericArguments).Returns(genericArguments)", span="35-35"];
m11_17 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="contextMock.SetupGet(context => context.HasInferredGenericArguments).Returns(genericArguments != null && genericArguments.Length > 0)", span="36-36"];
m11_12 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="var bindingMock = new Mock<IBinding>()", span="31-31"];
m11_14 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="contextMock.SetupGet(context => context.Binding).Returns(bindingMock.Object)", span="33-33"];
m11_18 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="return contextMock.Object;", span="37-37"];
m11_19 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28"];
m11_48 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="104-104"];
m11_50 [cluster="Unk.BeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.BeNull", span=""];
m11_104 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136"];
m11_105 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="138-138"];
m11_106 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="var instance = new Sword()", span="139-139"];
m11_108 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="141-141"];
m11_107 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="140-140"];
m11_110 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="bool result = this.cache.Release(instance)", span="144-144"];
m11_109 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(writeContext, reference)", span="143-143"];
m11_111 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="result.Should().BeTrue()", span="146-146"];
m11_112 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136"];
m11_9 [cluster="Cache.cstr", file="ConstructorSelectionTests.cs", label="Entry Cache.cstr", span=""];
m11_62 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="76-76"];
m11_89 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112"];
m11_90 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="114-114"];
m11_91 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="115-115"];
m11_92 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="116-116"];
m11_93 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(double))", span="117-117"];
m11_94 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="119-119"];
m11_95 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context2)", span="120-120"];
m11_96 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="122-122"];
m11_97 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112"];
m11_72 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82"];
m11_73 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="84-84"];
m11_74 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="85-85"];
m11_76 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="88-88"];
m11_75 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(null, this.bindingConfiguration)", span="86-86"];
m11_77 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context2)", span="89-89"];
m11_78 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="91-91"];
m11_79 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82"];
m11_61 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m11_142 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Caching.Cache.Clear(object)", span="187-187"];
m11_169 [cluster="Unk.CreateContext", file="ConstructorSelectionTests.cs", label="Entry Unk.CreateContext", span=""];
m11_114 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150"];
m11_115 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="152-152"];
m11_116 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="var sword = new Sword()", span="153-153"];
m11_118 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="155-155"];
m11_119 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="var readContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="156-156"];
m11_117 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="154-154"];
m11_120 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(writeContext, reference)", span="158-158"];
m11_124 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="instance1.Should().BeSameAs(reference.Instance)", span="163-163"];
m11_121 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="object instance1 = this.cache.TryGet(readContext)", span="159-159"];
m11_123 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="object instance2 = this.cache.TryGet(readContext)", span="161-161"];
m11_122 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="bool result = this.cache.Release(instance1)", span="160-160"];
m11_125 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="result.Should().BeTrue()", span="164-164"];
m11_126 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="instance2.Should().BeNull()", span="165-165"];
m11_127 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150"];
m11_103 [cluster="Unk.BeFalse", file="ConstructorSelectionTests.cs", label="Entry Unk.BeFalse", span=""];
m11_34 [cluster="Unk.GetScope", file="ConstructorSelectionTests.cs", label="Entry Unk.GetScope", span=""];
m11_80 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98"];
m11_81 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="100-100"];
m11_82 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="101-101"];
m11_83 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="102-102"];
m11_84 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="103-103"];
m11_85 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="105-105"];
m11_87 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="instance.Should().BeSameAs(reference.Instance)", span="108-108"];
m11_86 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context2)", span="106-106"];
m11_88 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98"];
m11_24 [cluster="Unk.Setup", file="ConstructorSelectionTests.cs", label="Entry Unk.Setup", span=""];
m11_22 [cluster="Unk.SetupGet", file="ConstructorSelectionTests.cs", label="Entry Unk.SetupGet", span=""];
m11_158 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212"];
m11_159 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var scopeMock = new Mock<INotifyWhenDisposed>()", span="214-214"];
m11_160 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var sword = new Sword()", span="215-215"];
m11_162 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var context = CreateContext(scopeMock.Object, this.bindingConfiguration)", span="217-217"];
m11_164 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="scopeMock.Raise(scope => scope.Disposed += null, EventArgs.Empty)", span="220-220"];
m11_161 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = sword }", span="216-216"];
m11_163 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context, reference)", span="219-219"];
m11_165 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context)", span="221-221"];
m11_166 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="223-223"];
m11_167 [cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212"];
m11_143 [cluster="Unk.NotBeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBeNull", span=""];
m11_60 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m11_21 [cluster="Mock<IBinding>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<IBinding>.cstr", span=""];
m11_63 [cluster="Unk.BeSameAs", file="ConstructorSelectionTests.cs", label="Entry Unk.BeSameAs", span=""];
m11_171 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="220-220"];
m11_25 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="32-32"];
m11_28 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="33-33"];
m11_31 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="34-34"];
m11_35 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="35-35"];
m11_38 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="36-36"];
m11_26 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="binding.BindingConfiguration", span="32-32"];
m11_27 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="32-32"];
m11_29 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="context.Binding", span="33-33"];
m11_30 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="33-33"];
m11_32 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="context.GetScope()", span="34-34"];
m11_33 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="34-34"];
m11_36 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="context.GenericArguments", span="35-35"];
m11_37 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="35-35"];
m11_39 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="context.HasInferredGenericArguments", span="36-36"];
m11_40 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="36-36"];
m11_172 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="scope.Disposed += null", span="220-220"];
m11_173 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="220-220"];
m11_98 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129"];
m11_99 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="ConstructorSelectionTests.cs", label="bool result = this.cache.Release(new TestObject(42))", span="131-131"];
m11_100 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="ConstructorSelectionTests.cs", label="result.Should().BeFalse()", span="132-132"];
m11_101 [cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129"];
m11_170 [cluster="Unk.Raise", file="ConstructorSelectionTests.cs", label="Entry Unk.Raise", span=""];
m11_0 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20"];
m11_1 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="this.cachePrunerMock = new Mock<ICachePruner>()", span="22-22"];
m11_2 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="this.bindingConfiguration = new Mock<IBindingConfiguration>().Object", span="23-23"];
m11_3 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="this.pipelineMock = new Mock<IPipeline>()", span="24-24"];
m11_4 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="this.cache = new Cache(this.pipelineMock.Object, this.cachePrunerMock.Object)", span="25-25"];
m11_5 [cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20"];
m11_41 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44"];
m11_42 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="46-46"];
m11_43 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="var context = CreateContext(scope, this.bindingConfiguration)", span="47-47"];
m11_44 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="var instance = this.cache.TryGet(context)", span="49-49"];
m11_45 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="51-51"];
m11_46 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44"];
m11_102 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Activation.Caching.Cache.Release(object)", span="146-146"];
m11_47 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m11_113 [cluster="Unk.BeTrue", file="ConstructorSelectionTests.cs", label="Entry Unk.BeTrue", span=""];
m11_168 [cluster="Mock<INotifyWhenDisposed>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<INotifyWhenDisposed>.cstr", span=""];
m11_64 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69"];
m11_65 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="71-71"];
m11_66 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="72-72"];
m11_68 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="75-75"];
m11_67 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="73-73"];
m11_69 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context2)", span="76-76"];
m11_70 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="instance.Should().BeNull()", span="78-78"];
m11_71 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69"];
m11_23 [cluster="Unk.Returns", file="ConstructorSelectionTests.cs", label="Entry Unk.Returns", span=""];
m11_51 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55"];
m11_52 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var scope = new TestObject(42)", span="57-57"];
m11_53 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var reference = new InstanceReference { Instance = new Sword() }", span="58-58"];
m11_54 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="59-59"];
m11_55 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="var context2 = CreateContext(scope, this.bindingConfiguration)", span="60-60"];
m11_56 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="this.cache.Remember(context1, reference)", span="62-62"];
m11_58 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="instance.Should().BeSameAs(reference.Instance)", span="65-65"];
m11_57 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="object instance = this.cache.TryGet(context2)", span="63-63"];
m11_59 [cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55"];
m11_8 [cluster="Mock<IPipeline>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<IPipeline>.cstr", span=""];
m11_6 [cluster="Mock<ICachePruner>.cstr", file="ConstructorSelectionTests.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m11_185 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.CacheContext", span=""];
m11_186 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", span=""];
m11_187 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", span=""];
m11_188 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", span=""];
m11_189 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", span=""];
m11_190 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", span=""];
m11_191 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", span=""];
m12_7 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="49-49"];
m12_8 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="51-51"];
m12_9 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error loading module '{0}' of type {1}'', newModule.Name, newModule.GetType().Format())", span="53-53"];
m12_10 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Another module (of type {0}) with the same name has already been loaded'', existingModule.GetType().Format())", span="54-54"];
m12_11 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="56-56"];
m12_12 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have not accidentally loaded the same module twice.'')", span="57-57"];
m12_13 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) If you are using automatic module loading, ensure you have not manually loaded a module'')", span="59-59"];
m12_14 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="sw.WriteLine(''     that may be found by the module loader.'')", span="60-60"];
m12_15 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="63-63"];
m12_16 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="49-49"];
m12_24 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="72-72"];
m12_25 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="74-74"];
m12_26 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error unloading module '{0}': no such module has been loaded'', name)", span="76-76"];
m12_27 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="78-78"];
m12_28 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure you have previously loaded the module and the name is spelled correctly.'')", span="79-79"];
m12_29 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) Ensure you have not accidentally created more than one kernel.'')", span="80-80"];
m12_30 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="82-82"];
m12_31 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="72-72"];
m12_85 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="192-192"];
m12_86 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="194-194"];
m12_87 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="196-196"];
m12_91 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="201-201"];
m12_88 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''No constructor was available to create an instance of the implementation type.'')", span="197-197"];
m12_89 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine()", span="198-198"];
m12_90 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="200-200"];
m12_92 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="203-203"];
m12_93 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="204-204"];
m12_94 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.'')", span="205-205"];
m12_95 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="207-207"];
m12_96 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="192-192"];
m12_6 [cluster="string.Format(string, object, object)", file="ExceptionFormatter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_21 [cluster="System.IO.TextWriter.WriteLine(string, object)", file="ExceptionFormatter.cs", label="Entry System.IO.TextWriter.WriteLine(string, object)", span="0-0"];
m12_42 [cluster="Ninject.Activation.IRequest.FormatActivationPath()", file="ExceptionFormatter.cs", label="Entry Ninject.Activation.IRequest.FormatActivationPath()", span="34-34"];
m12_18 [cluster="object.GetType()", file="ExceptionFormatter.cs", label="Entry object.GetType()", span="0-0"];
m12_106 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="237-237"];
m12_107 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="239-239"];
m12_108 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="241-241"];
m12_109 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''No such component has been registered in the kernel's component container.'')", span="242-242"];
m12_110 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine()", span="243-243"];
m12_111 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="245-245"];
m12_112 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) If you have created a custom subclass for KernelBase, ensure that you have properly'')", span="246-246"];
m12_113 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''     implemented the AddComponents() method.'')", span="247-247"];
m12_114 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) Ensure that you have not removed the component from the container via a call to RemoveAll().'')", span="248-248"];
m12_115 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="249-249"];
m12_116 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="251-251"];
m12_117 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="237-237"];
m12_0 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="29-29"];
m12_1 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ExceptionFormatter.cs", label="return ''Modules with null or empty names are not supported'';", span="31-31"];
m12_2 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="29-29"];
m12_57 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="141-141"];
m12_58 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="143-143"];
m12_59 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="145-145"];
m12_63 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="150-150"];
m12_65 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have not declared a dependency for {0} on any implementations of the service.'', context.Request.Service.Format())", span="153-153"];
m12_60 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''A cyclical dependency was detected between the constructors of two services.'')", span="146-146"];
m12_61 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine()", span="147-147"];
m12_62 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="149-149"];
m12_64 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="152-152"];
m12_66 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) Consider combining the services into a single one to remove the cycle.'')", span="154-154"];
m12_67 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  3) Use property injection instead of constructor injection, and implement IInitializable'')", span="155-155"];
m12_68 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''     if you need initialization logic to be run after property values have been injected.'')", span="156-156"];
m12_69 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="158-158"];
m12_70 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="141-141"];
m12_118 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="261-261"];
m12_119 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="263-263"];
m12_120 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="265-265"];
m12_121 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''No matching property {0}.'', propertyName)", span="266-266"];
m12_123 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(request.FormatActivationPath())", span="269-269"];
m12_122 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="268-268"];
m12_124 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="271-271"];
m12_125 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have the correct property name.'')", span="272-272"];
m12_126 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="274-274"];
m12_127 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="261-261"];
m12_20 [cluster="System.IO.TextWriter.WriteLine(string, object, object)", file="ExceptionFormatter.cs", label="Entry System.IO.TextWriter.WriteLine(string, object, object)", span="0-0"];
m12_3 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="38-38"];
m12_4 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", color=red, community=0, file="ExceptionFormatter.cs", label="0: return String.Format(''Target '{0}' at site '{1}' does not have a default value.'', target.Member, target.Name);", span="40-40"];
m12_5 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="38-38"];
m12_71 [cluster="Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Entry Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", span="56-56"];
m12_97 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="217-217"];
m12_98 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="219-219"];
m12_99 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="221-221"];
m12_100 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''No constructor was available to create an instance of the registered implementation type {0}.'', implementation.Format())", span="222-222"];
m12_101 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine()", span="223-223"];
m12_102 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="225-225"];
m12_103 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="226-226"];
m12_104 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="228-228"];
m12_105 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="217-217"];
m12_128 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="283-283"];
m12_129 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="285-285"];
m12_130 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="287-287"];
m12_133 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(context.Request.FormatActivationPath())", span="291-291"];
m12_131 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Provider returned null.'')", span="288-288"];
m12_132 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="290-290"];
m12_134 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="293-293"];
m12_135 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that the provider handles creation requests properly.'')", span="294-294"];
m12_136 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="296-296"];
m12_137 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="283-283"];
m12_73 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", span="169-169"];
m12_74 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="171-171"];
m12_75 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", color=red, community=0, file="ExceptionFormatter.cs", label="0: sw.WriteLine(''Error registering binding for {0}'', binding.Service.Format())", span="173-173"];
m12_76 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''The type {0} used in a call to {1}() is not a valid attribute.'', type.Format(), methodName)", span="174-174"];
m12_82 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''     such as {0}<SomeAttribute>().'', methodName)", span="181-181"];
m12_77 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine()", span="175-175"];
m12_78 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="177-177"];
m12_79 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have passed the correct type.'')", span="178-178"];
m12_80 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) If you have defined your own attribute type, ensure that it extends System.Attribute.'')", span="179-179"];
m12_81 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  3) To avoid problems with type-safety, use the generic version of the the method instead,'')", span="180-180"];
m12_83 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="183-183"];
m12_84 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(Ninject.Planning.Bindings.IBinding, string, System.Type)", span="169-169"];
m12_22 [cluster="System.IO.TextWriter.WriteLine(string)", file="ExceptionFormatter.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m12_23 [cluster="System.IO.StringWriter.ToString()", file="ExceptionFormatter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m12_17 [cluster="System.IO.StringWriter.StringWriter()", file="ExceptionFormatter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m12_32 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", span="91-91"];
m12_33 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="93-93"];
m12_34 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="95-95"];
m12_37 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(request.FormatActivationPath())", span="99-99"];
m12_39 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0} only once.'', request.Service.Format())", span="102-102"];
m12_35 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''More than one matching bindings are available.'')", span="96-96"];
m12_36 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="98-98"];
m12_38 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="101-101"];
m12_40 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="104-104"];
m12_41 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest)", span="91-91"];
m12_43 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="113-113"];
m12_44 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="var sw = new StringWriter()", span="115-115"];
m12_45 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="117-117"];
m12_48 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(request.FormatActivationPath())", span="121-121"];
m12_50 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0}.'', request.Service.Format())", span="124-124"];
m12_46 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''No matching bindings are available, and the type is not self-bindable.'')", span="118-118"];
m12_47 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Activation path:'')", span="120-120"];
m12_49 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''Suggestions:'')", span="123-123"];
m12_51 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  2) If the binding was defined in a module, ensure that the module has been loaded into the kernel.'')", span="125-125"];
m12_52 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="126-126"];
m12_53 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  4) If you are using constructor arguments, ensure that the parameter name matches the constructors parameter name.'')", span="127-127"];
m12_54 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="sw.WriteLine(''  5) If you are using automatic module loading, ensure the search path and filters are correct.'')", span="129-129"];
m12_55 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="return sw.ToString();", span="132-132"];
m12_56 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ExceptionFormatter.cs", label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="113-113"];
m12_72 [cluster="System.IO.TextWriter.WriteLine()", file="ExceptionFormatter.cs", label="Entry System.IO.TextWriter.WriteLine()", span="0-0"];
m12_19 [cluster="System.Type.Format()", file="ExceptionFormatter.cs", label="Entry System.Type.Format()", span="155-155"];
m18_0 [cluster="Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic.ShouldInject(System.Reflection.MethodInfo)", file="IBindingRoot.cs", label="Entry Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic.ShouldInject(System.Reflection.MethodInfo)", span="36-36"];
m18_1 [cluster="Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic.ShouldInject(System.Reflection.MethodInfo)", file="IBindingRoot.cs", label="return method.HasAttribute(Kernel.Settings.InjectAttribute);", span="38-38"];
m18_2 [cluster="Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic.ShouldInject(System.Reflection.MethodInfo)", file="IBindingRoot.cs", label="Exit Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic.ShouldInject(System.Reflection.MethodInfo)", span="36-36"];
m18_3 [cluster="System.Reflection.ICustomAttributeProvider.HasAttribute(System.Type)", file="IBindingRoot.cs", label="Entry System.Reflection.ICustomAttributeProvider.HasAttribute(System.Type)", span="38-38"];
m18_4 [file="IBindingRoot.cs", label="Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic", span=""];
m32_10 [cluster="Unk.WriteLine", file="InterfaceSegregationTests.cs", label="Entry Unk.WriteLine", span=""];
m32_102 [cluster="System.Text.StringBuilder.Append(string)", file="InterfaceSegregationTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m32_32 [cluster="object.GetType()", file="InterfaceSegregationTests.cs", label="Entry object.GetType()", span="0-0"];
m32_12 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", span="49-49"];
m32_13 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="var sw = new StringWriter()", span="51-51"];
m32_14 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="binding.Condition != null", span="53-53"];
m32_16 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="binding.Metadata.IsImplicit", span="56-56"];
m32_18 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="IProvider provider = binding.GetProvider(context)", span="59-59"];
m32_19 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="binding.Service == provider.Type", span="61-61"];
m32_20 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="sw.Write(''self-binding of {0}'', binding.Service.Format())", span="62-62"];
m32_21 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="sw.Write(''binding from {0} to {1}'', binding.Service.Format(), provider.Type.Format())", span="64-64"];
m32_15 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="sw.Write(''conditional '')", span="54-54"];
m32_17 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="sw.Write(''implicit '')", span="57-57"];
m32_24 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="sw.Write('' (via {0})'', providerType.Format())", span="69-69"];
m32_25 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="return sw.ToString();", span="71-71"];
m32_22 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="Type providerType = provider.GetType()", span="66-66"];
m32_23 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="providerType != typeof(StandardProvider)", span="68-68"];
m32_26 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="Exit Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Bindings.IBinding, Ninject.Activation.IContext)", span="49-49"];
m32_99 [cluster="System.Text.StringBuilder.StringBuilder()", file="InterfaceSegregationTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m32_105 [cluster="System.Text.StringBuilder.ToString()", file="InterfaceSegregationTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m32_40 [cluster="Ninject.Planning.Targets.ITarget.Format()", file="InterfaceSegregationTests.cs", label="Entry Ninject.Planning.Targets.ITarget.Format()", span="88-88"];
m32_41 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", span="88-88"];
m32_42 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="var sw = new StringWriter()", span="90-90"];
m32_43 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="target.Member.MemberType", span="92-92"];
m32_45 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="sw.Write(''parameter {0} of constructor'', target.Name)", span="95-95"];
m32_47 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="sw.Write(''parameter {0} of method {1}'', target.Name, target.Member.Name)", span="99-99"];
m32_49 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="sw.Write(''property {0}'', target.Name)", span="103-103"];
m32_51 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="sw.Write('' of type {0}'', target.Member.ReflectedType.Format())", span="110-110"];
m32_52 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="return sw.ToString();", span="112-112"];
m32_44 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="MemberTypes.Constructor", span="94-94"];
m32_46 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="MemberTypes.Method", span="98-98"];
m32_48 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="MemberTypes.Property", span="102-102"];
m32_50 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="throw new ArgumentOutOfRangeException();", span="107-107"];
m32_53 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", file="InterfaceSegregationTests.cs", label="Exit Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Planning.Targets.ITarget)", span="88-88"];
m32_101 [cluster="string.Substring(int, int)", file="InterfaceSegregationTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m32_30 [cluster="System.IO.TextWriter.Write(string, object)", file="InterfaceSegregationTests.cs", label="Entry System.IO.TextWriter.Write(string, object)", span="0-0"];
m32_0 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", span="33-33"];
m32_1 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="var sw = new StringWriter()", span="35-35"];
m32_2 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="IRequest current = request", span="37-37"];
m32_4 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="sw.WriteLine(''{0,3}) {1}'', current.Depth + 1, current.Format())", span="41-41"];
m32_6 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="return sw.ToString();", span="45-45"];
m32_3 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="current != null", span="39-39"];
m32_5 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="current = current.Parent", span="42-42"];
m32_7 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="Exit Ninject.Infrastructure.Introspection.FormatExtensions.FormatActivationPath(Ninject.Activation.IRequest)", span="33-33"];
m32_31 [cluster="System.IO.TextWriter.Write(string, object, object)", file="InterfaceSegregationTests.cs", label="Entry System.IO.TextWriter.Write(string, object, object)", span="0-0"];
m32_54 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="InterfaceSegregationTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m32_27 [cluster="System.IO.StringWriter.Write(string)", file="InterfaceSegregationTests.cs", label="Entry System.IO.StringWriter.Write(string)", span="0-0"];
m32_28 [cluster="Ninject.Planning.Bindings.IBinding.GetProvider(Ninject.Activation.IContext)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Planning.Bindings.IBinding.GetProvider(Ninject.Activation.IContext)", span="66-66"];
m32_103 [cluster="System.Type.GetGenericArguments()", file="InterfaceSegregationTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m32_11 [cluster="System.IO.StringWriter.ToString()", file="InterfaceSegregationTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m32_9 [cluster="Ninject.Activation.IRequest.Format()", file="InterfaceSegregationTests.cs", label="Entry Ninject.Activation.IRequest.Format()", span="75-75"];
m32_8 [cluster="System.IO.StringWriter.StringWriter()", file="InterfaceSegregationTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m32_33 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", span="75-75"];
m32_34 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="var sw = new StringWriter()", span="77-77"];
m32_35 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="request.Target == null", span="79-79"];
m32_36 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="sw.Write(''Request for {0}'', request.Service.Format())", span="80-80"];
m32_37 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="sw.Write(''Injection of dependency {0} into {1}'', request.Service.Format(), request.Target.Format())", span="82-82"];
m32_38 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="return sw.ToString();", span="84-84"];
m32_39 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", file="InterfaceSegregationTests.cs", label="Exit Ninject.Infrastructure.Introspection.FormatExtensions.Format(Ninject.Activation.IRequest)", span="75-75"];
m32_100 [cluster="string.LastIndexOf(char)", file="InterfaceSegregationTests.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m32_55 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="Entry Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", span="116-116"];
m32_56 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="type.IsGenericType", span="118-118"];
m32_58 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Append(type.Name.Substring(0, type.Name.LastIndexOf('`')))", span="122-122"];
m32_60 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="type.GetGenericArguments()", span="125-125"];
m32_66 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="Type.GetTypeCode(type)", span="138-138"];
m32_97 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return type.Name;", span="155-155"];
m32_57 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="var sb = new StringBuilder()", span="120-120"];
m32_59 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Append(''['')", span="123-123"];
m32_61 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Append(genericArgument.Format())", span="127-127"];
m32_62 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Append('', '')", span="128-128"];
m32_63 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Remove(sb.Length - 2, 2)", span="131-131"];
m32_64 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="sb.Append('']'')", span="132-132"];
m32_65 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return sb.ToString();", span="134-134"];
m32_67 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Boolean", span="140-140"];
m32_69 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Char", span="141-141"];
m32_71 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.SByte", span="142-142"];
m32_73 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Byte", span="143-143"];
m32_75 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Int16", span="144-144"];
m32_77 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.UInt16", span="145-145"];
m32_79 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Int32", span="146-146"];
m32_81 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.UInt32", span="147-147"];
m32_83 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Int64", span="148-148"];
m32_85 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.UInt64", span="149-149"];
m32_87 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Single", span="150-150"];
m32_89 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Double", span="151-151"];
m32_91 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.Decimal", span="152-152"];
m32_93 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.DateTime", span="153-153"];
m32_95 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="TypeCode.String", span="154-154"];
m32_68 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''bool'';", span="140-140"];
m32_70 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''char'';", span="141-141"];
m32_72 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''sbyte'';", span="142-142"];
m32_74 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''byte'';", span="143-143"];
m32_76 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''short'';", span="144-144"];
m32_78 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''ushort'';", span="145-145"];
m32_80 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''int'';", span="146-146"];
m32_82 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''uint'';", span="147-147"];
m32_84 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''long'';", span="148-148"];
m32_86 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''ulong'';", span="149-149"];
m32_88 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''float'';", span="150-150"];
m32_90 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''double'';", span="151-151"];
m32_92 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''decimal'';", span="152-152"];
m32_94 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''DateTime'';", span="153-153"];
m32_96 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="return ''string'';", span="154-154"];
m32_98 [cluster="Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", file="InterfaceSegregationTests.cs", label="Exit Ninject.Infrastructure.Introspection.FormatExtensions.Format(System.Type)", span="116-116"];
m32_104 [cluster="System.Text.StringBuilder.Remove(int, int)", file="InterfaceSegregationTests.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m32_29 [cluster="System.Type.Format()", file="InterfaceSegregationTests.cs", label="Entry System.Type.Format()", span="116-116"];
m32_106 [cluster="System.Type.GetTypeCode(System.Type)", file="InterfaceSegregationTests.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m40_2 [cluster="Ninject.Modules.IModule.OnUnload(Ninject.IKernel)", file="Provider.cs", label="Entry Ninject.Modules.IModule.OnUnload(Ninject.IKernel)", span="48-48"];
m40_3 [cluster="Ninject.Modules.IModule.OnUnload(Ninject.IKernel)", file="Provider.cs", label="Exit Ninject.Modules.IModule.OnUnload(Ninject.IKernel)", span="48-48"];
m40_0 [cluster="Ninject.Modules.IModule.OnLoad(Ninject.IKernel)", file="Provider.cs", label="Entry Ninject.Modules.IModule.OnLoad(Ninject.IKernel)", span="42-42"];
m40_1 [cluster="Ninject.Modules.IModule.OnLoad(Ninject.IKernel)", file="Provider.cs", label="Exit Ninject.Modules.IModule.OnLoad(Ninject.IKernel)", span="42-42"];
m42_19 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="Components.Add<IActivationStrategy, DisposableStrategy>()", span="79-79"];
m42_40 [cluster="string.Equals(string)", file="StandardKernel.cs", label="Entry string.Equals(string)", span="0-0"];
m42_10 [cluster="Ninject.StandardKernel.AddComponents()", color=green, community=0, file="StandardKernel.cs", label="0: Components.Add<IConstructorScorer, StandardConstructorScorer>()", span="69-69"];
m42_6 [cluster="Ninject.StandardKernel.AddComponents()", color=green, community=0, file="StandardKernel.cs", label="0: Components.Add<IPlanningStrategy, ConstructorReflectionStrategy>()", span="64-64"];
m42_12 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="Components.Add<IPipeline, Pipeline>()", span="72-72"];
m42_15 [cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs", label="Components.Add<IActivationStrategy, MethodInjectionStrategy>()", span="75-75"];
m42_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="StandardKernel.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="38-38"];
m42_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="StandardKernel.cs", label="0: Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m42_7 [cluster="CommandLine.Core.Token.Value(string)", color=green, community=0, file="StandardKernel.cs", label="0: Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m42_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", color=green, community=0, file="StandardKernel.cs", label="0: Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m42_9 [cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=0, file="StandardKernel.cs", label="0: Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m42_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StandardKernel.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m42_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="StandardKernel.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m42_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="StandardKernel.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m42_16 [cluster="lambda expression", file="StandardKernel.cs", label="Entry lambda expression", span="35-35"];
m42_17 [cluster="lambda expression", file="StandardKernel.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="35-35"];
m42_18 [cluster="lambda expression", file="StandardKernel.cs", label="Exit lambda expression", span="35-35"];
m42_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m42_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="47-48"];
m42_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="49-50"];
m42_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="53-59"];
m42_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="62-62"];
m42_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="StandardKernel.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m42_26 [cluster="lambda expression", file="StandardKernel.cs", label="Entry lambda expression", span="59-59"];
m42_27 [cluster="lambda expression", file="StandardKernel.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="59-59"];
m42_28 [cluster="lambda expression", file="StandardKernel.cs", label="Exit lambda expression", span="59-59"];
m42_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="StandardKernel.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m42_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="StandardKernel.cs", label="var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="71-73"];
m42_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="StandardKernel.cs", label="Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="74-75"];
m42_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="StandardKernel.cs", label="var result =\r\n                Tokenizer.Normalize(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                    nameLookup)", span="78-87"];
m42_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="StandardKernel.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="90-90"];
m42_34 [cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="StandardKernel.cs", label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="31-31"];
m42_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="StandardKernel.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m42_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="StandardKernel.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24"];
m42_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="StandardKernel.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26"];
m42_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="StandardKernel.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-35"];
m42_37 [cluster="lambda expression", file="StandardKernel.cs", label="Entry lambda expression", span="75-75"];
m42_38 [cluster="lambda expression", file="StandardKernel.cs", label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="75-75"];
m42_39 [cluster="lambda expression", file="StandardKernel.cs", label="Exit lambda expression", span="75-75"];
m42_36 [cluster="CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", file="StandardKernel.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", span="67-67"];
m42_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="StandardKernel.cs", label="Ninject.StandardKernel", span=""];
m42_41 [file="StandardKernel.cs", label=specs, span=""];
m42_42 [file="StandardKernel.cs", label=specs, span=""];
m43_0 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", span="22-22"];
m43_1 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="StandardProvider.cs", label="this.SetUp()", span="24-24"];
m43_2 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.WhenPruneIsCalled()", span="22-22"];
m43_3 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", span="27-27"];
m43_39 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", span="62-62"];
m43_48 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", color=green, community=0, file="StandardProvider.cs", label="0: swordCollected.Should().BeFalse()", span="75-75"];
m43_47 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="bool swordCollected = !swordWeakReference.IsAlive", span="73-73"];
m43_41 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="var swordWeakReference = new WeakReference(sword)", span="65-65"];
m43_46 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="71-71"];
m43_42 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="var context = CreateContextMock(new TestObject(42), this.bindingConfigurationMock.Object)", span="66-66"];
m43_43 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="this.Remember(sword, context)", span="67-67"];
m43_40 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="var sword = new Sword()", span="64-64"];
m43_45 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="GC.WaitForPendingFinalizers()", span="70-70"];
m43_44 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="69-69"];
m43_49 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", span="62-62"];
m43_82 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="133-133"];
m43_83 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="StandardProvider.cs", label="return this.scope.Target;", span="135-135"];
m43_84 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="133-133"];
m43_73 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="121-121"];
m43_74 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="StandardProvider.cs", label="this.scope = new WeakReference(scope)", span="123-123"];
m43_75 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="StandardProvider.cs", label="this.Binding = binding", span="124-124"];
m43_76 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="StandardProvider.cs", label="this.GenericArguments = genericArguments", span="125-125"];
m43_77 [cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="121-121"];
m43_36 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="StandardProvider.cs", label="Entry Ninject.Activation.Caching.Cache.Prune()", span="169-169"];
m43_37 [cluster="Unk.Should", file="StandardProvider.cs", label="Entry Unk.Should", span=""];
m43_51 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="78-78"];
m43_52 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", color=green, community=0, file="StandardProvider.cs", label="0: var bindingMock = new Mock<IBinding>()", span="80-80"];
m43_53 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="StandardProvider.cs", label="bindingMock.Setup(b => b.BindingConfiguration).Returns(bindingConfiguration)", span="81-81"];
m43_54 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", color=green, community=0, file="StandardProvider.cs", label="0: return new ContextMock(scope, bindingMock.Object, genericArguments);", span="82-82"];
m43_55 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CreateContextMock(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="78-78"];
m43_9 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="StandardProvider.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", span="40-40"];
m43_12 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="StandardProvider.cs", label="kernel.Load(filePatterns)", span="53-53"];
m43_27 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="swordCollected.Should().BeTrue()", span="57-57"];
m43_15 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="StandardProvider.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="61-61"];
m43_16 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="StandardProvider.cs", label="kernel.Load(assemblies)", span="63-63"];
m43_22 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="this.cache.Prune()", span="50-50"];
m43_26 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="bool swordCollected = !swordWeakReference.IsAlive", span="56-56"];
m43_14 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", file="StandardProvider.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", span="38-38"];
m43_13 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="StandardProvider.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", span="51-51"];
m43_17 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="StandardProvider.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="61-61"];
m43_21 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="48-48"];
m43_23 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="52-52"];
m43_19 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="46-46"];
m43_25 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.Collect()", span="54-54"];
m43_18 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="StandardProvider.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="44-44"];
m43_20 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.WaitForPendingFinalizers()", span="47-47"];
m43_24 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="GC.WaitForPendingFinalizers()", span="53-53"];
m43_28 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", span="36-36"];
m43_10 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="StandardProvider.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="31-31"];
m43_66 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="StandardProvider.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="76-76"];
m43_7 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", span="27-27"];
m43_8 [cluster="Mock<ICachePruner>.cstr", file="StandardProvider.cs", label="Entry Mock<ICachePruner>.cstr", span=""];
m43_5 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="StandardProvider.cs", label="this.bindingConfigurationMock = new Mock<IBindingConfiguration>()", span="30-30"];
m43_6 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="StandardProvider.cs", label="this.cache = new Cache(new PipelineMock(), this.cachePrunerMock.Object)", span="31-31"];
m43_29 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="StandardProvider.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m43_4 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="StandardProvider.cs", label="this.cachePrunerMock = new Mock<ICachePruner>()", span="29-29"];
m43_32 [cluster="Unk.CreateContextMock", file="StandardProvider.cs", label="Entry Unk.CreateContextMock", span=""];
m43_50 [cluster="Unk.BeFalse", file="StandardProvider.cs", label="Entry Unk.BeFalse", span=""];
m43_57 [cluster="Unk.Setup", file="StandardProvider.cs", label="Entry Unk.Setup", span=""];
m43_59 [cluster="ContextMock.cstr", file="StandardProvider.cs", label="Entry ContextMock.cstr", span=""];
m43_56 [cluster="Mock<IBinding>.cstr", file="StandardProvider.cs", label="Entry Mock<IBinding>.cstr", span=""];
m43_65 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="StandardProvider.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m43_60 [cluster="lambda expression", file="StandardProvider.cs", label="Entry lambda expression", span="81-81"];
m43_61 [cluster="lambda expression", file="StandardProvider.cs", label="b.BindingConfiguration", span="81-81"];
m43_62 [cluster="lambda expression", file="StandardProvider.cs", label="Exit lambda expression", span="81-81"];
m43_35 [cluster="System.GC.WaitForPendingFinalizers()", file="StandardProvider.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m43_34 [cluster="System.GC.Collect()", file="StandardProvider.cs", label="Entry System.GC.Collect()", span="0-0"];
m43_38 [cluster="Unk.BeTrue", file="StandardProvider.cs", label="Entry Unk.BeTrue", span=""];
m43_31 [cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6"];
m43_30 [cluster="System.WeakReference.WeakReference(object)", file="StandardProvider.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m43_11 [cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", span="91-91"];
m43_58 [cluster="Unk.Returns", file="StandardProvider.cs", label="Entry Unk.Returns", span=""];
m43_33 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="StandardProvider.cs", label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="85-85"];
m43_63 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", color=green, community=0, file="StandardProvider.cs", label="0: this.cache.Remember(context, new InstanceReference { Instance = sword })", span="87-87"];
m43_64 [cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="StandardProvider.cs", label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="85-85"];
m43_91 [file="StandardProvider.cs", label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", span=""];
m43_92 [file="StandardProvider.cs", label="Ninject.Tests.Unit.CacheTests.ContextMock", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [color=red, key=0, style=solid];
m0_5 -> m0_6  [color=red, key=0, style=solid];
m0_5 -> m0_7  [color=red, key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [color=red, key=0, style=solid];
m0_29 -> m0_30  [color=red, key=0, style=solid];
m0_29 -> m0_34  [color=red, key=2, style=dotted];
m0_29 -> m0_37  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_29 -> m0_32  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_30 -> m0_31  [color=red, key=0, style=solid];
m0_30 -> m0_15  [color=red, key=2, style=dotted];
m0_30 -> m0_16  [color=red, key=2, style=dotted];
m0_30 -> m0_35  [color=red, key=2, style=dotted];
m0_30 -> m0_36  [color=red, key=1, label="lambda expression", style=dashed];
m0_32 -> m0_33  [color=red, key=0, style=solid];
m0_32 -> m0_19  [color=red, key=2, style=dotted];
m0_32 -> m0_20  [color=red, key=2, style=dotted];
m0_31 -> m0_32  [color=red, key=0, style=solid];
m0_31 -> m0_18  [color=red, key=2, style=dotted];
m0_33 -> m0_28  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=red, key=0, style=solid];
m0_22 -> m0_23  [color=red, key=0, style=solid];
m0_22 -> m0_14  [color=red, key=2, style=dotted];
m0_22 -> m0_25  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_23 -> m0_24  [color=red, key=0, style=solid];
m0_23 -> m0_15  [color=red, key=2, style=dotted];
m0_23 -> m0_16  [color=red, key=2, style=dotted];
m0_23 -> m0_27  [color=red, key=2, style=dotted];
m0_25 -> m0_26  [color=red, key=0, style=solid];
m0_25 -> m0_19  [color=red, key=2, style=dotted];
m0_25 -> m0_20  [color=red, key=2, style=dotted];
m0_24 -> m0_25  [color=red, key=0, style=solid];
m0_24 -> m0_18  [color=red, key=2, style=dotted];
m0_26 -> m0_21  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [color=red, key=0, style=solid];
m0_40 -> m0_41  [color=red, key=0, style=solid];
m0_40 -> m0_34  [color=red, key=2, style=dotted];
m0_40 -> m0_47  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_40 -> m0_43  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_41 -> m0_42  [color=red, key=0, style=solid];
m0_41 -> m0_15  [color=red, key=2, style=dotted];
m0_41 -> m0_16  [color=red, key=2, style=dotted];
m0_41 -> m0_45  [color=red, key=2, style=dotted];
m0_41 -> m0_46  [color=red, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_44  [color=red, key=0, style=solid];
m0_43 -> m0_19  [color=red, key=2, style=dotted];
m0_43 -> m0_20  [color=red, key=2, style=dotted];
m0_42 -> m0_43  [color=red, key=0, style=solid];
m0_42 -> m0_18  [color=red, key=2, style=dotted];
m0_44 -> m0_39  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [color=red, key=0, style=solid];
m0_37 -> m0_38  [color=red, key=0, style=solid];
m0_36 -> m0_37  [color=red, key=0, style=solid];
m0_38 -> m0_36  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [color=red, key=0, style=solid];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_9 -> m0_10  [color=red, key=0, style=solid];
m0_9 -> m0_14  [color=red, key=2, style=dotted];
m0_9 -> m0_12  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_15  [color=red, key=2, style=dotted];
m0_10 -> m0_16  [color=red, key=2, style=dotted];
m0_10 -> m0_17  [color=red, key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_19  [key=2, style=dotted];
m0_12 -> m0_20  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_8  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_49 -> m0_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_5  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_10  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_23  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_24  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_30  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_31  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_41  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_49 -> m0_42  [color=red, key=1, label="Ninject.Tests.Integration.ConstructorArgumentInBindingConfigurationBuilderTest", style=dashed];
m0_50 -> m0_37  [color=red, key=1, label=expectedWeapon, style=dashed];
m0_51 -> m0_47  [color=red, key=1, label=expectedWeapon, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_11  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_22  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_3 -> m7_2  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_21 -> m7_19  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_3  [color=green, key=2, style=dotted];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_13  [color=green, key=1, label=string, style=dashed];
m7_11 -> m7_7  [color=darkorchid, key=3, label="method methodReturn Mock<Ninject.Modules.INinjectModule> CreateModuleMock", style=bold];
m7_11 -> m7_22  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_16  [color=green, key=2, style=dotted];
m7_12 -> m7_14  [color=green, key=1, label=moduleMock, style=dashed];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_17  [color=green, key=2, style=dotted];
m7_13 -> m7_18  [color=green, key=2, style=dotted];
m7_13 -> m7_19  [color=green, key=1, label="lambda expression", style=dashed];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_15 -> m7_11  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [color=green, key=0, style=solid];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_7  [color=green, key=2, style=dotted];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_25 -> m7_1  [color=green, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m7_25 -> m7_5  [color=green, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m7_25 -> m7_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_76  [color=blue, key=0, style=bold];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_52  [color=blue, key=0, style=bold];
m8_62 -> m8_63  [key=0, style=solid];
m8_63 -> m8_62  [color=blue, key=0, style=bold];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_74  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_48  [color=blue, key=0, style=bold];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_46  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_32  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_43 -> m8_42  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_16  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_20  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_8  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_24  [color=blue, key=0, style=bold];
m8_56 -> m8_57  [key=0, style=solid];
m8_57 -> m8_56  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_44  [color=blue, key=0, style=bold];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_64  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_12  [color=blue, key=0, style=bold];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_22  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_38  [color=blue, key=0, style=bold];
m8_68 -> m8_69  [key=0, style=solid];
m8_69 -> m8_68  [color=blue, key=0, style=bold];
m8_58 -> m8_59  [key=0, style=solid];
m8_59 -> m8_58  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [color=blue, key=0, style=bold];
m8_50 -> m8_51  [key=0, style=solid];
m8_51 -> m8_50  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_28  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_30  [color=blue, key=0, style=bold];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_60  [color=blue, key=0, style=bold];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_72  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_34  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_6  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_70  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_54  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_14  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_40  [color=blue, key=0, style=bold];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_66  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_10  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_18  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_36  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_26  [color=blue, key=0, style=bold];
m9_42 -> m9_43  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_11  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_12  [key=2, style=dotted];
m9_44 -> m9_13  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_7  [key=2, style=dotted];
m9_45 -> m9_8  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_11  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_12  [key=2, style=dotted];
m9_47 -> m9_13  [key=2, style=dotted];
m9_48 -> m9_42  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_86  [key=2, style=dotted];
m9_78 -> m9_80  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m9_78 -> m9_83  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_87  [key=2, style=dotted];
m9_79 -> m9_81  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m9_79 -> m9_84  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_7  [key=2, style=dotted];
m9_80 -> m9_88  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_12  [key=2, style=dotted];
m9_83 -> m9_90  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_7  [key=2, style=dotted];
m9_81 -> m9_88  [key=2, style=dotted];
m9_81 -> m9_59  [key=2, style=dotted];
m9_81 -> m9_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_12  [key=2, style=dotted];
m9_84 -> m9_90  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_89  [key=2, style=dotted];
m9_82 -> m9_84  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_85 -> m9_77  [color=blue, key=0, style=bold];
m9_117 -> m9_118  [key=0, style=solid];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_7  [key=2, style=dotted];
m9_118 -> m9_8  [key=2, style=dotted];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_7  [key=2, style=dotted];
m9_119 -> m9_8  [key=2, style=dotted];
m9_119 -> m9_9  [key=2, style=dotted];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_11  [key=2, style=dotted];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_12  [key=2, style=dotted];
m9_121 -> m9_13  [key=2, style=dotted];
m9_122 -> m9_117  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_7  [key=2, style=dotted];
m9_1 -> m9_8  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_2 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_12  [key=2, style=dotted];
m9_5 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_94 -> m9_95  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_86  [key=2, style=dotted];
m9_95 -> m9_98  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m9_95 -> m9_102  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_106  [key=2, style=dotted];
m9_96 -> m9_99  [color=darkseagreen4, key=1, label=sword, style=dashed];
m9_96 -> m9_103  [color=darkseagreen4, key=1, label=sword, style=dashed];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_7  [key=2, style=dotted];
m9_98 -> m9_88  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_12  [key=2, style=dotted];
m9_102 -> m9_90  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_87  [key=2, style=dotted];
m9_97 -> m9_100  [color=red, key=1, label=shuriken, style=dashed];
m9_97 -> m9_104  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m9_99 -> m9_100  [color=red, key=0, style=solid];
m9_99 -> m9_7  [key=2, style=dotted];
m9_99 -> m9_88  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_12  [key=2, style=dotted];
m9_103 -> m9_90  [key=2, style=dotted];
m9_100 -> m9_101  [color=red, key=0, style=solid];
m9_100 -> m9_7  [color=red, key=2, style=dotted];
m9_100 -> m9_88  [color=red, key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_12  [key=2, style=dotted];
m9_104 -> m9_107  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_89  [key=2, style=dotted];
m9_101 -> m9_103  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_101 -> m9_104  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_105 -> m9_94  [color=blue, key=0, style=bold];
m9_108 -> m9_109  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_86  [key=2, style=dotted];
m9_109 -> m9_111  [color=red, key=1, label=shortSword, style=dashed];
m9_109 -> m9_114  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m9_110 -> m9_111  [color=red, key=0, style=solid];
m9_110 -> m9_87  [key=2, style=dotted];
m9_110 -> m9_112  [color=red, key=1, label=shuriken, style=dashed];
m9_110 -> m9_115  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m9_111 -> m9_112  [color=red, key=0, style=solid];
m9_111 -> m9_7  [color=red, key=2, style=dotted];
m9_111 -> m9_88  [color=red, key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_12  [key=2, style=dotted];
m9_114 -> m9_90  [key=2, style=dotted];
m9_112 -> m9_113  [color=red, key=0, style=solid];
m9_112 -> m9_7  [color=red, key=2, style=dotted];
m9_112 -> m9_88  [color=red, key=2, style=dotted];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_12  [key=2, style=dotted];
m9_115 -> m9_90  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_89  [key=2, style=dotted];
m9_113 -> m9_115  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_116 -> m9_108  [color=blue, key=0, style=bold];
m9_139 -> m9_140  [key=0, style=solid];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_143  [color=darkseagreen4, key=1, label=Name, style=dashed];
m9_140 -> m9_140  [color=darkorchid, key=3, label="Local variable string Name", style=bold];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_7  [key=2, style=dotted];
m9_141 -> m9_10  [key=2, style=dotted];
m9_141 -> m9_148  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_7  [key=2, style=dotted];
m9_143 -> m9_8  [key=2, style=dotted];
m9_143 -> m9_149  [key=2, style=dotted];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_7  [key=2, style=dotted];
m9_142 -> m9_8  [key=2, style=dotted];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_11  [key=2, style=dotted];
m9_144 -> m9_146  [color=darkseagreen4, key=1, label=barack, style=dashed];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_12  [key=2, style=dotted];
m9_145 -> m9_13  [key=2, style=dotted];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_12  [key=2, style=dotted];
m9_146 -> m9_13  [key=2, style=dotted];
m9_147 -> m9_139  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_11  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_12  [key=2, style=dotted];
m9_40 -> m9_13  [key=2, style=dotted];
m9_41 -> m9_38  [color=blue, key=0, style=bold];
m9_133 -> m9_134  [key=0, style=solid];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_7  [key=2, style=dotted];
m9_134 -> m9_8  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_7  [key=2, style=dotted];
m9_135 -> m9_8  [key=2, style=dotted];
m9_135 -> m9_129  [key=2, style=dotted];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_11  [key=2, style=dotted];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_12  [key=2, style=dotted];
m9_137 -> m9_13  [key=2, style=dotted];
m9_138 -> m9_133  [color=blue, key=0, style=bold];
m9_123 -> m9_124  [key=0, style=solid];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_7  [key=2, style=dotted];
m9_124 -> m9_8  [key=2, style=dotted];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_7  [key=2, style=dotted];
m9_125 -> m9_8  [key=2, style=dotted];
m9_125 -> m9_129  [key=2, style=dotted];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_126  [color=darkorchid, key=3, label="Local variable System.Action getWarrior", style=bold];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_13  [key=2, style=dotted];
m9_128 -> m9_123  [color=blue, key=0, style=bold];
m9_130 -> m9_131  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_11  [key=2, style=dotted];
m9_37 -> m9_35  [color=blue, key=0, style=bold];
m9_63 -> m9_64  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_62 -> m9_60  [color=blue, key=0, style=bold];
m9_64 -> m9_65  [key=0, style=solid];
m9_65 -> m9_63  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_74  [color=blue, key=0, style=bold];
m9_91 -> m9_92  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_91  [color=blue, key=0, style=bold];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_11  [key=2, style=dotted];
m9_132 -> m9_130  [color=blue, key=0, style=bold];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_7  [key=2, style=dotted];
m9_29 -> m9_8  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_7  [key=2, style=dotted];
m9_30 -> m9_8  [key=2, style=dotted];
m9_30 -> m9_9  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_7  [key=2, style=dotted];
m9_31 -> m9_8  [key=2, style=dotted];
m9_31 -> m9_9  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_7  [key=2, style=dotted];
m9_32 -> m9_10  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_13  [key=2, style=dotted];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_28  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_11  [key=2, style=dotted];
m9_67 -> m9_69  [color=darkseagreen4, key=1, label=weapon, style=dashed];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_57  [key=2, style=dotted];
m9_68 -> m9_58  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_12  [key=2, style=dotted];
m9_69 -> m9_13  [key=2, style=dotted];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_7  [key=2, style=dotted];
m9_70 -> m9_8  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_11  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_12  [key=2, style=dotted];
m9_72 -> m9_13  [key=2, style=dotted];
m9_73 -> m9_66  [color=blue, key=0, style=bold];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_7  [key=2, style=dotted];
m9_22 -> m9_8  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_7  [key=2, style=dotted];
m9_23 -> m9_8  [key=2, style=dotted];
m9_23 -> m9_9  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_7  [key=2, style=dotted];
m9_24 -> m9_10  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_11  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_12  [key=2, style=dotted];
m9_26 -> m9_13  [key=2, style=dotted];
m9_27 -> m9_21  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_11  [key=2, style=dotted];
m9_50 -> m9_52  [color=darkseagreen4, key=1, label=weapon, style=dashed];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_57  [key=2, style=dotted];
m9_51 -> m9_58  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_12  [key=2, style=dotted];
m9_52 -> m9_13  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_7  [key=2, style=dotted];
m9_53 -> m9_8  [key=2, style=dotted];
m9_53 -> m9_59  [key=2, style=dotted];
m9_53 -> m9_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_11  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_12  [key=2, style=dotted];
m9_55 -> m9_13  [key=2, style=dotted];
m9_56 -> m9_49  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_7  [key=2, style=dotted];
m9_15 -> m9_8  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_7  [key=2, style=dotted];
m9_16 -> m9_8  [key=2, style=dotted];
m9_16 -> m9_9  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_7  [key=2, style=dotted];
m9_17 -> m9_10  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_11  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_12  [key=2, style=dotted];
m9_19 -> m9_13  [key=2, style=dotted];
m9_20 -> m9_14  [color=blue, key=0, style=bold];
m9_150 -> m9_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_17  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_18  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_24  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_25  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_31  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_33  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_39  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_46  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_50  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_51  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_54  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_68  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_70  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_80  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_81  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_82  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_98  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_99  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_100  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_101  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_111  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_112  [color=red, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_113  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_120  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_124  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_125  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_126  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_131  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_134  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_135  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_136  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_141  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_142  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_143  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m9_150 -> m9_144  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m10_19 -> m10_20  [key=0, style=solid];
m10_21 -> m10_14  [key=2, style=dotted];
m10_21 -> m10_15  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_28  [key=2, style=dotted];
m10_22 -> m10_14  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_29  [key=2, style=dotted];
m10_23 -> m10_16  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_25 -> m10_16  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_20 -> m10_13  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_24  [color=darkseagreen4, key=1, label=sword, style=dashed];
m10_24 -> m10_17  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_18  [key=2, style=dotted];
m10_26 -> m10_17  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_30  [key=2, style=dotted];
m10_27 -> m10_19  [color=blue, key=0, style=bold];
m10_31 -> m10_32  [key=0, style=solid];
m10_33 -> m10_34  [color=green, key=0, style=solid];
m10_33 -> m10_39  [color=green, key=2, style=dotted];
m10_33 -> m10_42  [color=green, key=1, label=provider, style=dashed];
m10_33 -> m10_37  [color=green, key=1, label=provider, style=dashed];
m10_32 -> m10_33  [color=green, key=0, style=solid];
m10_32 -> m10_34  [color=green, key=1, label=builder, style=dashed];
m10_32 -> m10_14  [key=2, style=dotted];
m10_32 -> m10_13  [key=2, style=dotted];
m10_32 -> m10_15  [key=2, style=dotted];
m10_34 -> m10_35  [color=green, key=0, style=solid];
m10_34 -> m10_42  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_17  [key=2, style=dotted];
m10_37 -> m10_40  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_16  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_16  [key=2, style=dotted];
m10_38 -> m10_31  [color=blue, key=0, style=bold];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_2  [color=darkseagreen4, key=1, label="Ninject.Selection.Heuristics.StandardConstructorScorer", style=dashed];
m10_9 -> m10_14  [key=2, style=dotted];
m10_9 -> m10_15  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_16  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_8 -> m10_13  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_11  [color=darkseagreen4, key=1, label=sword, style=dashed];
m10_11 -> m10_17  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_18  [key=2, style=dotted];
m10_12 -> m10_7  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_0  [color=blue, key=0, style=bold];
m10_41 -> m10_42  [color=green, key=0, style=solid];
m10_42 -> m10_43  [color=green, key=0, style=solid];
m10_42 -> m10_44  [color=green, key=2, style=dotted];
m10_43 -> m10_41  [color=blue, key=0, style=bold];
m10_47 -> m10_42  [color=green, key=1, label=provider, style=dashed];
m10_46 -> m10_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_9  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_10  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_21  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_25  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m10_46 -> m10_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", style=dashed];
m11_144 -> m11_145  [key=0, style=solid];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_61  [key=2, style=dotted];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_60  [key=2, style=dotted];
m11_146 -> m11_149  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_146 -> m11_150  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_47  [key=2, style=dotted];
m11_147 -> m11_10  [key=2, style=dotted];
m11_147 -> m11_149  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_147 -> m11_152  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_62  [key=2, style=dotted];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_62  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_47  [key=2, style=dotted];
m11_148 -> m11_10  [key=2, style=dotted];
m11_148 -> m11_150  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_148 -> m11_153  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_48  [key=2, style=dotted];
m11_152 -> m11_154  [color=darkseagreen4, key=1, label=instance1, style=dashed];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_48  [key=2, style=dotted];
m11_153 -> m11_155  [color=darkseagreen4, key=1, label=instance2, style=dashed];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_157  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_49  [key=2, style=dotted];
m11_154 -> m11_50  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_49  [key=2, style=dotted];
m11_155 -> m11_50  [key=2, style=dotted];
m11_156 -> m11_144  [color=blue, key=0, style=bold];
m11_128 -> m11_129  [key=0, style=solid];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_47  [key=2, style=dotted];
m11_129 -> m11_132  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_129 -> m11_136  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_61  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_10  [key=2, style=dotted];
m11_132 -> m11_134  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_132 -> m11_137  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_142  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_60  [key=2, style=dotted];
m11_131 -> m11_134  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_131 -> m11_135  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_62  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_62  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_47  [key=2, style=dotted];
m11_133 -> m11_10  [key=2, style=dotted];
m11_133 -> m11_135  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_133 -> m11_138  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_48  [key=2, style=dotted];
m11_137 -> m11_139  [color=darkseagreen4, key=1, label=instance1, style=dashed];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_48  [key=2, style=dotted];
m11_138 -> m11_140  [color=darkseagreen4, key=1, label=instance2, style=dashed];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_49  [key=2, style=dotted];
m11_139 -> m11_50  [key=2, style=dotted];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_49  [key=2, style=dotted];
m11_140 -> m11_143  [key=2, style=dotted];
m11_141 -> m11_128  [color=blue, key=0, style=bold];
m11_174 -> m11_175  [key=0, style=solid];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_47  [key=2, style=dotted];
m11_175 -> m11_178  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_175 -> m11_180  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_47  [key=2, style=dotted];
m11_176 -> m11_180  [color=darkseagreen4, key=1, label=scopeOfScope, style=dashed];
m11_176 -> m11_181  [color=darkseagreen4, key=1, label=scopeOfScope, style=dashed];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_10  [key=2, style=dotted];
m11_178 -> m11_182  [color=darkseagreen4, key=1, label=context, style=dashed];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_10  [key=2, style=dotted];
m11_180 -> m11_60  [key=2, style=dotted];
m11_180 -> m11_62  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_61  [key=2, style=dotted];
m11_177 -> m11_179  [color=darkseagreen4, key=1, label=sword, style=dashed];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_142  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_60  [key=2, style=dotted];
m11_179 -> m11_62  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_48  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_49  [key=2, style=dotted];
m11_183 -> m11_50  [key=2, style=dotted];
m11_184 -> m11_174  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_13  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingConfiguration", style=dashed];
m11_10 -> m11_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_10 -> m11_16  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m11_10 -> m11_17  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_20  [key=2, style=dotted];
m11_11 -> m11_14  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m11_11 -> m11_15  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m11_11 -> m11_16  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m11_11 -> m11_17  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m11_11 -> m11_18  [color=darkseagreen4, key=1, label=contextMock, style=dashed];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_22  [key=2, style=dotted];
m11_13 -> m11_23  [key=2, style=dotted];
m11_13 -> m11_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_24  [key=2, style=dotted];
m11_15 -> m11_23  [key=2, style=dotted];
m11_15 -> m11_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_22  [key=2, style=dotted];
m11_16 -> m11_23  [key=2, style=dotted];
m11_16 -> m11_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_22  [key=2, style=dotted];
m11_17 -> m11_23  [key=2, style=dotted];
m11_17 -> m11_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_21  [key=2, style=dotted];
m11_12 -> m11_14  [color=darkseagreen4, key=1, label=bindingMock, style=dashed];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_22  [key=2, style=dotted];
m11_14 -> m11_23  [key=2, style=dotted];
m11_14 -> m11_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_10  [color=blue, key=0, style=bold];
m11_104 -> m11_105  [key=0, style=solid];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_47  [key=2, style=dotted];
m11_105 -> m11_108  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_61  [key=2, style=dotted];
m11_106 -> m11_110  [color=darkseagreen4, key=1, label=instance, style=dashed];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_10  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_60  [key=2, style=dotted];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_102  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_62  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_49  [key=2, style=dotted];
m11_111 -> m11_113  [key=2, style=dotted];
m11_112 -> m11_104  [color=blue, key=0, style=bold];
m11_89 -> m11_90  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_47  [key=2, style=dotted];
m11_90 -> m11_92  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_90 -> m11_93  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_60  [key=2, style=dotted];
m11_91 -> m11_61  [key=2, style=dotted];
m11_91 -> m11_94  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_10  [key=2, style=dotted];
m11_92 -> m11_94  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_10  [key=2, style=dotted];
m11_93 -> m11_95  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_62  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_48  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_49  [key=2, style=dotted];
m11_96 -> m11_50  [key=2, style=dotted];
m11_97 -> m11_89  [color=blue, key=0, style=bold];
m11_72 -> m11_73  [key=0, style=solid];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_60  [key=2, style=dotted];
m11_73 -> m11_61  [key=2, style=dotted];
m11_73 -> m11_76  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_47  [key=2, style=dotted];
m11_74 -> m11_10  [key=2, style=dotted];
m11_74 -> m11_76  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_62  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_10  [key=2, style=dotted];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_48  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_49  [key=2, style=dotted];
m11_78 -> m11_50  [key=2, style=dotted];
m11_79 -> m11_72  [color=blue, key=0, style=bold];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_47  [key=2, style=dotted];
m11_115 -> m11_118  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_115 -> m11_119  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_61  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_10  [key=2, style=dotted];
m11_118 -> m11_120  [color=darkseagreen4, key=1, label=writeContext, style=dashed];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_10  [key=2, style=dotted];
m11_119 -> m11_121  [color=darkseagreen4, key=1, label=readContext, style=dashed];
m11_119 -> m11_123  [color=darkseagreen4, key=1, label=readContext, style=dashed];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_60  [key=2, style=dotted];
m11_117 -> m11_120  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_117 -> m11_124  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_62  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_49  [key=2, style=dotted];
m11_124 -> m11_63  [key=2, style=dotted];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_48  [key=2, style=dotted];
m11_121 -> m11_124  [color=darkseagreen4, key=1, label=instance1, style=dashed];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_48  [key=2, style=dotted];
m11_123 -> m11_126  [color=darkseagreen4, key=1, label=instance2, style=dashed];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_102  [key=2, style=dotted];
m11_122 -> m11_125  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_49  [key=2, style=dotted];
m11_125 -> m11_113  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_49  [key=2, style=dotted];
m11_126 -> m11_50  [key=2, style=dotted];
m11_127 -> m11_114  [color=blue, key=0, style=bold];
m11_80 -> m11_81  [key=0, style=solid];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_47  [key=2, style=dotted];
m11_81 -> m11_83  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_81 -> m11_84  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_60  [key=2, style=dotted];
m11_82 -> m11_61  [key=2, style=dotted];
m11_82 -> m11_85  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_82 -> m11_87  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_10  [key=2, style=dotted];
m11_83 -> m11_85  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_10  [key=2, style=dotted];
m11_84 -> m11_86  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_62  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_49  [key=2, style=dotted];
m11_87 -> m11_63  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_48  [key=2, style=dotted];
m11_88 -> m11_80  [color=blue, key=0, style=bold];
m11_158 -> m11_159  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_168  [key=2, style=dotted];
m11_159 -> m11_162  [color=darkseagreen4, key=1, label=scopeMock, style=dashed];
m11_159 -> m11_164  [color=darkseagreen4, key=1, label=scopeMock, style=dashed];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_61  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_169  [key=2, style=dotted];
m11_162 -> m11_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_170  [key=2, style=dotted];
m11_164 -> m11_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_60  [key=2, style=dotted];
m11_161 -> m11_163  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_62  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_48  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_49  [key=2, style=dotted];
m11_166 -> m11_50  [key=2, style=dotted];
m11_167 -> m11_158  [color=blue, key=0, style=bold];
m11_171 -> m11_172  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_28 -> m11_29  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_25  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_28  [color=blue, key=0, style=bold];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=2, style=dotted];
m11_33 -> m11_31  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_35  [color=blue, key=0, style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_40 -> m11_38  [color=blue, key=0, style=bold];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_172  [color=darkseagreen4, key=1, label="?", style=dashed];
m11_173 -> m11_171  [color=blue, key=0, style=bold];
m11_98 -> m11_99  [key=0, style=solid];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_47  [key=2, style=dotted];
m11_99 -> m11_102  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_49  [key=2, style=dotted];
m11_100 -> m11_103  [key=2, style=dotted];
m11_101 -> m11_98  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_47  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_10  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_48  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_49  [key=2, style=dotted];
m11_45 -> m11_50  [key=2, style=dotted];
m11_46 -> m11_41  [color=blue, key=0, style=bold];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_60  [key=2, style=dotted];
m11_65 -> m11_61  [key=2, style=dotted];
m11_65 -> m11_68  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_47  [key=2, style=dotted];
m11_66 -> m11_10  [key=2, style=dotted];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_62  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_47  [key=2, style=dotted];
m11_67 -> m11_10  [key=2, style=dotted];
m11_67 -> m11_69  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_48  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_49  [key=2, style=dotted];
m11_70 -> m11_50  [key=2, style=dotted];
m11_71 -> m11_64  [color=blue, key=0, style=bold];
m11_51 -> m11_52  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_47  [key=2, style=dotted];
m11_52 -> m11_54  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_52 -> m11_55  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_60  [key=2, style=dotted];
m11_53 -> m11_61  [key=2, style=dotted];
m11_53 -> m11_56  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_53 -> m11_58  [color=darkseagreen4, key=1, label=reference, style=dashed];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_10  [key=2, style=dotted];
m11_54 -> m11_56  [color=darkseagreen4, key=1, label=context1, style=dashed];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_10  [key=2, style=dotted];
m11_55 -> m11_57  [color=darkseagreen4, key=1, label=context2, style=dashed];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_62  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_49  [key=2, style=dotted];
m11_58 -> m11_63  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_48  [key=2, style=dotted];
m11_59 -> m11_51  [color=blue, key=0, style=bold];
m11_185 -> m11_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.CacheContext", style=dashed];
m11_185 -> m11_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.CacheContext", style=dashed];
m11_185 -> m11_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.CacheContext", style=dashed];
m11_185 -> m11_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.CacheContext", style=dashed];
m11_186 -> m11_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_54  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_56  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_68  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_69  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_74  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_75  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_186 -> m11_77  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", style=dashed];
m11_187 -> m11_83  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_84  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_85  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_86  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_92  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_93  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_94  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_187 -> m11_95  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", style=dashed];
m11_188 -> m11_99  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_108  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_109  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_110  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_120  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_121  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_122  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_188 -> m11_123  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", style=dashed];
m11_189 -> m11_132  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_133  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_134  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_135  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_136  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_137  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_138  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_147  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_148  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_149  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_150  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_151  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_152  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_189 -> m11_153  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", style=dashed];
m11_190 -> m11_162  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", style=dashed];
m11_190 -> m11_163  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", style=dashed];
m11_190 -> m11_165  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", style=dashed];
m11_191 -> m11_178  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", style=dashed];
m11_191 -> m11_179  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", style=dashed];
m11_191 -> m11_180  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", style=dashed];
m11_191 -> m11_181  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", style=dashed];
m11_191 -> m11_182  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", style=dashed];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [color=darkseagreen4, key=1, label="Ninject.Modules.INinjectModule", style=dashed];
m12_7 -> m12_10  [color=darkseagreen4, key=1, label="Ninject.Modules.INinjectModule", style=dashed];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_17  [key=2, style=dotted];
m12_8 -> m12_10  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_8 -> m12_11  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_8 -> m12_12  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_8 -> m12_13  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_8 -> m12_14  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_8 -> m12_15  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_18  [key=2, style=dotted];
m12_9 -> m12_19  [key=2, style=dotted];
m12_9 -> m12_20  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_18  [key=2, style=dotted];
m12_10 -> m12_19  [key=2, style=dotted];
m12_10 -> m12_21  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_22  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_22  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_22  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_22  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_23  [key=2, style=dotted];
m12_16 -> m12_7  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_17  [key=2, style=dotted];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_25 -> m12_29  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_25 -> m12_30  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_21  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_22  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_22  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_22  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_23  [key=2, style=dotted];
m12_31 -> m12_24  [color=blue, key=0, style=bold];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_87  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_85 -> m12_91  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_17  [key=2, style=dotted];
m12_86 -> m12_88  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_89  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_90  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_91  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_92  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_93  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_94  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_86 -> m12_95  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_19  [key=2, style=dotted];
m12_87 -> m12_71  [key=2, style=dotted];
m12_87 -> m12_20  [key=2, style=dotted];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_42  [key=2, style=dotted];
m12_91 -> m12_22  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_22  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_72  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_22  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_22  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_22  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_22  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_23  [key=2, style=dotted];
m12_96 -> m12_85  [color=blue, key=0, style=bold];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_108  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_17  [key=2, style=dotted];
m12_107 -> m12_109  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_110  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_111  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_112  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_113  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_114  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_115  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_107 -> m12_116  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_19  [key=2, style=dotted];
m12_108 -> m12_21  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_22  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_72  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_22  [key=2, style=dotted];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_22  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_22  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_22  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_22  [key=2, style=dotted];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_23  [key=2, style=dotted];
m12_117 -> m12_106  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_59  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_57 -> m12_63  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_57 -> m12_65  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_17  [key=2, style=dotted];
m12_58 -> m12_60  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_61  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_62  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_63  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_64  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_65  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_66  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_67  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_68  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_58 -> m12_69  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_19  [key=2, style=dotted];
m12_59 -> m12_71  [key=2, style=dotted];
m12_59 -> m12_20  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_42  [key=2, style=dotted];
m12_63 -> m12_22  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_19  [key=2, style=dotted];
m12_65 -> m12_21  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_22  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_72  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_22  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_22  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_22  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_22  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_22  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_23  [key=2, style=dotted];
m12_70 -> m12_57  [color=blue, key=0, style=bold];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_120  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_118 -> m12_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_118 -> m12_123  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_17  [key=2, style=dotted];
m12_119 -> m12_121  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_119 -> m12_122  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_119 -> m12_123  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_119 -> m12_124  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_119 -> m12_125  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_119 -> m12_126  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_19  [key=2, style=dotted];
m12_120 -> m12_21  [key=2, style=dotted];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_21  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_42  [key=2, style=dotted];
m12_123 -> m12_22  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_22  [key=2, style=dotted];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_22  [key=2, style=dotted];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_22  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_23  [key=2, style=dotted];
m12_127 -> m12_118  [color=blue, key=0, style=bold];
m12_3 -> m12_4  [color=red, key=0, style=solid];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_6  [color=red, key=2, style=dotted];
m12_5 -> m12_3  [color=blue, key=0, style=bold];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_99  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_97 -> m12_100  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_17  [key=2, style=dotted];
m12_98 -> m12_100  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_98 -> m12_101  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_98 -> m12_102  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_98 -> m12_103  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_98 -> m12_104  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_19  [key=2, style=dotted];
m12_99 -> m12_21  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_19  [key=2, style=dotted];
m12_100 -> m12_21  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_72  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_22  [key=2, style=dotted];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_22  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_23  [key=2, style=dotted];
m12_105 -> m12_97  [color=blue, key=0, style=bold];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_130  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_128 -> m12_133  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_17  [key=2, style=dotted];
m12_129 -> m12_131  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_129 -> m12_132  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_129 -> m12_133  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_129 -> m12_134  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_129 -> m12_135  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_129 -> m12_136  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_19  [key=2, style=dotted];
m12_130 -> m12_71  [key=2, style=dotted];
m12_130 -> m12_20  [key=2, style=dotted];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_42  [key=2, style=dotted];
m12_133 -> m12_22  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_22  [key=2, style=dotted];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_22  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_22  [key=2, style=dotted];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_22  [key=2, style=dotted];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_23  [key=2, style=dotted];
m12_137 -> m12_128  [color=blue, key=0, style=bold];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_75  [color=red, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m12_73 -> m12_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_73 -> m12_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_74 -> m12_75  [color=red, key=0, style=solid];
m12_74 -> m12_17  [key=2, style=dotted];
m12_74 -> m12_76  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_77  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_78  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_79  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_80  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_81  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_82  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_74 -> m12_83  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_75 -> m12_76  [color=red, key=0, style=solid];
m12_75 -> m12_19  [color=red, key=2, style=dotted];
m12_75 -> m12_21  [color=red, key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_19  [key=2, style=dotted];
m12_76 -> m12_20  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_21  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_72  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_22  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_22  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_22  [key=2, style=dotted];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_22  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_23  [key=2, style=dotted];
m12_84 -> m12_73  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_34  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_32 -> m12_37  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_32 -> m12_39  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_17  [key=2, style=dotted];
m12_33 -> m12_35  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_33 -> m12_36  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_33 -> m12_37  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_33 -> m12_38  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_33 -> m12_39  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_33 -> m12_40  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_19  [key=2, style=dotted];
m12_34 -> m12_21  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_42  [key=2, style=dotted];
m12_37 -> m12_22  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_19  [key=2, style=dotted];
m12_39 -> m12_21  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_22  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_22  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_22  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_23  [key=2, style=dotted];
m12_41 -> m12_32  [color=blue, key=0, style=bold];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_43 -> m12_48  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_43 -> m12_50  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_17  [key=2, style=dotted];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_47  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_48  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_49  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_50  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_51  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_52  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_53  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_54  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_44 -> m12_55  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_19  [key=2, style=dotted];
m12_45 -> m12_21  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_42  [key=2, style=dotted];
m12_48 -> m12_22  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_19  [key=2, style=dotted];
m12_50 -> m12_21  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_22  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_22  [key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_22  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_22  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_22  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_22  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_22  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_23  [key=2, style=dotted];
m12_56 -> m12_43  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_4 -> m18_1  [color=darkseagreen4, key=1, label="Ninject.Selection.Heuristics.StandardMethodInjectionHeuristic", style=dashed];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_14  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_12 -> m32_16  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_12 -> m32_18  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_12 -> m32_19  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_12 -> m32_20  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_12 -> m32_21  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_8  [key=2, style=dotted];
m32_13 -> m32_15  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_13 -> m32_17  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_13 -> m32_20  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_13 -> m32_21  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_13 -> m32_24  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_13 -> m32_25  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_16  [key=0, style=solid];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_18  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_28  [key=2, style=dotted];
m32_18 -> m32_21  [color=darkseagreen4, key=1, label=provider, style=dashed];
m32_18 -> m32_22  [color=darkseagreen4, key=1, label=provider, style=dashed];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [key=0, style=solid];
m32_20 -> m32_22  [key=0, style=solid];
m32_20 -> m32_29  [key=2, style=dotted];
m32_20 -> m32_30  [key=2, style=dotted];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_29  [key=2, style=dotted];
m32_21 -> m32_31  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_27  [key=2, style=dotted];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_27  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_29  [key=2, style=dotted];
m32_24 -> m32_30  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_11  [key=2, style=dotted];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_32  [key=2, style=dotted];
m32_22 -> m32_24  [color=darkseagreen4, key=1, label=providerType, style=dashed];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_25  [key=0, style=solid];
m32_26 -> m32_12  [color=blue, key=0, style=bold];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_43  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m32_41 -> m32_45  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m32_41 -> m32_47  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m32_41 -> m32_49  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m32_41 -> m32_51  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_8  [key=2, style=dotted];
m32_42 -> m32_45  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_42 -> m32_47  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_42 -> m32_49  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_42 -> m32_51  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_42 -> m32_52  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_46  [key=0, style=solid];
m32_43 -> m32_48  [key=0, style=solid];
m32_43 -> m32_50  [key=0, style=solid];
m32_45 -> m32_51  [key=0, style=solid];
m32_45 -> m32_30  [key=2, style=dotted];
m32_47 -> m32_51  [key=0, style=solid];
m32_47 -> m32_31  [key=2, style=dotted];
m32_49 -> m32_51  [key=0, style=solid];
m32_49 -> m32_30  [key=2, style=dotted];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_29  [key=2, style=dotted];
m32_51 -> m32_30  [key=2, style=dotted];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_11  [key=2, style=dotted];
m32_44 -> m32_45  [key=0, style=solid];
m32_46 -> m32_47  [key=0, style=solid];
m32_48 -> m32_49  [key=0, style=solid];
m32_50 -> m32_53  [key=0, style=solid];
m32_50 -> m32_54  [key=2, style=dotted];
m32_53 -> m32_41  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_8  [key=2, style=dotted];
m32_1 -> m32_4  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_1 -> m32_6  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_4  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_2 -> m32_5  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_9  [key=2, style=dotted];
m32_4 -> m32_10  [key=2, style=dotted];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_11  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_6  [key=0, style=solid];
m32_5 -> m32_3  [key=0, style=solid];
m32_5 -> m32_5  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_7 -> m32_0  [color=blue, key=0, style=bold];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_35  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m32_33 -> m32_36  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m32_33 -> m32_37  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_8  [key=2, style=dotted];
m32_34 -> m32_36  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_34 -> m32_37  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_34 -> m32_38  [color=darkseagreen4, key=1, label=sw, style=dashed];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_37  [key=0, style=solid];
m32_36 -> m32_38  [key=0, style=solid];
m32_36 -> m32_29  [key=2, style=dotted];
m32_36 -> m32_30  [key=2, style=dotted];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_29  [key=2, style=dotted];
m32_37 -> m32_40  [key=2, style=dotted];
m32_37 -> m32_31  [key=2, style=dotted];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_11  [key=2, style=dotted];
m32_39 -> m32_33  [color=blue, key=0, style=bold];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m32_55 -> m32_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m32_55 -> m32_66  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m32_55 -> m32_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_66  [key=0, style=solid];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_100  [key=2, style=dotted];
m32_58 -> m32_101  [key=2, style=dotted];
m32_58 -> m32_102  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_63  [key=0, style=solid];
m32_60 -> m32_103  [key=2, style=dotted];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_69  [key=0, style=solid];
m32_66 -> m32_71  [key=0, style=solid];
m32_66 -> m32_73  [key=0, style=solid];
m32_66 -> m32_75  [key=0, style=solid];
m32_66 -> m32_77  [key=0, style=solid];
m32_66 -> m32_79  [key=0, style=solid];
m32_66 -> m32_81  [key=0, style=solid];
m32_66 -> m32_83  [key=0, style=solid];
m32_66 -> m32_85  [key=0, style=solid];
m32_66 -> m32_87  [key=0, style=solid];
m32_66 -> m32_89  [key=0, style=solid];
m32_66 -> m32_91  [key=0, style=solid];
m32_66 -> m32_93  [key=0, style=solid];
m32_66 -> m32_95  [key=0, style=solid];
m32_66 -> m32_97  [key=0, style=solid];
m32_66 -> m32_106  [key=2, style=dotted];
m32_97 -> m32_98  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_99  [key=2, style=dotted];
m32_57 -> m32_59  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_57 -> m32_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_57 -> m32_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_57 -> m32_63  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_57 -> m32_64  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_57 -> m32_65  [color=darkseagreen4, key=1, label=sb, style=dashed];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_102  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_29  [key=2, style=dotted];
m32_61 -> m32_102  [key=2, style=dotted];
m32_62 -> m32_60  [key=0, style=solid];
m32_62 -> m32_102  [key=2, style=dotted];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_104  [key=2, style=dotted];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_102  [key=2, style=dotted];
m32_65 -> m32_98  [key=0, style=solid];
m32_65 -> m32_105  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_69 -> m32_70  [key=0, style=solid];
m32_71 -> m32_72  [key=0, style=solid];
m32_73 -> m32_74  [key=0, style=solid];
m32_75 -> m32_76  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_79 -> m32_80  [key=0, style=solid];
m32_81 -> m32_82  [key=0, style=solid];
m32_83 -> m32_84  [key=0, style=solid];
m32_85 -> m32_86  [key=0, style=solid];
m32_87 -> m32_88  [key=0, style=solid];
m32_89 -> m32_90  [key=0, style=solid];
m32_91 -> m32_92  [key=0, style=solid];
m32_93 -> m32_94  [key=0, style=solid];
m32_95 -> m32_96  [key=0, style=solid];
m32_68 -> m32_98  [key=0, style=solid];
m32_70 -> m32_98  [key=0, style=solid];
m32_72 -> m32_98  [key=0, style=solid];
m32_74 -> m32_98  [key=0, style=solid];
m32_76 -> m32_98  [key=0, style=solid];
m32_78 -> m32_98  [key=0, style=solid];
m32_80 -> m32_98  [key=0, style=solid];
m32_82 -> m32_98  [key=0, style=solid];
m32_84 -> m32_98  [key=0, style=solid];
m32_86 -> m32_98  [key=0, style=solid];
m32_88 -> m32_98  [key=0, style=solid];
m32_90 -> m32_98  [key=0, style=solid];
m32_92 -> m32_98  [key=0, style=solid];
m32_94 -> m32_98  [key=0, style=solid];
m32_96 -> m32_98  [key=0, style=solid];
m32_98 -> m32_55  [color=blue, key=0, style=bold];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_2  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_0  [color=blue, key=0, style=bold];
m42_19 -> m42_34  [key=2, style=dotted];
m42_19 -> m42_20  [key=0, style=solid];
m42_10 -> m42_11  [color=green, key=0, style=solid];
m42_10 -> m42_34  [color=green, key=2, style=dotted];
m42_6 -> m42_7  [color=green, key=0, style=solid];
m42_6 -> m42_34  [color=green, key=2, style=dotted];
m42_12 -> m42_34  [key=2, style=dotted];
m42_12 -> m42_13  [key=0, style=solid];
m42_15 -> m42_34  [key=2, style=dotted];
m42_15 -> m42_16  [key=0, style=solid];
m42_4 -> m42_5  [color=green, key=0, style=solid];
m42_4 -> m42_15  [key=2, style=dotted];
m42_5 -> m42_6  [color=green, key=0, style=solid];
m42_5 -> m42_34  [color=green, key=2, style=dotted];
m42_5 -> m42_0  [color=blue, key=0, style=bold];
m42_7 -> m42_8  [color=green, key=0, style=solid];
m42_7 -> m42_34  [color=green, key=2, style=dotted];
m42_8 -> m42_9  [color=green, key=0, style=solid];
m42_8 -> m42_34  [color=green, key=2, style=dotted];
m42_9 -> m42_10  [color=green, key=0, style=solid];
m42_9 -> m42_34  [color=green, key=2, style=dotted];
m42_11 -> m42_34  [key=2, style=dotted];
m42_11 -> m42_12  [key=0, style=solid];
m42_13 -> m42_34  [key=2, style=dotted];
m42_13 -> m42_14  [key=0, style=solid];
m42_14 -> m42_34  [key=2, style=dotted];
m42_14 -> m42_15  [key=0, style=solid];
m42_16 -> m42_34  [key=2, style=dotted];
m42_16 -> m42_17  [key=0, style=solid];
m42_17 -> m42_34  [key=2, style=dotted];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_19  [key=2, style=dotted];
m42_18 -> m42_34  [key=2, style=dotted];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_16  [color=blue, key=0, style=bold];
m42_20 -> m42_34  [key=2, style=dotted];
m42_20 -> m42_21  [key=0, style=solid];
m42_21 -> m42_34  [key=2, style=dotted];
m42_21 -> m42_22  [key=0, style=solid];
m42_21 -> m42_6  [key=2, style=dotted];
m42_21 -> m42_7  [key=2, style=dotted];
m42_21 -> m42_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m42_22 -> m42_34  [key=2, style=dotted];
m42_22 -> m42_23  [key=0, style=solid];
m42_22 -> m42_8  [key=2, style=dotted];
m42_22 -> m42_9  [key=2, style=dotted];
m42_22 -> m42_10  [key=2, style=dotted];
m42_22 -> m42_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m42_23 -> m42_34  [key=2, style=dotted];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_11  [key=2, style=dotted];
m42_23 -> m42_6  [key=2, style=dotted];
m42_23 -> m42_7  [key=2, style=dotted];
m42_23 -> m42_12  [key=2, style=dotted];
m42_23 -> m42_13  [key=2, style=dotted];
m42_23 -> m42_14  [key=2, style=dotted];
m42_23 -> m42_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_26  [key=0, style=solid];
m42_24 -> m42_15  [key=2, style=dotted];
m42_25 -> m42_34  [key=2, style=dotted];
m42_25 -> m42_27  [key=0, style=solid];
m42_25 -> m42_20  [color=blue, key=0, style=bold];
m42_26 -> m42_34  [key=2, style=dotted];
m42_26 -> m42_27  [key=0, style=solid];
m42_27 -> m42_34  [key=2, style=dotted];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_19  [key=2, style=dotted];
m42_28 -> m42_34  [key=2, style=dotted];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_26  [color=blue, key=0, style=bold];
m42_29 -> m42_34  [key=2, style=dotted];
m42_29 -> m42_30  [key=0, style=solid];
m42_30 -> m42_34  [key=2, style=dotted];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_6  [key=2, style=dotted];
m42_30 -> m42_7  [key=2, style=dotted];
m42_30 -> m42_33  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m42_31 -> m42_34  [key=2, style=dotted];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_31 -> m42_31  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> nameLookup", style=bold];
m42_32 -> m42_34  [key=2, style=dotted];
m42_32 -> m42_33  [key=0, style=solid];
m42_32 -> m42_11  [key=2, style=dotted];
m42_32 -> m42_6  [key=2, style=dotted];
m42_32 -> m42_7  [key=2, style=dotted];
m42_32 -> m42_35  [key=2, style=dotted];
m42_32 -> m42_12  [key=2, style=dotted];
m42_32 -> m42_13  [key=2, style=dotted];
m42_32 -> m42_36  [key=2, style=dotted];
m42_33 -> m42_4  [color=blue, key=0, style=bold];
m42_33 -> m42_34  [key=0, style=solid];
m42_33 -> m42_15  [key=2, style=dotted];
m42_34 -> m42_29  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_6  [key=2, style=dotted];
m42_1 -> m42_7  [key=2, style=dotted];
m42_1 -> m42_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_8  [key=2, style=dotted];
m42_2 -> m42_9  [key=2, style=dotted];
m42_2 -> m42_10  [key=2, style=dotted];
m42_2 -> m42_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_11  [key=2, style=dotted];
m42_3 -> m42_6  [key=2, style=dotted];
m42_3 -> m42_7  [key=2, style=dotted];
m42_3 -> m42_12  [key=2, style=dotted];
m42_3 -> m42_13  [key=2, style=dotted];
m42_3 -> m42_14  [key=2, style=dotted];
m42_3 -> m42_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_37 -> m42_38  [key=0, style=solid];
m42_38 -> m42_39  [key=0, style=solid];
m42_38 -> m42_40  [key=2, style=dotted];
m42_39 -> m42_37  [color=blue, key=0, style=bold];
m42_35 -> m42_5  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_6  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_7  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_8  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_9  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_10  [color=green, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_11  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_12  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_13  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_14  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_15  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_16  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_17  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_18  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_19  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_20  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_21  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_22  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_23  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_24  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_25  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_26  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_27  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_28  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_29  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_30  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_31  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_35 -> m42_32  [color=darkseagreen4, key=1, label="Ninject.StandardKernel", style=dashed];
m42_41 -> m42_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m42_42 -> m42_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_2  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_4  [key=2, style=dotted];
m43_1 -> m43_3  [key=2, style=dotted];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_5  [key=2, style=dotted];
m43_2 -> m43_6  [key=2, style=dotted];
m43_2 -> m43_0  [color=blue, key=0, style=bold];
m43_3 -> m43_0  [color=blue, key=0, style=bold];
m43_3 -> m43_4  [key=0, style=solid];
m43_39 -> m43_40  [key=0, style=solid];
m43_48 -> m43_49  [color=green, key=0, style=solid];
m43_48 -> m43_37  [color=green, key=2, style=dotted];
m43_48 -> m43_50  [color=green, key=2, style=dotted];
m43_47 -> m43_48  [color=green, key=0, style=solid];
m43_41 -> m43_47  [color=darkseagreen4, key=1, label=swordWeakReference, style=dashed];
m43_41 -> m43_42  [key=0, style=solid];
m43_41 -> m43_30  [key=2, style=dotted];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_34  [key=2, style=dotted];
m43_42 -> m43_43  [key=0, style=solid];
m43_42 -> m43_31  [key=2, style=dotted];
m43_42 -> m43_32  [key=2, style=dotted];
m43_43 -> m43_33  [key=2, style=dotted];
m43_43 -> m43_44  [key=0, style=solid];
m43_40 -> m43_41  [key=0, style=solid];
m43_40 -> m43_43  [color=darkseagreen4, key=1, label=sword, style=dashed];
m43_40 -> m43_29  [key=2, style=dotted];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_35  [key=2, style=dotted];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_34  [key=2, style=dotted];
m43_49 -> m43_39  [color=blue, key=0, style=bold];
m43_82 -> m43_83  [key=0, style=solid];
m43_83 -> m43_84  [key=0, style=solid];
m43_84 -> m43_82  [color=blue, key=0, style=bold];
m43_73 -> m43_74  [key=0, style=solid];
m43_73 -> m43_75  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m43_73 -> m43_76  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m43_74 -> m43_30  [key=2, style=dotted];
m43_74 -> m43_75  [key=0, style=solid];
m43_75 -> m43_76  [key=0, style=solid];
m43_76 -> m43_77  [key=0, style=solid];
m43_77 -> m43_73  [color=blue, key=0, style=bold];
m43_51 -> m43_52  [color=green, key=0, style=solid];
m43_51 -> m43_54  [color=green, key=1, label=object, style=dashed];
m43_51 -> m43_53  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingConfiguration", style=dashed];
m43_52 -> m43_53  [color=green, key=0, style=solid];
m43_52 -> m43_56  [color=green, key=2, style=dotted];
m43_52 -> m43_54  [color=green, key=1, label=bindingMock, style=dashed];
m43_53 -> m43_54  [color=green, key=0, style=solid];
m43_53 -> m43_57  [key=2, style=dotted];
m43_53 -> m43_58  [key=2, style=dotted];
m43_53 -> m43_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_54 -> m43_55  [color=green, key=0, style=solid];
m43_54 -> m43_59  [color=green, key=2, style=dotted];
m43_55 -> m43_51  [color=blue, key=0, style=bold];
m43_9 -> m43_7  [color=blue, key=0, style=bold];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_14  [key=2, style=dotted];
m43_27 -> m43_37  [key=2, style=dotted];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_38  [key=2, style=dotted];
m43_15 -> m43_16  [key=0, style=solid];
m43_15 -> m43_31  [key=2, style=dotted];
m43_15 -> m43_32  [key=2, style=dotted];
m43_16 -> m43_33  [key=2, style=dotted];
m43_16 -> m43_17  [key=0, style=solid];
m43_16 -> m43_18  [key=2, style=dotted];
m43_22 -> m43_23  [key=0, style=solid];
m43_22 -> m43_36  [key=2, style=dotted];
m43_26 -> m43_27  [key=0, style=solid];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_30  [key=2, style=dotted];
m43_14 -> m43_26  [color=darkseagreen4, key=1, label=swordWeakReference, style=dashed];
m43_13 -> m43_16  [color=darkseagreen4, key=1, label=sword, style=dashed];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_29  [key=2, style=dotted];
m43_13 -> m43_11  [color=blue, key=0, style=bold];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_15  [color=blue, key=0, style=bold];
m43_21 -> m43_22  [key=0, style=solid];
m43_21 -> m43_34  [key=2, style=dotted];
m43_23 -> m43_34  [key=2, style=dotted];
m43_23 -> m43_24  [key=0, style=solid];
m43_19 -> m43_34  [key=2, style=dotted];
m43_19 -> m43_20  [key=0, style=solid];
m43_25 -> m43_34  [key=2, style=dotted];
m43_25 -> m43_26  [key=0, style=solid];
m43_18 -> m43_19  [key=0, style=solid];
m43_20 -> m43_21  [key=0, style=solid];
m43_20 -> m43_35  [key=2, style=dotted];
m43_24 -> m43_35  [key=2, style=dotted];
m43_24 -> m43_25  [key=0, style=solid];
m43_28 -> m43_12  [color=blue, key=0, style=bold];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_3  [color=blue, key=0, style=bold];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_10  [key=2, style=dotted];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_9  [key=2, style=dotted];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_10  [key=2, style=dotted];
m43_6 -> m43_11  [key=2, style=dotted];
m43_4 -> m43_5  [key=0, style=solid];
m43_4 -> m43_8  [key=2, style=dotted];
m43_60 -> m43_61  [key=0, style=solid];
m43_61 -> m43_62  [key=0, style=solid];
m43_62 -> m43_60  [color=blue, key=0, style=bold];
m43_11 -> m43_12  [key=0, style=solid];
m43_33 -> m43_63  [color=green, key=0, style=solid];
m43_63 -> m43_64  [color=green, key=0, style=solid];
m43_63 -> m43_65  [color=green, key=2, style=dotted];
m43_63 -> m43_66  [color=green, key=2, style=dotted];
m43_64 -> m43_33  [color=blue, key=0, style=bold];
m43_91 -> m43_63  [color=green, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_42  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_91 -> m43_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", style=dashed];
m43_92 -> m43_74  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m43_92 -> m43_75  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m43_92 -> m43_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
m43_92 -> m43_83  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.CacheTests.ContextMock", style=dashed];
}
