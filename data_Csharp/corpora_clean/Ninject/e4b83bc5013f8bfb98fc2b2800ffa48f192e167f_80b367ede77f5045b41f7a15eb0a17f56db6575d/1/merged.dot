digraph  {
n37 [label="CommonMark.Syntax.Inline", span=""];
n0 [label="Entry CommonMark.Syntax.Inline.Inline()", span="14-14", cluster="CommonMark.Syntax.Inline.Inline()"];
n1 [label="Exit CommonMark.Syntax.Inline.Inline()", span="14-14", cluster="CommonMark.Syntax.Inline.Inline()"];
n2 [label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)"];
n3 [label="this.Tag = tag", span="24-24", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)"];
n4 [label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)"];
n5 [label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)"];
n6 [label="this.Tag = tag", span="34-34", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)"];
n7 [label="this.LiteralContent = content", span="35-35", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)"];
n8 [label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)"];
n9 [label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", span="41-41", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n10 [label="this.Tag = tag", span="43-43", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n11 [label="this.LiteralContentValue.Source = content", span="44-44", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n12 [label="this.LiteralContentValue.StartIndex = startIndex", span="45-45", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n13 [label="this.LiteralContentValue.Length = length", span="46-46", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n14 [label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)", span="41-41", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string, int, int)"];
n15 [label="Entry CommonMark.Syntax.Inline.Inline(string)", span="53-53", cluster="CommonMark.Syntax.Inline.Inline(string)"];
n16 [label="this.LiteralContent = content", span="58-58", cluster="CommonMark.Syntax.Inline.Inline(string)"];
n17 [label="Exit CommonMark.Syntax.Inline.Inline(string)", span="53-53", cluster="CommonMark.Syntax.Inline.Inline(string)"];
n18 [label="Entry CommonMark.Syntax.Inline.Inline(string, int, int)", span="64-64", cluster="CommonMark.Syntax.Inline.Inline(string, int, int)"];
n19 [label="this.LiteralContent = content", span="66-66", cluster="CommonMark.Syntax.Inline.Inline(string, int, int)"];
n20 [label="this.SourcePosition = sourcePosition", span="67-67", cluster="CommonMark.Syntax.Inline.Inline(string, int, int)"];
n21 [label="this.SourceLastPosition = sourceLastPosition", span="68-68", cluster="CommonMark.Syntax.Inline.Inline(string, int, int)"];
n22 [label="Exit CommonMark.Syntax.Inline.Inline(string, int, int)", span="64-64", cluster="CommonMark.Syntax.Inline.Inline(string, int, int)"];
n23 [label="Entry CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", span="74-74", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n24 [label="this.LiteralContentValue.Source = content", span="76-76", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n25 [label="this.LiteralContentValue.StartIndex = startIndex", span="77-77", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n26 [label="this.LiteralContentValue.Length = length", span="78-78", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n27 [label="this.SourcePosition = sourcePosition", span="79-79", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n28 [label="this.SourceLastPosition = sourceLastPosition", span="80-80", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n29 [label="Exit CommonMark.Syntax.Inline.Inline(string, int, int, int, int)", span="74-74", cluster="CommonMark.Syntax.Inline.Inline(string, int, int, int, int)"];
n30 [label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="88-88", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n31 [label="this.Tag = tag", span="90-90", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n32 [label="this.FirstChild = content", span="91-91", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n33 [label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="88-88", cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n34 [label="Entry CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="94-94", cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)"];
n35 [label="return new Inline()\r\n            {\r\n                Tag = InlineTag.Link,\r\n                FirstChild = label,\r\n                TargetUrl = url,\r\n                LiteralContent = title\r\n            };", span="96-102", cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)"];
n36 [label="Exit CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="94-94", cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)"];
d9 [label="IRequest request = this.requestMock.Object", span="28-28", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0];
d39 [label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled", span=""];
d8 [label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", span="26-26", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()"];
d10 [label="this.block.CanResolve(request)", span="29-29", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0];
d11 [label="this.parentMock.Verify(x => x.CanResolve(request))", span="30-30", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", color=green, community=0];
d16 [label="x.CanResolve(request)", span="30-30", cluster="lambda expression", color=green, community=0];
d13 [label="Entry Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest)", span="55-55", cluster="Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest)"];
d12 [label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()", span="26-26", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent()"];
d14 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
d15 [label="Entry lambda expression", span="30-30", cluster="lambda expression"];
d40 [label=request, span=""];
d17 [label="Exit lambda expression", span="30-30", cluster="lambda expression"];
d18 [label="Entry Unk.CanResolve", span="", cluster="Unk.CanResolve"];
d20 [label="IRequest request = this.requestMock.Object", span="36-36", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0];
d19 [label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", span="34-34", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()"];
d21 [label="this.block.CanResolve(request, true)", span="37-37", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0];
d22 [label="this.parentMock.Verify(x => x.CanResolve(request, true))", span="38-38", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", color=green, community=0];
d26 [label="x.CanResolve(request, true)", span="38-38", cluster="lambda expression", color=green, community=0];
d24 [label="Entry Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest, bool)", span="70-70", cluster="Ninject.Activation.Blocks.ActivationBlock.CanResolve(Ninject.Activation.IRequest, bool)"];
d23 [label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()", span="34-34", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled.DelegatesCallToParent2()"];
d25 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
d41 [label=request, span=""];
d27 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
d29 [label="IRequest request = this.requestMock.Object", span="47-47", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0];
d42 [label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject", span=""];
d28 [label="Entry Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", span="45-45", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()"];
d30 [label="this.block.Resolve(request)", span="48-48", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0];
d31 [label="this.parentMock.Verify(x => x.Resolve(request))", span="49-49", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", color=green, community=0];
d35 [label="x.Resolve(request)", span="49-49", cluster="lambda expression", color=green, community=0];
d33 [label="Entry Ninject.Activation.Blocks.ActivationBlock.Resolve(Ninject.Activation.IRequest)", span="83-83", cluster="Ninject.Activation.Blocks.ActivationBlock.Resolve(Ninject.Activation.IRequest)"];
d32 [label="Exit Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()", span="45-45", cluster="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject.DelegatesCallToParent()"];
d34 [label="Entry lambda expression", span="49-49", cluster="lambda expression"];
d43 [label=request, span=""];
d36 [label="Exit lambda expression", span="49-49", cluster="lambda expression"];
d37 [label="Entry Unk.Resolve", span="", cluster="Unk.Resolve"];
m0_38 [label="Entry Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="95-95", cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="ActivationCacheTests.cs"];
m0_29 [label="Entry Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="122-122", cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", file="ActivationCacheTests.cs"];
m0_52 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", span="76-76", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_53 [label="var instance = new TestObject(42)", span="78-78", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_54 [label="this.testee.AddActivatedInstance(instance)", span="80-80", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_55 [label="instance.ChangeHashCode(43)", span="81-81", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_56 [label="var isActivated = this.testee.IsActivated(instance)", span="82-82", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_57 [label="isActivated.Should().BeTrue()", span="84-84", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_58 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", span="76-76", cluster="Ninject.Tests.Unit.ActivationCacheTests.ImplementationDoesNotRelyOnObjectHashCode()", file="ActivationCacheTests.cs"];
m0_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ActivationCacheTests.cs"];
m0_30 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", span="48-48", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_31 [label="var instance = new TestObject(42)", span="50-50", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_32 [label="this.testee.AddDeactivatedInstance(instance)", span="52-52", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_33 [label="var deactivated = this.testee.IsDeactivated(instance)", span="53-53", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_34 [label="var deactivatedObjectCount = this.testee.DeactivatedObjectCount", span="54-54", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_35 [label="deactivated.Should().BeTrue()", span="56-56", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_36 [label="deactivatedObjectCount.Should().Be(1)", span="57-57", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_37 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", span="48-48", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsTrueForObjectsInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_24 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ActivationCacheTests.cs"];
m0_51 [label="Entry Ninject.Activation.Caching.ActivationCache.Prune()", span="130-130", cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="ActivationCacheTests.cs"];
m0_13 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", span="27-27", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_14 [label="var instance = new TestObject(42)", span="29-29", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_15 [label="this.testee.AddActivatedInstance(instance)", span="31-31", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_16 [label="var activated = this.testee.IsActivated(instance)", span="32-32", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_17 [label="var activatedObjectCount = this.testee.ActivatedObjectCount", span="33-33", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_18 [label="activated.Should().BeTrue()", span="35-35", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_19 [label="activatedObjectCount.Should().Be(1)", span="36-36", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_20 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", span="27-27", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsTrueForObjectsInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_39 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", span="61-61", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_40 [label="this.testee.AddActivatedInstance(new TestObject(42))", span="63-63", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_41 [label="this.testee.AddDeactivatedInstance(new TestObject(42))", span="64-64", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_42 [label="GC.Collect()", span="65-65", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_43 [label="GC.Collect()", span="66-66", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_44 [label="this.testee.Prune()", span="67-67", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_45 [label="var activatedObjectCount = this.testee.ActivatedObjectCount", span="68-68", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_46 [label="var deactivatedObjectCount = this.testee.DeactivatedObjectCount", span="69-69", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_47 [label="activatedObjectCount.Should().Be(0)", span="71-71", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_48 [label="deactivatedObjectCount.Should().Be(0)", span="72-72", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_49 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", span="61-61", cluster="Ninject.Tests.Unit.ActivationCacheTests.DeadObjectsAreRemoved()", file="ActivationCacheTests.cs"];
m0_12 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ActivationCacheTests.cs"];
m0_9 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="ActivationCacheTests.cs"];
m0_25 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", span="40-40", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_26 [label="var activated = this.testee.IsDeactivated(new object())", span="42-42", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_27 [label="activated.Should().BeFalse()", span="44-44", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_28 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", span="40-40", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsDeactivatedReturnsFalseForObjectsNotInTheDeactivationCache()", file="ActivationCacheTests.cs"];
m0_59 [label="Entry Ninject.Tests.Unit.TestObject.ChangeHashCode(int)", span="27-27", cluster="Ninject.Tests.Unit.TestObject.ChangeHashCode(int)", file="ActivationCacheTests.cs"];
m0_50 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="ActivationCacheTests.cs"];
m0_0 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", span="13-13", cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs"];
m0_1 [label="this.testee = new ActivationCache(new Mock<ICachePruner>().Object)", span="15-15", cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs"];
m0_2 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", span="13-13", cluster="Ninject.Tests.Unit.ActivationCacheTests.ActivationCacheTests()", file="ActivationCacheTests.cs"];
m0_21 [label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6", cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="ActivationCacheTests.cs"];
m0_23 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ActivationCacheTests.cs"];
m0_3 [label="Entry ActivationCache.cstr", span="", cluster="ActivationCache.cstr", file="ActivationCacheTests.cs"];
m0_5 [label="Entry Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", span="19-19", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_6 [label="var activated = this.testee.IsActivated(new object())", span="21-21", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_7 [label="activated.Should().BeFalse()", span="23-23", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_8 [label="Exit Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", span="19-19", cluster="Ninject.Tests.Unit.ActivationCacheTests.IsActivatedReturnsFalseForObjectsNotInTheActivationCache()", file="ActivationCacheTests.cs"];
m0_4 [label="Entry Mock<ICachePruner>.cstr", span="", cluster="Mock<ICachePruner>.cstr", file="ActivationCacheTests.cs"];
m0_10 [label="Entry Ninject.Activation.Caching.ActivationCache.IsActivated(object)", span="110-110", cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", file="ActivationCacheTests.cs"];
m0_22 [label="Entry Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="83-83", cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="ActivationCacheTests.cs"];
m0_60 [label="Ninject.Tests.Unit.ActivationCacheTests", span="", file="ActivationCacheTests.cs"];
m1_70 [label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="299-299", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs"];
m1_71 [label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", span="299-299", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs"];
m1_46 [label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext", span="", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ActivationScopeTests.cs"];
m1_47 [label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated", span="", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ActivationScopeTests.cs"];
m1_56 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="249-249", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs"];
m1_57 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="249-249", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs"];
m1_68 [label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="293-293", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="ActivationScopeTests.cs"];
m1_69 [label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", span="293-293", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnDeactivation(System.Action<T>)", file="ActivationScopeTests.cs"];
m1_40 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf()", span="68-68", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs", color=green, community=0];
m1_41 [label="var instance = this.block.Get<NotifiesWhenDisposed>()", span="70-70", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs", color=green, community=0];
m1_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", span="68-68", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", file="ActivationScopeTests.cs"];
m1_11 [label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", span="68-68", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(Ninject.Activation.IProvider)", color=green, community=0, file="ActivationScopeTests.cs"];
m1_12 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="74-74", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", color=green, community=0, file="ActivationScopeTests.cs"];
m1_13 [label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", span="74-74", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToMethod(System.Func<Ninject.Activation.IContext, T>)", color=green, community=0, file="ActivationScopeTests.cs"];
m1_14 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ActivationScopeTests.cs"];
m1_15 [label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", span="80-80", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToConstant(T)", file="ActivationScopeTests.cs"];
m1_38 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ActivationScopeTests.cs"];
m1_39 [label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", span="66-66", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs"];
m1_26 [label="Exit Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", span="39-39", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs"];
m1_27 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="ActivationScopeTests.cs"];
m1_9 [label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", span="62-62", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToProvider(System.Type)", file="ActivationScopeTests.cs"];
m1_18 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ActivationScopeTests.cs"];
m1_19 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ActivationScopeTests.cs"];
m1_8 [label="Exit Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs"];
m1_17 [label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ActivationScopeTests.cs"];
m1_42 [label="this.block.Dispose()", span="71-71", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs", color=green, community=0];
m1_43 [label="instance.IsDisposed.Should().BeTrue()", span="73-73", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed.InstancesActivatedWithinBlockAreDeactivated()", file="ActivationScopeTests.cs"];
m1_36 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="ActivationScopeTests.cs"];
m1_37 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="ActivationScopeTests.cs"];
m1_50 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="228-228", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs"];
m1_51 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="228-228", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs"];
m1_58 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="256-256", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs"];
m1_59 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="256-256", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs"];
m1_4 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ActivationScopeTests.cs"];
m1_5 [label="Entry Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", span="28-28", cluster="Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", file="ActivationScopeTests.cs"];
m1_16 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ActivationScopeTests.cs"];
m1_20 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ActivationScopeTests.cs"];
m1_21 [label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", span="39-39", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs"];
m1_32 [label="GC.WaitForPendingFinalizers()", span="57-57", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs"];
m1_33 [label="instance.IsDisposed.Should().BeFalse()", span="59-59", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs"];
m1_44 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="193-193", cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="ActivationScopeTests.cs"];
m1_62 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="269-269", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ActivationScopeTests.cs"];
m1_63 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="269-269", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ActivationScopeTests.cs"];
m1_52 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="235-235", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs"];
m1_53 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="235-235", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="ActivationScopeTests.cs"];
m1_2 [label="this.block = new ActivationBlock(this.kernel)", span="16-16", cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", file="ActivationScopeTests.cs", color=green, community=0];
m1_3 [label="Exit Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", span="13-13", cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.ActivationBlockContext()", file="ActivationScopeTests.cs"];
m1_45 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ActivationScopeTests.cs"];
m1_24 [label="var weapon2 = this.kernel.Get<IWeapon>()", span="44-44", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", color=green, community=0];
m1_25 [label="weapon1.Should().NotBeSameAs(weapon2)", span="46-46", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs"];
m1_22 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="41-41", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", color=green, community=0];
m1_23 [label="var weapon1 = this.block.Get<IWeapon>()", span="43-43", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.BlockDoesNotInterfereWithExternalResolution()", file="ActivationScopeTests.cs", color=green, community=0];
m1_54 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="242-242", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="ActivationScopeTests.cs"];
m1_55 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", span="242-242", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithPropertyValue(string, object)", file="ActivationScopeTests.cs"];
m1_0 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ActivationScopeTests.cs"];
m1_1 [label="Exit Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="ActivationScopeTests.cs"];
m1_66 [label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="287-287", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs"];
m1_67 [label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", span="287-287", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<Ninject.Activation.IContext, T>)", file="ActivationScopeTests.cs"];
m1_28 [label="Entry Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", span="50-50", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs"];
m1_29 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf()", span="52-52", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs", color=green, community=0];
m1_6 [label="Entry Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs"];
m1_7 [label="this.kernel.Dispose()", span="21-21", cluster="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext.Dispose()", file="ActivationScopeTests.cs"];
m1_64 [label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="282-282", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ActivationScopeTests.cs"];
m1_65 [label="Exit Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="282-282", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ActivationScopeTests.cs"];
m1_48 [label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed", span="", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="ActivationScopeTests.cs"];
m1_49 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="221-221", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="ActivationScopeTests.cs"];
m1_35 [label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", span="154-154", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenParentNamed(string)", file="ActivationScopeTests.cs"];
m1_34 [label="Exit Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", span="50-50", cluster="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated.InstancesAreNotGarbageCollectedAsLongAsBlockRemainsAlive()", file="ActivationScopeTests.cs"];
m1_30 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", span="140-140", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", color=green, community=0, file="ActivationScopeTests.cs"];
m1_31 [label="Exit Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", span="140-140", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas(System.Type)", file="ActivationScopeTests.cs"];
m1_60 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="ActivationScopeTests.cs"];
m1_61 [label="Exit Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="ActivationScopeTests.cs"];
m2_12 [label="Entry Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="29-29", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_15 [label="return LinqReflection.ToArraySlow(ResolveInstances(service, parent), service);", span="34-34", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ActivationStrategyTests.cs"];
m2_14 [label="Type service = Type.GetElementType()", span="33-33", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_13 [label="Type.IsArray", span="31-31", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_16 [label="Type.IsGenericType", span="37-37", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_17 [label="Type gtd = Type.GetGenericTypeDefinition()", span="39-39", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_18 [label="Type service = Type.GetGenericArguments()[0]", span="40-40", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_20 [label="return LinqReflection.ToListSlow(ResolveInstances(service, parent), service);", span="43-43", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_22 [label="return LinqReflection.CastSlow(ResolveInstances(service, parent), service);", span="46-46", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_23 [label="return ResolveInstances(Type, parent).FirstOrDefault();", span="49-49", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_19 [label="typeof(ICollection<>).IsAssignableFrom(gtd)", span="42-42", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_21 [label="typeof(IEnumerable<>).IsAssignableFrom(gtd)", span="45-45", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_24 [label="Exit Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="29-29", cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_25 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="ActivationStrategyTests.cs"];
m2_0 [label="Entry Ninject.Planning.Targets.Target<T>.Target(T)", span="19-19", cluster="Ninject.Planning.Targets.Target<T>.Target(T)", file="ActivationStrategyTests.cs"];
m2_1 [label="Site = site", span="21-21", cluster="Ninject.Planning.Targets.Target<T>.Target(T)", color=red, community=0, file="ActivationStrategyTests.cs"];
m2_2 [label="Exit Ninject.Planning.Targets.Target<T>.Target(T)", span="19-19", cluster="Ninject.Planning.Targets.Target<T>.Target(T)", file="ActivationStrategyTests.cs"];
m2_30 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ActivationStrategyTests.cs"];
m2_3 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ActivationStrategyTests.cs"];
m2_4 [label="Entry Ninject.NinjectSettings.Set(string, object)", span="143-143", cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs"];
m2_5 [label="_values[key] = value", span="145-145", cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs"];
m2_6 [label="Exit Ninject.NinjectSettings.Set(string, object)", span="143-143", cluster="Ninject.NinjectSettings.Set(string, object)", file="ActivationStrategyTests.cs"];
m2_32 [label="Entry Ninject.Infrastructure.LinqReflection.CastSlow(System.Collections.IEnumerable, System.Type)", span="8-8", cluster="Ninject.Infrastructure.LinqReflection.CastSlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs"];
m2_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ActivationStrategyTests.cs"];
m2_37 [label="Entry Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Planning.Targets.ITarget)", span="19-19", cluster="Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Planning.Targets.ITarget)", file="ActivationStrategyTests.cs"];
m2_38 [label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="13-13", cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="ActivationStrategyTests.cs"];
m2_29 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ActivationStrategyTests.cs"];
m2_39 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_8 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_10 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_9 [label="new Func<IBindingMetadata, bool>(a.Matches)", span="26-26", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_40 [label="ctx.Resolve()", span="55-55", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_41 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ActivationStrategyTests.cs"];
m2_31 [label="Entry Ninject.Infrastructure.LinqReflection.ToListSlow(System.Collections.IEnumerable, System.Type)", span="20-20", cluster="Ninject.Infrastructure.LinqReflection.ToListSlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs"];
m2_7 [label="Ninject.NinjectSettings", span="", cluster="Unk.Select", file="ActivationStrategyTests.cs"];
m2_11 [label="Entry Func<IBindingMetadata, bool>.cstr", span="", cluster="Func<IBindingMetadata, bool>.cstr", file="ActivationStrategyTests.cs"];
m2_42 [label="Entry Ninject.Activation.Hooks.IHook.Resolve()", span="6-6", cluster="Ninject.Activation.Hooks.IHook.Resolve()", file="ActivationStrategyTests.cs"];
m2_28 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ActivationStrategyTests.cs"];
m2_26 [label="Entry Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", span="52-52", cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_34 [label="var request = parent.Request.CreateChild(service, this)", span="54-54", cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_35 [label="return parent.Kernel.Resolve(request).Select(ctx => ctx.Resolve());", span="55-55", cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_36 [label="Exit Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", span="52-52", cluster="Ninject.Planning.Targets.Target<T>.ResolveInstances(System.Type, Ninject.Activation.IContext)", file="ActivationStrategyTests.cs"];
m2_27 [label="Entry Ninject.Infrastructure.LinqReflection.ToArraySlow(System.Collections.IEnumerable, System.Type)", span="14-14", cluster="Ninject.Infrastructure.LinqReflection.ToArraySlow(System.Collections.IEnumerable, System.Type)", file="ActivationStrategyTests.cs"];
m2_43 [label="Ninject.Planning.Targets.Target<T>", span="", file="ActivationStrategyTests.cs"];
m3_3 [label="Entry Ninject.Activation.Hooks.ConstantHook.Resolve()", span="13-13", cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs"];
m3_4 [label="return Value;", span="15-15", cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs"];
m3_5 [label="Exit Ninject.Activation.Hooks.ConstantHook.Resolve()", span="13-13", cluster="Ninject.Activation.Hooks.ConstantHook.Resolve()", file="AssemblyNameRetriever.cs"];
m3_0 [label="Entry Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", span="8-8", cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs"];
m3_1 [label="Value = value", span="10-10", cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs"];
m3_2 [label="Exit Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", span="8-8", cluster="Ninject.Activation.Hooks.ConstantHook.ConstantHook(object)", file="AssemblyNameRetriever.cs"];
m3_6 [label="Ninject.Activation.Hooks.ConstantHook", span="", file="AssemblyNameRetriever.cs"];
m4_12 [label="Entry Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="30-30", cluster="Ninject.Modules.AssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="AssemblyNameRetrieverTests.cs"];
m4_24 [label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="45-45", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs"];
m4_25 [label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", span="47-47", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_26 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                    new[] { expected.FullName },\r\n                    asm => true)", span="49-51", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_28 [label="assemblyFullNames.Should().BeEquivalentTo(new[] { expected.FullName })", span="54-54", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=red, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_27 [label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", span="53-53", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_29 [label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="45-45", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs"];
m4_36 [label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="61-61", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="AssemblyNameRetrieverTests.cs"];
m4_37 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(new[] { ''Blah'' }, asm => true)", span="63-63", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", color=red, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_38 [label="actualNames.Should().BeEmpty()", span="65-65", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", color=red, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_39 [label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", span="61-61", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName.WillBeIgnored()", file="AssemblyNameRetrieverTests.cs"];
m4_14 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="AssemblyNameRetrieverTests.cs"];
m4_20 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="AssemblyNameRetrieverTests.cs"];
m4_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="AssemblyNameRetrieverTests.cs"];
m4_4 [label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="29-29", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs"];
m4_5 [label="var expected = Assembly.LoadFrom(this.ModuleFilename).GetName()", span="31-31", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_6 [label="var actualNames = this.AssemblyNameRetriever.GetAssemblyNames(\r\n                    new[] { this.ModuleFilename, this.AssemblyFilename },\r\n                    asm => asm.FullName.StartsWith(''Ninject.Tests.TestModule''))", span="33-35", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_8 [label="assemblyFullNames.Should().BeEquivalentTo(new[] { expected.FullName })", span="38-38", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_7 [label="var assemblyFullNames = actualNames.Select(a => a.FullName).ToList()", span="37-37", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_9 [label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", span="29-29", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName.AssemblyNamesOfMatchingAssembliesAreReturned()", file="AssemblyNameRetrieverTests.cs"];
m4_40 [label="Entry Unk.BeEmpty", span="", cluster="Unk.BeEmpty", file="AssemblyNameRetrieverTests.cs"];
m4_11 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="AssemblyNameRetrieverTests.cs"];
m4_10 [label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0", cluster="System.Reflection.Assembly.LoadFrom(string)", file="AssemblyNameRetrieverTests.cs"];
m4_41 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_17 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_21 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_18 [label="asm.FullName.StartsWith(''Ninject.Tests.TestModule'')", span="35-35", cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_19 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_22 [label="a.FullName", span="37-37", cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_23 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_30 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_33 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_31 [label=true, span="51-51", cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_32 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_34 [label="a.FullName", span="53-53", cluster="lambda expression", color=green, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_35 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_42 [label=true, span="63-63", cluster="lambda expression", color=red, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_43 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="AssemblyNameRetrieverTests.cs"];
m4_0 [label="Entry Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="20-20", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="AssemblyNameRetrieverTests.cs"];
m4_1 [label="this.AssemblyNameRetriever = new AssemblyNameRetriever()", span="22-22", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", color=red, community=0, file="AssemblyNameRetrieverTests.cs"];
m4_2 [label="Exit Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", span="20-20", cluster="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext.AssemblyNameRetrieverContext()", file="AssemblyNameRetrieverTests.cs"];
m4_3 [label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="22-22", cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="AssemblyNameRetrieverTests.cs"];
m4_16 [label="Entry Unk.BeEquivalentTo", span="", cluster="Unk.BeEquivalentTo", file="AssemblyNameRetrieverTests.cs"];
m4_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="AssemblyNameRetrieverTests.cs"];
m4_44 [label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext", span="", file="AssemblyNameRetrieverTests.cs"];
m4_45 [label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName", span="", file="AssemblyNameRetrieverTests.cs"];
m4_46 [label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName", span="", file="AssemblyNameRetrieverTests.cs"];
m4_47 [label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName", span="", file="AssemblyNameRetrieverTests.cs"];
m5_0 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4", cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="Barracks.cs"];
m5_1 [label="Exit Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4", cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="Barracks.cs"];
m5_2 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="Barracks.cs"];
m5_3 [label="this.Warrior = warrior", span="10-10", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="Barracks.cs"];
m5_4 [label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="Barracks.cs"];
m5_5 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", span="13-13", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs"];
m5_6 [label="this.Weapon = weapon", span="15-15", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs"];
m5_7 [label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", span="13-13", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs"];
m5_8 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs"];
m5_9 [label="this.Warrior = warrior", span="20-20", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs"];
m5_10 [label="this.Weapon = weapon", span="21-21", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Barracks.cs"];
m5_11 [label="Exit Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="Barracks.cs"];
m5_12 [label="Ninject.Tests.Fakes.Barracks", span="", file="Barracks.cs"];
m6_3 [label="Entry Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", span="43-43", cluster="Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs"];
m6_4 [label="Exit Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", span="43-43", cluster="Ninject.Activation.Provider<T>.CreateInstance(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs"];
m6_0 [label="Entry Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", span="33-33", cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs"];
m6_1 [label="return this.CreateInstance(context);", span="35-35", cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs"];
m6_2 [label="Exit Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", span="33-33", cluster="Ninject.Activation.Provider<T>.Create(Ninject.Activation.IContext)", file="BindingActionStrategyTests.cs"];
m6_5 [label="Ninject.Activation.Provider<T>", span="", file="BindingActionStrategyTests.cs"];
m7_28 [label="Entry Unk.CreateContextMock", span="", cluster="Unk.CreateContextMock", file="CachePruningTests.cs"];
m7_61 [label="Entry System.Type.GetRuntimeMethods()", span="0-0", cluster="System.Type.GetRuntimeMethods()", file="CachePruningTests.cs"];
m7_69 [label="this.GenericArguments = genericArguments", span="115-115", cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="CachePruningTests.cs"];
m7_70 [label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", span="111-111", cluster="Ninject.Tests.Unit.CacheTests.ContextMock.ContextMock(object, Ninject.Planning.Bindings.IBinding, System.Type[])", file="CachePruningTests.cs"];
m7_71 [label="Exit Ninject.WinRTFilters.FilterPublic<T>(System.Collections.Generic.IEnumerable<T>, bool)", span="112-112", cluster="Ninject.WinRTFilters.FilterPublic<T>(System.Collections.Generic.IEnumerable<T>, bool)", file="CachePruningTests.cs"];
m7_26 [label="Entry System.WeakReference.WeakReference(object)", span="0-0", cluster="System.WeakReference.WeakReference(object)", file="CachePruningTests.cs"];
m7_41 [label="swordCollected.Should().BeFalse()", span="65-65", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.UncollectedScopeInstancesAreNotRemoved()", file="CachePruningTests.cs"];
m7_75 [label="Entry Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123", cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs"];
m7_76 [label="return this.scope.Target;", span="125-125", cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs"];
m7_77 [label="Exit Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", span="123-123", cluster="Ninject.Tests.Unit.CacheTests.ContextMock.GetScope()", file="CachePruningTests.cs"];
m7_78 [label="Exit Ninject.WinRTFilters.FilterPublic(System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>, bool)", span="118-118", cluster="Ninject.WinRTFilters.FilterPublic(System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>, bool)", file="CachePruningTests.cs"];
m7_34 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="CachePruningTests.cs"];
m7_39 [label="this.InjectionHeuristics.Any(h => p != null && h.ShouldInject(p))", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_37 [label="Entry System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo)", span="63-63", cluster="System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo)", file="CachePruningTests.cs"];
m7_38 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_36 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="CachePruningTests.cs"];
m7_40 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_35 [label="p.GetPropertyFromDeclaredType(p)", span="74-74", cluster="lambda expression", file="CachePruningTests.cs"];
m7_42 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_13 [label="var sword = new Sword()", span="38-38", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.CollectedScopeInstancesAreRemoved()", file="CachePruningTests.cs"];
m7_66 [label="h.ShouldInject(m)", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_68 [label="Entry Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", span="27-27", cluster="Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="CachePruningTests.cs"];
m7_67 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_31 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="CachePruningTests.cs"];
m7_32 [label="Entry Ninject.Selection.Selector.GetPrivateProperties(System.Type)", span="89-89", cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", file="CachePruningTests.cs"];
m7_44 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_45 [label="Entry Unk.ShouldInject", span="", cluster="Unk.ShouldInject", color=green, community=0, file="CachePruningTests.cs"];
m7_46 [label="return type.GetRuntimeProperties().FilterPublic(Settings.InjectNonPublic).Where(p => p.DeclaringType == type && p.IsPrivate())\r\n                .Where(p => this.InjectionHeuristics.Any(h => h.ShouldInject(p)));", span="91-92", cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_47 [label="Exit Ninject.Selection.Selector.GetPrivateProperties(System.Type)", span="89-89", cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_48 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="CachePruningTests.cs"];
m7_9 [label="var constructors = tInfo.DeclaredConstructors.FilterPublic(Settings.InjectNonPublic)", span="59-59", cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_12 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="CachePruningTests.cs"];
m7_22 [label="properties.AddRange(this.GetPrivateProperties(type.GetTypeInfo().BaseType))", span="82-82", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_14 [label="Entry System.Collections.Generic.IEnumerable<T>.FilterPublic<T>(bool)", span="112-112", cluster="System.Collections.Generic.IEnumerable<T>.FilterPublic<T>(bool)", file="CachePruningTests.cs"];
m7_21 [label="parentType != null", span="80-80", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_23 [label="parentType = parentType.GetTypeInfo().BaseType", span="80-80", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_19 [label="this.Settings.InjectParentPrivateProperties", span="78-78", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_18 [label="properties.AddRange(\r\n                type.GetRuntimeProperties().FilterPublic(Settings.InjectNonPublic)\r\n                    .Select(p => p.GetPropertyFromDeclaredType(p))\r\n                    .Where(p => this.InjectionHeuristics.Any(h => p != null && h.ShouldInject(p))))", span="72-75", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs"];
m7_20 [label="Type parentType = type.GetTypeInfo().BaseType", span="80-80", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", color=green, community=0, file="CachePruningTests.cs"];
m7_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CachePruningTests.cs"];
m7_17 [label="List<PropertyInfo> properties = new List<PropertyInfo>()", span="70-70", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs"];
m7_16 [label="Entry Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", span="68-68", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs"];
m7_24 [label="return properties;", span="86-86", cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="CachePruningTests.cs"];
m7_51 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CachePruningTests.cs"];
m7_25 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CachePruningTests.cs"];
m7_10 [label="return constructors.Any() ? constructors : null;", span="60-60", cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs", color=red, community=0];
m7_59 [label="return type.GetRuntimeMethods().FilterPublic(Settings.InjectNonPublic).Where(m => InjectionHeuristics.Any(h => h.ShouldInject(m)));", span="102-102", cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_58 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CachePruningTests.cs"];
m7_60 [label="Exit Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", span="100-100", cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_30 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="CachePruningTests.cs"];
m7_27 [label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6", cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="CachePruningTests.cs"];
m7_43 [label="p != null && h.ShouldInject(p)", span="75-75", cluster="lambda expression", file="CachePruningTests.cs"];
m7_50 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="CachePruningTests.cs"];
m7_4 [label="this.cachePrunerMock = new Mock<ICachePruner>()", span="29-29", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.SetUp()", file="CachePruningTests.cs"];
m7_3 [label="Exit Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="43-43", cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs"];
m7_5 [label="Entry Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", span="54-54", cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_6 [label="type.GetTypeInfo().IsSubclassOf(typeof(MulticastDelegate))", span="56-56", cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_7 [label="return null;", span="57-57", cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="CachePruningTests.cs"];
m7_52 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="CachePruningTests.cs"];
m7_49 [label="p.DeclaringType == type && p.IsPrivate()", span="91-91", cluster="lambda expression", file="CachePruningTests.cs"];
m7_72 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="CachePruningTests.cs"];
m7_53 [label="this.InjectionHeuristics.Any(h => h.ShouldInject(p))", span="92-92", cluster="lambda expression", file="CachePruningTests.cs"];
m7_56 [label="this.cache.Remember(context, new InstanceReference { Instance = sword })", span="77-77", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs"];
m7_54 [label="b.BindingConfiguration", span="71-71", cluster="lambda expression", file="CachePruningTests.cs", color=green, community=0];
m7_55 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="CachePruningTests.cs"];
m7_57 [label="Exit Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs"];
m7_62 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_63 [label="InjectionHeuristics.Any(h => h.ShouldInject(m))", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_64 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_65 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="CachePruningTests.cs"];
m7_73 [label="!m.IsStatic && (nonPublic || m.IsPublic)", span="115-115", cluster="lambda expression", file="CachePruningTests.cs"];
m7_74 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="CachePruningTests.cs"];
m7_33 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="CachePruningTests.cs"];
m7_29 [label="Entry Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", span="75-75", cluster="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled.Remember(Ninject.Tests.Fakes.Sword, Ninject.Activation.IContext)", file="CachePruningTests.cs"];
m7_8 [label="Entry Mock<ICachePruner>.cstr", span="", cluster="Mock<ICachePruner>.cstr", file="CachePruningTests.cs"];
m7_11 [label="Entry Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", span="81-81", cluster="Ninject.Tests.Unit.CacheTests.PipelineMock.PipelineMock()", file="CachePruningTests.cs"];
m7_0 [label="Entry Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="43-43", cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs"];
m7_1 [label="ConstructorScorer = constructorScorer", span="45-45", cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs"];
m7_2 [label="InjectionHeuristics = injectionHeuristics.ToList()", span="46-46", cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="CachePruningTests.cs", color=red, community=0];
m7_79 [label="Ninject.Selection.Selector", span="", file="CachePruningTests.cs"];
m7_80 [label="?", span="", file="CachePruningTests.cs"];
m7_81 [label="System.Type", span="", file="CachePruningTests.cs"];
m7_82 [label="?", span="", file="CachePruningTests.cs"];
m7_83 [label="System.Reflection.MethodInfo", span="", file="CachePruningTests.cs"];
m7_84 [label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled", span="", file="CachePruningTests.cs"];
m7_85 [label="Ninject.Tests.Unit.CacheTests.ContextMock", span="", file="CachePruningTests.cs"];
m8_144 [label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_145 [label="var sword = new Sword()", span="193-193", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_146 [label="var reference = new InstanceReference { Instance = sword }", span="194-194", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_147 [label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="195-195", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_149 [label="cache.Remember(context1, reference)", span="198-198", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_150 [label="cache.Remember(context2, reference)", span="199-199", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_148 [label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="196-196", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_152 [label="var instance1 = cache.TryGet(context1)", span="201-201", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_153 [label="var instance2 = cache.TryGet(context2)", span="202-202", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_151 [label="cache.Clear()", span="200-200", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_154 [label="instance1.Should().BeNull()", span="204-204", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_155 [label="instance2.Should().BeNull()", span="205-205", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_156 [label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", span="191-191", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenNoScopeIsDefinedAllEntriesAreReleased()", file="CacheTests.cs"];
m8_128 [label="Entry Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_129 [label="var scope = new TestObject(42)", span="174-174", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_130 [label="var sword = new Sword()", span="175-175", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_132 [label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="177-177", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_136 [label="cache.Clear(scope)", span="182-182", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_131 [label="var reference = new InstanceReference { Instance = sword }", span="176-176", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_134 [label="cache.Remember(context1, reference)", span="180-180", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_135 [label="cache.Remember(context2, reference)", span="181-181", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_133 [label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="178-178", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_137 [label="var instance1 = cache.TryGet(context1)", span="183-183", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_138 [label="var instance2 = cache.TryGet(context2)", span="184-184", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_139 [label="instance1.Should().BeNull()", span="186-186", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_140 [label="instance2.Should().NotBeNull()", span="187-187", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_141 [label="Exit Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", span="172-172", cluster="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled.WhenScopeIsDefinedItsEntriesAreReleased()", file="CacheTests.cs"];
m8_157 [label="Entry Ninject.Activation.Caching.Cache.Clear()", span="202-202", cluster="Ninject.Activation.Caching.Cache.Clear()", file="CacheTests.cs"];
m8_20 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="CacheTests.cs"];
m8_174 [label="Entry Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_175 [label="var scope = new TestObject(42)", span="233-233", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_176 [label="var scopeOfScope = new TestObject(42)", span="234-234", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_178 [label="var context = CreateContext(scope, this.bindingConfiguration)", span="236-236", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_180 [label="cache.Remember(CreateContext(scopeOfScope, this.bindingConfiguration), new InstanceReference { Instance = scope })", span="239-239", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_177 [label="var sword = new Sword()", span="235-235", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_181 [label="cache.Clear(scopeOfScope)", span="240-240", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_179 [label="cache.Remember(context, new InstanceReference { Instance = sword })", span="238-238", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_182 [label="var instance = cache.TryGet(context)", span="241-241", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_183 [label="instance.Should().BeNull()", span="243-243", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_184 [label="Exit Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", span="231-231", cluster="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_49 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CacheTests.cs"];
m8_7 [label="Entry Mock<IBindingConfiguration>.cstr", span="", cluster="Mock<IBindingConfiguration>.cstr", file="CacheTests.cs"];
m8_10 [label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_11 [label="var contextMock = new Mock<IContext>()", span="30-30", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_13 [label="bindingMock.SetupGet(binding => binding.BindingConfiguration).Returns(bindingConfiguration)", span="32-32", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_15 [label="contextMock.Setup(context => context.GetScope()).Returns(scope)", span="34-34", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_16 [label="contextMock.SetupGet(context => context.GenericArguments).Returns(genericArguments)", span="35-35", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_17 [label="contextMock.SetupGet(context => context.HasInferredGenericArguments).Returns(genericArguments != null && genericArguments.Length > 0)", span="36-36", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_12 [label="var bindingMock = new Mock<IBinding>()", span="31-31", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_14 [label="contextMock.SetupGet(context => context.Binding).Returns(bindingMock.Object)", span="33-33", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_18 [label="return contextMock.Object;", span="37-37", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_19 [label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", span="28-28", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CreateContext(object, Ninject.Planning.Bindings.IBindingConfiguration, params System.Type[])", file="CacheTests.cs"];
m8_48 [label="Entry Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="104-104", cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="CacheTests.cs"];
m8_50 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull", file="CacheTests.cs"];
m8_104 [label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_105 [label="var scope = new TestObject(42)", span="138-138", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_106 [label="var instance = new Sword()", span="139-139", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_108 [label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="141-141", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_107 [label="var reference = new InstanceReference { Instance = instance }", span="140-140", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_110 [label="bool result = cache.Release(instance)", span="144-144", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", color=red, community=0, file="CacheTests.cs"];
m8_109 [label="cache.Remember(writeContext, reference)", span="143-143", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", color=red, community=0, file="CacheTests.cs"];
m8_111 [label="result.Should().BeTrue()", span="146-146", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_112 [label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", span="136-136", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsTrueIfInstanceIsTracked()", file="CacheTests.cs"];
m8_9 [label="Entry Cache.cstr", span="", cluster="Cache.cstr", file="CacheTests.cs"];
m8_62 [label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="76-76", cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="CacheTests.cs"];
m8_89 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_90 [label="var scope = new TestObject(42)", span="114-114", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_91 [label="var reference = new InstanceReference { Instance = new Sword() }", span="115-115", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_92 [label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="116-116", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_93 [label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(double))", span="117-117", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_94 [label="cache.Remember(context1, reference)", span="119-119", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", color=red, community=0, file="CacheTests.cs"];
m8_95 [label="object instance = cache.TryGet(context2)", span="120-120", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", color=red, community=0, file="CacheTests.cs"];
m8_96 [label="instance.Should().BeNull()", span="122-122", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_97 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", span="112-112", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsNullIfInstanceAddedToCacheHasDifferentGenericParameters()", file="CacheTests.cs"];
m8_72 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_73 [label="var reference = new InstanceReference { Instance = new Sword() }", span="84-84", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_74 [label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="85-85", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_76 [label="cache.Remember(context1, reference)", span="88-88", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", color=red, community=0, file="CacheTests.cs"];
m8_75 [label="var context2 = CreateContext(null, this.bindingConfiguration)", span="86-86", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_77 [label="object instance = cache.TryGet(context2)", span="89-89", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", color=red, community=0, file="CacheTests.cs"];
m8_78 [label="instance.Should().BeNull()", span="91-91", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_79 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", span="82-82", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfScopeIsNull()", file="CacheTests.cs"];
m8_61 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CacheTests.cs"];
m8_142 [label="Entry Ninject.Activation.Caching.Cache.Clear(object)", span="187-187", cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="CacheTests.cs"];
m8_169 [label="Entry Unk.CreateContext", span="", cluster="Unk.CreateContext", file="CacheTests.cs"];
m8_114 [label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_115 [label="var scope = new TestObject(42)", span="152-152", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_116 [label="var sword = new Sword()", span="153-153", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_118 [label="var writeContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="155-155", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_119 [label="var readContext = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="156-156", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_117 [label="var reference = new InstanceReference { Instance = sword }", span="154-154", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_120 [label="cache.Remember(writeContext, reference)", span="158-158", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=red, community=0, file="CacheTests.cs"];
m8_124 [label="instance1.Should().BeSameAs(reference.Instance)", span="163-163", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_121 [label="object instance1 = cache.TryGet(readContext)", span="159-159", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=red, community=0, file="CacheTests.cs"];
m8_123 [label="object instance2 = cache.TryGet(readContext)", span="161-161", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=red, community=0, file="CacheTests.cs"];
m8_122 [label="bool result = cache.Release(instance1)", span="160-160", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=red, community=0, file="CacheTests.cs"];
m8_125 [label="result.Should().BeTrue()", span="164-164", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_126 [label="instance2.Should().BeNull()", span="165-165", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_127 [label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="150-150", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="CacheTests.cs"];
m8_103 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="CacheTests.cs"];
m8_34 [label="Entry Unk.GetScope", span="", cluster="Unk.GetScope", file="CacheTests.cs"];
m8_80 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_81 [label="var scope = new TestObject(42)", span="100-100", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_82 [label="var reference = new InstanceReference { Instance = new Sword() }", span="101-101", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_83 [label="var context1 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="102-102", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_84 [label="var context2 = CreateContext(scope, this.bindingConfiguration, typeof(int))", span="103-103", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_85 [label="cache.Remember(context1, reference)", span="105-105", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", color=red, community=0, file="CacheTests.cs"];
m8_87 [label="instance.Should().BeSameAs(reference.Instance)", span="108-108", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_86 [label="object instance = cache.TryGet(context2)", span="106-106", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", color=red, community=0, file="CacheTests.cs"];
m8_88 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", span="98-98", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference.ReturnsInstanceIfOneHasBeenCachedWithSameGenericParameters()", file="CacheTests.cs"];
m8_24 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CacheTests.cs"];
m8_22 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="CacheTests.cs"];
m8_158 [label="Entry Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_159 [label="var scopeMock = new Mock<INotifyWhenDisposed>()", span="214-214", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_160 [label="var sword = new Sword()", span="215-215", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_162 [label="var context = CreateContext(scopeMock.Object, this.bindingConfiguration)", span="217-217", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_164 [label="scopeMock.Raise(scope => scope.Disposed += null, EventArgs.Empty)", span="220-220", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_161 [label="var reference = new InstanceReference { Instance = sword }", span="216-216", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_163 [label="cache.Remember(context, reference)", span="219-219", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_165 [label="object instance = cache.TryGet(context)", span="221-221", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", color=red, community=0, file="CacheTests.cs"];
m8_166 [label="instance.Should().BeNull()", span="223-223", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_167 [label="Exit Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", span="212-212", cluster="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed.CachedObjectsAreReleased()", file="CacheTests.cs"];
m8_143 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="CacheTests.cs"];
m8_60 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CacheTests.cs"];
m8_21 [label="Entry Mock<IBinding>.cstr", span="", cluster="Mock<IBinding>.cstr", file="CacheTests.cs"];
m8_63 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="CacheTests.cs"];
m8_171 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="CacheTests.cs"];
m8_25 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="CacheTests.cs"];
m8_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="CacheTests.cs"];
m8_31 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="CacheTests.cs"];
m8_35 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="CacheTests.cs"];
m8_38 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="CacheTests.cs"];
m8_26 [label="binding.BindingConfiguration", span="32-32", cluster="lambda expression", file="CacheTests.cs"];
m8_27 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="CacheTests.cs"];
m8_29 [label="context.Binding", span="33-33", cluster="lambda expression", file="CacheTests.cs"];
m8_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="CacheTests.cs"];
m8_32 [label="context.GetScope()", span="34-34", cluster="lambda expression", file="CacheTests.cs"];
m8_33 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="CacheTests.cs"];
m8_36 [label="context.GenericArguments", span="35-35", cluster="lambda expression", file="CacheTests.cs"];
m8_37 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="CacheTests.cs"];
m8_39 [label="context.HasInferredGenericArguments", span="36-36", cluster="lambda expression", file="CacheTests.cs"];
m8_40 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="CacheTests.cs"];
m8_172 [label="scope.Disposed += null", span="220-220", cluster="lambda expression", file="CacheTests.cs"];
m8_173 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="CacheTests.cs"];
m8_98 [label="Entry Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs"];
m8_99 [label="bool result = cache.Release(new TestObject(42))", span="131-131", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", color=red, community=0, file="CacheTests.cs"];
m8_100 [label="result.Should().BeFalse()", span="132-132", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs"];
m8_101 [label="Exit Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", span="129-129", cluster="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled.ReturnsFalseIfInstanceIsNotTracked()", file="CacheTests.cs"];
m8_170 [label="Entry Unk.Raise", span="", cluster="Unk.Raise", file="CacheTests.cs"];
m8_0 [label="Entry Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_1 [label="this.cachePrunerMock = new Mock<ICachePruner>()", span="22-22", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_2 [label="this.bindingConfiguration = new Mock<IBindingConfiguration>().Object", span="23-23", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_3 [label="this.pipelineMock = new Mock<IPipeline>()", span="24-24", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_4 [label="this.cache = new Cache(this.pipelineMock.Object, this.cachePrunerMock.Object)", span="25-25", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_5 [label="Exit Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", span="20-20", cluster="Ninject.Tests.Unit.CacheTests.CacheContext.CacheContext()", file="CacheTests.cs"];
m8_41 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs"];
m8_42 [label="var scope = new TestObject(42)", span="46-46", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs"];
m8_43 [label="var context = CreateContext(scope, this.bindingConfiguration)", span="47-47", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs"];
m8_44 [label="var instance = cache.TryGet(context)", span="49-49", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", color=red, community=0, file="CacheTests.cs"];
m8_45 [label="instance.Should().BeNull()", span="51-51", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs"];
m8_46 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", span="44-44", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedToCache()", file="CacheTests.cs"];
m8_102 [label="Entry Ninject.Activation.Caching.Cache.Release(object)", span="146-146", cluster="Ninject.Activation.Caching.Cache.Release(object)", file="CacheTests.cs"];
m8_47 [label="Entry Ninject.Tests.Unit.TestObject.TestObject(int)", span="6-6", cluster="Ninject.Tests.Unit.TestObject.TestObject(int)", file="CacheTests.cs"];
m8_113 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="CacheTests.cs"];
m8_168 [label="Entry Mock<INotifyWhenDisposed>.cstr", span="", cluster="Mock<INotifyWhenDisposed>.cstr", file="CacheTests.cs"];
m8_64 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_65 [label="var reference = new InstanceReference { Instance = new Sword() }", span="71-71", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_66 [label="var context1 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="72-72", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_68 [label="cache.Remember(context1, reference)", span="75-75", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", color=red, community=0, file="CacheTests.cs"];
m8_67 [label="var context2 = CreateContext(new TestObject(42), this.bindingConfiguration)", span="73-73", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_69 [label="object instance = cache.TryGet(context2)", span="76-76", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", color=red, community=0, file="CacheTests.cs"];
m8_70 [label="instance.Should().BeNull()", span="78-78", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_71 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", span="69-69", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsNullIfNoInstancesHaveBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_23 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CacheTests.cs"];
m8_51 [label="Entry Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_52 [label="var scope = new TestObject(42)", span="57-57", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_53 [label="var reference = new InstanceReference { Instance = new Sword() }", span="58-58", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_54 [label="var context1 = CreateContext(scope, this.bindingConfiguration)", span="59-59", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_55 [label="var context2 = CreateContext(scope, this.bindingConfiguration)", span="60-60", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_56 [label="cache.Remember(context1, reference)", span="62-62", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", color=red, community=0, file="CacheTests.cs"];
m8_58 [label="instance.Should().BeSameAs(reference.Instance)", span="65-65", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_57 [label="object instance = cache.TryGet(context2)", span="63-63", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", color=red, community=0, file="CacheTests.cs"];
m8_59 [label="Exit Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", span="55-55", cluster="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled.ReturnsCachedInstanceIfOneHasBeenAddedWithinSpecifiedScope()", file="CacheTests.cs"];
m8_8 [label="Entry Mock<IPipeline>.cstr", span="", cluster="Mock<IPipeline>.cstr", file="CacheTests.cs"];
m8_6 [label="Entry Mock<ICachePruner>.cstr", span="", cluster="Mock<ICachePruner>.cstr", file="CacheTests.cs"];
m8_185 [label="Ninject.Tests.Unit.CacheTests.CacheContext", span="", file="CacheTests.cs"];
m8_186 [label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled", span="", file="CacheTests.cs"];
m8_187 [label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference", span="", file="CacheTests.cs"];
m8_188 [label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled", span="", file="CacheTests.cs"];
m8_189 [label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled", span="", file="CacheTests.cs"];
m8_190 [label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed", span="", file="CacheTests.cs"];
m8_191 [label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache", span="", file="CacheTests.cs"];
m9_3 [label="Entry Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", span="20-20", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs"];
m9_4 [label="this.contextMock = new Mock<IContext>()", span="22-22", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs"];
m9_5 [label="Exit Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", span="20-20", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.SetUp()", file="CallbackProviderTests.cs"];
m9_7 [label="Entry Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", span="29-29", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs"];
m9_8 [label="var sword = new Sword()", span="31-31", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs"];
m9_9 [label="this.provider = new CallbackProvider<Sword>(c => sword)", span="32-32", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", color=green, community=0, file="CallbackProviderTests.cs"];
m9_11 [label="result.Should().BeSameAs(sword)", span="36-36", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs"];
m9_10 [label="var result = this.provider.Create(this.contextMock.Object)", span="34-34", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", color=green, community=0, file="CallbackProviderTests.cs"];
m9_12 [label="Exit Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", span="29-29", cluster="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled.ProviderInvokesCallbackToRetrieveValue()", file="CallbackProviderTests.cs"];
m9_15 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="CallbackProviderTests.cs"];
m9_6 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="CallbackProviderTests.cs"];
m9_14 [label="Entry Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", span="23-23", cluster="Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", file="CallbackProviderTests.cs"];
m9_17 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="CallbackProviderTests.cs"];
m9_18 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="CallbackProviderTests.cs"];
m9_19 [label=sword, span="32-32", cluster="lambda expression", color=green, community=0, file="CallbackProviderTests.cs"];
m9_20 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="CallbackProviderTests.cs"];
m9_13 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CallbackProviderTests.cs"];
m9_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CallbackProviderTests.cs"];
m9_0 [label="Entry Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", span="15-15", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs"];
m9_1 [label="this.SetUp()", span="17-17", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs"];
m9_2 [label="Exit Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", span="15-15", cluster="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext.CallbackProviderContext()", file="CallbackProviderTests.cs"];
m9_21 [label="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext", span="", file="CallbackProviderTests.cs"];
m9_22 [label="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled", span="", file="CallbackProviderTests.cs"];
m9_23 [label=sword, span="", file="CallbackProviderTests.cs"];
m10_24 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="CircularDependenciesTests.cs"];
m10_25 [label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="337-337", cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="CircularDependenciesTests.cs"];
m10_27 [label="this.kernel.Get<IDecoratorPattern>()", span="47-47", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_32 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="51-51", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_34 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_35 [label="this.kernel.Get<TwoWayConstructorFoo>()", span="53-53", cluster="lambda expression", file="CircularDependenciesTests.cs", color=green, community=0];
m10_26 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", span="45-45", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", file="CircularDependenciesTests.cs"];
m10_28 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", span="45-45", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfConditionaDoesNotMatch()", file="CircularDependenciesTests.cs"];
m10_29 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="CircularDependenciesTests.cs"];
m10_30 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="51-51", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_31 [label="Assert.Throws<ActivationException>(() => this.kernel.Get<TwoWayConstructorFoo>())", span="53-53", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_33 [label="Entry Unk.>", span="", cluster="Unk.>", color=red, community=0, file="CircularDependenciesTests.cs"];
m10_36 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_37 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="59-59", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="CircularDependenciesTests.cs"];
m10_126 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", span="203-203", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_127 [label="var bar = this.kernel.Get<TwoWayConstructorPropertyBar>()", span="205-205", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_128 [label="var foo = this.kernel.Get<TwoWayConstructorPropertyFoo>()", span="206-206", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_129 [label="bar.Foo.Should().BeSameAs(foo)", span="207-207", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_130 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", span="203-203", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_19 [label="Entry Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", span="160-160", cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", file="CircularDependenciesTests.cs"];
m10_21 [label="Exit Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", span="160-160", cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_20 [label="return parent.GetTypeInfo().HasAttribute(attributeType);", span="162-162", cluster="Ninject.Planning.Targets.Target<T>.IsDefinedOnParent(System.Type, System.Type)", file="CircularDependenciesTests.cs"];
m10_22 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="CircularDependenciesTests.cs"];
m10_14 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="CircularDependenciesTests.cs"];
m10_59 [label="this.kernel.Resolve(request)", span="97-97", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_60 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="93-93", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m10_61 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="101-101", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_63 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="101-101", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_64 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_65 [label="this.kernel.Get<ThreeWayConstructorFoo>()", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs", color=green, community=0];
m10_62 [label="Assert.Throws<ActivationException>(() => this.kernel.Get<ThreeWayConstructorFoo>())", span="103-103", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_66 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_90 [label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103", cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="CircularDependenciesTests.cs"];
m10_117 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", span="191-191", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_118 [label="Assert.Throws<ActivationException>(() => this.kernel.Get<TwoWayConstructorPropertyFoo>())", span="193-193", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_119 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", span="191-191", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.ThrowsActivationExceptionWhenHookIsResolved()", file="CircularDependenciesTests.cs"];
m10_67 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CircularDependenciesTests.cs"];
m10_68 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_69 [label="Entry lambda expression", span="247-247", cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_70 [label="attributes.All(attribute => attribute.Matches(metadata))", span="247-247", cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_71 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_43 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="67-67", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_50 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CircularDependenciesTests.cs"];
m10_52 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="85-85", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_51 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="CircularDependenciesTests.cs"];
m10_53 [label="this.kernel.Bind<ThreeWayConstructorFoo>().ToSelf().InSingletonScope()", span="87-87", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_18 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="CircularDependenciesTests.cs"];
m10_7 [label="Entry Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", span="114-114", cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", file="CircularDependenciesTests.cs"];
m10_8 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="28-28", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_9 [label="this.kernel.Bind<TwoWayConstructorFoo>().ToSelf().InSingletonScope()", span="30-30", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_6 [label="Entry Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", span="51-51", cluster="Ninject.Infrastructure.Future<T>.Future(System.Func<T>)", file="CircularDependenciesTests.cs"];
m10_113 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", span="184-184", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", file="CircularDependenciesTests.cs"];
m10_114 [label="this.kernel.Bind<TwoWayConstructorPropertyFoo>().ToSelf().InSingletonScope()", span="186-186", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_115 [label="this.kernel.Bind<TwoWayConstructorPropertyBar>().ToSelf().InSingletonScope()", span="187-187", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_116 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", span="184-184", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty()", file="CircularDependenciesTests.cs"];
m10_72 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="117-117", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_123 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", span="197-197", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_124 [label="this.kernel.Get<TwoWayConstructorPropertyBar>()", span="199-199", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_125 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", span="197-197", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_17 [label="Exit Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="143-143", cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs"];
m10_38 [label="Entry Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", span="200-200", cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_39 [label="Entry System.Collections.IEnumerable.CastSlow(System.Type)", span="20-20", cluster="System.Collections.IEnumerable.CastSlow(System.Type)", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_40 [label="Entry System.Collections.IEnumerable.ToArraySlow(System.Type)", span="26-26", cluster="System.Collections.IEnumerable.ToArraySlow(System.Type)", file="CircularDependenciesTests.cs"];
m10_16 [label="return ExtensionsForICustomAttributeProvider.IsDefined(Site, attributeType, inherit);", span="147-147", cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs"];
m10_105 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", span="171-171", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs"];
m10_106 [label="this.kernel.Bind(typeof(IGeneric<>)).To(typeof(GenericServiceWithGenericConstructor<>))", span="173-173", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_107 [label="Action act = () => this.kernel.Get<IGeneric<int>>()", span="175-175", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_108 [label="act.ShouldThrow<ActivationException>()", span="177-177", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs"];
m10_109 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", span="171-171", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesForGenericServiceRegisteredViaOpenGenericType2()", file="CircularDependenciesTests.cs"];
m10_98 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", span="163-163", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs"];
m10_99 [label="Action act = () => this.kernel.Get<IOptions<ClassC>>()", span="165-165", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_100 [label="act.ShouldThrow<ActivationException>()", span="167-167", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs"];
m10_101 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", span="163-163", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DetectsCyclicDependenciesInPropertySetter()", file="CircularDependenciesTests.cs"];
m10_48 [label="bar.Foo.Should().BeSameAs(foo)", span="79-79", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_42 [label="this.kernel.Get<TwoWayPropertyFoo>()", span="69-69", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_23 [label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="32-32", cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="CircularDependenciesTests.cs"];
m10_10 [label="this.kernel.Bind<TwoWayConstructorBar>().ToSelf().InSingletonScope()", span="31-31", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_44 [label="var request = parent.Request.CreateChild(service, parent, this)", span="202-202", cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m10_45 [label="request.IsOptional = true", span="203-203", cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_46 [label="return parent.Kernel.Resolve(request);", span="204-204", cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_47 [label="Exit Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", span="200-200", cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="CircularDependenciesTests.cs"];
m10_49 [label="Entry Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", span="54-54", cluster="Ninject.Syntax.IResolutionRoot.Resolve(Ninject.Activation.IRequest)", file="CircularDependenciesTests.cs"];
m10_95 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", span="156-156", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", file="CircularDependenciesTests.cs"];
m10_96 [label="var o = this.kernel.Get<HasOptionsPropertyInjected>()", span="158-158", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_97 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", span="156-156", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException2()", file="CircularDependenciesTests.cs"];
m10_76 [label="var foo = this.kernel.Get<ThreeWayPropertyFoo>()", span="125-125", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_11 [label="this.kernel.Bind<IDecoratorPattern>().To<Decorator1>().WhenInjectedInto<Decorator2>()", span="33-33", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_12 [label="this.kernel.Bind<IDecoratorPattern>().To<Decorator2>()", span="34-34", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_13 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="28-28", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_54 [label="this.kernel.Bind<ThreeWayConstructorBar>().ToSelf().InSingletonScope()", span="88-88", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_55 [label="this.kernel.Bind<ThreeWayConstructorBaz>().ToSelf().InSingletonScope()", span="89-89", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_56 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="85-85", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_57 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="93-93", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="CircularDependenciesTests.cs"];
m10_92 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", span="149-149", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_93 [label="this.kernel.Get<IOptions<ClassA>>()", span="151-151", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_94 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", span="149-149", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_120 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_74 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="117-117", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_73 [label="this.kernel.Get<ThreeWayPropertyFoo>()", span="119-119", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs", color=green, community=0];
m10_75 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="123-123", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_103 [label="this.kernel.Get<IOptions<ClassC>>()", span="165-165", cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_102 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_104 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_111 [label="this.kernel.Get<IGeneric<int>>()", span="175-175", cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_110 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_112 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_121 [label="this.kernel.Get<TwoWayConstructorPropertyFoo>()", span="193-193", cluster="lambda expression", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_122 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m10_58 [label="Entry Ninject.Infrastructure.Language.ExtensionsForICustomAttributeProvider.HasAttribute(System.Reflection.ICustomAttributeProvider, System.Type)", span="26-26", cluster="Ninject.Infrastructure.Language.ExtensionsForICustomAttributeProvider.HasAttribute(System.Reflection.ICustomAttributeProvider, System.Type)", file="CircularDependenciesTests.cs"];
m10_83 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", span="137-137", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_84 [label="this.kernel.Bind(typeof(IOptions<>)).To(typeof(OptionsManager<>))", span="139-139", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_85 [label="this.kernel.Bind<IConfigureOptions<ClassA>>().To<ConfigureA1>()", span="141-141", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_86 [label="this.kernel.Bind<IConfigureOptions<ClassB>>().To<ConfigureB1>()", span="142-142", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_87 [label="this.kernel.Bind<IConfigureOptions<ClassC>>().To<HasCircularDependency1>()", span="143-143", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_88 [label="this.kernel.Bind<IConfigureOptions<ClassD>>().To<HasCircularDependency2>()", span="144-144", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_89 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", span="137-137", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors()", file="CircularDependenciesTests.cs"];
m10_15 [label="Entry Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="143-143", cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", file="CircularDependenciesTests.cs"];
m10_77 [label="Ninject.Planning.Targets.Target<T>", span="", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_79 [label="Ninject.Planning.Bindings.IBindingMetadata", span="", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_81 [label="baz.Foo.Should().BeSameAs(foo)", span="131-131", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_78 [label=attributes, span="", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=green, community=0, file="CircularDependenciesTests.cs"];
m10_80 [label="bar.Baz.Should().BeSameAs(baz)", span="130-130", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_82 [label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="123-123", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="CircularDependenciesTests.cs"];
m10_91 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="39-39", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="CircularDependenciesTests.cs"];
m10_41 [label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="67-67", cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="CircularDependenciesTests.cs"];
m10_0 [label="Entry Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", span="95-95", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs"];
m10_1 [label="this.Member = member", span="97-97", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", color=red, community=0, file="CircularDependenciesTests.cs"];
m10_2 [label="this.Site = site", span="98-98", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs"];
m10_3 [label="this.constraint = new Future<Func<IBindingMetadata, bool>>(ReadConstraintFromTarget)", span="100-100", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs"];
m10_4 [label="this.isOptional = new Future<bool>(ReadOptionalFromTarget)", span="101-101", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs"];
m10_5 [label="Exit Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", span="95-95", cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="CircularDependenciesTests.cs"];
m10_155 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", span="", file="CircularDependenciesTests.cs"];
m10_156 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", span="", file="CircularDependenciesTests.cs"];
m10_157 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", span="", file="CircularDependenciesTests.cs"];
m10_158 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", span="", file="CircularDependenciesTests.cs"];
m10_159 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors", span="", file="CircularDependenciesTests.cs"];
m10_160 [label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty", span="", file="CircularDependenciesTests.cs"];
m12_49 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="CompiledModuleLoaderPluginTests.cs"];
m12_41 [label="Entry Unk.Never", span="", cluster="Unk.Never", file="CompiledModuleLoaderPluginTests.cs"];
m12_21 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CompiledModuleLoaderPluginTests.cs"];
m12_30 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="CompiledModuleLoaderPluginTests.cs"];
m12_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="CompiledModuleLoaderPluginTests.cs"];
m12_24 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="CompiledModuleLoaderPluginTests.cs"];
m12_7 [label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="31-31", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_8 [label="var expected = Assembly.LoadFrom(this.moduleFilename).GetName().Name", span="33-33", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_9 [label="IEnumerable<Assembly> actual = null", span="35-35", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs", color=green, community=0];
m12_14 [label="actual.Where(a => a.GetName().Name == expected).Should().NotBeEmpty()", span="42-42", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_10 [label="this.kernelMock.Setup(x => x.Load(It.IsAny<IEnumerable<Assembly>>()))\r\n                      .Callback<IEnumerable<Assembly>>(m => actual = m)", span="36-37", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_11 [label="this.loaderPlugin.LoadModules(new[] { this.moduleFilename })", span="39-39", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_12 [label="actual.Should().NotBeNull()", span="40-40", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_13 [label="actual.Count().Should().Be(1)", span="41-41", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_15 [label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="31-31", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="CompiledModuleLoaderPluginTests.cs"];
m12_16 [label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0", cluster="System.Reflection.Assembly.LoadFrom(string)", file="CompiledModuleLoaderPluginTests.cs"];
m12_20 [label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="64-64", cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="CompiledModuleLoaderPluginTests.cs"];
m12_26 [label="Entry Unk.NotBeEmpty", span="", cluster="Unk.NotBeEmpty", file="CompiledModuleLoaderPluginTests.cs"];
m12_25 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CompiledModuleLoaderPluginTests.cs"];
m12_6 [label="Entry Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", span="22-22", cluster="Ninject.Modules.AssemblyNameRetriever.AssemblyNameRetriever()", file="CompiledModuleLoaderPluginTests.cs"];
m12_18 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CompiledModuleLoaderPluginTests.cs"];
m12_37 [label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="46-46", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="CompiledModuleLoaderPluginTests.cs"];
m12_38 [label="this.loaderPlugin.LoadModules(new[] { this.assemblyFilename })", span="48-48", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", color=green, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_39 [label="this.kernelMock.Verify(k => k.Load(It.Is<IEnumerable<Assembly>>(p => p.Any())), Times.Never())", span="49-49", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_40 [label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", span="46-46", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.DoesNotLoadAssembliesWithoutModules()", file="CompiledModuleLoaderPluginTests.cs"];
m12_0 [label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="21-21", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="CompiledModuleLoaderPluginTests.cs"];
m12_1 [label="this.kernelMock = new Mock<IKernel>()", span="23-23", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", color=green, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_2 [label="this.loaderPlugin = new CompiledModuleLoaderPlugin(this.kernelMock.Object, new AssemblyNameRetriever())", span="24-24", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_3 [label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="21-21", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="CompiledModuleLoaderPluginTests.cs"];
m12_22 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="CompiledModuleLoaderPluginTests.cs"];
m12_17 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="CompiledModuleLoaderPluginTests.cs"];
m12_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_35 [label="a.GetName().Name == expected", span="42-42", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_27 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_31 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_34 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_28 [label="x.Load(It.IsAny<IEnumerable<Assembly>>())", span="36-36", cluster="lambda expression", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_29 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_32 [label="actual = m", span="37-37", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_33 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_36 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_43 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_44 [label="k.Load(It.Is<IEnumerable<Assembly>>(p => p.Any()))", span="49-49", cluster="lambda expression", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_45 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_47 [label="p.Any()", span="49-49", cluster="lambda expression", color=red, community=0, file="CompiledModuleLoaderPluginTests.cs"];
m12_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="CompiledModuleLoaderPluginTests.cs"];
m12_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="CompiledModuleLoaderPluginTests.cs"];
m12_4 [label="Entry Mock<IKernel>.cstr", span="", cluster="Mock<IKernel>.cstr", file="CompiledModuleLoaderPluginTests.cs"];
m12_5 [label="Entry CompiledModuleLoaderPlugin.cstr", span="", cluster="CompiledModuleLoaderPlugin.cstr", file="CompiledModuleLoaderPluginTests.cs"];
m12_50 [label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", span="", file="CompiledModuleLoaderPluginTests.cs"];
m12_51 [label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", span="", file="CompiledModuleLoaderPluginTests.cs"];
m12_52 [label=expected, span="", file="CompiledModuleLoaderPluginTests.cs"];
m13_7 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="64-64", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_8 [label="var sw = new StringWriter()", span="67-67", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_9 [label="sw.WriteLine(''Error loading module '{0}' of type {1}'', newModule.Name, newModule.GetType().Format())", span="69-69", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_10 [label="sw.WriteLine(''Another module (of type {0}) with the same name has already been loaded'', existingModule.GetType().Format())", span="70-70", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_11 [label="sw.WriteLine(''Suggestions:'')", span="72-72", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_12 [label="sw.WriteLine(''  1) Ensure that you have not accidentally loaded the same module twice.'')", span="73-73", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_13 [label="sw.WriteLine(''  2) If you are using automatic module loading, ensure you have not manually loaded a module'')", span="75-75", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_14 [label="sw.WriteLine(''     that may be found by the module loader.'')", span="76-76", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_15 [label="return sw.ToString();", span="79-79", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_16 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="64-64", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="ComponentContainerTests.cs"];
m13_32 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", span="108-108", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_33 [label="var sw = new StringWriter()", span="110-110", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_34 [label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="112-112", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_38 [label="i < formattedMatchingBindings.Length", span="116-116", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", color=red, community=0, file="ComponentContainerTests.cs"];
m13_39 [label="sw.WriteLine(''  {0}) {1}'', i + 1, formattedMatchingBindings[i])", span="118-118", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", color=red, community=0, file="ComponentContainerTests.cs"];
m13_42 [label="sw.WriteLine(request.FormatActivationPath())", span="121-121", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_44 [label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0} only once.'', request.Service.Format())", span="124-124", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_35 [label="sw.WriteLine(''More than one matching bindings are available.'')", span="113-113", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_36 [label="sw.WriteLine(''Matching bindings:'')", span="115-115", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_41 [label="sw.WriteLine(''Activation path:'')", span="120-120", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_43 [label="sw.WriteLine(''Suggestions:'')", span="123-123", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_45 [label="return sw.ToString();", span="126-126", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_37 [label="int i = 0", span="116-116", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", color=red, community=0, file="ComponentContainerTests.cs"];
m13_40 [label="i++", span="116-116", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", color=red, community=0, file="ComponentContainerTests.cs"];
m13_46 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", span="108-108", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotUniquelyResolveBinding(Ninject.Activation.IRequest, string[])", file="ComponentContainerTests.cs"];
m13_24 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="88-88", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_25 [label="var sw = new StringWriter()", span="90-90", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_26 [label="sw.WriteLine(''Error unloading module '{0}': no such module has been loaded'', name)", span="92-92", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_27 [label="sw.WriteLine(''Suggestions:'')", span="94-94", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_28 [label="sw.WriteLine(''  1) Ensure you have previously loaded the module and the name is spelled correctly.'')", span="95-95", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_29 [label="sw.WriteLine(''  2) Ensure you have not accidentally created more than one kernel.'')", span="96-96", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_30 [label="return sw.ToString();", span="98-98", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_31 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="88-88", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="ComponentContainerTests.cs"];
m13_90 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="214-214", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_91 [label="var sw = new StringWriter()", span="216-216", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_92 [label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="218-218", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_96 [label="sw.WriteLine(context.Request.FormatActivationPath())", span="223-223", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_93 [label="sw.WriteLine(''No constructor was available to create an instance of the implementation type.'')", span="219-219", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_94 [label="sw.WriteLine()", span="220-220", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_95 [label="sw.WriteLine(''Activation path:'')", span="222-222", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_97 [label="sw.WriteLine(''Suggestions:'')", span="225-225", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_98 [label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="226-226", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_99 [label="sw.WriteLine(''  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.'')", span="227-227", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_100 [label="return sw.ToString();", span="229-229", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_101 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", span="214-214", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailable(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_173 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", span="389-389", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_177 [label="sw.Write(''['')", span="391-391", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_178 [label="var name = attribute.GetType().Format()", span="392-392", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_180 [label="sw.Write(name)", span="394-394", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_181 [label="sw.Write('']'')", span="395-395", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_179 [label="name = name.EndsWith(''Attribute'') ? name.Substring(0, name.Length - 9) : name", span="393-393", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_182 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", span="389-389", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatAttribute(System.IO.StringWriter, System.Attribute)", file="ComponentContainerTests.cs"];
m13_6 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ComponentContainerTests.cs"];
m13_21 [label="Entry System.IO.TextWriter.WriteLine(string, object)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string, object)", file="ComponentContainerTests.cs"];
m13_47 [label="Entry Ninject.Activation.IRequest.FormatActivationPath()", span="37-37", cluster="Ninject.Activation.IRequest.FormatActivationPath()", file="ComponentContainerTests.cs"];
m13_18 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ComponentContainerTests.cs"];
m13_159 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", span="360-360", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_160 [label="constructor.GetCustomAttributes(false)", span="362-362", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_161 [label="FormatAttribute(sw, attribute)", span="364-364", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_162 [label="sw.Write(constructor.DeclaringType.Name)", span="367-367", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_163 [label="sw.Write(''('')", span="368-368", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_164 [label="constructor.GetParameters()", span="369-369", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_166 [label="FormatAttribute(sw, attribute)", span="373-373", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_167 [label="sw.Write(parameterInfo.ParameterType.Format())", span="376-376", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_168 [label="sw.Write('' '')", span="377-377", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_169 [label="sw.Write(parameterInfo.Name)", span="378-378", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_170 [label="sw.WriteLine('')'')", span="381-381", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_165 [label="parameterInfo.GetCustomAttributes(false)", span="371-371", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_171 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", span="360-360", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.FormatConstructor(System.Reflection.ConstructorInfo, System.IO.StringWriter)", file="ComponentContainerTests.cs"];
m13_78 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", span="191-191", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_79 [label="var sw = new StringWriter()", span="193-193", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_80 [label="sw.WriteLine(''Error registering binding(s) for {0}'', serviceNames)", span="195-195", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_81 [label="sw.WriteLine(''The type {0} used in a call to {1}() is not a valid attribute.'', type.Format(), methodName)", span="196-196", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_87 [label="sw.WriteLine(''     such as {0}<SomeAttribute>().'', methodName)", span="203-203", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_82 [label="sw.WriteLine()", span="197-197", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_83 [label="sw.WriteLine(''Suggestions:'')", span="199-199", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_84 [label="sw.WriteLine(''  1) Ensure that you have passed the correct type.'')", span="200-200", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_85 [label="sw.WriteLine(''  2) If you have defined your own attribute type, ensure that it extends System.Attribute.'')", span="201-201", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_86 [label="sw.WriteLine(''  3) To avoid problems with type-safety, use the generic version of the the method instead,'')", span="202-202", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_88 [label="return sw.ToString();", span="205-205", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_89 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", span="191-191", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.InvalidAttributeTypeUsedInBindingCondition(string, string, System.Type)", file="ComponentContainerTests.cs"];
m13_111 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="259-259", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_112 [label="var sw = new StringWriter()", span="261-261", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_113 [label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="263-263", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_114 [label="sw.WriteLine(''No such component has been registered in the kernel's component container.'')", span="264-264", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_115 [label="sw.WriteLine()", span="265-265", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_116 [label="sw.WriteLine(''Suggestions:'')", span="267-267", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_117 [label="sw.WriteLine(''  1) If you have created a custom subclass for KernelBase, ensure that you have properly'')", span="268-268", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_118 [label="sw.WriteLine(''     implemented the AddComponents() method.'')", span="269-269", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_119 [label="sw.WriteLine(''  2) Ensure that you have not removed the component from the container via a call to RemoveAll().'')", span="270-270", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_120 [label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="271-271", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_121 [label="return sw.ToString();", span="273-273", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_122 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="259-259", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ComponentContainerTests.cs"];
m13_172 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ComponentContainerTests.cs"];
m13_0 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="44-44", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs"];
m13_1 [label="return ''Modules with null or empty names are not supported'';", span="46-46", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs"];
m13_2 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="44-44", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="ComponentContainerTests.cs"];
m13_183 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="ComponentContainerTests.cs"];
m13_62 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="163-163", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_63 [label="var sw = new StringWriter()", span="165-165", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_64 [label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="167-167", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_68 [label="sw.WriteLine(context.Request.FormatActivationPath())", span="172-172", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_70 [label="sw.WriteLine(''  1) Ensure that you have not declared a dependency for {0} on any implementations of the service.'', context.Request.Service.Format())", span="175-175", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_65 [label="sw.WriteLine(''A cyclical dependency was detected between the constructors of two services.'')", span="168-168", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_66 [label="sw.WriteLine()", span="169-169", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_67 [label="sw.WriteLine(''Activation path:'')", span="171-171", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_69 [label="sw.WriteLine(''Suggestions:'')", span="174-174", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_71 [label="sw.WriteLine(''  2) Consider combining the services into a single one to remove the cycle.'')", span="176-176", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_72 [label="sw.WriteLine(''  3) Use property injection instead of constructor injection, and implement IInitializable'')", span="177-177", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_73 [label="sw.WriteLine(''     if you need initialization logic to be run after property values have been injected.'')", span="178-178", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_74 [label="return sw.ToString();", span="180-180", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_75 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", span="163-163", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CyclicalDependenciesDetected(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_123 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="283-283", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_124 [label="var sw = new StringWriter()", span="285-285", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_125 [label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="287-287", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_126 [label="sw.WriteLine(''No matching property {0}.'', propertyName)", span="288-288", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_128 [label="sw.WriteLine(request.FormatActivationPath())", span="291-291", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_127 [label="sw.WriteLine(''Activation path:'')", span="290-290", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_129 [label="sw.WriteLine(''Suggestions:'')", span="293-293", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_130 [label="sw.WriteLine(''  1) Ensure that you have the correct property name.'')", span="294-294", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_131 [label="return sw.ToString();", span="296-296", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_132 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", span="283-283", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolvePropertyForValueInjection(Ninject.Activation.IRequest, string)", file="ComponentContainerTests.cs"];
m13_20 [label="Entry System.IO.TextWriter.WriteLine(string, object, object)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string, object, object)", file="ComponentContainerTests.cs"];
m13_184 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ComponentContainerTests.cs"];
m13_3 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="53-53", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs"];
m13_4 [label="return string.Format(''Target '{0}' at site '{1}' does not have a default value.'', target.Member, target.Name);", span="55-55", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs"];
m13_5 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", span="53-53", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.TargetDoesNotHaveADefaultValue(Ninject.Planning.Targets.ITarget)", file="ComponentContainerTests.cs"];
m13_76 [label="Entry Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", span="60-60", cluster="Ninject.Planning.Bindings.IBinding.Format(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_174 [label="Entry System.IO.StringWriter.Write(string)", span="0-0", cluster="System.IO.StringWriter.Write(string)", file="ComponentContainerTests.cs"];
m13_102 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_103 [label="var sw = new StringWriter()", span="241-241", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_104 [label="sw.WriteLine(''Error loading Ninject component {0}'', component.Format())", span="243-243", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_105 [label="sw.WriteLine(''No constructor was available to create an instance of the registered implementation type {0}.'', implementation.Format())", span="244-244", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_106 [label="sw.WriteLine()", span="245-245", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_107 [label="sw.WriteLine(''Suggestions:'')", span="247-247", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_108 [label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="248-248", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_109 [label="return sw.ToString();", span="250-250", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_110 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ComponentContainerTests.cs"];
m13_133 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="305-305", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_134 [label="var sw = new StringWriter()", span="307-307", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_135 [label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="309-309", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_138 [label="sw.WriteLine(context.Request.FormatActivationPath())", span="313-313", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_136 [label="sw.WriteLine(''Provider returned null.'')", span="310-310", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_137 [label="sw.WriteLine(''Activation path:'')", span="312-312", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_139 [label="sw.WriteLine(''Suggestions:'')", span="315-315", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_140 [label="sw.WriteLine(''  1) Ensure that the provider handles creation requests properly.'')", span="316-316", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_141 [label="return sw.ToString();", span="318-318", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_142 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", span="305-305", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ProviderReturnedNull(Ninject.Activation.IContext)", file="ComponentContainerTests.cs"];
m13_176 [label="Entry System.Reflection.ParameterInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.ParameterInfo.GetCustomAttributes(bool)", file="ComponentContainerTests.cs"];
m13_22 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="ComponentContainerTests.cs"];
m13_23 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ComponentContainerTests.cs"];
m13_17 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ComponentContainerTests.cs"];
m13_48 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="135-135", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_49 [label="var sw = new StringWriter()", span="137-137", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_50 [label="sw.WriteLine(''Error activating {0}'', request.Service.Format())", span="139-139", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_53 [label="sw.WriteLine(request.FormatActivationPath())", span="143-143", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_55 [label="sw.WriteLine(''  1) Ensure that you have defined a binding for {0}.'', request.Service.Format())", span="146-146", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_51 [label="sw.WriteLine(''No matching bindings are available, and the type is not self-bindable.'')", span="140-140", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_52 [label="sw.WriteLine(''Activation path:'')", span="142-142", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_54 [label="sw.WriteLine(''Suggestions:'')", span="145-145", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_56 [label="sw.WriteLine(''  2) If the binding was defined in a module, ensure that the module has been loaded into the kernel.'')", span="147-147", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_57 [label="sw.WriteLine(''  3) Ensure you have not accidentally created more than one kernel.'')", span="148-148", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_58 [label="sw.WriteLine(''  4) If you are using constructor arguments, ensure that the parameter name matches the constructors parameter name.'')", span="149-149", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_59 [label="sw.WriteLine(''  5) If you are using automatic module loading, ensure the search path and filters are correct.'')", span="151-151", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", color=red, community=0, file="ComponentContainerTests.cs"];
m13_60 [label="return sw.ToString();", span="154-154", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_61 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="135-135", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="ComponentContainerTests.cs"];
m13_77 [label="Entry System.IO.TextWriter.WriteLine()", span="0-0", cluster="System.IO.TextWriter.WriteLine()", file="ComponentContainerTests.cs"];
m13_143 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", span="328-328", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_144 [label="var sw = new StringWriter()", span="330-330", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_145 [label="sw.WriteLine(''Error activating {0} using {1}'', context.Request.Service.Format(), context.Binding.Format(context))", span="332-332", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_149 [label=bestDirectives, span="337-337", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_153 [label="sw.WriteLine(context.Request.FormatActivationPath())", span="345-345", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_146 [label="sw.WriteLine(''Several constructors have the same priority. Please specify the constructor using ToConstructor syntax or add an Inject attribute.'')", span="333-333", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_147 [label="sw.WriteLine()", span="334-334", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_148 [label="sw.WriteLine(''Constructors:'')", span="336-336", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_150 [label="FormatConstructor(constructorInjectionDirective.Constructor, sw)", span="339-339", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_151 [label="sw.WriteLine()", span="342-342", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_152 [label="sw.WriteLine(''Activation path:'')", span="344-344", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_154 [label="sw.WriteLine(''Suggestions:'')", span="347-347", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_155 [label="sw.WriteLine(''  1) Ensure that the implementation type has a public constructor.'')", span="348-348", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_156 [label="sw.WriteLine(''  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.'')", span="349-349", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_157 [label="return sw.ToString();", span="351-351", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_158 [label="Exit Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", span="328-328", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ConstructorsAmbiguous(Ninject.Activation.IContext, System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>)", file="ComponentContainerTests.cs"];
m13_175 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ComponentContainerTests.cs"];
m13_19 [label="Entry System.Type.Format()", span="212-212", cluster="System.Type.Format()", file="ComponentContainerTests.cs"];
m14_11 [label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="85-85", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs"];
m14_12 [label="var attackAbility = this.kernel.Get<IAttackAbility>()", span="87-87", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs"];
m14_13 [label="attackAbility.Should().BeOfType<UnknownAttack>()", span="88-88", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs"];
m14_14 [label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", span="85-85", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.DefaultInstanceIsResolvedWhenNoAttributesMatch()", file="ConditionalAttributeBindingTests.cs"];
m14_8 [label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="23-23", cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="ConditionalAttributeBindingTests.cs"];
m14_9 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConditionalAttributeBindingTests.cs"];
m14_0 [label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="75-75", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_1 [label="this.kernel = new StandardKernel()", span="77-77", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_2 [label="this.kernel.Bind<IVariableWeapon>().To<Hammer>()", span="78-78", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_3 [label="this.kernel.Bind<IAttackAbility>().To<UnknownAttack>()", span="79-79", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_4 [label="this.kernel.Bind<IAttackAbility>().To<StrongAttack>().WhenTargetHas<StrongAttribute>()", span="80-80", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_5 [label="this.kernel.Bind<IAttackAbility>().To<WeakAttack>().WhenTargetHas<WeakAttribute>()", span="81-81", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_6 [label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", span="75-75", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.ConditionalAttributeBindingTests()", file="ConditionalAttributeBindingTests.cs"];
m14_17 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConditionalAttributeBindingTests.cs"];
m14_33 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="47-47", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_7 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConditionalAttributeBindingTests.cs"];
m14_10 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalAttributeBindingTests.cs"];
m14_15 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalAttributeBindingTests.cs"];
m14_25 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ConditionalAttributeBindingTests.cs"];
m14_32 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ConditionalAttributeBindingTests.cs"];
m14_26 [label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="101-101", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_27 [label="disposing && !this.IsDisposed", span="103-103", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", color=green, community=0, file="ConditionalAttributeBindingTests.cs"];
m14_30 [label="base.Dispose( disposing )", span="108-108", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_28 [label="this.kernel.Dispose()", span="105-105", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_29 [label="this.kernel = null", span="106-106", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_31 [label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", span="101-101", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.Dispose(bool)", file="ConditionalAttributeBindingTests.cs"];
m14_18 [label="Entry Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="92-92", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_19 [label="var hammer = this.kernel.Get<IVariableWeapon>()", span="94-94", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_20 [label="hammer.Should().NotBeNull()", span="95-95", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_21 [label="hammer.StrongAttack.Should().BeOfType<StrongAttack>()", span="96-96", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_22 [label="hammer.WeakAttack.Should().BeOfType<WeakAttack>()", span="97-97", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_23 [label="hammer.WtfAttack.Should().BeOfType<UnknownAttack>()", span="98-98", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_24 [label="Exit Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", span="92-92", cluster="Ninject.Tests.Integration.ConditionalAttributeBindingTests.PropertiesAreInjectMatchingAttributeBindings()", file="ConditionalAttributeBindingTests.cs"];
m14_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConditionalAttributeBindingTests.cs"];
m14_34 [label="Ninject.Tests.Integration.ConditionalAttributeBindingTests", span="", file="ConditionalAttributeBindingTests.cs"];
m15_231 [label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="22-22", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConditionalBindingTests.cs"];
m15_207 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_208 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="276-276", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_209 [label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", span="277-277", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_210 [label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="278-279", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_211 [label="this.kernel.Bind<Samurai>().ToSelf()", span="281-281", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_212 [label="this.kernel.Bind<Barracks>().ToSelf()", span="282-282", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_213 [label="this.kernel.Bind<NinjaBarracks>().ToSelf()", span="283-283", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_214 [label="var warrior = this.kernel.Get<Samurai>()", span="285-285", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_215 [label="var barracks = this.kernel.Get<Barracks>()", span="286-286", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_217 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="289-289", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_216 [label="var ninja = this.kernel.Get<NinjaBarracks>()", span="287-287", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_218 [label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="290-290", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_219 [label="ninja.Weapon.Should().BeOfType<Sword>()", span="291-291", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_220 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_80 [label="Entry Ninject.Tests.Fakes.ShortSword.ShortSword()", span="2-2", cluster="Ninject.Tests.Fakes.ShortSword.ShortSword()", file="ConditionalBindingTests.cs"];
m15_124 [label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103", cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConditionalBindingTests.cs"];
m15_136 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_137 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="170-170", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_138 [label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", span="171-171", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_139 [label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="172-173", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_140 [label="this.kernel.Bind<Samurai>().ToSelf()", span="175-175", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_141 [label="this.kernel.Bind<Barracks>().ToSelf()", span="176-176", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_142 [label="this.kernel.Bind<NinjaBarracks>().ToSelf()", span="177-177", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_143 [label="var warrior = this.kernel.Get<Samurai>()", span="179-179", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_144 [label="var barracks = this.kernel.Get<Barracks>()", span="180-180", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_146 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="183-183", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_145 [label="var ninja = this.kernel.Get<NinjaBarracks>()", span="181-181", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_147 [label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="184-184", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_148 [label="ninja.Weapon.Should().BeOfType<Sword>()", span="185-185", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_149 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs"];
m15_300 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalBindingTests.cs"];
m15_71 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_74 [label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", span="94-94", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_72 [label="var shortSword = new ShortSword()", span="91-91", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_73 [label="var shuriken = new Shuriken()", span="92-92", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_75 [label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).When(_ => true)", span="95-95", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_76 [label="var result = this.kernel.GetAll<IWeapon>()", span="96-96", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_77 [label="result.Should().Contain(shortSword)", span="97-97", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_78 [label="result.Should().Contain(shuriken)", span="98-98", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_79 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_293 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_294 [label="this.kernel.Bind<Knight>().ToSelf()", span="379-379", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_295 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="380-380", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_296 [label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenTargetHas<WeakAttribute>()", span="381-381", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_297 [label="var knight = this.kernel.Get<Knight>()", span="383-383", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_298 [label="knight.Weapon.Should().BeOfType<ShortSword>()", span="384-384", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_299 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_151 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_152 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="191-191", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_153 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>))", span="192-192", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_154 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="193-193", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_155 [label="var service = this.kernel.Get<ClosedGenericService>()", span="195-195", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_156 [label="service.Warrior.Should().BeOfType<Samurai>()", span="197-197", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_157 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_126 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_127 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="156-156", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_128 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(new[] { typeof(IGenericService<>) })", span="157-157", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_129 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="158-158", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_130 [label="var service = this.kernel.Get<GenericService<int>>()", span="160-160", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_131 [label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", span="161-161", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_132 [label="service.Warrior.Should().BeOfType<Samurai>()", span="163-163", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_133 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="164-164", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_134 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_232 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", span="152-152", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", file="ConditionalBindingTests.cs"];
m15_111 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_112 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="133-133", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_113 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<IWarrior>()", span="134-134", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_114 [label="var warrior = this.kernel.Get<IWarrior>()", span="136-136", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_115 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="138-138", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_116 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_9 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConditionalBindingTests.cs"];
m15_12 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConditionalBindingTests.cs"];
m15_0 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs"];
m15_1 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="14-14", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_2 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="15-15", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_3 [label="this.kernel.Bind<Samurai>().ToSelf()", span="16-16", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_4 [label="var warrior = this.kernel.Get<Samurai>()", span="17-17", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_5 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="18-18", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs"];
m15_6 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs"];
m15_82 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="ConditionalBindingTests.cs"];
m15_197 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="59-59", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="ConditionalBindingTests.cs"];
m15_8 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConditionalBindingTests.cs"];
m15_13 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConditionalBindingTests.cs"];
m15_7 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConditionalBindingTests.cs"];
m15_88 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_92 [label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", span="108-108", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_89 [label="var shortSword = new ShortSword()", span="104-104", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_91 [label="var shuriken = new Shuriken()", span="106-106", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_93 [label="this.kernel.Bind<IWeapon>().ToConstant(sword)", span="109-109", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_90 [label="var sword = new Sword()", span="105-105", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_94 [label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="110-110", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_95 [label="var result = this.kernel.GetAll<IWeapon>()", span="111-111", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_96 [label="result.Should().Contain(shortSword)", span="112-112", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_97 [label="result.Should().Contain(sword)", span="113-113", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_98 [label="result.Should().NotContain(shuriken)", span="114-114", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_99 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_42 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_43 [label="IWeapon weapon = this.kernel.Get<Sword>()", span="61-61", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_44 [label="weapon.Should().BeOfType<Sword>()", span="62-62", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_45 [label="this.kernel.Bind<Sword>().To<ShortSword>()", span="63-63", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_46 [label="weapon = this.kernel.Get<Sword>()", span="64-64", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_47 [label="weapon.Should().BeOfType<ShortSword>()", span="65-65", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_48 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_125 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="41-41", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="ConditionalBindingTests.cs"];
m15_221 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_223 [label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", span="298-298", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_222 [label="string Name = ''SomeName''", span="297-297", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_224 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="299-299", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_225 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorNamed(Name)", span="300-300", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_226 [label="this.kernel.Bind<IWeapon>().To<Dagger>()", span="301-301", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_227 [label="var barack = this.kernel.Get<Barracks>()", span="303-303", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_228 [label="barack.Weapon.Should().BeOfType<Sword>()", span="305-305", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_229 [label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="306-306", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_230 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_253 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="131-131", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ConditionalBindingTests.cs"];
m15_286 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs"];
m15_287 [label="this.kernel.Bind<Knight>().ToSelf()", span="368-368", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_288 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenMemberHas<StrongAttribute>()", span="369-369", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_289 [label="this.kernel.Bind<IWeapon>().To<ShortSword>()", span="370-370", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_290 [label="var knight = this.kernel.Get<Knight>()", span="372-372", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_291 [label="knight.Weapon.Should().BeOfType<Sword>()", span="373-373", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs"];
m15_292 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs"];
m15_102 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_105 [label="this.kernel.Bind<IWeapon>().ToConstant(shortSword).BindingConfiguration.IsImplicit = true", span="123-123", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_103 [label="var shortSword = new ShortSword()", span="120-120", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_104 [label="var shuriken = new Shuriken()", span="121-121", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_106 [label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="124-124", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_107 [label="var result = this.kernel.GetAll<IWeapon>()", span="125-125", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_108 [label="result.Should().Contain(shortSword)", span="126-126", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_109 [label="result.Should().Contain(shuriken)", span="127-127", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_110 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs"];
m15_285 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", span="95-95", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", file="ConditionalBindingTests.cs"];
m15_101 [label="Entry Unk.NotContain", span="", cluster="Unk.NotContain", file="ConditionalBindingTests.cs"];
m15_38 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs"];
m15_39 [label="var weapon = this.kernel.Get<Sword>()", span="54-54", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_40 [label="weapon.Should().BeOfType<Sword>()", span="55-55", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs"];
m15_41 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs"];
m15_100 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConditionalBindingTests.cs"];
m15_271 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="173-173", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs"];
m15_262 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_263 [label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="342-342", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_264 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="343-343", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_265 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="345-345", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_266 [label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="346-346", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_267 [label="var barack = this.kernel.Get<Barracks>()", span="348-348", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_268 [label="barack.Weapon.Should().BeOfType<Dagger>()", span="350-350", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_269 [label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="351-351", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_270 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_201 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs"];
m15_202 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="265-265", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_203 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<Samurai>()", span="266-266", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_204 [label="var warrior = this.kernel.Get<IWarrior>()", span="268-268", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_205 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="270-270", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs"];
m15_206 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs"];
m15_81 [label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4", cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="ConditionalBindingTests.cs"];
m15_14 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_15 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="24-24", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_16 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="25-25", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_17 [label="this.kernel.Bind<Samurai>().ToSelf()", span="26-26", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_18 [label="var warrior = this.kernel.Get<Samurai>()", span="27-27", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_19 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="28-28", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_20 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_150 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", span="78-78", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", file="ConditionalBindingTests.cs"];
m15_11 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs"];
m15_191 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_192 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="254-254", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_193 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<IWarrior>()", span="255-255", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_194 [label="Action getWarrior = () => this.kernel.Get<IWarrior>()", span="257-257", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_195 [label="getWarrior.ShouldThrow<ActivationException>()", span="259-259", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_196 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs"];
m15_244 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_245 [label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="328-328", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_246 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="329-329", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_247 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="330-330", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_248 [label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="331-331", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_249 [label="var barack = this.kernel.Get<Barracks>()", span="333-333", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_250 [label="barack.Weapon.Should().BeOfType<Sword>()", span="335-335", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_251 [label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="336-336", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_252 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_275 [label="Entry lambda expression", span="346-346", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_35 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_36 [label="this.kernel.Get<Samurai>()", span="48-48", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_37 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_56 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_59 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_57 [label=true, span="71-71", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_58 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_60 [label=true, span="72-72", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_61 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_68 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_69 [label=true, span="81-81", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_70 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_85 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_86 [label=true, span="95-95", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_87 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_199 [label="this.kernel.Get<IWarrior>()", span="257-257", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_198 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_200 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_255 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_259 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_256 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="330-330", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_257 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_260 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="331-331", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_261 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_272 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_273 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="345-345", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_274 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_276 [label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="346-346", cluster="lambda expression", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_277 [label="Exit lambda expression", span="346-346", cluster="lambda expression", file="ConditionalBindingTests.cs"];
m15_167 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs"];
m15_168 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="218-218", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_169 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto(new[] { typeof(Samurai) })", span="219-219", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs"];
m15_170 [label="this.kernel.Bind<Samurai>().ToSelf()", span="220-220", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_171 [label="var warrior = this.kernel.Get<Samurai>()", span="221-221", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_172 [label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="222-222", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs"];
m15_173 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs"];
m15_182 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_183 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="240-240", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_184 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="241-241", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_185 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="242-242", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_186 [label="var service = this.kernel.Get<GenericService<int>>()", span="244-244", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_187 [label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", span="245-245", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_188 [label="service.Warrior.Should().BeOfType<Samurai>()", span="247-247", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_189 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="248-248", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_190 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConditionalBindingTests.cs"];
m15_28 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs"];
m15_29 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="44-44", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_30 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="45-45", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_31 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="46-46", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_32 [label="this.kernel.Bind<Samurai>().ToSelf()", span="47-47", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_33 [label="Assert.Throws<ActivationException>(() => this.kernel.Get<Samurai>())", span="48-48", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_34 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs"];
m15_135 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", span="50-50", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", file="ConditionalBindingTests.cs"];
m15_254 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="166-166", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs"];
m15_62 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_63 [label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", span="81-81", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_64 [label="this.kernel.Bind<Sword>().To<ShortSword>()", span="82-82", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_65 [label="var weapon = this.kernel.Get<Sword>()", span="84-84", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_66 [label="weapon.Should().BeOfType<Sword>()", span="85-85", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_67 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_258 [label="Entry Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", span="43-43", cluster="Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", file="ConditionalBindingTests.cs"];
m15_21 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_22 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="34-34", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_23 [label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="35-35", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_24 [label="this.kernel.Bind<Samurai>().ToSelf()", span="36-36", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_25 [label="var warrior = this.kernel.Get<Samurai>()", span="37-37", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_26 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="38-38", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_27 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs"];
m15_49 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_50 [label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", span="71-71", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_51 [label="this.kernel.Bind<Sword>().To<ShortSword>().When(ctx => true)", span="72-72", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_52 [label="var weapon = this.kernel.Get<Sword>()", span="74-74", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_53 [label="weapon.Should().BeOfType<ShortSword>()", span="75-75", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_54 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs"];
m15_158 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_159 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="203-203", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_160 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="204-204", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_161 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="205-205", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_162 [label="var service = this.kernel.Get<ClosedGenericService>()", span="207-207", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_163 [label="var anotherService = this.kernel.Get<ClosedAnotherGenericService>()", span="208-208", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_164 [label="service.Warrior.Should().BeOfType<Samurai>()", span="210-210", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_165 [label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="211-211", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_166 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs"];
m15_83 [label="Entry Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", span="144-144", cluster="Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs"];
m15_84 [label="Entry Unk.Contain", span="", cluster="Unk.Contain", file="ConditionalBindingTests.cs"];
m15_278 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_279 [label="this.kernel.Bind<Knight>().ToSelf()", span="357-357", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_280 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="358-358", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_281 [label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenMemberHas<WeakAttribute>()", span="359-359", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_282 [label="var knight = this.kernel.Get<Knight>()", span="361-361", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_283 [label="knight.Weapon.Should().BeOfType<Sword>()", span="362-362", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_284 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs"];
m15_55 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="25-25", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConditionalBindingTests.cs"];
m15_117 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_118 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="144-144", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_119 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(IGenericService<>))", span="145-145", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_120 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="146-146", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_121 [label="var service = this.kernel.Get<GenericService<int>>()", span="148-148", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_122 [label="service.Warrior.Should().BeOfType<Samurai>()", span="150-150", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_123 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_174 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_175 [label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="228-228", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_176 [label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>))", span="229-229", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_177 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="230-230", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_178 [label="var service = this.kernel.Get<GenericService<int>>()", span="232-232", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_179 [label="service.Warrior.Should().BeOfType<Samurai>()", span="234-234", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_180 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs"];
m15_233 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_235 [label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", span="313-313", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_234 [label="string Name = ''SomeName''", span="312-312", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_236 [label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="314-314", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_237 [label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorNamed(Name)", span="316-316", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_238 [label="this.kernel.Bind<IWeapon>().To<Dagger>()", span="317-317", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_239 [label="var barack = this.kernel.Get<Barracks>()", span="319-319", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", color=green, community=0, file="ConditionalBindingTests.cs"];
m15_240 [label="barack.Weapon.Should().BeOfType<Dagger>()", span="321-321", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_241 [label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="322-322", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_242 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310", cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs"];
m15_243 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", span="159-159", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", file="ConditionalBindingTests.cs"];
m15_181 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="68-68", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="ConditionalBindingTests.cs"];
m15_314 [label="Ninject.Tests.Integration.ConditionalBindingTests", span="", file="ConditionalBindingTests.cs"];
m16_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConditionalBindingWhenParentTests.cs"];
m16_13 [label="Entry Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", span="28-28", cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs"];
m16_14 [label="var instance = this.kernel.Get<Sword>(''Broken'')", span="30-30", cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", color=green, community=0, file="ConditionalBindingWhenParentTests.cs"];
m16_15 [label="instance.Should().NotBeNull()", span="32-32", cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs"];
m16_16 [label="instance.Should().BeOfType<Sword>()", span="33-33", cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs"];
m16_17 [label="Exit Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", span="28-28", cluster="Ninject.Tests.Integration.WhenParentNamed.NamedInstanceAvailableEvenWithWhenBinding()", file="ConditionalBindingWhenParentTests.cs"];
m16_18 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", span="43-43", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", file="ConditionalBindingWhenParentTests.cs"];
m16_20 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ConditionalBindingWhenParentTests.cs"];
m16_19 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConditionalBindingWhenParentTests.cs"];
m16_23 [label="Ninject.Tests.Integration.WhenParentNamed", span="", file="ConditionalBindingWhenParentTests.cs"];
m17_15 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ConstantProviderTests.cs"];
m17_17 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ConstantProviderTests.cs"];
m17_6 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="ConstantProviderTests.cs"];
m17_7 [label="Entry Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", span="29-29", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs"];
m17_8 [label="var sword = new Sword()", span="31-31", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs"];
m17_9 [label="this.provider = new ConstantProvider<Sword>(sword)", span="32-32", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", color=green, community=0, file="ConstantProviderTests.cs"];
m17_11 [label="result.Should().BeSameAs(sword)", span="36-36", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs"];
m17_10 [label="var result = this.provider.Create(this.contextMock.Object)", span="34-34", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", color=green, community=0, file="ConstantProviderTests.cs"];
m17_12 [label="Exit Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", span="29-29", cluster="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled.ProviderReturnsConstantValue()", file="ConstantProviderTests.cs"];
m17_0 [label="Entry Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", span="15-15", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs"];
m17_1 [label="this.SetUp()", span="17-17", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs"];
m17_2 [label="Exit Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", span="15-15", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.ConstantProviderContext()", file="ConstantProviderTests.cs"];
m17_3 [label="Entry Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", span="20-20", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs"];
m17_4 [label="this.contextMock = new Mock<IContext>()", span="22-22", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs"];
m17_5 [label="Exit Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", span="20-20", cluster="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext.SetUp()", file="ConstantProviderTests.cs"];
m17_13 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstantProviderTests.cs"];
m17_14 [label="Entry Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", span="20-20", cluster="Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", file="ConstantProviderTests.cs"];
m17_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConstantProviderTests.cs"];
m17_18 [label="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext", span="", file="ConstantProviderTests.cs"];
m17_19 [label="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled", span="", file="ConstantProviderTests.cs"];
m18_16 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="ConstantTests.cs"];
m18_30 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConstantTests.cs"];
m18_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConstantTests.cs"];
m18_32 [label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="49-49", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs"];
m18_33 [label="var builder = this.kernel.Bind<IWeapon>().ToConstant(new Sword())", span="51-51", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs"];
m18_34 [label="var provider = new ResolveCountingProvider(builder.BindingConfiguration.ProviderCallback)", span="52-52", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs"];
m18_35 [label="builder.BindingConfiguration.ProviderCallback = ctx => provider.Callback(ctx)", span="53-53", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs"];
m18_38 [label="provider.Count.Should().Be(1)", span="59-59", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs"];
m18_36 [label="this.kernel.Get<IWeapon>()", span="56-56", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs"];
m18_37 [label="this.kernel.Get<IWeapon>()", span="57-57", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", color=green, community=0, file="ConstantTests.cs"];
m18_39 [label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", span="49-49", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheBindingShouldOnlyBeResolvedOnce()", file="ConstantTests.cs"];
m18_41 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ConstantTests.cs"];
m18_40 [label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", span="12-12", cluster="Ninject.Tests.Fakes.ResolveCountingProvider.ResolveCountingProvider(System.Func<Ninject.Activation.IContext, Ninject.Activation.IProvider>)", file="ConstantTests.cs"];
m18_45 [label="Entry Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", span="17-17", cluster="Ninject.Tests.Fakes.ResolveCountingProvider.Callback(Ninject.Activation.IContext)", file="ConstantTests.cs"];
m18_0 [label="Entry Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", span="12-12", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs"];
m18_1 [label="this.kernel = new StandardKernel()", span="14-14", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs"];
m18_2 [label="Exit Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", span="12-12", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.ConstantContext()", file="ConstantTests.cs"];
m18_15 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstantTests.cs"];
m18_8 [label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", span="26-26", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs"];
m18_9 [label="var sword = new Sword()", span="28-28", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs"];
m18_10 [label="this.kernel.Bind<IWeapon>().ToConstant(sword)", span="29-29", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", color=green, community=0, file="ConstantTests.cs"];
m18_12 [label="instance.Should().BeSameAs(sword)", span="32-32", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs"];
m18_11 [label="var instance = this.kernel.Get<IWeapon>()", span="31-31", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", color=green, community=0, file="ConstantTests.cs"];
m18_13 [label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", span="26-26", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.TheSameInstanceShouldBeReturned()", file="ConstantTests.cs"];
m18_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConstantTests.cs"];
m18_29 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="33-33", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConstantTests.cs"];
m18_4 [label="Entry Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs"];
m18_5 [label="this.kernel.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs"];
m18_6 [label="Exit Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ConstantTests.ConstantContext.Dispose()", file="ConstantTests.cs"];
m18_17 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstantTests.cs"];
m18_42 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="ConstantTests.cs"];
m18_43 [label="provider.Callback(ctx)", span="53-53", cluster="lambda expression", file="ConstantTests.cs"];
m18_44 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="ConstantTests.cs"];
m18_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ConstantTests.cs"];
m18_19 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ConstantTests.cs"];
m18_20 [label="Entry Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="36-36", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs"];
m18_21 [label="var sword = new Sword()", span="38-38", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs"];
m18_22 [label="this.kernel.Bind<IWeapon>().ToConstant(sword).WhenInjectedInto<Samurai>()", span="39-39", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs"];
m18_25 [label="samurai.Weapon.Should().BeSameAs(sword)", span="43-43", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs"];
m18_23 [label="this.kernel.Bind<IWeapon>().To<Shuriken>()", span="40-40", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs"];
m18_24 [label="var samurai = this.kernel.Get<Samurai>()", span="42-42", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs"];
m18_26 [label="var weapon = this.kernel.Get<IWeapon>()", span="44-44", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", color=green, community=0, file="ConstantTests.cs"];
m18_27 [label="weapon.Should().BeOfType<Shuriken>()", span="45-45", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs"];
m18_28 [label="Exit Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", span="36-36", cluster="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant.ConditionalBindingShouldNotAffectUnconditionalBinding()", file="ConstantTests.cs"];
m18_14 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstantTests.cs"];
m18_18 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConstantTests.cs"];
m18_46 [label="Ninject.Tests.Integration.ConstantTests.ConstantContext", span="", file="ConstantTests.cs"];
m18_47 [label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant", span="", file="ConstantTests.cs"];
m18_48 [label=provider, span="", file="ConstantTests.cs"];
m19_4 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs"];
m19_5 [label="this.kernel.Dispose()", span="23-23", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs"];
m19_6 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs"];
m19_177 [label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="22-22", cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConstructorSelectionTests.cs"];
m19_140 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="159-159", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_141 [label="var ninja = new Ninja(new Sword())", span="161-161", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_142 [label="kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(ninja))", span="162-162", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_143 [label="var barracks1 = kernel.Get<Barracks>()", span="164-164", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_144 [label="var barracks2 = kernel.Get<Barracks>()", span="165-165", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_145 [label="barracks1.Warrior.Should().BeSameAs(barracks2.Warrior)", span="167-167", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_146 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="159-159", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_228 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", span="291-291", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_229 [label="this.Sword = sword", span="293-293", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_230 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", span="291-291", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_204 [label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="103-103", cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConstructorSelectionTests.cs"];
m19_113 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="ConstructorSelectionTests.cs"];
m19_33 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs"];
m19_34 [label="kernel.Bind<Barracks>().ToSelf()", span="53-53", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_35 [label="kernel.Bind<IWeapon>().To<Sword>()", span="54-54", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_36 [label="var barracks = kernel.Get<Barracks>()", span="56-56", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_37 [label="barracks.Should().NotBeNull()", span="57-57", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs"];
m19_38 [label="barracks.Warrior.Should().BeNull()", span="58-58", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs"];
m19_39 [label="barracks.Weapon.Should().NotBeNull()", span="59-59", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs"];
m19_40 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs"];
m19_163 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="192-192", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_164 [label="int activationCount = 0", span="194-194", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_165 [label="kernel.Bind<Ninja>().ToSelf().Named(''1'').OnActivation(inst => activationCount++)", span="195-195", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_166 [label="kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(ctorArg.Context.Kernel.Get<Ninja>(''1''), ctorArg.Inject<IWeapon>()))", span="196-196", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_169 [label="activationCount.Should().Be(0)", span="200-200", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_175 [label="activationCount.Should().Be(1)", span="207-207", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_167 [label="kernel.Bind<IWeapon>().To<Sword>()", span="197-197", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_168 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="198-198", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_170 [label="var barracks = kernel.Get<Barracks>()", span="201-201", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_171 [label="barracks.Should().NotBeNull()", span="203-203", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_172 [label="barracks.Warrior.Should().NotBeNull()", span="204-204", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_173 [label="barracks.Warrior.Should().BeOfType<Ninja>()", span="205-205", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_174 [label="barracks.Weapon.Should().NotBeNull()", span="206-206", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_176 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="192-192", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs"];
m19_206 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="238-238", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs"];
m19_207 [label="kernel.Bind<ClassWithObsoleteContructor>().ToSelf()", span="240-240", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_208 [label="var instance = kernel.Get<ClassWithObsoleteContructor>()", span="242-242", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_209 [label="instance.Sword.Should().NotBeNull()", span="244-244", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs"];
m19_210 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="238-238", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs"];
m19_130 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs"];
m19_131 [label="kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(new Ninja(new Sword())))", span="149-149", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_132 [label="var barracks1 = kernel.Get<Barracks>()", span="151-151", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_133 [label="var barracks2 = kernel.Get<Barracks>()", span="152-152", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_134 [label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="154-154", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs"];
m19_135 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs"];
m19_21 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_22 [label="kernel.Bind<Barracks>().ToSelf()", span="40-40", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_23 [label="var constructorArgument = new ConstructorArgument(''warrior'', new Samurai(new Sword()))", span="41-41", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_24 [label="var barracks = kernel.Get<Barracks>(constructorArgument)", span="42-42", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_25 [label="barracks.Should().NotBeNull()", span="44-44", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_26 [label="barracks.Warrior.Should().NotBeNull()", span="45-45", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_27 [label="barracks.Warrior.Weapon.Should().NotBeNull()", span="46-46", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_28 [label="barracks.Weapon.Should().BeNull()", span="47-47", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_29 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs"];
m19_100 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_101 [label="kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(ctorArg.Inject<IWarrior>()))", span="121-121", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_102 [label="kernel.Bind<IWeapon>().To<Sword>()", span="122-122", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_103 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="123-123", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_104 [label="var barracks = kernel.Get<Barracks>()", span="125-125", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_105 [label="barracks.Should().NotBeNull()", span="126-126", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_106 [label="barracks.Warrior.Should().NotBeNull()", span="127-127", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_107 [label="barracks.Warrior.Should().BeOfType<Samurai>()", span="128-128", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_108 [label="barracks.Weapon.Should().BeNull()", span="129-129", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_109 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs"];
m19_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ConstructorSelectionTests.cs"];
m19_218 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", span="262-262", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs"];
m19_219 [label="this.X = x", span="264-264", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs"];
m19_220 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", span="262-262", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue(int)", file="ConstructorSelectionTests.cs"];
m19_215 [label="Entry Unk.NotBe", span="", cluster="Unk.NotBe", file="ConstructorSelectionTests.cs"];
m19_8 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_9 [label="kernel.Bind<Barracks>().ToSelf()", span="29-29", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_10 [label="var barracks = kernel.Get<Barracks>()", span="31-31", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_11 [label="barracks.Should().NotBeNull()", span="32-32", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_12 [label="barracks.Warrior.Should().BeNull()", span="33-33", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_13 [label="barracks.Weapon.Should().BeNull()", span="34-34", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_14 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_18 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ConstructorSelectionTests.cs"];
m19_237 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", span="319-319", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_238 [label="this.Sword = sword", span="321-321", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_239 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", span="319-319", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor(Ninject.Tests.Fakes.Sword)", file="ConstructorSelectionTests.cs"];
m19_41 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConstructorSelectionTests.cs"];
m19_20 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull", file="ConstructorSelectionTests.cs"];
m19_42 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs"];
m19_43 [label="kernel.Bind<Barracks>().ToSelf()", span="65-65", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_44 [label="kernel.Bind<IWeapon>().To<Sword>()", span="66-66", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_45 [label="kernel.Bind<IWarrior>().To<Samurai>().When(_ => false)", span="67-67", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_46 [label="var barracks = kernel.Get<Barracks>()", span="69-69", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_47 [label="barracks.Should().NotBeNull()", span="70-70", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs"];
m19_48 [label="barracks.Warrior.Should().BeNull()", span="71-71", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs"];
m19_49 [label="barracks.Weapon.Should().NotBeNull()", span="72-72", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs"];
m19_50 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs"];
m19_75 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConstructorSelectionTests.cs"];
m19_136 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="ConstructorSelectionTests.cs"];
m19_31 [label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23", cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs"];
m19_99 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4", cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="ConstructorSelectionTests.cs"];
m19_15 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstructorSelectionTests.cs"];
m19_151 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="172-172", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs"];
m19_152 [label="return new Ninja(new Sword());", span="177-177", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs"];
m19_153 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="172-172", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs"];
m19_154 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="181-181", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_155 [label="kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(CreateNinja()))", span="183-183", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_156 [label="var barracks1 = kernel.Get<Barracks>()", span="185-185", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_157 [label="var barracks2 = kernel.Get<Barracks>()", span="186-186", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_158 [label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="188-188", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_159 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="181-181", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs"];
m19_179 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ConstructorSelectionTests.cs"];
m19_233 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", span="307-307", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", file="ConstructorSelectionTests.cs"];
m19_234 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", span="307-307", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes(int)", file="ConstructorSelectionTests.cs"];
m19_55 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_56 [label="kernel.Bind<Barracks>().ToSelf()", span="78-78", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_57 [label="kernel.Bind<IWeapon>().To<Sword>()", span="79-79", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_58 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="80-80", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_59 [label="var barracks = kernel.Get<Barracks>()", span="82-82", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_60 [label="barracks.Should().NotBeNull()", span="83-83", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_61 [label="barracks.Warrior.Should().NotBeNull()", span="84-84", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_62 [label="barracks.Warrior.Weapon.Should().NotBeNull()", span="85-85", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_63 [label="barracks.Weapon.Should().NotBeNull()", span="86-86", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_64 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs"];
m19_195 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="221-221", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_196 [label="var instance = kernel.Get<ClassWithSelfBindableType>()", span="223-223", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_197 [label="instance.Sword.Should().BeNull()", span="225-225", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_198 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="221-221", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_221 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", span="273-273", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", file="ConstructorSelectionTests.cs"];
m19_222 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", span="273-273", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric()", file="ConstructorSelectionTests.cs"];
m19_231 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", span="302-302", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", file="ConstructorSelectionTests.cs"];
m19_232 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", span="302-302", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithTwoInjectAttributes.ClassWithTwoInjectAttributes()", file="ConstructorSelectionTests.cs"];
m19_32 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstructorSelectionTests.cs"];
m19_114 [label="Entry Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", span="28-28", cluster="Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", file="ConstructorSelectionTests.cs"];
m19_199 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="229-229", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs"];
m19_200 [label="kernel.Bind(typeof(IGeneric<>)).To(typeof(GenericService<>))", span="231-231", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_201 [label="var instance = kernel.Get<ClassWithGeneric>()", span="232-232", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_202 [label="instance.Generic.Should().NotBeNull()", span="234-234", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs"];
m19_203 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="229-229", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs"];
m19_115 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_116 [label="kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(new Ninja(new Sword()), ctorArg.Inject<IWeapon>()))", span="135-135", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_117 [label="kernel.Bind<IWeapon>().To<Sword>()", span="136-136", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_118 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="137-137", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_119 [label="var barracks = kernel.Get<Barracks>()", span="139-139", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_120 [label="barracks.Should().NotBeNull()", span="140-140", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_121 [label="barracks.Warrior.Should().NotBeNull()", span="141-141", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_122 [label="barracks.Warrior.Should().BeOfType<Ninja>()", span="142-142", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_123 [label="barracks.Weapon.Should().NotBeNull()", span="143-143", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_124 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs"];
m19_95 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="99-99", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="ConstructorSelectionTests.cs"];
m19_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConstructorSelectionTests.cs"];
m19_223 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", span="277-277", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs"];
m19_224 [label="this.Generic = generic", span="279-279", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs"];
m19_225 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", span="277-277", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric.ClassWithGeneric(Ninject.Tests.Integration.StandardKernelTests.IGeneric<int>)", file="ConstructorSelectionTests.cs"];
m19_235 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", span="315-315", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", file="ConstructorSelectionTests.cs"];
m19_236 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", span="315-315", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor.ClassWithObsoleteContructor()", file="ConstructorSelectionTests.cs"];
m19_17 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs"];
m19_19 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ConstructorSelectionTests.cs"];
m19_76 [label="Entry Ninject.Syntax.BindingRoot.Unbind<T>()", span="126-126", cluster="Ninject.Syntax.BindingRoot.Unbind<T>()", file="ConstructorSelectionTests.cs"];
m19_178 [label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="25-25", cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ConstructorSelectionTests.cs"];
m19_129 [label="Entry Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", span="10-10", cluster="Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs"];
m19_192 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_53 [label=false, span="67-67", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_77 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_80 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_83 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_78 [label="kernel.Get<NinjaBarracks>()", span="94-94", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_79 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_81 [label="kernel.Get<NinjaBarracks>()", span="97-97", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_82 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_84 [label="kernel.Get<NinjaBarracks>()", span="101-101", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_85 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_96 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_97 [label="new Barracks()", span="108-108", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_98 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_110 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_111 [label="new Barracks(ctorArg.Inject<IWarrior>())", span="121-121", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_112 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_125 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_126 [label="new Barracks(new Ninja(new Sword()), ctorArg.Inject<IWeapon>())", span="135-135", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_127 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_137 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_138 [label="new Barracks(new Ninja(new Sword()))", span="149-149", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_139 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_149 [label="new Barracks(ninja)", span="162-162", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_148 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_150 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_160 [label="Entry lambda expression", span="183-183", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_161 [label="new Barracks(CreateNinja())", span="183-183", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_162 [label="Exit lambda expression", span="183-183", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_180 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_181 [label="activationCount++", span="195-195", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_183 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_182 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_184 [label="new Barracks(ctorArg.Context.Kernel.Get<Ninja>(''1''), ctorArg.Inject<IWeapon>())", span="196-196", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_185 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_193 [label="kernel.Get<ClassWithTwoInjectAttributes>()", span="215-215", cluster="lambda expression", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_194 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="ConstructorSelectionTests.cs"];
m19_0 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs"];
m19_1 [label="this.kernel = new StandardKernel()", span="18-18", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs"];
m19_2 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs"];
m19_147 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ConstructorSelectionTests.cs"];
m19_226 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", span="287-287", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", file="ConstructorSelectionTests.cs"];
m19_227 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", span="287-287", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType.ClassWithSelfBindableType()", file="ConstructorSelectionTests.cs"];
m19_16 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConstructorSelectionTests.cs"];
m19_128 [label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18", cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs"];
m19_205 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="39-39", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="ConstructorSelectionTests.cs"];
m19_65 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs"];
m19_66 [label="kernel.Bind<NinjaBarracks>().ToSelf()", span="92-92", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_67 [label="Assert.Throws<ActivationException>(() => kernel.Get<NinjaBarracks>())", span="94-94", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_68 [label="kernel.Bind<IWeapon>().To<Sword>()", span="96-96", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_69 [label="Assert.Throws<ActivationException>(() => kernel.Get<NinjaBarracks>())", span="97-97", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_70 [label="kernel.Unbind<IWeapon>()", span="98-98", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_71 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="100-100", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_72 [label="Assert.Throws<ActivationException>(() => kernel.Get<NinjaBarracks>())", span="101-101", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_73 [label="kernel.Unbind<IWarrior>()", span="102-102", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_74 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs"];
m19_51 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="25-25", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConstructorSelectionTests.cs"];
m19_186 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", span="43-43", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs"];
m19_211 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="249-249", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_212 [label="var instance = kernel.Get<ClassWithDefaultValue>()", span="251-251", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_213 [label="instance.X.Should().NotBe(0)", span="253-253", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_214 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="249-249", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs"];
m19_216 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", span="258-258", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", file="ConstructorSelectionTests.cs"];
m19_217 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", span="258-258", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue.ClassWithDefaultValue()", file="ConstructorSelectionTests.cs"];
m19_86 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs"];
m19_87 [label="kernel.Bind<Barracks>().ToConstructor(_ => new Barracks())", span="108-108", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_88 [label="kernel.Bind<IWeapon>().To<Sword>()", span="109-109", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_89 [label="kernel.Bind<IWarrior>().To<Samurai>()", span="110-110", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_90 [label="var barracks = kernel.Get<Barracks>()", span="112-112", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_91 [label="barracks.Should().NotBeNull()", span="113-113", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs"];
m19_92 [label="barracks.Warrior.Should().BeNull()", span="114-114", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs"];
m19_93 [label="barracks.Weapon.Should().BeNull()", span="115-115", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs"];
m19_94 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs"];
m19_187 [label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="211-211", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs"];
m19_188 [label="kernel.Bind<ClassWithTwoInjectAttributes>().ToSelf()", span="213-213", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_189 [label="Action getClassWithTwoInjectAttributes = () => kernel.Get<ClassWithTwoInjectAttributes>()", span="215-215", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", color=red, community=0, file="ConstructorSelectionTests.cs"];
m19_190 [label="getClassWithTwoInjectAttributes.ShouldThrow<ActivationException>()", span="217-217", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs"];
m19_191 [label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="211-211", cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs"];
m19_30 [label="Entry Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", span="25-25", cluster="Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", file="ConstructorSelectionTests.cs"];
m19_240 [label="Ninject.Tests.Integration.ConstructorSelectionTests", span="", file="ConstructorSelectionTests.cs"];
m19_241 [label=ninja, span="", file="ConstructorSelectionTests.cs"];
m19_242 [label=activationCount, span="", file="ConstructorSelectionTests.cs"];
m19_243 [label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue", span="", file="ConstructorSelectionTests.cs"];
m19_244 [label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric", span="", file="ConstructorSelectionTests.cs"];
m19_245 [label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType", span="", file="ConstructorSelectionTests.cs"];
m19_246 [label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor", span="", file="ConstructorSelectionTests.cs"];
m20_15 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="DefaultParameterTests.cs"];
m20_20 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="32-32", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m20_21 [label="this.kernel.Bind<Shield>().ToSelf()", span="34-34", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_22 [label="this.kernel.Bind<ShieldColor>().ToConstant(ShieldColor.Blue)", span="35-35", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_23 [label="var shield = this.kernel.Get<Shield>()", span="37-37", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_24 [label="shield.Should().NotBeNull()", span="38-38", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m20_25 [label="shield.Color.Should().Be(ShieldColor.Blue)", span="39-39", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m20_26 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="32-32", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="DefaultParameterTests.cs"];
m20_27 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="90-90", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="DefaultParameterTests.cs"];
m20_28 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="43-43", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m20_29 [label="this.kernel.Bind<Shield>().ToSelf().WithConstructorArgument(''color'', ShieldColor.Orange)", span="45-45", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_30 [label="var shield = this.kernel.Get<Shield>()", span="47-47", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_31 [label="shield.Should().NotBeNull()", span="48-48", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m20_32 [label="shield.Color.Should().Be(ShieldColor.Orange)", span="49-49", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m20_33 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="43-43", cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="DefaultParameterTests.cs"];
m20_19 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="DefaultParameterTests.cs"];
m20_4 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.Dispose()", span="16-16", cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs"];
m20_5 [label="this.kernel.Dispose()", span="18-18", cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs"];
m20_6 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.Dispose()", span="16-16", cluster="Ninject.Tests.Integration.DefaultParameterTests.Dispose()", file="DefaultParameterTests.cs"];
m20_14 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="DefaultParameterTests.cs"];
m20_34 [label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="28-28", cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="DefaultParameterTests.cs"];
m20_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="DefaultParameterTests.cs"];
m20_35 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", span="53-53", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_36 [label="this.kernel.Bind<Shield>().ToSelf()", span="55-55", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_37 [label="this.kernel.Bind<KiteShield>().ToSelf()", span="56-56", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_38 [label="var shield1 = this.kernel.Get<Shield>()", span="58-58", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_39 [label="var shield2 = this.kernel.Get<KiteShield>()", span="59-59", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_40 [label="shield1.Should().NotBeNull()", span="61-61", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_41 [label="shield1.Color.Should().Be(ShieldColor.Red)", span="62-62", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_42 [label="shield2.Should().NotBeNull()", span="64-64", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_43 [label="shield2.Color.Should().Be(ShieldColor.Orange)", span="65-65", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_44 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", span="53-53", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInfluenceInjectionsToOtherTypes()", file="DefaultParameterTests.cs"];
m20_16 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="DefaultParameterTests.cs"];
m20_18 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="DefaultParameterTests.cs"];
m20_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="DefaultParameterTests.cs"];
m20_0 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", span="11-11", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs"];
m20_1 [label="this.kernel = new StandardKernel()", span="13-13", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs"];
m20_2 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", span="11-11", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultParameterTests()", file="DefaultParameterTests.cs"];
m20_8 [label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="22-22", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m20_9 [label="this.kernel.Bind<Shield>().ToSelf()", span="24-24", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_10 [label="var shield = this.kernel.Get<Shield>()", span="26-26", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", color=green, community=0, file="DefaultParameterTests.cs"];
m20_11 [label="shield.Should().NotBeNull()", span="27-27", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m20_12 [label="shield.Color.Should().Be(ShieldColor.Red)", span="28-28", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m20_13 [label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="22-22", cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="DefaultParameterTests.cs"];
m20_17 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="DefaultParameterTests.cs"];
m20_45 [label="Ninject.Tests.Integration.DefaultParameterTests", span="", file="DefaultParameterTests.cs"];
m21_38 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="38-38", cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="DefaultScopeCallbackTests.cs"];
m21_62 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", span="117-117", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_64 [label="this.scopeDelegate = ctx => obj", span="120-120", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_63 [label="object obj = new object()", span="119-119", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_65 [label="var settings = new NinjectSettings\r\n                           {\r\n                               DefaultScopeCallback = this.scopeDelegate\r\n                           }", span="121-124", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_66 [label="this.kernel = new StandardKernel(settings)", span="125-125", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_67 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", span="117-117", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_84 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="32-32", cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="DefaultScopeCallbackTests.cs"];
m21_7 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="DefaultScopeCallbackTests.cs"];
m21_4 [label="var parent = this.Kernel.Get<IParent>()", span="15-15", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_5 [label="VerifyInjection(parent)", span="17-17", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_6 [label="Exit Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", span="9-9", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_11 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", span="32-32", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs"];
m21_12 [label="var firstInstance = this.kernel.Get<SelfBindedType>()", span="34-34", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs", color=green, community=0];
m21_13 [label="var secondInstance = this.kernel.Get<SelfBindedType>()", span="35-35", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs", color=green, community=0];
m21_14 [label="firstInstance.Should().NotBeSameAs(secondInstance, ''because types are transient'')", span="36-36", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs"];
m21_15 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", span="32-32", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.TestSelfBindedTypesAreTransient()", file="DefaultScopeCallbackTests.cs"];
m21_16 [label="Exit Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.EmptyEnumerableIsInjectedWhenNoBindingIsAvailable()", span="21-21", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.EmptyEnumerableIsInjectedWhenNoBindingIsAvailable()", file="DefaultScopeCallbackTests.cs"];
m21_17 [label="Entry object.ShouldNotBeNull()", span="63-63", cluster="object.ShouldNotBeNull()", file="DefaultScopeCallbackTests.cs"];
m21_45 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", span="85-85", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_46 [label="this.kernel.Bind<SelfBindedType>().ToSelf()", span="87-87", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_47 [label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", span="88-88", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_48 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", span="89-89", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_49 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", span="85-85", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ExplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_28 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="DefaultScopeCallbackTests.cs"];
m21_79 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", span="140-140", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_80 [label="this.kernel.Bind<IService>().To<ServiceImpl>().InTransientScope()", span="142-142", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_81 [label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", span="143-143", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_82 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", span="144-144", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_83 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", span="140-140", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithTransientInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_18 [label="Entry T.ShouldBe<T>(T)", span="48-48", cluster="T.ShouldBe<T>(T)", file="DefaultScopeCallbackTests.cs"];
m21_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="DefaultScopeCallbackTests.cs"];
m21_29 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="DefaultScopeCallbackTests.cs"];
m21_22 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", span="55-55", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_23 [label="this.kernel.Bind<IService>().To<ServiceImpl>().InSingletonScope()", span="57-57", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_24 [label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", span="58-58", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_25 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Singleton)", span="59-59", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_26 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", span="55-55", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_8 [label="this.kernel = new StandardKernel()", span="29-29", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_42 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", span="79-79", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_43 [label="TestSelfBindedTypesAreTransient()", span="81-81", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_44 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", span="79-79", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_74 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", span="132-132", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_75 [label="this.kernel.Bind<IService>().To<ServiceImpl>().InSingletonScope()", span="134-134", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_76 [label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", span="135-135", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_77 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Singleton)", span="136-136", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_78 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", span="132-132", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.CanOverrideDefaultScopeWithSingletonInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_68 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DefaultScopeCallbackTests.cs"];
m21_57 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", span="110-110", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", file="DefaultScopeCallbackTests.cs"];
m21_58 [label="this.kernel.Bind<SelfBindedType>().ToSelf()", span="112-112", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_59 [label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", span="113-113", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_60 [label="binding.ScopeCallback.Should().BeSameAs(this.scopeDelegate)", span="114-114", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_61 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", span="110-110", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ExplicitSelfBindedTypeShouldHaveObjectScope()", file="DefaultScopeCallbackTests.cs"];
m21_10 [label="Entry Ninject.Tests.Integration.EnumerableDependenciesTests.UnconstrainedDependenciesContext.VerifyInjection(Ninject.Tests.Integration.EnumerableDependenciesTests.Fakes.IParent)", span="7-7", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.UnconstrainedDependenciesContext.VerifyInjection(Ninject.Tests.Integration.EnumerableDependenciesTests.Fakes.IParent)", file="DefaultScopeCallbackTests.cs"];
m21_0 [label="Entry Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", span="9-9", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_1 [label="this.Kernel.Bind<IParent>().To<RequestsEnumerable>()", span="11-11", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_2 [label="this.Kernel.Bind<IChild>().To<ChildA>()", span="12-12", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_9 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", span="27-27", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_3 [label="this.Kernel.Bind<IChild>().To<ChildB>()", span="13-13", cluster="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies.ServiceIsInjectedWithEnumeratorOfAllAvailableDependencies()", file="DefaultScopeCallbackTests.cs"];
m21_70 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="DefaultScopeCallbackTests.cs"];
m21_85 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", span="148-148", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", file="DefaultScopeCallbackTests.cs"];
m21_86 [label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", span="150-150", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_87 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", span="148-148", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ScopeShouldBeThread()", file="DefaultScopeCallbackTests.cs"];
m21_32 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="DefaultScopeCallbackTests.cs"];
m21_71 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="DefaultScopeCallbackTests.cs"];
m21_72 [label=obj, span="120-120", cluster="lambda expression", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_73 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="DefaultScopeCallbackTests.cs"];
m21_54 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", span="104-104", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_55 [label="TestSelfBindedTypesAreTransient()", span="106-106", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_56 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", span="104-104", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_30 [label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="373-373", cluster="Ninject.KernelBase.GetBindings(System.Type)", file="DefaultScopeCallbackTests.cs"];
m21_50 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="DefaultScopeCallbackTests.cs"];
m21_91 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", span="162-162", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs"];
m21_92 [label="this.kernel.Bind<SelfBindedType>().ToSelf()", span="164-164", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_93 [label="var binding = this.kernel.GetBindings(typeof(SelfBindedType)).FirstOrDefault()", span="165-165", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_94 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", span="166-166", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs"];
m21_95 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", span="162-162", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ExplicitSelfBindedTypeShouldHaveThreadScope()", file="DefaultScopeCallbackTests.cs"];
m21_69 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18", cluster="Ninject.NinjectSettings.NinjectSettings()", file="DefaultScopeCallbackTests.cs"];
m21_33 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", span="64-64", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_34 [label="this.kernel.Bind<IService>().To<ServiceImpl>().InThreadScope()", span="66-66", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_35 [label="var binding = this.kernel.GetBindings(typeof(IService)).FirstOrDefault()", span="67-67", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_36 [label="binding.ScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Thread)", span="68-68", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_37 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", span="64-64", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.CanOverrideDefaultScopeWithThreadInBinding()", file="DefaultScopeCallbackTests.cs"];
m21_96 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", span="170-170", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_97 [label="var settings = new NinjectSettings\r\n                           {\r\n#if !WINRT\r\n                               DefaultScopeCallback = StandardScopeCallbacks.Thread\r\n#endif\r\n                           }", span="172-177", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_98 [label="this.kernel = new StandardKernel(settings)", span="178-178", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_99 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", span="170-170", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.InitializeKernel()", file="DefaultScopeCallbackTests.cs"];
m21_39 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", span="73-73", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_40 [label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(StandardScopeCallbacks.Transient)", span="75-75", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_41 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", span="73-73", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults.ScopeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_88 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", span="155-155", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_89 [label="TestSelfBindedTypesAreTransient()", span="157-157", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_90 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", span="155-155", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault.ImplicitSelfBindedTypeShouldBeTransient()", file="DefaultScopeCallbackTests.cs"];
m21_51 [label="Entry Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", span="98-98", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", file="DefaultScopeCallbackTests.cs"];
m21_52 [label="this.kernel.Settings.DefaultScopeCallback.Should().BeSameAs(this.scopeDelegate)", span="100-100", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", color=green, community=0, file="DefaultScopeCallbackTests.cs"];
m21_53 [label="Exit Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", span="98-98", cluster="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope.ScopeShouldBeObject()", file="DefaultScopeCallbackTests.cs"];
m21_19 [label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies", span="", file="DefaultScopeCallbackTests.cs"];
m21_100 [label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext", span="", file="DefaultScopeCallbackTests.cs"];
m21_101 [label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults", span="", file="DefaultScopeCallbackTests.cs"];
m21_102 [label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope", span="", file="DefaultScopeCallbackTests.cs"];
m21_103 [label=obj, span="", file="DefaultScopeCallbackTests.cs"];
m21_104 [label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault", span="", file="DefaultScopeCallbackTests.cs"];
m22_6 [label="Entry Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", span="26-26", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs"];
m22_9 [label="this.strategy.Deactivate(this.contextMock.Object, reference)", span="31-31", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", color=green, community=0, file="DisposableStrategyTests.cs"];
m22_8 [label="var reference = new InstanceReference { Instance = instance }", span="29-29", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs"];
m22_10 [label="instance.IsDisposed.Should().BeTrue()", span="32-32", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs"];
m22_7 [label="var instance = new NotifiesWhenDisposed()", span="28-28", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs"];
m22_11 [label="Exit Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", span="26-26", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDisposesInstanceIfItIsDisposable()", file="DisposableStrategyTests.cs"];
m22_22 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DisposableStrategyTests.cs"];
m22_16 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="DisposableStrategyTests.cs"];
m22_17 [label="Entry Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", span="36-36", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs"];
m22_20 [label="this.strategy.Deactivate(this.contextMock.Object, reference)", span="41-41", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", color=green, community=0, file="DisposableStrategyTests.cs"];
m22_19 [label="var reference = new InstanceReference { Instance = instance }", span="39-39", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs"];
m22_18 [label="var instance = new object()", span="38-38", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs"];
m22_21 [label="Exit Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", span="36-36", cluster="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled.StrategyDoesNotAttemptToDisposeInstanceIfItIsNotDisposable()", file="DisposableStrategyTests.cs"];
m22_0 [label="Entry Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", span="16-16", cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", file="DisposableStrategyTests.cs"];
m22_1 [label="this.contextMock = new Mock<IContext>()", span="18-18", cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", color=green, community=0, file="DisposableStrategyTests.cs"];
m22_2 [label="this.strategy = new DisposableStrategy()", span="19-19", cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", color=green, community=0, file="DisposableStrategyTests.cs"];
m22_3 [label="Exit Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", span="16-16", cluster="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext.DisposableStrategyContext()", file="DisposableStrategyTests.cs"];
m22_14 [label="Entry Unk.Deactivate", span="", cluster="Unk.Deactivate", file="DisposableStrategyTests.cs"];
m22_4 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="DisposableStrategyTests.cs"];
m22_13 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="DisposableStrategyTests.cs"];
m22_12 [label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5", cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="DisposableStrategyTests.cs"];
m22_5 [label="Entry Ninject.Activation.Strategies.DisposableStrategy.DisposableStrategy()", span="15-15", cluster="Ninject.Activation.Strategies.DisposableStrategy.DisposableStrategy()", file="DisposableStrategyTests.cs"];
m22_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="DisposableStrategyTests.cs"];
m22_23 [label="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext", span="", file="DisposableStrategyTests.cs"];
m22_24 [label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled", span="", file="DisposableStrategyTests.cs"];
m23_48 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", span="89-89", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_49 [label="method = typeof(Samurai).GetMethod(''SetName'')", span="91-91", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_50 [label="injector = injectorFactory.Create(method)", span="92-92", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_51 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", span="89-89", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.WhenMethodInjectorIsInvokedOnVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_53 [label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", span="79-79", cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.MethodInfo)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_34 [label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", span="50-50", cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.PropertyInfo)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_11 [label="Entry Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="26-26", cluster="Ninject.Injection.DynamicMethodInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_23 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", span="44-44", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_24 [label="var samurai = injector.Invoke(new[] { (IWeapon)null }) as Samurai", span="46-46", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_25 [label="samurai.Should().NotBeNull()", span="48-48", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_26 [label="samurai.Weapon.Should().BeNull()", span="49-49", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_27 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", span="44-44", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructorWithNullArgumentIfOneIsSpecified()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_35 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", span="65-65", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_36 [label="var samurai = new Samurai(null)", span="67-67", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_37 [label="var sword = new Sword()", span="68-68", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_38 [label="injector.Invoke(samurai, sword)", span="70-70", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_39 [label="samurai.Weapon.Should().BeSameAs(sword)", span="72-72", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_40 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", span="65-65", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValue()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_0 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", span="14-14", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_1 [label="injectorFactory = new DynamicMethodInjectorFactory()", span="16-16", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_2 [label="injectorFactory.Settings = new NinjectSettings()", span="17-17", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_3 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", span="14-14", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext.DynamicMethodInjectorFactoryContext()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_52 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_20 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="DynamicMethodInjectorFactoryTests.cs"];
m23_42 [label="Entry Ninject.Injection.PropertyInjector.Invoke(object, object)", span="15-15", cluster="Ninject.Injection.PropertyInjector.Invoke(object, object)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_59 [label="Entry Ninject.Injection.MethodInjector.Invoke(object, params object[])", span="15-15", cluster="Ninject.Injection.MethodInjector.Invoke(object, params object[])", file="DynamicMethodInjectorFactoryTests.cs"];
m23_28 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull", file="DynamicMethodInjectorFactoryTests.cs"];
m23_60 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="DynamicMethodInjectorFactoryTests.cs"];
m23_41 [label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23", cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_6 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", span="26-26", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_7 [label="constructor = typeof(Samurai).GetConstructor(new[] { typeof(IWeapon) })", span="28-28", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_8 [label="injector = injectorFactory.Create(constructor)", span="29-29", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_9 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", span="26-26", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.WhenConstructorInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_33 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="DynamicMethodInjectorFactoryTests.cs"];
m23_18 [label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4", cluster="Ninject.Tests.Fakes.Sword.Sword()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_54 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", span="96-96", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_55 [label="var samurai = new Samurai(new Sword())", span="98-98", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_56 [label="injector.Invoke(samurai, new[] { ''Bob'' })", span="99-99", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_57 [label="samurai.Name.Should().Be(''Bob'')", span="100-100", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_58 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", span="96-96", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_61 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", span="109-109", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_62 [label="method = typeof(Samurai).GetMethod(''Attack'')", span="111-111", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_63 [label="injector = injectorFactory.Create(method)", span="112-112", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_64 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", span="109-109", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.WhenMethodInjectorIsInvokedOnNonVoidMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_4 [label="Entry Ninject.Injection.DynamicMethodInjectorFactory.DynamicMethodInjectorFactory()", span="19-19", cluster="Ninject.Injection.DynamicMethodInjectorFactory.DynamicMethodInjectorFactory()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_21 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="DynamicMethodInjectorFactoryTests.cs"];
m23_43 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", span="76-76", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_44 [label="var samurai = new Samurai(new Sword())", span="78-78", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_45 [label="injector.Invoke(samurai, null)", span="79-79", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_46 [label="samurai.Weapon.Should().BeNull()", span="80-80", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_47 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", span="76-76", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.SetsPropertyValueToNullIfInvokedWithNullArgument()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_19 [label="Entry Ninject.Injection.ConstructorInjector.Invoke(params object[])", span="15-15", cluster="Ninject.Injection.ConstructorInjector.Invoke(params object[])", file="DynamicMethodInjectorFactoryTests.cs"];
m23_22 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="DynamicMethodInjectorFactoryTests.cs"];
m23_70 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="DynamicMethodInjectorFactoryTests.cs"];
m23_5 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18", cluster="Ninject.NinjectSettings.NinjectSettings()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_29 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", span="58-58", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_30 [label="property = typeof(Samurai).GetProperty(''Weapon'')", span="60-60", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_31 [label="injector = injectorFactory.Create(property)", span="61-61", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_32 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", span="58-58", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked.WhenPropertyInjectorIsInvoked()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_10 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="DynamicMethodInjectorFactoryTests.cs"];
m23_65 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", span="116-116", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_66 [label="var samurai = new Samurai(new Sword())", span="118-118", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_67 [label="injector.Invoke(samurai, new[] { ''evildoer'' })", span="119-119", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_68 [label="samurai.IsBattleHardened.Should().BeTrue()", span="120-120", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_69 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", span="116-116", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod.CallsMethod()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_12 [label="Entry Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", span="33-33", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_13 [label="var sword = new Sword()", span="35-35", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_14 [label="var samurai = injector.Invoke(new[] { sword }) as Samurai", span="37-37", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", color=red, community=0, file="DynamicMethodInjectorFactoryTests.cs"];
m23_16 [label="samurai.Weapon.Should().BeSameAs(sword)", span="40-40", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_15 [label="samurai.Should().NotBeNull()", span="39-39", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_17 [label="Exit Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", span="33-33", cluster="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked.CallsConstructor()", file="DynamicMethodInjectorFactoryTests.cs"];
m23_71 [label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext", span="", file="DynamicMethodInjectorFactoryTests.cs"];
m23_72 [label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked", span="", file="DynamicMethodInjectorFactoryTests.cs"];
m23_73 [label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked", span="", file="DynamicMethodInjectorFactoryTests.cs"];
m23_74 [label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod", span="", file="DynamicMethodInjectorFactoryTests.cs"];
m23_75 [label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod", span="", file="DynamicMethodInjectorFactoryTests.cs"];
m24_0 [label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="27-27", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs"];
m24_1 [label="return assembly.ExportedTypes.Any(IsLoadableModule);", span="29-29", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", color=red, community=0, file="ExtensionsForAssembly.cs"];
m24_2 [label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", span="27-27", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.HasNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs"];
m24_4 [label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="37-37", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs"];
m24_5 [label="return assembly.IsDynamic ?\r\n                Enumerable.Empty<INinjectModule>() :\r\n                assembly.ExportedTypes.Where(IsLoadableModule)\r\n                                      .Select(type => Activator.CreateInstance(type) as INinjectModule);", span="39-42", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs"];
m24_6 [label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", span="37-37", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.GetNinjectModules(System.Reflection.Assembly)", file="ExtensionsForAssembly.cs"];
m24_3 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ExtensionsForAssembly.cs"];
m24_18 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="ExtensionsForAssembly.cs"];
m24_14 [label="Entry Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="45-45", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs"];
m24_15 [label="return typeof(INinjectModule).IsAssignableFrom(type)\r\n                && !type.IsAbstract\r\n                && !type.IsInterface\r\n                && type.GetConstructor(Type.EmptyTypes) != null;", span="47-50", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs"];
m24_16 [label="Exit Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", span="45-45", cluster="Ninject.Infrastructure.Language.ExtensionsForAssembly.IsLoadableModule(System.Type)", file="ExtensionsForAssembly.cs"];
m24_17 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ExtensionsForAssembly.cs"];
m24_13 [label="Entry Unk.CreateInstance", span="", cluster="Unk.CreateInstance", file="ExtensionsForAssembly.cs"];
m24_10 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="ExtensionsForAssembly.cs"];
m24_11 [label="Activator.CreateInstance(type) as INinjectModule", span="42-42", cluster="lambda expression", file="ExtensionsForAssembly.cs"];
m24_12 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="ExtensionsForAssembly.cs"];
m24_8 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ExtensionsForAssembly.cs"];
m24_7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ExtensionsForAssembly.cs"];
m24_9 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ExtensionsForAssembly.cs"];
m25_16 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ExternalInjectionTests.cs"];
m25_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="ExternalInjectionTests.cs"];
m25_8 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="26-26", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs"];
m25_9 [label="this.kernel.Bind<IWeapon>().To<Sword>()", span="28-28", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", color=green, community=0, file="ExternalInjectionTests.cs"];
m25_10 [label="var warrior = new ExternalWarrior()", span="30-30", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs"];
m25_11 [label="this.kernel.Inject(warrior)", span="31-31", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", color=green, community=0, file="ExternalInjectionTests.cs"];
m25_12 [label="warrior.Weapon.Should().NotBeNull()", span="33-33", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs"];
m25_13 [label="warrior.Weapon.Should().BeOfType<Sword>()", span="34-34", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs"];
m25_14 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="26-26", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="ExternalInjectionTests.cs"];
m25_29 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ExternalInjectionTests.cs"];
m25_4 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs"];
m25_5 [label="this.kernel.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs"];
m25_6 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.Dispose()", file="ExternalInjectionTests.cs"];
m25_18 [label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="273-273", cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="ExternalInjectionTests.cs"];
m25_15 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ExternalInjectionTests.cs"];
m25_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ExternalInjectionTests.cs"];
m25_0 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="12-12", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs"];
m25_1 [label="this.kernel = new StandardKernel()", span="14-14", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs"];
m25_2 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="12-12", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="ExternalInjectionTests.cs"];
m25_17 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="49-49", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", file="ExternalInjectionTests.cs"];
m25_20 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ExternalInjectionTests.cs"];
m25_22 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="38-38", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs"];
m25_23 [label="var instance = new NotifiesWhenDisposed()", span="40-40", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs"];
m25_24 [label="this.kernel.Inject(instance)", span="42-42", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", color=green, community=0, file="ExternalInjectionTests.cs"];
m25_26 [label="instance.IsDisposed.Should().BeFalse()", span="45-45", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs"];
m25_25 [label="this.kernel.Dispose()", span="43-43", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", color=green, community=0, file="ExternalInjectionTests.cs"];
m25_27 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="38-38", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="ExternalInjectionTests.cs"];
m25_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ExternalInjectionTests.cs"];
m25_28 [label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5", cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="ExternalInjectionTests.cs"];
m25_19 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ExternalInjectionTests.cs"];
m25_30 [label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span="", file="ExternalInjectionTests.cs"];
m25_31 [label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span="", file="ExternalInjectionTests.cs"];
m26_0 [label="Entry Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="28-28", cluster="Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="IAssemblyNameRetriever.cs"];
m26_1 [label="Exit Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="28-28", cluster="Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="IAssemblyNameRetriever.cs"];
m27_4 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="IKernel.cs"];
m27_5 [label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="IKernel.cs"];
m27_2 [label="Entry Ninject.IKernel.HasModule(string)", span="46-46", cluster="Ninject.IKernel.HasModule(string)", file="IKernel.cs"];
m27_3 [label="Exit Ninject.IKernel.HasModule(string)", span="46-46", cluster="Ninject.IKernel.HasModule(string)", file="IKernel.cs"];
m27_12 [label="Entry Ninject.IKernel.GetBindings(System.Type)", span="79-79", cluster="Ninject.IKernel.GetBindings(System.Type)", file="IKernel.cs"];
m27_13 [label="Exit Ninject.IKernel.GetBindings(System.Type)", span="79-79", cluster="Ninject.IKernel.GetBindings(System.Type)", file="IKernel.cs"];
m27_10 [label="Entry Ninject.IKernel.Unload(string)", span="72-72", cluster="Ninject.IKernel.Unload(string)", file="IKernel.cs"];
m27_11 [label="Exit Ninject.IKernel.Unload(string)", span="72-72", cluster="Ninject.IKernel.Unload(string)", file="IKernel.cs"];
m27_0 [label="Entry Ninject.IKernel.GetModules()", span="39-39", cluster="Ninject.IKernel.GetModules()", file="IKernel.cs"];
m27_1 [label="Exit Ninject.IKernel.GetModules()", span="39-39", cluster="Ninject.IKernel.GetModules()", file="IKernel.cs"];
m27_14 [label="Entry Ninject.IKernel.BeginBlock()", span="85-85", cluster="Ninject.IKernel.BeginBlock()", file="IKernel.cs"];
m27_15 [label="Exit Ninject.IKernel.BeginBlock()", span="85-85", cluster="Ninject.IKernel.BeginBlock()", file="IKernel.cs"];
m27_6 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="IKernel.cs"];
m27_7 [label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="IKernel.cs"];
m27_8 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="IKernel.cs"];
m27_9 [label="Exit Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="IKernel.cs"];
m28_0 [label="Entry Ninject.INinjectSettings.Get<T>(string, T)", span="93-93", cluster="Ninject.INinjectSettings.Get<T>(string, T)", file="INinjectSettings.cs"];
m28_1 [label="Exit Ninject.INinjectSettings.Get<T>(string, T)", span="93-93", cluster="Ninject.INinjectSettings.Get<T>(string, T)", file="INinjectSettings.cs"];
m28_2 [label="Entry Ninject.INinjectSettings.Set(string, object)", span="100-100", cluster="Ninject.INinjectSettings.Set(string, object)", file="INinjectSettings.cs"];
m28_3 [label="Exit Ninject.INinjectSettings.Set(string, object)", span="100-100", cluster="Ninject.INinjectSettings.Set(string, object)", file="INinjectSettings.cs"];
m29_0 [label="Entry Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="17-17", cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="InitializableStrategyTests.cs"];
m29_1 [label="Exit Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", span="17-17", cluster="Ninject.Planning.Targets.PropertyTarget.PropertyTarget(System.Reflection.PropertyInfo)", file="InitializableStrategyTests.cs"];
m31_15 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ManualReleaseTests.cs"];
m31_8 [label="Entry Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", span="26-26", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs"];
m31_9 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="28-28", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_10 [label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", span="30-30", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_11 [label="this.kernel.Release(instance)", span="31-31", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_12 [label="instance.IsDisposed.Should().BeTrue()", span="33-33", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs"];
m31_13 [label="Exit Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", span="26-26", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsDeactivated()", file="ManualReleaseTests.cs"];
m31_32 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="ManualReleaseTests.cs"];
m31_16 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="ManualReleaseTests.cs"];
m31_20 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ManualReleaseTests.cs"];
m31_14 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ManualReleaseTests.cs"];
m31_21 [label="Entry Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="37-37", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs"];
m31_22 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="39-39", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_23 [label="var instance1 = this.kernel.Get<NotifiesWhenDisposed>()", span="41-41", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_24 [label="var instance2 = this.kernel.Get<NotifiesWhenDisposed>()", span="42-42", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_25 [label="instance1.Should().BeSameAs(instance2)", span="43-43", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs"];
m31_26 [label="this.kernel.Release(instance1)", span="45-45", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_28 [label="instance3.Should().NotBeSameAs(instance1)", span="48-48", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs"];
m31_29 [label="instance3.Should().NotBeSameAs(instance2)", span="49-49", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs"];
m31_27 [label="var instance3 = this.kernel.Get<NotifiesWhenDisposed>()", span="47-47", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", color=green, community=0, file="ManualReleaseTests.cs"];
m31_30 [label="Exit Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", span="37-37", cluster="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled.InstanceIsRemovedFromCache()", file="ManualReleaseTests.cs"];
m31_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ManualReleaseTests.cs"];
m31_17 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ManualReleaseTests.cs"];
m31_18 [label="Entry Ninject.KernelBase.Release(object)", span="298-298", cluster="Ninject.KernelBase.Release(object)", file="ManualReleaseTests.cs"];
m31_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ManualReleaseTests.cs"];
m31_31 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ManualReleaseTests.cs"];
m31_4 [label="Entry Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs"];
m31_5 [label="this.kernel.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs"];
m31_6 [label="Exit Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.Dispose()", file="ManualReleaseTests.cs"];
m31_0 [label="Entry Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", span="12-12", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs"];
m31_1 [label="this.kernel = new StandardKernel()", span="14-14", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs"];
m31_2 [label="Exit Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", span="12-12", cluster="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext.ManualReleaseContext()", file="ManualReleaseTests.cs"];
m31_19 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ManualReleaseTests.cs"];
m31_33 [label="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext", span="", file="ManualReleaseTests.cs"];
m31_34 [label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled", span="", file="ManualReleaseTests.cs"];
m32_20 [label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", span="50-50", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", file="MethodInjectionDirectiveBaseTests.cs"];
m32_21 [label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", span="50-50", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.Dummy.MethodA(int, string, Ninject.Tests.Fakes.IWeapon)", file="MethodInjectionDirectiveBaseTests.cs"];
m32_16 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="MethodInjectionDirectiveBaseTests.cs"];
m32_14 [label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="45-45", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionDirectiveBaseTests.cs"];
m32_19 [label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="45-45", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionDirectiveBaseTests.cs"];
m32_0 [label="Entry Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", span="21-21", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_1 [label="var method = typeof(Dummy).GetMethod(''MethodA'')", span="24-24", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_2 [label="MethodInjector injector = delegate { }", span="28-28", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_3 [label="this.directive = new FakeMethodInjectionDirective(method, injector)", span="30-30", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", color=green, community=0, file="MethodInjectionDirectiveBaseTests.cs"];
m32_4 [label="ITarget[] targets = this.directive.Targets", span="31-31", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", color=green, community=0, file="MethodInjectionDirectiveBaseTests.cs"];
m32_5 [label="targets.Length.Should().Be(3)", span="33-33", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_6 [label="targets[0].Name.Should().Be(''foo'')", span="34-34", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_7 [label="targets[0].Type.Should().Be(typeof(int))", span="35-35", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_8 [label="targets[1].Name.Should().Be(''bar'')", span="36-36", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_9 [label="targets[1].Type.Should().Be(typeof(string))", span="37-37", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_10 [label="targets[2].Name.Should().Be(''baz'')", span="38-38", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_11 [label="targets[2].Type.Should().Be(typeof(IWeapon))", span="39-39", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_12 [label="Exit Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", span="21-21", cluster="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated.CreatesTargetsForMethodParameters()", file="MethodInjectionDirectiveBaseTests.cs"];
m32_17 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="MethodInjectionDirectiveBaseTests.cs"];
m32_18 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="MethodInjectionDirectiveBaseTests.cs"];
m32_13 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="MethodInjectionDirectiveBaseTests.cs"];
m32_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="MethodInjectionDirectiveBaseTests.cs"];
m32_22 [label="object[]", span="", file="MethodInjectionDirectiveBaseTests.cs"];
m32_23 [label=object, span="", file="MethodInjectionDirectiveBaseTests.cs"];
m32_24 [label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated", span="", file="MethodInjectionDirectiveBaseTests.cs"];
m33_16 [label="Entry Mock<IPlan>.cstr", span="", cluster="Mock<IPlan>.cstr", file="MethodInjectionStrategyTests.cs"];
m33_3 [label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", span="17-17", cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", file="MethodInjectionStrategyTests.cs"];
m33_15 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="MethodInjectionStrategyTests.cs"];
m33_4 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="MethodInjectionStrategyTests.cs"];
m33_5 [label="this.reference = new InstanceReference { Instance = this.instance }", span="44-44", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_6 [label="this.contextMock = new Mock<IContext>()", span="46-46", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_7 [label="this.planMock = new Mock<IPlan>()", span="47-47", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_8 [label="this.injector1 = (x, args) => { this.injector1WasCalled = true; }", span="48-48", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_9 [label="this.injector2 = (x, args) => { this.injector2WasCalled = true; }", span="49-49", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_10 [label="this.directives = new[]\r\n            {\r\n                new FakeMethodInjectionDirective(this.method1, this.injector1),\r\n                new FakeMethodInjectionDirective(this.method2, this.injector2)\r\n            }", span="51-55", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_11 [label="this.contextMock.SetupGet(x => x.Plan).Returns(this.planMock.Object)", span="57-57", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_12 [label="this.planMock.Setup(x => x.GetAll<MethodInjectionDirective>()).Returns(this.directives)", span="59-59", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_13 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="MethodInjectionStrategyTests.cs"];
m33_66 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="MethodInjectionStrategyTests.cs"];
m33_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="MethodInjectionStrategyTests.cs"];
m33_50 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="MethodInjectionStrategyTests.cs"];
m33_61 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_62 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="87-87", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_63 [label="this.injector1WasCalled.Should().BeTrue()", span="88-88", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_64 [label="this.injector2WasCalled.Should().BeTrue()", span="89-89", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_65 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_43 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_44 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="73-73", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_45 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_75 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="MethodInjectionStrategyTests.cs"];
m33_17 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionStrategyTests.cs"];
m33_68 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="MethodInjectionStrategyTests.cs"];
m33_38 [label="Entry Unk.Activate", span="", cluster="Unk.Activate", file="MethodInjectionStrategyTests.cs"];
m33_20 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="MethodInjectionStrategyTests.cs"];
m33_18 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="MethodInjectionStrategyTests.cs"];
m33_14 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="MethodInjectionStrategyTests.cs"];
m33_80 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_27 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_30 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_22 [label="this.injector1WasCalled = true", span="48-48", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_21 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_23 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_25 [label="this.injector2WasCalled = true", span="49-49", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_24 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_26 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_28 [label="x.Plan", span="57-57", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_29 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_31 [label="x.GetAll<MethodInjectionDirective>()", span="59-59", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_32 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_40 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_41 [label="x.GetAll<MethodInjectionDirective>()", span="67-67", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_42 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_51 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_52 [label="d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object)))", span="81-81", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_53 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_54 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_55 [label="m.Verify(x => x.ResolveWithin(this.contextMock.Object))", span="81-81", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_56 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_57 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_58 [label="x.ResolveWithin(this.contextMock.Object)", span="81-81", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_59 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_76 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_77 [label="new Mock<ITarget>()", span="102-102", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_78 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_81 [label="m.Object", span="103-103", cluster="lambda expression", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_82 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="MethodInjectionStrategyTests.cs"];
m33_74 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MethodInjectionStrategyTests.cs"];
m33_79 [label="Entry Mock<ITarget>.cstr", span="", cluster="Mock<ITarget>.cstr", file="MethodInjectionStrategyTests.cs"];
m33_34 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="MethodInjectionStrategyTests.cs"];
m33_35 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="65-65", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_36 [label="this.planMock.Verify(x => x.GetAll<MethodInjectionDirective>())", span="67-67", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_37 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="MethodInjectionStrategyTests.cs"];
m33_67 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="MethodInjectionStrategyTests.cs"];
m33_46 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_47 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="79-79", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_48 [label="this.directives.Map(d => d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(this.contextMock.Object))))", span="81-81", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_49 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="MethodInjectionStrategyTests.cs"];
m33_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="MethodInjectionStrategyTests.cs"];
m33_73 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="MethodInjectionStrategyTests.cs"];
m33_60 [label="Entry Unk.ResolveWithin", span="", cluster="Unk.ResolveWithin", file="MethodInjectionStrategyTests.cs"];
m33_0 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs"];
m33_1 [label="this.strategy = new MethodInjectionStrategy()", span="24-24", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_2 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="MethodInjectionStrategyTests.cs"];
m33_69 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs"];
m33_70 [label="this.TargetMocks = method.GetParameters().Select(p => new Mock<ITarget>()).ToArray()", span="102-102", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_71 [label="return this.TargetMocks.Select(m => m.Object).ToArray();", span="103-103", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", color=green, community=0, file="MethodInjectionStrategyTests.cs"];
m33_72 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="MethodInjectionStrategyTests.cs"];
m33_87 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span="", file="MethodInjectionStrategyTests.cs"];
m33_88 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span="", file="MethodInjectionStrategyTests.cs"];
m33_89 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", span="", file="MethodInjectionStrategyTests.cs"];
m34_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ModuleLoader.cs"];
m34_45 [label="Entry System.IO.Path.GetFullPath(string)", span="0-0", cluster="System.IO.Path.GetFullPath(string)", file="ModuleLoader.cs"];
m34_23 [label="Entry Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="63-63", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs"];
m34_33 [label="return NormalizePaths(Path.GetDirectoryName(pattern))\r\n                    .SelectMany(path => Directory.GetFiles(path, Path.GetFileName(pattern)));", span="65-66", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs"];
m34_34 [label="Exit Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="63-63", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs"];
m34_41 [label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string)", file="ModuleLoader.cs"];
m34_40 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="ModuleLoader.cs"];
m34_0 [label="Entry Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", span="27-27", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs"];
m34_1 [label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="29-29", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs"];
m34_2 [label="this.Kernel = kernel", span="31-31", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs"];
m34_3 [label="Exit Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", span="27-27", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel)", file="ModuleLoader.cs"];
m34_35 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="ModuleLoader.cs"];
m34_36 [label="Entry Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="69-69", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs"];
m34_42 [label="return Path.IsPathRooted(path)\r\n                        ? new[] { Path.GetFullPath(path) }\r\n                        : GetBaseDirectories().Select(baseDirectory => Path.Combine(baseDirectory, path));", span="71-73", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs"];
m34_43 [label="Exit Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="69-69", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="ModuleLoader.cs"];
m34_27 [label="Entry System.IO.Path.GetExtension(string)", span="0-0", cluster="System.IO.Path.GetExtension(string)", file="ModuleLoader.cs"];
m34_17 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ModuleLoader.cs"];
m34_4 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="22-22", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ModuleLoader.cs"];
m34_46 [label="Entry Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="76-76", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs"];
m34_52 [label="var baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="78-78", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs"];
m34_53 [label="var searchPath = AppDomain.CurrentDomain.RelativeSearchPath", span="79-79", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs"];
m34_54 [label="return string.IsNullOrEmpty(searchPath)\r\n                ? new[] { baseDirectory }\r\n                : searchPath.Split(new[] { Path.PathSeparator }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(path => Path.Combine(baseDirectory, path));", span="81-84", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs"];
m34_55 [label="Exit Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="76-76", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="ModuleLoader.cs"];
m34_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ModuleLoader.cs"];
m34_14 [label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="67-67", cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="ModuleLoader.cs"];
m34_5 [label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_6 [label="var plugins = this.Kernel.Components.GetAll<IModuleLoaderPlugin>()", span="45-45", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_7 [label="var fileGroups = patterns\r\n                .SelectMany(pattern => GetFilesMatchingPattern(pattern))\r\n                .GroupBy(filename => Path.GetExtension(filename).ToLowerInvariant())", span="47-49", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_10 [label="var plugin = plugins.Where(p => p.SupportedExtensions.Contains(extension)).FirstOrDefault()", span="54-54", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_8 [label=fileGroups, span="51-51", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_9 [label="var extension = fileGroup.Key", span="53-53", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_12 [label="plugin.LoadModules(fileGroup)", span="58-58", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_11 [label="plugin != null", span="56-56", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_13 [label="Exit Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs"];
m34_56 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ModuleLoader.cs"];
m34_57 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="ModuleLoader.cs"];
m34_28 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="ModuleLoader.cs"];
m34_58 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="ModuleLoader.cs"];
m34_20 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoader.cs"];
m34_24 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoader.cs"];
m34_30 [label="p.SupportedExtensions.Contains(extension)", span="54-54", cluster="lambda expression", file="ModuleLoader.cs"];
m34_29 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ModuleLoader.cs"];
m34_21 [label="GetFilesMatchingPattern(pattern)", span="48-48", cluster="lambda expression", file="ModuleLoader.cs"];
m34_22 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoader.cs"];
m34_25 [label="Path.GetExtension(filename).ToLowerInvariant()", span="49-49", cluster="lambda expression", file="ModuleLoader.cs"];
m34_26 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoader.cs"];
m34_31 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ModuleLoader.cs"];
m34_38 [label="Directory.GetFiles(path, Path.GetFileName(pattern))", span="66-66", cluster="lambda expression", file="ModuleLoader.cs"];
m34_37 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ModuleLoader.cs"];
m34_39 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ModuleLoader.cs"];
m34_49 [label="Path.Combine(baseDirectory, path)", span="73-73", cluster="lambda expression", file="ModuleLoader.cs"];
m34_48 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ModuleLoader.cs"];
m34_50 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ModuleLoader.cs"];
m34_59 [label="Path.Combine(baseDirectory, path)", span="84-84", cluster="lambda expression", file="ModuleLoader.cs"];
m34_60 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="ModuleLoader.cs"];
m34_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ModuleLoader.cs"];
m34_18 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="ModuleLoader.cs"];
m34_44 [label="Entry System.IO.Path.IsPathRooted(string)", span="0-0", cluster="System.IO.Path.IsPathRooted(string)", file="ModuleLoader.cs"];
m34_19 [label="Entry Unk.LoadModules", span="", cluster="Unk.LoadModules", file="ModuleLoader.cs"];
m34_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ModuleLoader.cs"];
m34_51 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="ModuleLoader.cs"];
m34_61 [label="Ninject.Modules.ModuleLoader", span="", file="ModuleLoader.cs"];
m34_62 [label=extension, span="", file="ModuleLoader.cs"];
m34_63 [label=string, span="", file="ModuleLoader.cs"];
m34_64 [label=string, span="", file="ModuleLoader.cs"];
m34_65 [label=baseDirectory, span="", file="ModuleLoader.cs"];
m35_32 [label="Entry Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", span="41-41", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs"];
m35_33 [label="moduleLoader.LoadModules(new[] { ''TestModules/*'' })", span="43-43", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_34 [label="var fooFiles = new[] { Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @''TestModules\test.foo'') }", span="45-45", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs"];
m35_35 [label="var barFiles = new[] { Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @''TestModules\test.bar'') }", span="46-46", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs"];
m35_36 [label="fooPluginMock.Verify(x => x.LoadModules(It.Is<IEnumerable<string>>(e => e.SequenceEqual(fooFiles))))", span="48-48", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_37 [label="barPluginMock.Verify(x => x.LoadModules(It.Is<IEnumerable<string>>(e => e.SequenceEqual(barFiles))))", span="49-49", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_38 [label="Exit Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", span="41-41", cluster="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled.PassesMatchingFilesToAppropriatePlugin()", file="ModuleLoaderTests.cs"];
m35_16 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="ModuleLoaderTests.cs"];
m35_17 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ModuleLoaderTests.cs"];
m35_25 [label="Entry Unk.>", span="", cluster="Unk.>", file="ModuleLoaderTests.cs"];
m35_14 [label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="46-46", cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", file="ModuleLoaderTests.cs"];
m35_15 [label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="39-39", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", file="ModuleLoaderTests.cs"];
m35_13 [label="Entry Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", span="39-39", cluster="Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", file="ModuleLoaderTests.cs"];
m35_49 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="ModuleLoaderTests.cs"];
m35_39 [label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="43-43", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoaderTests.cs"];
m35_18 [label="Ninject.Planning.Strategies.ConstructorReflectionStrategy", span="", cluster="Unk.Setup", file="ModuleLoaderTests.cs"];
m35_53 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_19 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_22 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_26 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_29 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_20 [label="x.Components", span="31-31", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_21 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_23 [label="x.GetAll<IModuleLoaderPlugin>()", span="32-32", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_24 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_27 [label="x.SupportedExtensions", span="33-33", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_28 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_30 [label="x.SupportedExtensions", span="34-34", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_31 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_43 [label="x.LoadModules(It.Is<IEnumerable<string>>(e => e.SequenceEqual(fooFiles)))", span="48-48", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_47 [label="e.SequenceEqual(fooFiles)", span="48-48", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_51 [label="x.LoadModules(It.Is<IEnumerable<string>>(e => e.SequenceEqual(barFiles)))", span="49-49", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_54 [label="e.SequenceEqual(barFiles)", span="49-49", cluster="lambda expression", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_42 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_50 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_44 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_46 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_48 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_52 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_55 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ModuleLoaderTests.cs"];
m35_45 [label="Entry Unk.LoadModules", span="", cluster="Unk.LoadModules", file="ModuleLoaderTests.cs"];
m35_4 [label="barPluginMock = new Mock<IModuleLoaderPlugin>()", span="26-26", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_5 [label="moduleLoader = new ModuleLoader(kernelMock.Object)", span="27-27", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_9 [label="fooPluginMock.SetupGet(x => x.SupportedExtensions).Returns(new[] { ''.foo'' })", span="33-33", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_10 [label="barPluginMock.SetupGet(x => x.SupportedExtensions).Returns(new[] { ''.bar'' })", span="34-34", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_6 [label="var plugins = new[] { fooPluginMock.Object, barPluginMock.Object }", span="29-29", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_8 [label="componentsMock.Setup(x => x.GetAll<IModuleLoaderPlugin>()).Returns(plugins)", span="32-32", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_11 [label="Exit Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", span="21-21", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs"];
m35_7 [label="kernelMock.SetupGet(x => x.Components).Returns(componentsMock.Object)", span="31-31", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_12 [label="Entry Mock<IKernel>.cstr", span="", cluster="Mock<IKernel>.cstr", file="ModuleLoaderTests.cs"];
m35_40 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="ModuleLoaderTests.cs"];
m35_0 [label="Entry Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", span="21-21", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs"];
m35_1 [label="kernelMock = new Mock<IKernel>()", span="23-23", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_2 [label="componentsMock = new Mock<IComponentContainer>()", span="24-24", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", color=red, community=0, file="ModuleLoaderTests.cs"];
m35_3 [label="fooPluginMock = new Mock<IModuleLoaderPlugin>()", span="25-25", cluster="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext.ModuleLoaderContext()", file="ModuleLoaderTests.cs", color=red, community=0];
m35_56 [label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext", span="", file="ModuleLoaderTests.cs"];
m35_57 [label="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled", span="", file="ModuleLoaderTests.cs"];
m35_58 [label=fooFiles, span="", file="ModuleLoaderTests.cs"];
m35_59 [label=barFiles, span="", file="ModuleLoaderTests.cs"];
m36_10 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="52-52", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="ModuleLoadExtensions.cs"];
m36_15 [label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="57-57", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs"];
m36_16 [label="kernel.Load(assemblies)", span="59-59", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs"];
m36_17 [label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", span="57-57", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params System.Reflection.Assembly[])", file="ModuleLoadExtensions.cs"];
m36_0 [label="Entry Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", span="24-24", cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs"];
m36_1 [label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="27-27", cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs"];
m36_2 [label="kernel.Load(new TModule())", span="28-28", cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs"];
m36_3 [label="Exit Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", span="24-24", cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernel)", file="ModuleLoadExtensions.cs"];
m36_5 [label="Entry TModule.cstr", span="", cluster="TModule.cstr", file="ModuleLoadExtensions.cs"];
m36_11 [label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", span="47-47", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs"];
m36_12 [label="kernel.Load(filePatterns)", span="49-49", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs"];
m36_13 [label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", span="47-47", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params string[])", file="ModuleLoadExtensions.cs"];
m36_7 [label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", span="36-36", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs"];
m36_8 [label="kernel.Load(modules)", span="38-38", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs"];
m36_9 [label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", span="36-36", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernel, params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs"];
m36_6 [label="Entry Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", span="36-36", cluster="Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", file="ModuleLoadExtensions.cs"];
m36_14 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", span="59-59", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoadExtensions.cs"];
m36_4 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="22-22", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ModuleLoadExtensions.cs"];
m36_18 [label="Entry Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="65-65", cluster="Ninject.IKernel.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="ModuleLoadExtensions.cs"];
m37_18 [label="Entry Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", span="31-31", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", file="NamedAttributeTests.cs"];
m37_19 [label="this.metadataMock.SetupGet(x => x.Name).Returns(''bar'')", span="33-33", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_20 [label="this.attribute.Matches(this.metadataMock.Object).Should().BeFalse()", span="34-34", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_21 [label="Exit Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", span="31-31", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsFalseIfTheNameDoesNotMatch()", file="NamedAttributeTests.cs"];
m37_0 [label="Entry Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", span="14-14", cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", file="NamedAttributeTests.cs"];
m37_1 [label="this.attribute = new NamedAttribute(''foo'')", span="16-16", cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_2 [label="this.metadataMock = new Mock<IBindingMetadata>()", span="17-17", cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_3 [label="Exit Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", span="14-14", cluster="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext.NamedAttributeContext()", file="NamedAttributeTests.cs"];
m37_12 [label="Entry Unk.Matches", span="", cluster="Unk.Matches", file="NamedAttributeTests.cs"];
m37_5 [label="Entry Mock<IBindingMetadata>.cstr", span="", cluster="Mock<IBindingMetadata>.cstr", file="NamedAttributeTests.cs"];
m37_22 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="NamedAttributeTests.cs"];
m37_14 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="NamedAttributeTests.cs"];
m37_10 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="NamedAttributeTests.cs"];
m37_6 [label="Entry Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", span="24-24", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", file="NamedAttributeTests.cs"];
m37_7 [label="this.metadataMock.SetupGet(x => x.Name).Returns(''foo'')", span="26-26", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_8 [label="this.attribute.Matches(this.metadataMock.Object).Should().BeTrue()", span="27-27", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", color=green, community=0, file="NamedAttributeTests.cs"];
m37_9 [label="Exit Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", span="24-24", cluster="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled.ReturnsTrueIfTheNameMatches()", file="NamedAttributeTests.cs"];
m37_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="NamedAttributeTests.cs"];
m37_23 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="NamedAttributeTests.cs"];
m37_15 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="NamedAttributeTests.cs"];
m37_16 [label="x.Name", span="26-26", cluster="lambda expression", color=green, community=0, file="NamedAttributeTests.cs"];
m37_17 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="NamedAttributeTests.cs"];
m37_24 [label="x.Name", span="33-33", cluster="lambda expression", color=green, community=0, file="NamedAttributeTests.cs"];
m37_25 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="NamedAttributeTests.cs"];
m37_4 [label="Entry Ninject.NamedAttribute.NamedAttribute(string)", span="23-23", cluster="Ninject.NamedAttribute.NamedAttribute(string)", file="NamedAttributeTests.cs"];
m37_13 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="NamedAttributeTests.cs"];
m37_26 [label="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext", span="", file="NamedAttributeTests.cs"];
m37_27 [label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled", span="", file="NamedAttributeTests.cs"];
m38_8 [label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="19-19", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs"];
m38_9 [label="this.Warrior = warrior", span="21-21", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs"];
m38_10 [label="this.Weapon = weapon", span="22-22", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs"];
m38_11 [label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="19-19", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs"];
m38_0 [label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", span="4-4", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", file="NinjaBarracks.cs"];
m38_1 [label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", span="4-4", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks()", file="NinjaBarracks.cs"];
m38_2 [label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", span="8-8", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", file="NinjaBarracks.cs"];
m38_3 [label="this.Warrior = warrior", span="10-10", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="NinjaBarracks.cs"];
m38_4 [label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", span="8-8", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWarrior)", file="NinjaBarracks.cs"];
m38_5 [label="Entry Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", span="13-13", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs"];
m38_6 [label="this.Weapon = weapon", span="15-15", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="NinjaBarracks.cs"];
m38_7 [label="Exit Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", span="13-13", cluster="Ninject.Tests.Fakes.NinjaBarracks.NinjaBarracks(Ninject.Tests.Fakes.IWeapon)", file="NinjaBarracks.cs"];
m38_12 [label="Ninject.Tests.Fakes.NinjaBarracks", span="", file="NinjaBarracks.cs"];
m39_0 [label="Entry Ninject.NinjectSettings.Get<T>(string, T)", span="139-139", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs"];
m39_1 [label="return this.values.TryGetValue(key, out object value) ? (T)value : defaultValue;", span="141-141", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs"];
m39_2 [label="Exit Ninject.NinjectSettings.Get<T>(string, T)", span="139-139", cluster="Ninject.NinjectSettings.Get<T>(string, T)", file="NinjectSettings.cs"];
m39_3 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="NinjectSettings.cs"];
m39_4 [label="Entry Ninject.NinjectSettings.Set(string, object)", span="149-149", cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs"];
m39_5 [label="this.values[key] = value", span="151-151", cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs"];
m39_6 [label="Exit Ninject.NinjectSettings.Set(string, object)", span="149-149", cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs"];
m39_7 [label="Ninject.NinjectSettings", span="", file="NinjectSettings.cs"];
m40_10 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="PropertyInjectionDirectiveTests.cs"];
m40_0 [label="Entry Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="18-18", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs"];
m40_1 [label="var method = typeof(Dummy).GetProperty(''Foo'')", span="21-21", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs"];
m40_2 [label="PropertyInjector injector = delegate { }", span="25-25", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs"];
m40_3 [label="this.directive = new PropertyInjectionDirective(method, injector)", span="27-27", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs"];
m40_4 [label="this.directive.Target.Name.Should().Be(''Foo'')", span="29-29", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs"];
m40_5 [label="this.directive.Target.Type.Should().Be(typeof(int))", span="30-30", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", color=green, community=0, file="PropertyInjectionDirectiveTests.cs"];
m40_6 [label="Exit Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="18-18", cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionDirectiveTests.cs"];
m40_7 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="PropertyInjectionDirectiveTests.cs"];
m40_11 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="PropertyInjectionDirectiveTests.cs"];
m40_12 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="PropertyInjectionDirectiveTests.cs"];
m40_9 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="PropertyInjectionDirectiveTests.cs"];
m40_8 [label="Entry Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="24-24", cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionDirectiveTests.cs"];
m40_13 [label=object, span="", file="PropertyInjectionDirectiveTests.cs"];
m40_14 [label=object, span="", file="PropertyInjectionDirectiveTests.cs"];
m40_15 [label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", span="", file="PropertyInjectionDirectiveTests.cs"];
m41_0 [label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="PropertyInjectionSelectorTests.cs"];
m41_1 [label="_kernel = new StandardKernel()", span="12-12", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_2 [label="_kernel.Bind<IWarrior>()\r\n                    .To<Ninja>()", span="13-14", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_3 [label="_kernel.Bind<IWeapon>()\r\n                    .To<Sword>()", span="15-16", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_4 [label="_kernel.Bind<IWeapon>()\r\n                    .To<Shuriken>()\r\n                    .WhenTargetHas<InjectAttribute>()", span="17-19", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_5 [label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="PropertyInjectionSelectorTests.cs"];
m41_29 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="PropertyInjectionSelectorTests.cs"];
m41_7 [label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="23-23", cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="PropertyInjectionSelectorTests.cs"];
m41_8 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="PropertyInjectionSelectorTests.cs"];
m41_30 [label="Entry Unk.>", span="", cluster="Unk.>", file="PropertyInjectionSelectorTests.cs"];
m41_17 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="47-47", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="PropertyInjectionSelectorTests.cs"];
m41_10 [label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs"];
m41_11 [label="disposing && !IsDisposed", span="24-24", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_14 [label="base.Dispose(disposing)", span="29-29", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs"];
m41_12 [label="_kernel.Dispose()", span="26-26", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_13 [label="_kernel = null", span="27-27", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_15 [label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="PropertyInjectionSelectorTests.cs"];
m41_37 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="PropertyInjectionSelectorTests.cs"];
m41_6 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="PropertyInjectionSelectorTests.cs"];
m41_9 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="104-104", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="PropertyInjectionSelectorTests.cs"];
m41_28 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="PropertyInjectionSelectorTests.cs"];
m41_31 [label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs"];
m41_32 [label="var instance = _kernel.Get<Ninja>()", span="56-56", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_33 [label="Assert.NotNull(instance.Weapon)", span="58-58", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs"];
m41_34 [label="Assert.Null(instance.SecondaryWeapon)", span="59-59", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs"];
m41_35 [label="Assert.Null(instance.VerySecretWeaponAccessor)", span="60-60", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs"];
m41_36 [label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="PropertyInjectionSelectorTests.cs"];
m41_16 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="PropertyInjectionSelectorTests.cs"];
m41_18 [label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_19 [label="_kernel.Settings.InjectNonPublic = true", span="39-39", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_20 [label="var instance = _kernel.Get<Ninja>()", span="40-40", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=red, community=0, file="PropertyInjectionSelectorTests.cs"];
m41_21 [label="Assert.NotNull(instance.Weapon)", span="42-42", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_22 [label="Assert.IsType<Sword>(instance.Weapon)", span="43-43", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_23 [label="Assert.NotNull(instance.SecondaryWeapon)", span="45-45", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_24 [label="Assert.IsType<Shuriken>(instance.SecondaryWeapon)", span="46-46", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_25 [label="Assert.NotNull(instance.VerySecretWeaponAccessor)", span="48-48", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_26 [label="Assert.IsType<Shuriken>(instance.VerySecretWeaponAccessor)", span="49-49", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_27 [label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37", cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="PropertyInjectionSelectorTests.cs"];
m41_38 [label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", span="", file="PropertyInjectionSelectorTests.cs"];
m41_39 [label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", span="", file="PropertyInjectionSelectorTests.cs"];
m42_17 [label="Entry Mock<IPlan>.cstr", span="", cluster="Mock<IPlan>.cstr", file="PropertyInjectionStrategyTests.cs"];
m42_18 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="91-91", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionStrategyTests.cs"];
m42_67 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="91-91", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.FakePropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionStrategyTests.cs"];
m42_16 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="PropertyInjectionStrategyTests.cs"];
m42_65 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="PropertyInjectionStrategyTests.cs"];
m42_3 [label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="32-32", cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="PropertyInjectionStrategyTests.cs"];
m42_38 [label="Entry Unk.>", span="", cluster="Unk.>", file="PropertyInjectionStrategyTests.cs"];
m42_39 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="PropertyInjectionStrategyTests.cs"];
m42_40 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="65-65", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_41 [label="this.planMock.Verify(x => x.GetAll<PropertyInjectionDirective>())", span="67-67", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_42 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="PropertyInjectionStrategyTests.cs"];
m42_52 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="PropertyInjectionStrategyTests.cs"];
m42_43 [label="Entry Unk.Activate", span="", cluster="Unk.Activate", file="PropertyInjectionStrategyTests.cs"];
m42_22 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PropertyInjectionStrategyTests.cs"];
m42_19 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="PropertyInjectionStrategyTests.cs"];
m42_21 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="PropertyInjectionStrategyTests.cs"];
m42_56 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_29 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_32 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_35 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_23 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_24 [label="this.injector1WasCalled = true", span="45-45", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_25 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_26 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_27 [label="this.injector2WasCalled = true", span="46-46", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_28 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_30 [label="x.Plan", span="54-54", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_31 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_33 [label="x.Parameters", span="55-55", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_34 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_36 [label="x.GetAll<PropertyInjectionDirective>()", span="59-59", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_37 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_45 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_46 [label="x.GetAll<PropertyInjectionDirective>()", span="67-67", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_47 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_53 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_54 [label="d.TargetMock.Verify(x => x.ResolveWithin(this.contextMock.Object))", span="75-75", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_55 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_57 [label="x.ResolveWithin(this.contextMock.Object)", span="75-75", cluster="lambda expression", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_58 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="PropertyInjectionStrategyTests.cs"];
m42_48 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="PropertyInjectionStrategyTests.cs"];
m42_49 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="73-73", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_50 [label="this.directives.Map(d => d.TargetMock.Verify(x => x.ResolveWithin(this.contextMock.Object)))", span="75-75", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_51 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="PropertyInjectionStrategyTests.cs"];
m42_72 [label="Entry Mock<ITarget>.cstr", span="", cluster="Mock<ITarget>.cstr", file="PropertyInjectionStrategyTests.cs"];
m42_66 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="PropertyInjectionStrategyTests.cs"];
m42_4 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18", cluster="Ninject.NinjectSettings.NinjectSettings()", file="PropertyInjectionStrategyTests.cs"];
m42_68 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", span="94-94", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", file="PropertyInjectionStrategyTests.cs"];
m42_69 [label="this.TargetMock = new Mock<ITarget>()", span="96-96", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_70 [label="return this.TargetMock.Object;", span="97-97", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_71 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", span="94-94", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective.CreateTarget(System.Reflection.PropertyInfo)", file="PropertyInjectionStrategyTests.cs"];
m42_20 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PropertyInjectionStrategyTests.cs"];
m42_0 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", span="21-21", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", file="PropertyInjectionStrategyTests.cs"];
m42_1 [label="this.strategy = new PropertyInjectionStrategy(null) {Settings = new NinjectSettings()}", span="23-23", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_2 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", span="21-21", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext.PropertyInjectionDirectiveContext()", file="PropertyInjectionStrategyTests.cs"];
m42_60 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="79-79", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="PropertyInjectionStrategyTests.cs"];
m42_61 [label="this.strategy.Activate(this.contextMock.Object, this.reference)", span="81-81", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_62 [label="this.injector1WasCalled.Should().BeTrue()", span="82-82", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_63 [label="this.injector2WasCalled.Should().BeTrue()", span="83-83", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_64 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="79-79", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="PropertyInjectionStrategyTests.cs"];
m42_59 [label="Entry Unk.ResolveWithin", span="", cluster="Unk.ResolveWithin", file="PropertyInjectionStrategyTests.cs"];
m42_5 [label="Entry Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="41-41", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="PropertyInjectionStrategyTests.cs"];
m42_6 [label="this.contextMock = new Mock<IContext>()", span="43-43", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_7 [label="this.planMock = new Mock<IPlan>()", span="44-44", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_8 [label="this.injector1 = (x, y) => { this.injector1WasCalled = true; }", span="45-45", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_9 [label="this.injector2 = (x, y) => { this.injector2WasCalled = true; }", span="46-46", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_10 [label="this.directives = new[]\r\n            {\r\n                new FakePropertyInjectionDirective(this.property1, this.injector1),\r\n                new FakePropertyInjectionDirective(this.property2, this.injector2)\r\n            }", span="48-52", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_11 [label="this.contextMock.SetupGet(x => x.Plan).Returns(this.planMock.Object)", span="54-54", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_12 [label="this.contextMock.SetupGet(x => x.Parameters).Returns(new IParameter[0])", span="55-55", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_13 [label="this.reference = new InstanceReference { Instance = this.instance }", span="57-57", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_14 [label="this.planMock.Setup(x => x.GetAll<PropertyInjectionDirective>()).Returns(this.directives)", span="59-59", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", color=green, community=0, file="PropertyInjectionStrategyTests.cs"];
m42_15 [label="Exit Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="41-41", cluster="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="PropertyInjectionStrategyTests.cs"];
m42_73 [label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext", span="", file="PropertyInjectionStrategyTests.cs"];
m42_74 [label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled", span="", file="PropertyInjectionStrategyTests.cs"];
m42_75 [label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective", span="", file="PropertyInjectionStrategyTests.cs"];
m44_0 [label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23", cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="Samurai.cs"];
m44_1 [label="this.Weapon = weapon", span="25-25", cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", color=green, community=0, file="Samurai.cs"];
m44_2 [label="Exit Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23", cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="Samurai.cs"];
m44_6 [label="Entry Ninject.Tests.Fakes.Samurai.DoNothing()", span="33-33", cluster="Ninject.Tests.Fakes.Samurai.DoNothing()", file="Samurai.cs"];
m44_7 [label="Exit Ninject.Tests.Fakes.Samurai.DoNothing()", span="33-33", cluster="Ninject.Tests.Fakes.Samurai.DoNothing()", file="Samurai.cs"];
m44_12 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Samurai.cs"];
m44_3 [label="Entry Ninject.Tests.Fakes.Samurai.SetName(string)", span="28-28", cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", file="Samurai.cs"];
m44_4 [label="this._name = name", span="30-30", cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", color=green, community=0, file="Samurai.cs"];
m44_5 [label="Exit Ninject.Tests.Fakes.Samurai.SetName(string)", span="28-28", cluster="Ninject.Tests.Fakes.Samurai.SetName(string)", file="Samurai.cs"];
m44_8 [label="Entry Ninject.Tests.Fakes.Samurai.Attack(string)", span="37-37", cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", file="Samurai.cs"];
m44_9 [label="this.IsBattleHardened = true", span="39-39", cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", color=green, community=0, file="Samurai.cs"];
m44_10 [label="return String.Format(''Attacked {0} with a {1}'', enemy, this.Weapon.Name);", span="40-40", cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", color=green, community=0, file="Samurai.cs"];
m44_11 [label="Exit Ninject.Tests.Fakes.Samurai.Attack(string)", span="37-37", cluster="Ninject.Tests.Fakes.Samurai.Attack(string)", file="Samurai.cs"];
m44_13 [label="Ninject.Tests.Fakes.Samurai", span="", file="Samurai.cs"];
m45_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="SingletonScopeTests.cs"];
m45_115 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", span="190-190", cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs"];
m45_116 [label="return new NotifiesWhenDisposed();", span="192-192", cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs"];
m45_117 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", span="190-190", cluster="Ninject.Tests.Integration.SingletonScopeTests.NotifiesWhenDisposedProvider.CreateInstance(Ninject.Activation.IContext)", file="SingletonScopeTests.cs"];
m45_33 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="54-54", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_34 [label="this.kernel.Bind<INotifyWhenDisposed>().To<NotifiesWhenDisposed>().InSingletonScope()", span="56-56", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_35 [label="var instance = this.kernel.Get<INotifyWhenDisposed>()", span="58-58", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_36 [label="this.kernel.Dispose()", span="59-59", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_37 [label="instance.IsDisposed.Should().BeTrue()", span="61-61", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_38 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="54-54", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_83 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", span="150-150", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_84 [label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", span="152-152", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_85 [label="var instance1 = this.kernel.Get<INotifyWhenDisposed>()", span="154-154", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_86 [label="var instance2 = this.kernel.Get<INotifyWhenDisposed>()", span="155-155", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_87 [label="instance1.Should().BeSameAs(instance2)", span="157-157", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_88 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", span="150-150", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_18 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="SingletonScopeTests.cs"];
m45_61 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", span="109-109", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_62 [label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", span="111-111", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_63 [label="var instance1 = this.kernel.Get<INotifyWhenDisposed>()", span="113-113", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_64 [label="var instance2 = this.kernel.Get<INotifyWhenDisposed>()", span="114-114", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_65 [label="instance1.Should().BeSameAs(instance2)", span="116-116", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_66 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", span="109-109", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_0 [label="Entry Ninject.Web.Mvc.MvcModule.Load()", span="9-9", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_1 [label="Bind<IControllerFactory>().To<NinjectControllerFactory>().InSingletonScope()", span="11-11", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_2 [label="Bind<IControllerRegistry>().To<ControllerRegistry>().InSingletonScope()", span="12-12", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_89 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="80-80", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="SingletonScopeTests.cs"];
m45_15 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="SingletonScopeTests.cs"];
m45_46 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="79-79", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_47 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="81-81", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_48 [label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", span="83-83", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_49 [label="var reference = new WeakReference(instance)", span="84-84", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_50 [label="instance = null", span="86-86", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_53 [label="reference.IsAlive.Should().BeTrue()", span="91-91", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_51 [label="GC.Collect()", span="88-88", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_52 [label="GC.WaitForPendingFinalizers()", span="89-89", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_54 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="79-79", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_11 [label="var instance2 = this.kernel.Get<IWeapon>()", span="32-32", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", color=green, community=0];
m45_9 [label="this.kernel.Bind<IWeapon>().To<Sword>().InSingletonScope()", span="29-29", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", color=green, community=0];
m45_39 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", span="68-68", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_40 [label="this.kernel.Bind<Sword>().ToSelf().InSingletonScope()", span="70-70", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_41 [label="var sword1 = this.kernel.Get<Sword>()", span="72-72", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_42 [label="var sword2 = this.kernel.Get<Sword>()", span="73-73", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_43 [label="sword1.Should().BeSameAs(sword2)", span="75-75", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_44 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", span="68-68", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_14 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="SingletonScopeTests.cs"];
m45_94 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="161-161", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_95 [label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", span="163-163", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_96 [label="var instance = this.kernel.Get<INotifyWhenDisposed>()", span="165-165", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_97 [label="var reference = new WeakReference(instance)", span="166-166", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_98 [label="instance = null", span="168-168", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_101 [label="reference.IsAlive.Should().BeTrue()", span="173-173", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_99 [label="GC.Collect()", span="170-170", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_100 [label="GC.WaitForPendingFinalizers()", span="171-171", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_102 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="161-161", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_67 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", span="47-47", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", file="SingletonScopeTests.cs"];
m45_8 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", span="27-27", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_77 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="136-136", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_78 [label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", span="138-138", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_79 [label="var instance = this.kernel.Get<INotifyWhenDisposed>()", span="140-140", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_80 [label="this.kernel.Dispose()", span="141-141", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_81 [label="instance.IsDisposed.Should().BeTrue()", span="143-143", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_82 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="136-136", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_55 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="95-95", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_56 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InSingletonScope()", span="97-97", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_57 [label="var instance = this.kernel.Get<NotifiesWhenDisposed>()", span="99-99", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_58 [label="this.kernel.Dispose()", span="100-100", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_59 [label="instance.IsDisposed.Should().BeTrue()", span="102-102", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_60 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="95-95", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_106 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="177-177", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_107 [label="this.kernel.Bind<INotifyWhenDisposed>().ToMethod(x => new NotifiesWhenDisposed()).InSingletonScope()", span="179-179", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_108 [label="var instance = this.kernel.Get<INotifyWhenDisposed>()", span="181-181", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_109 [label="this.kernel.Dispose()", span="182-182", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_110 [label="instance.IsDisposed.Should().BeTrue()", span="184-184", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_111 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", span="177-177", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope.InstancesAreDeactivatedWhenKernelIsDisposed()", file="SingletonScopeTests.cs"];
m45_68 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="120-120", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_69 [label="this.kernel.Bind<INotifyWhenDisposed>().ToProvider<NotifiesWhenDisposedProvider>().InSingletonScope()", span="122-122", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_70 [label="var instance = this.kernel.Get<INotifyWhenDisposed>()", span="124-124", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_71 [label="var reference = new WeakReference(instance)", span="125-125", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_72 [label="instance = null", span="127-127", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_75 [label="reference.IsAlive.Should().BeTrue()", span="132-132", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_73 [label="GC.Collect()", span="129-129", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_74 [label="GC.WaitForPendingFinalizers()", span="130-130", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_76 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="120-120", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_3 [label="Bind<IControllerNamer>().To<ControllerNamer>().InSingletonScope()", span="13-13", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_17 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="SingletonScopeTests.cs"];
m45_10 [label="var instance1 = this.kernel.Get<IWeapon>()", span="31-31", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs", color=green, community=0];
m45_19 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="SingletonScopeTests.cs"];
m45_12 [label="Ninject.Web.Mvc.MvcModule", span="", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_13 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", span="27-27", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.FirstActivatedInstanceIsReused()", file="SingletonScopeTests.cs"];
m45_112 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_90 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_91 [label="new NotifiesWhenDisposed()", span="152-152", cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs"];
m45_92 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_103 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_104 [label="new NotifiesWhenDisposed()", span="163-163", cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs"];
m45_105 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_113 [label="new NotifiesWhenDisposed()", span="179-179", cluster="lambda expression", color=green, community=0, file="SingletonScopeTests.cs"];
m45_114 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="SingletonScopeTests.cs"];
m45_31 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="SingletonScopeTests.cs"];
m45_30 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="SingletonScopeTests.cs"];
m45_45 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="SingletonScopeTests.cs"];
m45_20 [label="Entry Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="38-38", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_21 [label="this.kernel.Bind<IWeapon>().To<Sword>().InSingletonScope()", span="40-40", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_22 [label="var instance = this.kernel.Get<IWeapon>()", span="42-42", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", color=green, community=0, file="SingletonScopeTests.cs"];
m45_23 [label="var reference = new WeakReference(instance)", span="43-43", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_24 [label="instance = null", span="45-45", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_27 [label="reference.IsAlive.Should().BeTrue()", span="50-50", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_25 [label="GC.Collect()", span="47-47", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_26 [label="GC.WaitForPendingFinalizers()", span="48-48", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_28 [label="Exit Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", span="38-38", cluster="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope.InstancesAreNotGarbageCollectedAsLongAsKernelRemainsAlive()", file="SingletonScopeTests.cs"];
m45_32 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="SingletonScopeTests.cs"];
m45_4 [label="Bind<HttpContext>().ToProvider<HttpContextProvider>().InRequestScope()", span="14-14", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_5 [label="Bind<HttpContextBase>().ToProvider<HttpContextBaseProvider>().InRequestScope()", span="15-15", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_6 [label="Exit Ninject.Web.Mvc.MvcModule.Load()", span="9-9", cluster="Ninject.Web.Mvc.MvcModule.Load()", file="SingletonScopeTests.cs"];
m45_29 [label="Entry System.WeakReference.WeakReference(object)", span="0-0", cluster="System.WeakReference.WeakReference(object)", file="SingletonScopeTests.cs"];
m45_93 [label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5", cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="SingletonScopeTests.cs"];
m45_119 [label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope", span="", file="SingletonScopeTests.cs"];
m45_120 [label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope", span="", file="SingletonScopeTests.cs"];
m45_121 [label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope", span="", file="SingletonScopeTests.cs"];
m45_122 [label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope", span="", file="SingletonScopeTests.cs"];
m45_118 [label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext", span="", file="SingletonScopeTests.cs"];
m46_16 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="SpecialResolutionTests.cs"];
m46_32 [label="Entry Unk.>", span="", cluster="Unk.>", file="SpecialResolutionTests.cs"];
m46_21 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", span="40-40", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_22 [label="this.kernel.Bind<RequestsResolutionRoot>().ToSelf()", span="42-42", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_23 [label="var instance = this.kernel.Get<RequestsResolutionRoot>()", span="43-43", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_24 [label="instance.Should().NotBeNull()", span="45-45", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_25 [label="instance.ResolutionRoot.Should().NotBeNull()", span="46-46", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_26 [label="instance.ResolutionRoot.Should().BeSameAs(this.kernel)", span="47-47", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_27 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", span="40-40", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_42 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", span="85-85", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", file="SpecialResolutionTests.cs"];
m46_43 [label="this.StringValue = stringValue", span="87-87", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_44 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", span="85-85", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString.RequestsString(string)", file="SpecialResolutionTests.cs"];
m46_15 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="SpecialResolutionTests.cs"];
m46_36 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", span="65-65", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", file="SpecialResolutionTests.cs"];
m46_37 [label="this.Kernel = kernel", span="67-67", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_38 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", span="65-65", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel.RequestsKernel(Ninject.IKernel)", file="SpecialResolutionTests.cs"];
m46_39 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", span="75-75", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs"];
m46_40 [label="this.ResolutionRoot = resolutionRoot", span="77-77", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs"];
m46_41 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", span="75-75", cluster="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot.RequestsResolutionRoot(Ninject.Syntax.IResolutionRoot)", file="SpecialResolutionTests.cs"];
m46_4 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs"];
m46_5 [label="this.kernel.Dispose()", span="19-19", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs"];
m46_6 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", span="17-17", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.Dispose()", file="SpecialResolutionTests.cs"];
m46_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="SpecialResolutionTests.cs"];
m46_0 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", span="12-12", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs"];
m46_1 [label="this.kernel = new StandardKernel()", span="14-14", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs"];
m46_2 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", span="12-12", cluster="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext.SpecialResolutionContext()", file="SpecialResolutionTests.cs"];
m46_28 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", span="54-54", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", file="SpecialResolutionTests.cs"];
m46_29 [label="this.kernel.Bind<RequestsString>().ToSelf()", span="56-56", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_30 [label="Assert.Throws<ActivationException>(() => this.kernel.Get<RequestsString>())", span="57-57", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_31 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", span="54-54", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString.InstanceOfStringIsInjected()", file="SpecialResolutionTests.cs"];
m46_17 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="SpecialResolutionTests.cs"];
m46_19 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="SpecialResolutionTests.cs"];
m46_7 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="SpecialResolutionTests.cs"];
m46_20 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="SpecialResolutionTests.cs"];
m46_33 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SpecialResolutionTests.cs"];
m46_34 [label="this.kernel.Get<RequestsString>()", span="57-57", cluster="lambda expression", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_35 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SpecialResolutionTests.cs"];
m46_18 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="SpecialResolutionTests.cs"];
m46_8 [label="Entry Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", span="26-26", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_9 [label="this.kernel.Bind<RequestsKernel>().ToSelf()", span="28-28", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_10 [label="var instance = this.kernel.Get<RequestsKernel>()", span="29-29", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_11 [label="instance.Should().NotBeNull()", span="31-31", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_12 [label="instance.Kernel.Should().NotBeNull()", span="32-32", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_13 [label="instance.Kernel.Should().BeSameAs(this.kernel)", span="33-33", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", color=green, community=0, file="SpecialResolutionTests.cs"];
m46_14 [label="Exit Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", span="26-26", cluster="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel.InstanceOfKernelIsInjected()", file="SpecialResolutionTests.cs"];
m46_45 [label="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext", span="", file="SpecialResolutionTests.cs"];
m46_46 [label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel", span="", file="SpecialResolutionTests.cs"];
m46_47 [label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot", span="", file="SpecialResolutionTests.cs"];
m46_48 [label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString", span="", file="SpecialResolutionTests.cs"];
m46_49 [label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel", span="", file="SpecialResolutionTests.cs"];
m46_50 [label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot", span="", file="SpecialResolutionTests.cs"];
m46_51 [label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString", span="", file="SpecialResolutionTests.cs"];
m47_36 [label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="28-28", cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="StandardKernel.cs"];
m47_2 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs"];
m47_3 [label="Exit Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs"];
m47_4 [label="Entry Ninject.StandardKernel.AddComponents()", span="61-61", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_5 [label="this.Components.Add<IPlanner, Planner>()", span="63-63", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_6 [label="this.Components.Add<IPlanningStrategy, ConstructorReflectionStrategy>()", span="64-64", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_7 [label="this.Components.Add<IPlanningStrategy, PropertyReflectionStrategy>()", span="65-65", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_8 [label="this.Components.Add<IPlanningStrategy, MethodReflectionStrategy>()", span="66-66", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_9 [label="this.Components.Add<ISelector, Selector>()", span="68-68", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_10 [label="this.Components.Add<IConstructorScorer, StandardConstructorScorer>()", span="69-69", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_11 [label="this.Components.Add<IInjectionHeuristic, StandardInjectionHeuristic>()", span="70-70", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_12 [label="this.Components.Add<IPipeline, Pipeline>()", span="72-72", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_13 [label="!this.Settings.ActivationCacheDisabled", span="73-73", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_14 [label="this.Components.Add<IActivationStrategy, ActivationCacheStrategy>()", span="75-75", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_15 [label="this.Components.Add<IActivationStrategy, PropertyInjectionStrategy>()", span="78-78", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_16 [label="this.Components.Add<IActivationStrategy, MethodInjectionStrategy>()", span="79-79", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_17 [label="this.Components.Add<IActivationStrategy, InitializableStrategy>()", span="80-80", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_18 [label="this.Components.Add<IActivationStrategy, StartableStrategy>()", span="81-81", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_19 [label="this.Components.Add<IActivationStrategy, BindingActionStrategy>()", span="82-82", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_20 [label="this.Components.Add<IActivationStrategy, DisposableStrategy>()", span="83-83", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_21 [label="this.Components.Add<IBindingPrecedenceComparer, BindingPrecedenceComparer>()", span="85-85", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_22 [label="this.Components.Add<IBindingResolver, StandardBindingResolver>()", span="87-87", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_23 [label="this.Components.Add<IBindingResolver, OpenGenericBindingResolver>()", span="88-88", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_24 [label="this.Components.Add<IMissingBindingResolver, DefaultValueBindingResolver>()", span="90-90", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_25 [label="this.Components.Add<IMissingBindingResolver, SelfBindingResolver>()", span="91-91", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_26 [label="!this.Settings.UseReflectionBasedInjection", span="94-94", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_27 [label="this.Components.Add<IInjectorFactory, DynamicMethodInjectorFactory>()", span="96-96", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_28 [label="this.Components.Add<IInjectorFactory, ReflectionInjectorFactory>()", span="101-101", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_29 [label="this.Components.Add<ICache, Cache>()", span="104-104", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_30 [label="this.Components.Add<IActivationCache, ActivationCache>()", span="105-105", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_31 [label="this.Components.Add<ICachePruner, GarbageCollectionCachePruner>()", span="106-106", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_32 [label="this.Components.Add<IModuleLoader, ModuleLoader>()", span="109-109", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_33 [label="this.Components.Add<IModuleLoaderPlugin, CompiledModuleLoaderPlugin>()", span="110-110", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_34 [label="this.Components.Add<IAssemblyNameRetriever, AssemblyNameRetriever>()", span="111-111", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_35 [label="Exit Ninject.StandardKernel.AddComponents()", span="61-61", cluster="Ninject.StandardKernel.AddComponents()", file="StandardKernel.cs"];
m47_0 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs"];
m47_1 [label="Exit Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardKernel.cs"];
m47_37 [label="Ninject.StandardKernel", span="", file="StandardKernel.cs"];
m48_5 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="12-12", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_6 [label="context.Instance is T", span="14-14", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_7 [label="Deactivate(context, (T)context.Instance)", span="15-15", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_8 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", span="12-12", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_4 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="18-18", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs"];
m48_10 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", span="18-18", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs"];
m48_9 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="19-19", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs"];
m48_11 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", span="19-19", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Deactivate(Ninject.Activation.IContext, T)", file="StandardKernelTests.cs"];
m48_0 [label="Entry Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="6-6", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_1 [label="context.Instance is T", span="8-8", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_2 [label="Activate(context, (T)context.Instance)", span="9-9", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_3 [label="Exit Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", span="6-6", cluster="Ninject.Activation.Strategies.ActivationStrategyFor<T>.Activate(Ninject.Activation.IContext)", file="StandardKernelTests.cs"];
m48_12 [label="Ninject.Activation.Strategies.ActivationStrategyFor<T>", span="", file="StandardKernelTests.cs"];
m49_46 [label="weapon.ShouldBeInstanceOf<ShortSword>()", span="80-80", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplictBinding_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_52 [label="kernel.Bind<Sword>().To<ShortSword>().When(_ => true)", span="91-91", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_54 [label="weapon.ShouldBeInstanceOf<ShortSword>()", span="93-93", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_55 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="84-84", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_56 [label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="408-408", cluster="Ninject.KernelBase.GetBindings(System.Type)", file="StartableStrategyTests.cs"];
m49_60 [label="Type implementation = _mappings[component].FirstOrDefault()", span="163-163", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs"];
m49_62 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_63 [label=true, span="91-91", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_53 [label="weapon = kernel.Get<Sword>()", span="92-92", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_57 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StartableStrategyTests.cs"];
m49_59 [label="return GetAll(argument).CastSlow(argument);", span="161-161", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs"];
m49_58 [label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="93-93", cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="StartableStrategyTests.cs"];
m49_61 [label="implementation == null", span="165-165", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="StartableStrategyTests.cs"];
m49_64 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="StartableStrategyTests.cs"];
m49_13 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="37-37", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_14 [label="kernel.Bind<IWeapon>().To<Sword>()", span="39-39", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_15 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="40-40", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs", color=green, community=0];
m49_50 [label="kernel.GetBindings(typeof (Sword)).First().Condition = b => true", span="88-88", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_73 [label="return _mappings[component]\r\n                .Select(implementation => ResolveInstance(component, implementation));", span="178-179", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="StartableStrategyTests.cs"];
m49_74 [label="Exit Ninject.Components.ComponentContainer.GetAll(System.Type)", span="176-176", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="StartableStrategyTests.cs"];
m49_100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StartableStrategyTests.cs"];
m49_41 [label="Exit Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_45 [label="Exit Ninject.Components.ComponentContainer.Get<T>()", span="127-127", cluster="Ninject.Components.ComponentContainer.Get<T>()", color=green, community=0, file="StartableStrategyTests.cs"];
m49_44 [label="return (T) Get(typeof(T));", span="130-130", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="StartableStrategyTests.cs"];
m49_42 [label="Entry Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", span="87-87", cluster="Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", file="StartableStrategyTests.cs"];
m49_43 [label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="127-127", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="StartableStrategyTests.cs"];
m49_47 [label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="138-138", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="StartableStrategyTests.cs"];
m49_26 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="47-47", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_27 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="57-57", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_28 [label="kernel.Bind<IWeapon>().To<Sword>()", span="59-59", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_29 [label="kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="60-60", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_30 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="61-61", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_31 [label="kernel.Bind<Samurai>().ToSelf()", span="62-62", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_32 [label="Assert.Throws<ActivationException>(() => kernel.Get<Samurai>())", span="63-63", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs", color=green, community=0];
m49_98 [label="Entry Ninject.INinjectSettings.Clone()", span="112-112", cluster="Ninject.INinjectSettings.Clone()", file="StartableStrategyTests.cs"];
m49_82 [label="Entry Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="188-188", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_83 [label="ConstructorInfo constructor = SelectConstructor(component, implementation)", span="190-190", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_87 [label="!this.transients.Contains(new KeyValuePair<Type, Type>(component, implementation))", span="200-200", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_88 [label="_instances.Add(implementation, instance)", span="202-202", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_84 [label="var arguments = constructor.GetParameters().Select(parameter => Get(parameter.ParameterType)).ToArray()", span="191-191", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_85 [label="var instance = constructor.Invoke(arguments) as INinjectComponent", span="195-195", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_86 [label="instance.Settings = KernelConfiguration.Settings.Clone()", span="198-198", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_89 [label="return instance;", span="205-205", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_90 [label=TargetInvocationException, span="207-207", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_91 [label="ex.RethrowInnerException()", span="209-209", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_92 [label="return null;", span="210-210", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_93 [label="Exit Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="188-188", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_51 [label="weapon.ShouldBeInstanceOf<Sword>()", span="89-89", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_35 [label="kernel.Get<Samurai>()", span="63-63", cluster="lambda expression", file="StartableStrategyTests.cs", color=green, community=0];
m49_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="36-36", cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="StartableStrategyTests.cs"];
m49_20 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="47-47", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_0 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="27-27", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_1 [label="kernel.Bind<IWeapon>().To<Sword>()", span="29-29", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_6 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="27-27", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_2 [label="kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="30-30", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs", color=green, community=0];
m49_3 [label="kernel.Bind<Samurai>().ToSelf()", span="31-31", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_4 [label="var warrior = kernel.Get<Samurai>()", span="32-32", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_5 [label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="33-33", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="StartableStrategyTests.cs"];
m49_7 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="StartableStrategyTests.cs"];
m49_33 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="57-57", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="StartableStrategyTests.cs"];
m49_71 [label="weapon.ShouldBeInstanceOf<Sword>()", span="106-106", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_9 [label="Entry Ninject.Infrastructure.Multimap<K, V>.Clear()", span="95-95", cluster="Ninject.Infrastructure.Multimap<K, V>.Clear()", file="StartableStrategyTests.cs"];
m49_69 [label="kernel.Bind<Sword>().To<ShortSword>()", span="104-104", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_16 [label="kernel.Bind<Samurai>().ToSelf()", span="41-41", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_17 [label="var warrior = kernel.Get<Samurai>()", span="42-42", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", color=red, community=0, file="StartableStrategyTests.cs"];
m49_18 [label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="43-43", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_19 [label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", span="37-37", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnatisfiedConditional_ThenTheDefaultIsUsed()", file="StartableStrategyTests.cs"];
m49_68 [label="weapon.ShouldBeInstanceOf<Sword>()", span="102-102", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_94 [label="Entry Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="214-214", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_105 [label="var constructor =\r\n                implementation.GetTypeInfo().DeclaredConstructors.Where(c => c.IsPublic && !c.IsStatic).OrderByDescending(c => c.GetParameters().Length).\r\n                    FirstOrDefault()", span="216-218", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_107 [label="throw new InvalidOperationException(ExceptionFormatter.NoConstructorsAvailableForComponent(component, implementation));", span="221-221", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_106 [label="constructor == null", span="220-220", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_108 [label="return constructor;", span="223-223", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_109 [label="Exit Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="214-214", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_8 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="StartableStrategyTests.cs"];
m49_96 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StartableStrategyTests.cs"];
m49_110 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="StartableStrategyTests.cs"];
m49_70 [label="weapon = kernel.Get<Sword>()", span="105-105", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_37 [label="_instances.ContainsKey(implementation)", span="113-113", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_38 [label="_instances[implementation].Dispose()", span="114-114", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_39 [label="_instances.Remove(implementation)", span="116-116", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_40 [label="_mappings.RemoveAll(component)", span="119-119", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_11 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="StartableStrategyTests.cs"];
m49_97 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="StartableStrategyTests.cs"];
m49_113 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="239-239", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_48 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="84-84", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_49 [label="IWeapon weapon = kernel.Get<Sword>()", span="86-86", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_120 [label="Entry Unk.GetParameters", span="", cluster="Unk.GetParameters", file="StartableStrategyTests.cs"];
m49_65 [label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="97-97", cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="StartableStrategyTests.cs"];
m49_77 [label="ResolveInstance(component, implementation)", span="179-179", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_76 [label="Ninject.Tests.Integration.ConditionalBindingTests", span="", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_78 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_102 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_103 [label="Get(parameter.ParameterType)", span="191-191", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_104 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_114 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_117 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_115 [label="c.IsPublic && !c.IsStatic", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_116 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_118 [label="c.GetParameters().Length", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_119 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="StartableStrategyTests.cs"];
m49_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="StartableStrategyTests.cs"];
m49_36 [label="_mappings[component]", span="111-111", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_112 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="StartableStrategyTests.cs"];
m49_75 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StartableStrategyTests.cs"];
m49_66 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="StartableStrategyTests.cs"];
m49_67 [label="Entry System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", span="0-0", cluster="System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", file="StartableStrategyTests.cs"];
m49_72 [label="Entry Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="182-182", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_24 [label="Exit Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", color=green, community=0, file="StartableStrategyTests.cs"];
m49_23 [label="RemoveAll(typeof(T))", span="85-85", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="StartableStrategyTests.cs"];
m49_25 [label="Entry Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="StartableStrategyTests.cs"];
m49_21 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="StartableStrategyTests.cs"];
m49_22 [label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="StartableStrategyTests.cs"];
m49_111 [label="Entry Unk.OrderByDescending", span="", cluster="Unk.OrderByDescending", file="StartableStrategyTests.cs"];
m49_101 [label="Entry System.Reflection.TargetInvocationException.RethrowInnerException()", span="19-19", cluster="System.Reflection.TargetInvocationException.RethrowInnerException()", file="StartableStrategyTests.cs"];
m49_79 [label=_instances, span="184-184", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_80 [label="return _instances.ContainsKey(implementation) ? _instances[implementation] : CreateNewInstance(component, implementation);", span="185-185", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_81 [label="Exit Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="182-182", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="StartableStrategyTests.cs"];
m49_95 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="StartableStrategyTests.cs"];
m49_99 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="StartableStrategyTests.cs"];
m49_121 [label="Ninject.Components.ComponentContainer", span="", file="StartableStrategyTests.cs"];
m49_122 [label="System.Type", span="", file="StartableStrategyTests.cs"];
m50_27 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="ThreadScopeTests.cs"];
m50_24 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", span="38-38", cluster="Ninject.Syntax.IBindingInSyntax<T>.InThreadScope()", file="ThreadScopeTests.cs"];
m50_26 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="ThreadScopeTests.cs"];
m50_9 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="38-38", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ThreadScopeTests.cs"];
m50_6 [label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", span="20-20", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs"];
m50_7 [label="this.kernel.Dispose()", span="22-22", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs"];
m50_8 [label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", span="20-20", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.Dispose()", file="ThreadScopeTests.cs"];
m50_28 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ThreadScopeTests.cs"];
m50_23 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="31-31", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ThreadScopeTests.cs"];
m50_48 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="ThreadScopeTests.cs"];
m50_68 [label="Entry Ninject.Components.IComponentContainer.Get<T>()", span="59-59", cluster="Ninject.Components.IComponentContainer.Get<T>()", file="ThreadScopeTests.cs"];
m50_22 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ThreadScopeTests.cs"];
m50_71 [label="Entry Ninject.Activation.Caching.IPruneable.Prune()", span="18-18", cluster="Ninject.Activation.Caching.IPruneable.Prune()", file="ThreadScopeTests.cs"];
m50_10 [label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="29-29", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_11 [label="this.kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", span="31-31", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_12 [label="IWeapon weapon1 = null", span="33-33", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_13 [label="IWeapon weapon2 = null", span="34-34", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_14 [label="ThreadStart callback = () =>\r\n            {\r\n                weapon1 = this.kernel.Get<IWeapon>();\r\n                weapon2 = this.kernel.Get<IWeapon>();\r\n            }", span="36-40", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_15 [label="var thread = new Thread(callback)", span="42-42", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_16 [label="thread.Start()", span="44-44", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_17 [label="thread.Join()", span="45-45", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_18 [label="weapon1.Should().NotBeNull()", span="47-47", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_19 [label="weapon2.Should().NotBeNull()", span="48-48", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_20 [label="weapon1.Should().BeSameAs(weapon2)", span="49-49", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_21 [label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", span="29-29", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.FirstActivatedInstanceIsReusedWithinThread()", file="ThreadScopeTests.cs"];
m50_5 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="41-41", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="ThreadScopeTests.cs"];
m50_35 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ThreadScopeTests.cs"];
m50_29 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="ThreadScopeTests.cs"];
m50_0 [label="Entry Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="14-14", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs"];
m50_1 [label="var settings = new NinjectSettings { CachePruningInterval = TimeSpan.MaxValue }", span="16-16", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs"];
m50_2 [label="this.kernel = new StandardKernel(settings)", span="17-17", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs"];
m50_3 [label="Exit Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", span="14-14", cluster="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext.ThreadScopeContext()", file="ThreadScopeTests.cs"];
m50_30 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="ThreadScopeTests.cs"];
m50_73 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="ThreadScopeTests.cs"];
m50_31 [label="Entry lambda expression", span="36-40", cluster="lambda expression", file="ThreadScopeTests.cs"];
m50_32 [label="weapon1 = this.kernel.Get<IWeapon>()", span="38-38", cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs"];
m50_33 [label="weapon2 = this.kernel.Get<IWeapon>()", span="39-39", cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs"];
m50_34 [label="Exit lambda expression", span="36-40", cluster="lambda expression", file="ThreadScopeTests.cs"];
m50_49 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="ThreadScopeTests.cs"];
m50_50 [label="weapon2 = this.kernel.Get<IWeapon>()", span="60-60", cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs"];
m50_51 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="ThreadScopeTests.cs"];
m50_74 [label="instance = kernel.Get<NotifiesWhenDisposed>()", span="81-81", cluster="lambda expression", color=red, community=0, file="ThreadScopeTests.cs"];
m50_75 [label="Exit lambda expression", span="81-81", cluster="lambda expression", color=green, community=0, file="ThreadScopeTests.cs"];
m50_70 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="ThreadScopeTests.cs"];
m50_69 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="ThreadScopeTests.cs"];
m50_67 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ThreadScopeTests.cs"];
m50_36 [label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="53-53", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_37 [label="this.kernel.Bind<IWeapon>().To<Sword>().InThreadScope()", span="55-55", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_38 [label="IWeapon weapon1 = this.kernel.Get<IWeapon>()", span="57-57", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_39 [label="IWeapon weapon2 = null", span="58-58", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_44 [label="weapon1.Should().NotBeNull()", span="67-67", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_46 [label="weapon1.Should().NotBeSameAs(weapon2)", span="69-69", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_40 [label="ThreadStart callback = () => weapon2 = this.kernel.Get<IWeapon>()", span="60-60", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_41 [label="var thread = new Thread(callback)", span="62-62", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_42 [label="thread.Start()", span="64-64", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_43 [label="thread.Join()", span="65-65", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_45 [label="weapon2.Should().NotBeNull()", span="68-68", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_47 [label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", span="53-53", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.ScopeDoesNotInterfereWithExternalRequests()", file="ThreadScopeTests.cs"];
m50_52 [label="Entry Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", span="74-74", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_53 [label="this.kernel.Bind<NotifiesWhenDisposed>().ToSelf().InThreadScope()", span="76-76", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_54 [label="var cache = this.kernel.Components.Get<ICache>()", span="77-77", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_55 [label="NotifiesWhenDisposed instance = null", span="79-79", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_63 [label="GC.Collect()", span="92-92", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs", color=green, community=0];
m50_56 [label="ThreadStart callback = () => instance = this.kernel.Get<NotifiesWhenDisposed>()", span="81-81", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", color=green, community=0, file="ThreadScopeTests.cs"];
m50_57 [label="var thread = new Thread(callback)", span="83-83", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_58 [label="thread.Start()", span="85-85", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_59 [label="thread.Join()", span="86-86", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_60 [label="thread = null", span="88-88", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_61 [label="GC.Collect()", span="90-90", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_62 [label="GC.WaitForPendingFinalizers()", span="91-91", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_64 [label="cache.Prune()", span="94-94", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_65 [label="instance.IsDisposed.Should().BeTrue()", span="96-96", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_66 [label="Exit Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", span="74-74", cluster="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope.InstancesActivatedWithinScopeAreDeactivatedAfterThreadIsGarbageCollectedAndCacheIsPruned()", file="ThreadScopeTests.cs"];
m50_72 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ThreadScopeTests.cs"];
m50_4 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="18-18", cluster="Ninject.NinjectSettings.NinjectSettings()", file="ThreadScopeTests.cs"];
m50_25 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ThreadScopeTests.cs"];
m50_76 [label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext", span="", file="ThreadScopeTests.cs"];
m50_77 [label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope", span="", file="ThreadScopeTests.cs"];
m51_7 [label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="57-57", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_8 [label="Ensure.ArgumentNotNull(plan, ''plan'')", span="59-59", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_9 [label="IEnumerable<ConstructorInfo> constructors = Selector.SelectConstructorsForInjection(plan.Type)", span="61-61", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", color=red, community=0, file="TransientScopeTests.cs"];
m51_14 [label="plan.Add(\r\n                    new ConstructorInjectionDirective(constructor, InjectorFactory.Create(constructor))\r\n                    {\r\n                        HasInjectAttribute = hasInjectAttribute\r\n                    })", span="68-72", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_10 [label="constructors == null", span="62-62", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_12 [label=constructors, span="65-65", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_11 [label="return;", span="63-63", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", color=red, community=0, file="TransientScopeTests.cs"];
m51_13 [label="var hasInjectAttribute = constructor.HasAttribute(Settings.InjectAttribute)", span="67-67", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_15 [label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="57-57", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="TransientScopeTests.cs"];
m51_18 [label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="39-39", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", file="TransientScopeTests.cs"];
m51_20 [label="Entry Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", span="37-37", cluster="Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", file="TransientScopeTests.cs"];
m51_16 [label="Entry Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", span="39-39", cluster="Ninject.Selection.ISelector.SelectConstructorsForInjection(System.Type)", file="TransientScopeTests.cs"];
m51_0 [label="Entry Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="43-43", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_1 [label="Ensure.ArgumentNotNull(selector, ''selector'')", span="45-45", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_2 [label="Ensure.ArgumentNotNull(injectorFactory, ''injectorFactory'')", span="46-46", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_3 [label="Selector = selector", span="48-48", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_4 [label="InjectorFactory = injectorFactory", span="49-49", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_5 [label="Exit Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="43-43", cluster="Ninject.Planning.Strategies.ConstructorReflectionStrategy.ConstructorReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="TransientScopeTests.cs"];
m51_17 [label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="73-73", cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", file="TransientScopeTests.cs"];
m51_19 [label="Entry Ninject.Injection.IInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="27-27", cluster="Ninject.Injection.IInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="TransientScopeTests.cs"];
m51_6 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="TransientScopeTests.cs"];
m51_21 [label="Ninject.Planning.Strategies.ConstructorReflectionStrategy", span="", file="TransientScopeTests.cs"];
m52_15 [label="Entry Unk.All", span="", cluster="Unk.All", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_16 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_10 [label="Entry Ninject.IKernel.GetModules()", span="39-39", cluster="Ninject.IKernel.GetModules()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_8 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_0 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", span="12-12", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_1 [label="var expectedModules = new[] { typeof(TestModule), typeof(TestModule2), typeof(OtherFakes.TestModule) }", span="14-14", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_2 [label="var assembly = Assembly.GetExecutingAssembly()", span="15-15", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_5 [label="modules.Select(m => m.GetType()).Should().BeEquivalentTo(expectedModules)", span="20-20", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_3 [label="this.Kernel.Load(assembly)", span="17-17", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_4 [label="var modules = this.Kernel.GetModules().ToArray()", span="18-18", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_6 [label="modules.All(m => m.Kernel == this.Kernel).Should().BeTrue()", span="21-21", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_7 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", span="12-12", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_21 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_17 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_18 [label="m.GetType()", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_19 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_22 [label="m.Kernel == this.Kernel", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_23 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_20 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_9 [label="Entry Ninject.IKernel.Load(params System.Reflection.Assembly[])", span="57-57", cluster="Ninject.IKernel.Load(params System.Reflection.Assembly[])", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_13 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_14 [label="Entry Unk.BeEquivalentTo", span="", cluster="Unk.BeEquivalentTo", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_12 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="WhenLoadIsCalledWithAssemblies.cs"];
m52_24 [label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies", span="", file="WhenLoadIsCalledWithAssemblies.cs"];
m53_12 [label="Entry Unk.All", span="", cluster="Unk.All", file="WhenLoadIsCalledWithFileName.cs"];
m53_6 [label="Entry Ninject.IKernel.Load(params string[])", span="47-47", cluster="Ninject.IKernel.Load(params string[])", file="WhenLoadIsCalledWithFileName.cs"];
m53_13 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="WhenLoadIsCalledWithFileName.cs"];
m53_7 [label="Entry Ninject.IKernel.GetModules()", span="39-39", cluster="Ninject.IKernel.GetModules()", file="WhenLoadIsCalledWithFileName.cs"];
m53_0 [label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", span="14-14", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_1 [label="this.Kernel.Load(this.ModuleFilename)", span="16-16", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_2 [label="var modules = this.Kernel.GetModules().ToArray()", span="18-18", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_3 [label="modules.Select(m => m.GetType().FullName).Should().BeEquivalentTo(new[] { ''Ninject.Tests.TestModules.TestModule'' })", span="20-20", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_4 [label="modules.All(m => m.Kernel == this.Kernel).Should().BeTrue()", span="21-21", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_5 [label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", span="14-14", cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName.ModulesContainedInAssembliesAreLoaded()", file="WhenLoadIsCalledWithFileName.cs"];
m53_17 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="WhenLoadIsCalledWithFileName.cs"];
m53_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="WhenLoadIsCalledWithFileName.cs"];
m53_18 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_15 [label="m.GetType().FullName", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_19 [label="m.Kernel == this.Kernel", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_20 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="WhenLoadIsCalledWithFileName.cs"];
m53_10 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="WhenLoadIsCalledWithFileName.cs"];
m53_11 [label="Entry Unk.BeEquivalentTo", span="", cluster="Unk.BeEquivalentTo", file="WhenLoadIsCalledWithFileName.cs"];
m53_9 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="WhenLoadIsCalledWithFileName.cs"];
m53_21 [label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName", span="", file="WhenLoadIsCalledWithFileName.cs"];
m54_16 [label="Entry Unk.>", span="", cluster="Unk.>", file="WhenLoadIsCalledWithModule.cs"];
m54_4 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_5 [label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_6 [label="var warrior = new ExternalWarrior()", span="24-24", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_7 [label="kernel.Inject(warrior)", span="25-25", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_8 [label="warrior.Weapon.ShouldNotBeNull()", span="27-27", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_9 [label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="28-28", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_10 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", file="WhenLoadIsCalledWithModule.cs"];
m54_14 [label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="264-264", cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="WhenLoadIsCalledWithModule.cs"];
m54_11 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="WhenLoadIsCalledWithModule.cs"];
m54_3 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="WhenLoadIsCalledWithModule.cs"];
m54_0 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs"];
m54_1 [label="kernel = new StandardKernel()", span="13-13", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs"];
m54_2 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", file="WhenLoadIsCalledWithModule.cs"];
m54_15 [label="Entry Unk.ShouldNotBeNull", span="", cluster="Unk.ShouldNotBeNull", file="WhenLoadIsCalledWithModule.cs"];
m54_13 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="43-43", cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", file="WhenLoadIsCalledWithModule.cs"];
m54_17 [label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_18 [label="var instance = new NotifiesWhenDisposed()", span="34-34", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_19 [label="kernel.Inject(instance)", span="36-36", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_21 [label="instance.IsDisposed.ShouldBeFalse()", span="39-39", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_20 [label="kernel.Dispose()", span="37-37", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_22 [label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32", cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", file="WhenLoadIsCalledWithModule.cs"];
m54_12 [label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40", cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="WhenLoadIsCalledWithModule.cs"];
m54_23 [label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5", cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", file="WhenLoadIsCalledWithModule.cs"];
m54_24 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="WhenLoadIsCalledWithModule.cs"];
m54_25 [label="Entry Unk.ShouldBeFalse", span="", cluster="Unk.ShouldBeFalse", file="WhenLoadIsCalledWithModule.cs"];
m54_26 [label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span="", file="WhenLoadIsCalledWithModule.cs"];
m54_27 [label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span="", file="WhenLoadIsCalledWithModule.cs"];
m55_8 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="24-24", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="WhenReleasingAnObject.cs"];
m55_9 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="25-25", cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="WhenReleasingAnObject.cs"];
m55_21 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="WhenReleasingAnObject.cs"];
m55_7 [label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="34-34", cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="WhenReleasingAnObject.cs"];
m55_30 [label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", span="54-54", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs"];
m55_31 [label="this.Disposed = true", span="56-56", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs"];
m55_32 [label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", span="54-54", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Bar.Dispose()", file="WhenReleasingAnObject.cs"];
m55_6 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="31-31", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="WhenReleasingAnObject.cs"];
m55_15 [label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", span="25-25", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs"];
m55_16 [label="this.kernel.Release(this.foo)", span="27-27", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs"];
m55_17 [label="this.foo.Disposed.Should().BeTrue()", span="29-29", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs"];
m55_18 [label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", span="25-25", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ItIsDisposed()", file="WhenReleasingAnObject.cs"];
m55_11 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="30-30", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="WhenReleasingAnObject.cs"];
m55_0 [label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", span="14-14", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_1 [label="this.kernel = new StandardKernel()", span="16-16", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_2 [label="this.kernel.Bind<Foo>().ToSelf().InSingletonScope()", span="18-18", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_3 [label="this.kernel.Bind<Bar>().ToSelf().InScope(ctx => this.foo)", span="19-19", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_4 [label="this.foo = this.kernel.Get<Foo>()", span="21-21", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_5 [label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", span="14-14", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.WhenReleasingAnObject()", file="WhenReleasingAnObject.cs"];
m55_22 [label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", span="33-33", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs"];
m55_23 [label="var bar = this.kernel.Get<Bar>()", span="35-35", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", color=green, community=0, file="WhenReleasingAnObject.cs"];
m55_24 [label="this.kernel.Release(this.foo)", span="37-37", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs"];
m55_25 [label="bar.Disposed.Should().BeTrue()", span="39-39", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs"];
m55_26 [label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", span="33-33", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.ObjectsThatHaveItAsScopeAreDisposed()", file="WhenReleasingAnObject.cs"];
m55_19 [label="Entry Ninject.KernelBase.Release(object)", span="298-298", cluster="Ninject.KernelBase.Release(object)", file="WhenReleasingAnObject.cs"];
m55_10 [label="Entry Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", span="46-46", cluster="Ninject.Syntax.IBindingInSyntax<T>.InScope(System.Func<Ninject.Activation.IContext, object>)", file="WhenReleasingAnObject.cs"];
m55_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="WhenReleasingAnObject.cs"];
m55_13 [label="this.foo", span="19-19", cluster="lambda expression", file="WhenReleasingAnObject.cs"];
m55_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="WhenReleasingAnObject.cs"];
m55_27 [label="Entry Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", span="44-44", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs"];
m55_28 [label="this.Disposed = true", span="46-46", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs"];
m55_29 [label="Exit Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", span="44-44", cluster="Ninject.Tests.Integration.WhenReleasingAnObject.Foo.Dispose()", file="WhenReleasingAnObject.cs"];
m55_20 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="WhenReleasingAnObject.cs"];
m55_33 [label="Ninject.Tests.Integration.WhenReleasingAnObject", span="", file="WhenReleasingAnObject.cs"];
m55_34 [label="Ninject.Tests.Integration.WhenReleasingAnObject.Foo", span="", file="WhenReleasingAnObject.cs"];
m55_35 [label="Ninject.Tests.Integration.WhenReleasingAnObject.Bar", span="", file="WhenReleasingAnObject.cs"];
n37 -> n3  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n6  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n7  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n11  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n12  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n13  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n16  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n20  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n21  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n24  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n25  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n26  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n27  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n28  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n31  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n37 -> n32  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n2  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=string];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label=string];
n9 -> n12  [key=1, style=dashed, color=darkseagreen4, label=int];
n9 -> n13  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n9  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n17 -> n15  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n18  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label=int];
n23 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n23 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n29 -> n23  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n33 -> n30  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n0  [key=2, style=dotted];
n36 -> n34  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d11  [key=1, style=dashed, color=green, label=request];
d9 -> d16  [key=1, style=dashed, color=green, label=request];
d39 -> d9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d39 -> d10  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d39 -> d11  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d39 -> d20  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d39 -> d21  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d39 -> d22  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenCanResolveIsCalled"];
d8 -> d9  [key=0, style=solid, color=green];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d13  [key=2, style=dotted, color=green];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d14  [key=2, style=dotted, color=green];
d11 -> d15  [key=1, style=dashed, color=green, label="lambda expression"];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d18  [key=2, style=dotted, color=green];
d12 -> d8  [key=0, style=bold, color=blue];
d15 -> d16  [key=0, style=solid, color=green];
d40 -> d16  [key=1, style=dashed, color=green, label=request];
d17 -> d15  [key=0, style=bold, color=blue];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d22  [key=1, style=dashed, color=green, label=request];
d20 -> d26  [key=1, style=dashed, color=green, label=request];
d19 -> d20  [key=0, style=solid, color=green];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d24  [key=2, style=dotted, color=green];
d22 -> d23  [key=0, style=solid, color=green];
d22 -> d14  [key=2, style=dotted, color=green];
d22 -> d25  [key=1, style=dashed, color=green, label="lambda expression"];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d18  [key=2, style=dotted, color=green];
d23 -> d19  [key=0, style=bold, color=blue];
d25 -> d26  [key=0, style=solid, color=green];
d41 -> d26  [key=1, style=dashed, color=green, label=request];
d27 -> d25  [key=0, style=bold, color=blue];
d29 -> d30  [key=0, style=solid, color=green];
d29 -> d31  [key=1, style=dashed, color=green, label=request];
d29 -> d35  [key=1, style=dashed, color=green, label=request];
d42 -> d29  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject"];
d42 -> d30  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject"];
d42 -> d31  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ActivationBlockTests.WhenResolveIsCalledWithRequestObject"];
d28 -> d29  [key=0, style=solid, color=green];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d33  [key=2, style=dotted, color=green];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d14  [key=2, style=dotted, color=green];
d31 -> d34  [key=1, style=dashed, color=green, label="lambda expression"];
d35 -> d36  [key=0, style=solid, color=green];
d35 -> d37  [key=2, style=dotted, color=green];
d32 -> d28  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid, color=green];
d43 -> d35  [key=1, style=dashed, color=green, label=request];
d36 -> d34  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_21  [key=2, style=dotted];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=instance];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=instance];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_22  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_10  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_23  [key=2, style=dotted];
m0_58 -> m0_52  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_21  [key=2, style=dotted];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=instance];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_29  [key=2, style=dotted];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=deactivated];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=deactivatedObjectCount];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_11  [key=2, style=dotted];
m0_35 -> m0_23  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_11  [key=2, style=dotted];
m0_36 -> m0_24  [key=2, style=dotted];
m0_37 -> m0_30  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_21  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=instance];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_22  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_10  [key=2, style=dotted];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=activated];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=activatedObjectCount];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_11  [key=2, style=dotted];
m0_18 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_11  [key=2, style=dotted];
m0_19 -> m0_24  [key=2, style=dotted];
m0_20 -> m0_13  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_21  [key=2, style=dotted];
m0_40 -> m0_22  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_21  [key=2, style=dotted];
m0_41 -> m0_38  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_50  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_50  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_51  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=activatedObjectCount];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=deactivatedObjectCount];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_11  [key=2, style=dotted];
m0_47 -> m0_24  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_11  [key=2, style=dotted];
m0_48 -> m0_24  [key=2, style=dotted];
m0_49 -> m0_39  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_9  [key=2, style=dotted];
m0_26 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_11  [key=2, style=dotted];
m0_27 -> m0_12  [key=2, style=dotted];
m0_28 -> m0_25  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_9  [key=2, style=dotted];
m0_6 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_12  [key=2, style=dotted];
m0_8 -> m0_5  [key=0, style=bold, color=blue];
m0_60 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m0_60 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ActivationCacheTests"];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_70  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_2  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext"];
m1_46 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext"];
m1_46 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ActivationBlockTests.ActivationBlockContext"];
m1_47 -> m1_46  [key=0, style=bold, color=blue];
m1_47 -> m1_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_12  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_13  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_29  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_47 -> m1_30  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsCreated"];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_56  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_68  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid, color=green];
m1_40 -> m1_16  [key=2, style=dotted, color=green];
m1_40 -> m1_35  [key=2, style=dotted, color=green];
m1_41 -> m1_40  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid, color=green];
m1_41 -> m1_18  [key=2, style=dotted, color=green];
m1_41 -> m1_43  [key=1, style=dashed, color=green, label=instance];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_11 -> m1_16  [key=2, style=dotted, color=green];
m1_11 -> m1_17  [key=2, style=dotted, color=green];
m1_11 -> m1_10  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid, color=green];
m1_12 -> m1_18  [key=2, style=dotted, color=green];
m1_12 -> m1_14  [key=1, style=dashed, color=green, label=weapon1];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_13 -> m1_18  [key=2, style=dotted, color=green];
m1_13 -> m1_12  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_19  [key=2, style=dotted];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_10  [key=0, style=bold, color=blue];
m1_15 -> m1_14  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_38  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid, color=green];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_21  [key=0, style=bold, color=blue];
m1_27 -> m1_26  [key=0, style=bold, color=blue];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_18  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_17 -> m1_16  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid, color=green];
m1_42 -> m1_9  [key=2, style=dotted, color=green];
m1_43 -> m1_42  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_19  [key=2, style=dotted];
m1_43 -> m1_45  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_36  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_50  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_58  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_20  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_37  [key=2, style=dotted];
m1_33 -> m1_32  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_19  [key=2, style=dotted];
m1_33 -> m1_38  [key=2, style=dotted];
m1_44 -> m1_39  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_62  [key=0, style=bold, color=blue];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_52  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_5  [key=2, style=dotted, color=green];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_45 -> m1_44  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid, color=green];
m1_24 -> m1_18  [key=2, style=dotted, color=green];
m1_25 -> m1_24  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_19  [key=2, style=dotted];
m1_25 -> m1_27  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_16  [key=2, style=dotted, color=green];
m1_22 -> m1_17  [key=2, style=dotted, color=green];
m1_23 -> m1_22  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid, color=green];
m1_23 -> m1_18  [key=2, style=dotted, color=green];
m1_23 -> m1_25  [key=1, style=dashed, color=green, label=weapon1];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_54  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_66  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid, color=green];
m1_29 -> m1_28  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid, color=green];
m1_29 -> m1_16  [key=2, style=dotted, color=green];
m1_29 -> m1_35  [key=2, style=dotted, color=green];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_7 -> m1_9  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_64  [key=0, style=bold, color=blue];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_40  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed"];
m1_48 -> m1_41  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed"];
m1_48 -> m1_42  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ActivationBlockTests.WhenBlockIsDisposed"];
m1_49 -> m1_48  [key=0, style=bold, color=blue];
m1_35 -> m1_34  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_28  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid, color=green];
m1_30 -> m1_18  [key=2, style=dotted, color=green];
m1_30 -> m1_33  [key=1, style=dashed, color=green, label=instance];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_36  [key=2, style=dotted];
m1_31 -> m1_30  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_60  [key=0, style=bold, color=blue];
m2_12 -> m2_15  [key=1, style=dashed, color=green, label="Ninject.Activation.IContext"];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m2_12 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m2_12 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m2_15 -> m2_24  [key=0, style=solid, color=green];
m2_15 -> m2_26  [key=2, style=dotted, color=green];
m2_15 -> m2_27  [key=2, style=dotted, color=green];
m2_14 -> m2_15  [key=0, style=solid, color=green];
m2_14 -> m2_25  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_23  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_28  [key=2, style=dotted];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=gtd];
m2_17 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=gtd];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_29  [key=2, style=dotted];
m2_18 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=service];
m2_18 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=service];
m2_20 -> m2_24  [key=0, style=solid];
m2_20 -> m2_26  [key=2, style=dotted];
m2_20 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_24  [key=0, style=solid];
m2_22 -> m2_26  [key=2, style=dotted];
m2_22 -> m2_32  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_33  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=0, style=solid];
m2_19 -> m2_30  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=0, style=solid];
m2_21 -> m2_30  [key=2, style=dotted];
m2_24 -> m2_12  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_3  [key=2, style=dotted, color=red];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_4 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_7 -> m2_1  [key=1, style=dashed, color=red, label="Ninject.NinjectSettings"];
m2_7 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.NinjectSettings"];
m2_26 -> m2_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Activation.IContext parent"];
m2_26 -> m2_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m2_26 -> m2_34  [key=0, style=solid];
m2_26 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m2_26 -> m2_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_7  [key=2, style=dotted];
m2_35 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_36 -> m2_26  [key=0, style=bold, color=blue];
m2_27 -> m2_0  [key=3, color=darkorchid, style=bold, label="Property variable T Site"];
m2_43 -> m2_15  [key=1, style=dashed, color=green, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m2_43 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_3  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_6 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Hooks.ConstantHook"];
m3_6 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Hooks.ConstantHook"];
m4_24 -> m4_25  [key=0, style=solid, color=green];
m4_25 -> m4_26  [key=0, style=solid, color=green];
m4_25 -> m4_10  [key=2, style=dotted, color=green];
m4_25 -> m4_11  [key=2, style=dotted, color=green];
m4_25 -> m4_28  [key=1, style=dashed, color=green, label=expected];
m4_26 -> m4_27  [key=0, style=solid, color=green];
m4_26 -> m4_12  [key=2, style=dotted, color=green];
m4_26 -> m4_30  [key=1, style=dashed, color=green, label="lambda expression"];
m4_28 -> m4_29  [key=0, style=solid, color=red];
m4_28 -> m4_15  [key=2, style=dotted, color=red];
m4_28 -> m4_16  [key=2, style=dotted, color=red];
m4_27 -> m4_28  [key=0, style=solid, color=green];
m4_27 -> m4_13  [key=2, style=dotted, color=green];
m4_27 -> m4_14  [key=2, style=dotted, color=green];
m4_27 -> m4_33  [key=1, style=dashed, color=green, label="lambda expression"];
m4_29 -> m4_24  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid, color=red];
m4_37 -> m4_38  [key=0, style=solid, color=red];
m4_37 -> m4_12  [key=2, style=dotted, color=red];
m4_37 -> m4_41  [key=1, style=dashed, color=red, label="lambda expression"];
m4_38 -> m4_39  [key=0, style=solid, color=red];
m4_38 -> m4_15  [key=2, style=dotted, color=red];
m4_38 -> m4_40  [key=2, style=dotted, color=red];
m4_39 -> m4_36  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid, color=green];
m4_5 -> m4_6  [key=0, style=solid, color=green];
m4_5 -> m4_10  [key=2, style=dotted, color=green];
m4_5 -> m4_11  [key=2, style=dotted, color=green];
m4_5 -> m4_8  [key=1, style=dashed, color=green, label=expected];
m4_6 -> m4_7  [key=0, style=solid, color=green];
m4_6 -> m4_12  [key=2, style=dotted, color=green];
m4_6 -> m4_17  [key=1, style=dashed, color=green, label="lambda expression"];
m4_8 -> m4_9  [key=0, style=solid, color=green];
m4_8 -> m4_15  [key=2, style=dotted, color=green];
m4_8 -> m4_16  [key=2, style=dotted, color=green];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_7 -> m4_13  [key=2, style=dotted, color=green];
m4_7 -> m4_14  [key=2, style=dotted, color=green];
m4_7 -> m4_21  [key=1, style=dashed, color=green, label="lambda expression"];
m4_9 -> m4_4  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid, color=red];
m4_17 -> m4_18  [key=0, style=solid, color=green];
m4_21 -> m4_22  [key=0, style=solid, color=green];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_18 -> m4_20  [key=2, style=dotted, color=green];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_30 -> m4_31  [key=0, style=solid, color=green];
m4_33 -> m4_34  [key=0, style=solid, color=green];
m4_31 -> m4_32  [key=0, style=solid, color=green];
m4_32 -> m4_30  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid, color=green];
m4_35 -> m4_33  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_3  [key=2, style=dotted, color=red];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_44 -> m4_1  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.AssemblyNameRetrieverContext"];
m4_45 -> m4_5  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName"];
m4_45 -> m4_6  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithFileName"];
m4_46 -> m4_25  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName"];
m4_46 -> m4_26  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithAssemblyName"];
m4_47 -> m4_37  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.AssemblyNameRetrieverTests.WhenGetAssemblyNamesIsCalledWithUnknownAssemblyName"];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_4 -> m5_2  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.IWeapon"];
m5_9 -> m5_10  [key=0, style=solid, color=green];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_11 -> m5_8  [key=0, style=bold, color=blue];
m5_12 -> m5_3  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Barracks"];
m5_12 -> m5_6  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Barracks"];
m5_12 -> m5_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Barracks"];
m5_12 -> m5_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Barracks"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_0  [key=3, color=green, style=bold, label="Parameter variable Ninject.Activation.IContext context"];
m6_4 -> m6_3  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=3, color=green, style=bold, label="method methodReturn object Create"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_5 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Provider<T>"];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_69 -> m7_45  [key=3, color=green, style=bold, label="Parameter variable Ninject.Activation.IContext context"];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_30  [key=2, style=dotted];
m7_70 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_70 -> m7_66  [key=0, style=bold, color=blue];
m7_71 -> m7_69  [key=0, style=bold, color=blue];
m7_41 -> m7_32  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=pi];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_75  [key=0, style=bold, color=blue];
m7_78 -> m7_75  [key=0, style=bold, color=blue];
m7_34 -> m7_35  [key=0, style=solid];
m7_39 -> m7_30  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=2, style=dotted];
m7_39 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_27  [key=2, style=dotted];
m7_37 -> m7_28  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_29  [key=2, style=dotted];
m7_38 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label="?"];
m7_36 -> m7_26  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label=swordWeakReference];
m7_36 -> m7_34  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_38  [key=0, style=bold, color=blue];
m7_35 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=sword];
m7_35 -> m7_25  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [key=2, style=dotted];
m7_42 -> m7_34  [key=0, style=bold, color=blue];
m7_42 -> m7_43  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_25  [key=2, style=dotted];
m7_13 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=sword];
m7_66 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type[]"];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBinding"];
m7_68 -> m7_69  [key=0, style=solid];
m7_67 -> m7_26  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_65  [key=0, style=bold, color=blue];
m7_32 -> m7_46  [key=0, style=solid];
m7_32 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_44 -> m7_45  [key=0, style=solid, color=green];
m7_44 -> m7_46  [key=1, style=dashed, color=green, label="Ninject.Planning.Bindings.IBindingConfiguration"];
m7_44 -> m7_47  [key=1, style=dashed, color=green, label=object];
m7_44 -> m7_42  [key=0, style=bold, color=blue];
m7_45 -> m7_46  [key=0, style=solid, color=green];
m7_45 -> m7_49  [key=2, style=dotted, color=green];
m7_45 -> m7_47  [key=1, style=dashed, color=green, label=bindingMock];
m7_46 -> m7_47  [key=0, style=solid, color=green];
m7_46 -> m7_50  [key=2, style=dotted, color=green];
m7_46 -> m7_51  [key=2, style=dotted, color=green];
m7_46 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_46 -> m7_27  [key=2, style=dotted];
m7_46 -> m7_28  [key=2, style=dotted];
m7_46 -> m7_30  [key=2, style=dotted];
m7_46 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_47 -> m7_48  [key=0, style=solid, color=green];
m7_47 -> m7_52  [key=2, style=dotted, color=green];
m7_47 -> m7_32  [key=0, style=bold, color=blue];
m7_48 -> m7_44  [key=0, style=bold, color=blue];
m7_48 -> m7_49  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_9 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid, color=green];
m7_22 -> m7_12  [key=2, style=dotted];
m7_22 -> m7_32  [key=2, style=dotted];
m7_22 -> m7_33  [key=2, style=dotted];
m7_14 -> m7_22  [key=1, style=dashed, color=green, label=swordWeakReference];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_26  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid, color=green];
m7_21 -> m7_30  [key=2, style=dotted, color=green];
m7_21 -> m7_24  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid, color=green];
m7_23 -> m7_32  [key=2, style=dotted, color=green];
m7_23 -> m7_33  [key=2, style=dotted, color=green];
m7_23 -> m7_21  [key=0, style=solid];
m7_23 -> m7_12  [key=2, style=dotted];
m7_23 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label=parentType];
m7_19 -> m7_20  [key=0, style=solid, color=green];
m7_19 -> m7_30  [key=2, style=dotted, color=green];
m7_19 -> m7_24  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_27  [key=2, style=dotted];
m7_18 -> m7_28  [key=2, style=dotted];
m7_18 -> m7_29  [key=2, style=dotted];
m7_18 -> m7_30  [key=2, style=dotted];
m7_18 -> m7_31  [key=2, style=dotted];
m7_18 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_18 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_20 -> m7_21  [key=0, style=solid, color=green];
m7_20 -> m7_31  [key=2, style=dotted, color=green];
m7_20 -> m7_12  [key=2, style=dotted];
m7_20 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label=parentType];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_27  [key=2, style=dotted];
m7_15 -> m7_28  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_26  [key=2, style=dotted];
m7_17 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=properties];
m7_17 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=properties];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_29  [key=2, style=dotted];
m7_16 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_16 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_16 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_24 -> m7_12  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_16  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_10 -> m7_15  [key=2, style=dotted, color=red];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=2, style=dotted];
m7_59 -> m7_14  [key=2, style=dotted];
m7_59 -> m7_30  [key=2, style=dotted];
m7_59 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_58 -> m7_59  [key=0, style=solid];
m7_60 -> m7_58  [key=0, style=bold, color=blue];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=2, style=dotted];
m7_50 -> m7_48  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_10  [key=2, style=dotted];
m7_6 -> m7_11  [key=2, style=dotted];
m7_6 -> m7_8  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_13  [key=2, style=dotted];
m7_7 -> m7_3  [key=0, style=bold, color=blue];
m7_7 -> m7_11  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="?"];
m7_52 -> m7_54  [key=0, style=solid, color=green];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_41  [key=2, style=dotted];
m7_53 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_45  [key=2, style=dotted];
m7_56 -> m7_58  [key=2, style=dotted];
m7_56 -> m7_59  [key=2, style=dotted];
m7_54 -> m7_52  [key=0, style=bold, color=blue];
m7_54 -> m7_55  [key=0, style=solid, color=green];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_52  [key=0, style=bold, color=blue];
m7_57 -> m7_55  [key=0, style=bold, color=blue];
m7_57 -> m7_29  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_41  [key=2, style=dotted];
m7_63 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_64 -> m7_62  [key=0, style=bold, color=blue];
m7_65 -> m7_66  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_72  [key=0, style=bold, color=blue];
m7_29 -> m7_56  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_12  [key=2, style=dotted];
m7_11 -> m7_5  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>"];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_4  [key=2, style=dotted, color=red];
m7_79 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_2  [key=1, style=dashed, color=red, label="Ninject.Selection.Selector"];
m7_79 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_79 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Selector"];
m7_80 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label="?"];
m7_81 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_82 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="?"];
m7_83 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_84 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_84 -> m7_20  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_84 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenPruneIsCalled"];
m7_85 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.ContextMock"];
m7_85 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.ContextMock"];
m7_85 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.ContextMock"];
m7_85 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.ContextMock"];
m8_144 -> m8_145  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_61  [key=2, style=dotted];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_60  [key=2, style=dotted];
m8_146 -> m8_149  [key=1, style=dashed, color=red, label=reference];
m8_146 -> m8_150  [key=1, style=dashed, color=red, label=reference];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_47  [key=2, style=dotted];
m8_147 -> m8_10  [key=2, style=dotted];
m8_147 -> m8_149  [key=1, style=dashed, color=red, label=context1];
m8_147 -> m8_152  [key=1, style=dashed, color=red, label=context1];
m8_149 -> m8_150  [key=0, style=solid, color=red];
m8_149 -> m8_62  [key=2, style=dotted, color=red];
m8_150 -> m8_151  [key=0, style=solid, color=red];
m8_150 -> m8_62  [key=2, style=dotted, color=red];
m8_148 -> m8_149  [key=0, style=solid, color=red];
m8_148 -> m8_47  [key=2, style=dotted];
m8_148 -> m8_10  [key=2, style=dotted];
m8_148 -> m8_150  [key=1, style=dashed, color=red, label=context2];
m8_148 -> m8_153  [key=1, style=dashed, color=red, label=context2];
m8_152 -> m8_153  [key=0, style=solid, color=red];
m8_152 -> m8_48  [key=2, style=dotted, color=red];
m8_152 -> m8_154  [key=1, style=dashed, color=red, label=instance1];
m8_153 -> m8_154  [key=0, style=solid, color=red];
m8_153 -> m8_48  [key=2, style=dotted, color=red];
m8_153 -> m8_155  [key=1, style=dashed, color=red, label=instance2];
m8_151 -> m8_152  [key=0, style=solid, color=red];
m8_151 -> m8_157  [key=2, style=dotted, color=red];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_49  [key=2, style=dotted];
m8_154 -> m8_50  [key=2, style=dotted];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_49  [key=2, style=dotted];
m8_155 -> m8_50  [key=2, style=dotted];
m8_156 -> m8_144  [key=0, style=bold, color=blue];
m8_128 -> m8_129  [key=0, style=solid];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_47  [key=2, style=dotted];
m8_129 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_129 -> m8_136  [key=1, style=dashed, color=red, label=scope];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_61  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_10  [key=2, style=dotted];
m8_132 -> m8_134  [key=1, style=dashed, color=red, label=context1];
m8_132 -> m8_137  [key=1, style=dashed, color=red, label=context1];
m8_136 -> m8_137  [key=0, style=solid, color=red];
m8_136 -> m8_142  [key=2, style=dotted, color=red];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_60  [key=2, style=dotted];
m8_131 -> m8_134  [key=1, style=dashed, color=red, label=reference];
m8_131 -> m8_135  [key=1, style=dashed, color=red, label=reference];
m8_134 -> m8_135  [key=0, style=solid, color=red];
m8_134 -> m8_62  [key=2, style=dotted, color=red];
m8_135 -> m8_136  [key=0, style=solid, color=red];
m8_135 -> m8_62  [key=2, style=dotted, color=red];
m8_133 -> m8_134  [key=0, style=solid, color=red];
m8_133 -> m8_47  [key=2, style=dotted];
m8_133 -> m8_10  [key=2, style=dotted];
m8_133 -> m8_135  [key=1, style=dashed, color=red, label=context2];
m8_133 -> m8_138  [key=1, style=dashed, color=red, label=context2];
m8_137 -> m8_138  [key=0, style=solid, color=red];
m8_137 -> m8_48  [key=2, style=dotted, color=red];
m8_137 -> m8_139  [key=1, style=dashed, color=red, label=instance1];
m8_138 -> m8_139  [key=0, style=solid, color=red];
m8_138 -> m8_48  [key=2, style=dotted, color=red];
m8_138 -> m8_140  [key=1, style=dashed, color=red, label=instance2];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_49  [key=2, style=dotted];
m8_139 -> m8_50  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_49  [key=2, style=dotted];
m8_140 -> m8_143  [key=2, style=dotted];
m8_141 -> m8_128  [key=0, style=bold, color=blue];
m8_174 -> m8_175  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_47  [key=2, style=dotted];
m8_175 -> m8_178  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_175 -> m8_180  [key=1, style=dashed, color=red, label=scope];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_47  [key=2, style=dotted];
m8_176 -> m8_180  [key=1, style=dashed, color=red, label=scopeOfScope];
m8_176 -> m8_181  [key=1, style=dashed, color=red, label=scopeOfScope];
m8_178 -> m8_179  [key=0, style=solid, color=red];
m8_178 -> m8_10  [key=2, style=dotted];
m8_178 -> m8_182  [key=1, style=dashed, color=red, label=context];
m8_180 -> m8_181  [key=0, style=solid, color=red];
m8_180 -> m8_10  [key=2, style=dotted, color=red];
m8_180 -> m8_60  [key=2, style=dotted, color=red];
m8_180 -> m8_62  [key=2, style=dotted, color=red];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_61  [key=2, style=dotted];
m8_177 -> m8_179  [key=1, style=dashed, color=red, label=sword];
m8_181 -> m8_182  [key=0, style=solid, color=red];
m8_181 -> m8_142  [key=2, style=dotted, color=red];
m8_179 -> m8_180  [key=0, style=solid, color=red];
m8_179 -> m8_60  [key=2, style=dotted, color=red];
m8_179 -> m8_62  [key=2, style=dotted, color=red];
m8_182 -> m8_183  [key=0, style=solid, color=red];
m8_182 -> m8_48  [key=2, style=dotted, color=red];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_49  [key=2, style=dotted];
m8_183 -> m8_50  [key=2, style=dotted];
m8_184 -> m8_174  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingConfiguration"];
m8_10 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_10 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m8_10 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m8_10 -> m8_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_52  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_75  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_81  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_90  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_105  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_115  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_129  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_175  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_176  [key=3, color=darkorchid, style=bold, label="Parameter variable object scope"];
m8_10 -> m8_60  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Planning.Bindings.IBindingConfiguration bindingConfiguration"];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_20  [key=2, style=dotted];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=contextMock];
m8_11 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=contextMock];
m8_11 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=contextMock];
m8_11 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=contextMock];
m8_11 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=contextMock];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_22  [key=2, style=dotted];
m8_13 -> m8_23  [key=2, style=dotted];
m8_13 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_24  [key=2, style=dotted];
m8_15 -> m8_23  [key=2, style=dotted];
m8_15 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_23  [key=2, style=dotted];
m8_16 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_23  [key=2, style=dotted];
m8_17 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_21  [key=2, style=dotted];
m8_12 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=bindingMock];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_22  [key=2, style=dotted];
m8_14 -> m8_23  [key=2, style=dotted];
m8_14 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_10  [key=0, style=bold, color=blue];
m8_104 -> m8_105  [key=0, style=solid];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_47  [key=2, style=dotted];
m8_105 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_61  [key=2, style=dotted];
m8_106 -> m8_110  [key=1, style=dashed, color=red, label=instance];
m8_108 -> m8_109  [key=0, style=solid, color=red];
m8_108 -> m8_10  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_60  [key=2, style=dotted];
m8_107 -> m8_109  [key=1, style=dashed, color=red, label=reference];
m8_110 -> m8_111  [key=0, style=solid, color=red];
m8_110 -> m8_102  [key=2, style=dotted, color=red];
m8_109 -> m8_110  [key=0, style=solid, color=red];
m8_109 -> m8_62  [key=2, style=dotted, color=red];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_49  [key=2, style=dotted];
m8_111 -> m8_113  [key=2, style=dotted];
m8_112 -> m8_104  [key=0, style=bold, color=blue];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_47  [key=2, style=dotted];
m8_90 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_90 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_60  [key=2, style=dotted];
m8_91 -> m8_61  [key=2, style=dotted];
m8_91 -> m8_94  [key=1, style=dashed, color=red, label=reference];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_10  [key=2, style=dotted];
m8_92 -> m8_94  [key=1, style=dashed, color=red, label=context1];
m8_93 -> m8_94  [key=0, style=solid, color=red];
m8_93 -> m8_10  [key=2, style=dotted];
m8_93 -> m8_95  [key=1, style=dashed, color=red, label=context2];
m8_94 -> m8_95  [key=0, style=solid, color=red];
m8_94 -> m8_62  [key=2, style=dotted, color=red];
m8_95 -> m8_96  [key=0, style=solid, color=red];
m8_95 -> m8_48  [key=2, style=dotted, color=red];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_49  [key=2, style=dotted];
m8_96 -> m8_50  [key=2, style=dotted];
m8_97 -> m8_89  [key=0, style=bold, color=blue];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_60  [key=2, style=dotted];
m8_73 -> m8_61  [key=2, style=dotted];
m8_73 -> m8_76  [key=1, style=dashed, color=red, label=reference];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_47  [key=2, style=dotted];
m8_74 -> m8_10  [key=2, style=dotted];
m8_74 -> m8_76  [key=1, style=dashed, color=red, label=context1];
m8_76 -> m8_77  [key=0, style=solid, color=red];
m8_76 -> m8_62  [key=2, style=dotted, color=red];
m8_75 -> m8_76  [key=0, style=solid, color=red];
m8_75 -> m8_10  [key=2, style=dotted];
m8_75 -> m8_77  [key=1, style=dashed, color=red, label=context2];
m8_77 -> m8_78  [key=0, style=solid, color=red];
m8_77 -> m8_48  [key=2, style=dotted, color=red];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_49  [key=2, style=dotted];
m8_78 -> m8_50  [key=2, style=dotted];
m8_79 -> m8_72  [key=0, style=bold, color=blue];
m8_114 -> m8_115  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_47  [key=2, style=dotted];
m8_115 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_115 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_61  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_10  [key=2, style=dotted];
m8_118 -> m8_120  [key=1, style=dashed, color=red, label=writeContext];
m8_119 -> m8_120  [key=0, style=solid, color=red];
m8_119 -> m8_10  [key=2, style=dotted];
m8_119 -> m8_121  [key=1, style=dashed, color=red, label=readContext];
m8_119 -> m8_123  [key=1, style=dashed, color=red, label=readContext];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_60  [key=2, style=dotted];
m8_117 -> m8_120  [key=1, style=dashed, color=red, label=reference];
m8_117 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_120 -> m8_121  [key=0, style=solid, color=red];
m8_120 -> m8_62  [key=2, style=dotted, color=red];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_49  [key=2, style=dotted];
m8_124 -> m8_63  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid, color=red];
m8_121 -> m8_48  [key=2, style=dotted, color=red];
m8_121 -> m8_124  [key=1, style=dashed, color=red, label=instance1];
m8_123 -> m8_124  [key=0, style=solid, color=red];
m8_123 -> m8_48  [key=2, style=dotted, color=red];
m8_123 -> m8_126  [key=1, style=dashed, color=red, label=instance2];
m8_122 -> m8_123  [key=0, style=solid, color=red];
m8_122 -> m8_102  [key=2, style=dotted, color=red];
m8_122 -> m8_125  [key=1, style=dashed, color=red, label=result];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_49  [key=2, style=dotted];
m8_125 -> m8_113  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_49  [key=2, style=dotted];
m8_126 -> m8_50  [key=2, style=dotted];
m8_127 -> m8_114  [key=0, style=bold, color=blue];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_47  [key=2, style=dotted];
m8_81 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_81 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_60  [key=2, style=dotted];
m8_82 -> m8_61  [key=2, style=dotted];
m8_82 -> m8_85  [key=1, style=dashed, color=red, label=reference];
m8_82 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_10  [key=2, style=dotted];
m8_83 -> m8_85  [key=1, style=dashed, color=red, label=context1];
m8_84 -> m8_85  [key=0, style=solid, color=red];
m8_84 -> m8_10  [key=2, style=dotted];
m8_84 -> m8_86  [key=1, style=dashed, color=red, label=context2];
m8_85 -> m8_86  [key=0, style=solid, color=red];
m8_85 -> m8_62  [key=2, style=dotted, color=red];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_49  [key=2, style=dotted];
m8_87 -> m8_63  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid, color=red];
m8_86 -> m8_48  [key=2, style=dotted, color=red];
m8_88 -> m8_80  [key=0, style=bold, color=blue];
m8_158 -> m8_159  [key=0, style=solid];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_168  [key=2, style=dotted];
m8_159 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label=scopeMock];
m8_159 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label=scopeMock];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_61  [key=2, style=dotted];
m8_162 -> m8_163  [key=0, style=solid, color=red];
m8_162 -> m8_169  [key=2, style=dotted];
m8_162 -> m8_165  [key=1, style=dashed, color=red, label=context];
m8_164 -> m8_165  [key=0, style=solid, color=red];
m8_164 -> m8_170  [key=2, style=dotted];
m8_164 -> m8_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_60  [key=2, style=dotted];
m8_161 -> m8_163  [key=1, style=dashed, color=red, label=reference];
m8_163 -> m8_164  [key=0, style=solid, color=red];
m8_163 -> m8_62  [key=2, style=dotted, color=red];
m8_165 -> m8_166  [key=0, style=solid, color=red];
m8_165 -> m8_48  [key=2, style=dotted, color=red];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_49  [key=2, style=dotted];
m8_166 -> m8_50  [key=2, style=dotted];
m8_167 -> m8_158  [key=0, style=bold, color=blue];
m8_171 -> m8_172  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_25  [key=0, style=bold, color=blue];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_28  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=2, style=dotted];
m8_33 -> m8_31  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_35  [key=0, style=bold, color=blue];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_38  [key=0, style=bold, color=blue];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="?"];
m8_173 -> m8_171  [key=0, style=bold, color=blue];
m8_98 -> m8_99  [key=0, style=solid, color=red];
m8_99 -> m8_100  [key=0, style=solid, color=red];
m8_99 -> m8_47  [key=2, style=dotted, color=red];
m8_99 -> m8_102  [key=2, style=dotted, color=red];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_49  [key=2, style=dotted];
m8_100 -> m8_103  [key=2, style=dotted];
m8_101 -> m8_98  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_9  [key=2, style=dotted];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_41 -> m8_42  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_47  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid, color=red];
m8_43 -> m8_10  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid, color=red];
m8_44 -> m8_48  [key=2, style=dotted, color=red];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_49  [key=2, style=dotted];
m8_45 -> m8_50  [key=2, style=dotted];
m8_46 -> m8_41  [key=0, style=bold, color=blue];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_60  [key=2, style=dotted];
m8_65 -> m8_61  [key=2, style=dotted];
m8_65 -> m8_68  [key=1, style=dashed, color=red, label=reference];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_47  [key=2, style=dotted];
m8_66 -> m8_10  [key=2, style=dotted];
m8_66 -> m8_68  [key=1, style=dashed, color=red, label=context1];
m8_68 -> m8_69  [key=0, style=solid, color=red];
m8_68 -> m8_62  [key=2, style=dotted, color=red];
m8_67 -> m8_68  [key=0, style=solid, color=red];
m8_67 -> m8_47  [key=2, style=dotted];
m8_67 -> m8_10  [key=2, style=dotted];
m8_67 -> m8_69  [key=1, style=dashed, color=red, label=context2];
m8_69 -> m8_70  [key=0, style=solid, color=red];
m8_69 -> m8_48  [key=2, style=dotted, color=red];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_49  [key=2, style=dotted];
m8_70 -> m8_50  [key=2, style=dotted];
m8_71 -> m8_64  [key=0, style=bold, color=blue];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_47  [key=2, style=dotted];
m8_52 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_52 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_60  [key=2, style=dotted];
m8_53 -> m8_61  [key=2, style=dotted];
m8_53 -> m8_56  [key=1, style=dashed, color=red, label=reference];
m8_53 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_10  [key=2, style=dotted];
m8_54 -> m8_56  [key=1, style=dashed, color=red, label=context1];
m8_55 -> m8_56  [key=0, style=solid, color=red];
m8_55 -> m8_10  [key=2, style=dotted];
m8_55 -> m8_57  [key=1, style=dashed, color=red, label=context2];
m8_56 -> m8_57  [key=0, style=solid, color=red];
m8_56 -> m8_62  [key=2, style=dotted, color=red];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_49  [key=2, style=dotted];
m8_58 -> m8_63  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid, color=red];
m8_57 -> m8_48  [key=2, style=dotted, color=red];
m8_59 -> m8_51  [key=0, style=bold, color=blue];
m8_185 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.CacheContext"];
m8_185 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.CacheContext"];
m8_185 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.CacheContext"];
m8_185 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.CacheContext"];
m8_186 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_44  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_56  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_57  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_68  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_69  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_76  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_186 -> m8_77  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalled"];
m8_187 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_85  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_86  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_94  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_187 -> m8_95  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenTryGetInstanceIsCalledForContextWithGenericInference"];
m8_188 -> m8_99  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_109  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_110  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_120  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_121  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_122  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_188 -> m8_123  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenReleaseIsCalled"];
m8_189 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_134  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_135  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_136  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_137  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_138  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_149  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_150  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_151  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_152  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_189 -> m8_153  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenClearIsCalled"];
m8_190 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed"];
m8_190 -> m8_163  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed"];
m8_190 -> m8_165  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenNotifiesWhenDisposedScopeIsDisposed"];
m8_191 -> m8_178  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache"];
m8_191 -> m8_179  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache"];
m8_191 -> m8_180  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache"];
m8_191 -> m8_181  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache"];
m8_191 -> m8_182  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.CacheTests.WhenScopeIsReleasedFormCache"];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_6  [key=2, style=dotted];
m9_5 -> m9_3  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid, color=green];
m9_8 -> m9_13  [key=2, style=dotted];
m9_8 -> m9_19  [key=1, style=dashed, color=green, label=sword];
m9_8 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=sword];
m9_9 -> m9_10  [key=0, style=solid, color=green];
m9_9 -> m9_14  [key=2, style=dotted, color=green];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_16  [key=2, style=dotted];
m9_11 -> m9_17  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_10 -> m9_15  [key=2, style=dotted, color=green];
m9_12 -> m9_7  [key=0, style=bold, color=blue];
m9_18 -> m9_19  [key=0, style=solid, color=green];
m9_19 -> m9_20  [key=0, style=solid, color=green];
m9_20 -> m9_18  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_21 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext"];
m9_21 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CallbackProviderTests.CallbackProviderContext"];
m9_22 -> m9_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled"];
m9_22 -> m9_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.CallbackProviderTests.WhenCreateIsCalled"];
m9_23 -> m9_19  [key=1, style=dashed, color=green, label=sword];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_27  [key=1, style=dashed, color=red, label="Ninject.Activation.IContext"];
m10_24 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m10_24 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m10_24 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m10_24 -> m10_43  [key=3, color=darkorchid, style=bold, label="method methodReturn object ResolveWithin"];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_28  [key=0, style=solid];
m10_27 -> m10_36  [key=0, style=solid, color=red];
m10_27 -> m10_38  [key=2, style=dotted, color=red];
m10_27 -> m10_39  [key=2, style=dotted, color=red];
m10_27 -> m10_40  [key=2, style=dotted, color=red];
m10_27 -> m10_27  [key=3, color=red, style=bold, label="Local variable System.Action act"];
m10_27 -> m10_28  [key=0, style=solid, color=green];
m10_27 -> m10_29  [key=2, style=dotted, color=green];
m10_32 -> m10_36  [key=0, style=solid];
m10_32 -> m10_38  [key=2, style=dotted];
m10_32 -> m10_39  [key=2, style=dotted];
m10_32 -> m10_42  [key=2, style=dotted];
m10_32 -> m10_30  [key=0, style=bold, color=blue];
m10_34 -> m10_36  [key=0, style=solid];
m10_34 -> m10_38  [key=2, style=dotted];
m10_34 -> m10_39  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid, color=green];
m10_35 -> m10_36  [key=0, style=solid, color=green];
m10_35 -> m10_43  [key=2, style=dotted];
m10_35 -> m10_29  [key=2, style=dotted, color=green];
m10_26 -> m10_27  [key=0, style=solid, color=green];
m10_26 -> m10_37  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_35  [key=0, style=solid];
m10_28 -> m10_22  [key=2, style=dotted];
m10_28 -> m10_26  [key=0, style=bold, color=blue];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_41  [key=2, style=dotted];
m10_29 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=gtd];
m10_29 -> m10_33  [key=1, style=dashed, color=red, label=gtd];
m10_30 -> m10_31  [key=0, style=solid, color=green];
m10_30 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=service];
m10_30 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=service];
m10_31 -> m10_32  [key=0, style=solid, color=green];
m10_31 -> m10_33  [key=0, style=solid, color=red];
m10_31 -> m10_34  [key=1, style=dashed, color=green, label="lambda expression"];
m10_33 -> m10_34  [key=0, style=solid, color=red];
m10_33 -> m10_35  [key=0, style=solid, color=red];
m10_36 -> m10_24  [key=0, style=bold, color=blue];
m10_36 -> m10_34  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid, color=green];
m10_126 -> m10_127  [key=0, style=solid, color=green];
m10_127 -> m10_128  [key=0, style=solid, color=green];
m10_127 -> m10_29  [key=2, style=dotted, color=green];
m10_127 -> m10_129  [key=1, style=dashed, color=green, label=bar];
m10_128 -> m10_129  [key=0, style=solid, color=green];
m10_128 -> m10_29  [key=2, style=dotted, color=green];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_50  [key=2, style=dotted];
m10_129 -> m10_51  [key=2, style=dotted];
m10_130 -> m10_126  [key=0, style=bold, color=blue];
m10_19 -> m10_20  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid, color=green];
m10_21 -> m10_25  [key=2, style=dotted, color=green];
m10_21 -> m10_19  [key=0, style=bold, color=blue];
m10_20 -> m10_21  [key=0, style=solid, color=green];
m10_20 -> m10_23  [key=2, style=dotted];
m10_20 -> m10_24  [key=2, style=dotted];
m10_20 -> m10_22  [key=2, style=dotted];
m10_22 -> m10_19  [key=0, style=bold, color=blue];
m10_59 -> m10_60  [key=0, style=solid, color=green];
m10_59 -> m10_62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> ReadConstraintFromTarget"];
m10_59 -> m10_65  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool> ReadConstraintFromTarget"];
m10_59 -> m10_25  [key=2, style=dotted, color=green];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_7  [key=2, style=dotted];
m10_60 -> m10_67  [key=2, style=dotted];
m10_60 -> m10_68  [key=2, style=dotted];
m10_60 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m10_60 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m10_60 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m10_60 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m10_60 -> m10_57  [key=0, style=bold, color=blue];
m10_61 -> m10_62  [key=0, style=solid, color=green];
m10_61 -> m10_63  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_65  [key=0, style=solid];
m10_63 -> m10_61  [key=0, style=bold, color=blue];
m10_64 -> m10_66  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid, color=green];
m10_65 -> m10_66  [key=0, style=solid, color=green];
m10_65 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m10_65 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m10_65 -> m10_29  [key=2, style=dotted, color=green];
m10_62 -> m10_66  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid, color=green];
m10_62 -> m10_33  [key=2, style=dotted, color=green];
m10_62 -> m10_64  [key=1, style=dashed, color=green, label="lambda expression"];
m10_66 -> m10_59  [key=0, style=bold, color=blue];
m10_66 -> m10_64  [key=0, style=bold, color=blue];
m10_117 -> m10_118  [key=0, style=solid, color=green];
m10_118 -> m10_119  [key=0, style=solid, color=green];
m10_118 -> m10_33  [key=2, style=dotted, color=green];
m10_118 -> m10_120  [key=1, style=dashed, color=green, label="lambda expression"];
m10_119 -> m10_117  [key=0, style=bold, color=blue];
m10_67 -> m10_68  [key=0, style=solid, color=green];
m10_68 -> m10_69  [key=0, style=solid, color=green];
m10_68 -> m10_14  [key=2, style=dotted, color=green];
m10_68 -> m10_15  [key=2, style=dotted, color=green];
m10_68 -> m10_16  [key=2, style=dotted, color=green];
m10_69 -> m10_70  [key=0, style=solid, color=green];
m10_69 -> m10_14  [key=2, style=dotted, color=green];
m10_69 -> m10_15  [key=2, style=dotted, color=green];
m10_69 -> m10_16  [key=2, style=dotted, color=green];
m10_69 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m10_70 -> m10_71  [key=0, style=solid, color=green];
m10_70 -> m10_14  [key=2, style=dotted, color=green];
m10_70 -> m10_15  [key=2, style=dotted, color=green];
m10_70 -> m10_16  [key=2, style=dotted, color=green];
m10_70 -> m10_72  [key=2, style=dotted];
m10_70 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_71 -> m10_67  [key=0, style=bold, color=blue];
m10_71 -> m10_69  [key=0, style=bold, color=blue];
m10_43 -> m10_50  [key=0, style=solid];
m10_43 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m10_43 -> m10_24  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Activation.IContext parent"];
m10_43 -> m10_41  [key=0, style=bold, color=blue];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_48  [key=2, style=dotted];
m10_50 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=request];
m10_52 -> m10_53  [key=0, style=solid, color=green];
m10_52 -> m10_49  [key=2, style=dotted];
m10_52 -> m10_54  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_53 -> m10_43  [key=0, style=bold, color=blue];
m10_53 -> m10_54  [key=0, style=solid, color=green];
m10_53 -> m10_14  [key=2, style=dotted, color=green];
m10_53 -> m10_15  [key=2, style=dotted, color=green];
m10_53 -> m10_16  [key=2, style=dotted, color=green];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_60  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_10  [key=2, style=dotted];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_14  [key=2, style=dotted, color=green];
m10_9 -> m10_15  [key=2, style=dotted, color=green];
m10_9 -> m10_16  [key=2, style=dotted, color=green];
m10_113 -> m10_114  [key=0, style=solid, color=green];
m10_114 -> m10_115  [key=0, style=solid, color=green];
m10_114 -> m10_14  [key=2, style=dotted, color=green];
m10_114 -> m10_15  [key=2, style=dotted, color=green];
m10_114 -> m10_16  [key=2, style=dotted, color=green];
m10_115 -> m10_116  [key=0, style=solid, color=green];
m10_115 -> m10_14  [key=2, style=dotted, color=green];
m10_115 -> m10_15  [key=2, style=dotted, color=green];
m10_115 -> m10_16  [key=2, style=dotted, color=green];
m10_116 -> m10_113  [key=0, style=bold, color=blue];
m10_72 -> m10_73  [key=0, style=solid, color=green];
m10_123 -> m10_124  [key=0, style=solid, color=green];
m10_124 -> m10_125  [key=0, style=solid, color=green];
m10_124 -> m10_29  [key=2, style=dotted, color=green];
m10_125 -> m10_123  [key=0, style=bold, color=blue];
m10_17 -> m10_15  [key=0, style=bold, color=blue];
m10_38 -> m10_39  [key=0, style=solid, color=green];
m10_38 -> m10_14  [key=2, style=dotted, color=green];
m10_38 -> m10_15  [key=2, style=dotted, color=green];
m10_38 -> m10_16  [key=2, style=dotted, color=green];
m10_38 -> m10_44  [key=0, style=solid];
m10_38 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m10_38 -> m10_26  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m10_38 -> m10_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type service"];
m10_38 -> m10_24  [key=3, color=darkorchid, style=bold, label="Parameter variable Ninject.Activation.IContext parent"];
m10_39 -> m10_40  [key=0, style=solid, color=green];
m10_39 -> m10_14  [key=2, style=dotted, color=green];
m10_39 -> m10_15  [key=2, style=dotted, color=green];
m10_39 -> m10_16  [key=2, style=dotted, color=green];
m10_40 -> m10_37  [key=0, style=bold, color=blue];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid, color=green];
m10_106 -> m10_107  [key=0, style=solid, color=green];
m10_106 -> m10_90  [key=2, style=dotted, color=green];
m10_106 -> m10_91  [key=2, style=dotted, color=green];
m10_107 -> m10_107  [key=3, color=green, style=bold, label="Local variable System.Action act"];
m10_107 -> m10_108  [key=0, style=solid, color=green];
m10_108 -> m10_33  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_109 -> m10_105  [key=0, style=bold, color=blue];
m10_98 -> m10_99  [key=0, style=solid, color=green];
m10_99 -> m10_99  [key=3, color=green, style=bold, label="Local variable System.Action act"];
m10_99 -> m10_100  [key=0, style=solid, color=green];
m10_100 -> m10_33  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_101 -> m10_98  [key=0, style=bold, color=blue];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_50  [key=2, style=dotted];
m10_48 -> m10_51  [key=2, style=dotted];
m10_42 -> m10_43  [key=0, style=solid, color=green];
m10_42 -> m10_29  [key=2, style=dotted, color=green];
m10_10 -> m10_0  [key=3, color=darkorchid, style=bold, label="Property variable System.Reflection.MemberInfo Member"];
m10_10 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_14  [key=2, style=dotted, color=green];
m10_10 -> m10_15  [key=2, style=dotted, color=green];
m10_10 -> m10_16  [key=2, style=dotted, color=green];
m10_44 -> m10_45  [key=0, style=solid, color=green];
m10_44 -> m10_48  [key=2, style=dotted];
m10_44 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=request];
m10_45 -> m10_46  [key=0, style=solid, color=green];
m10_45 -> m10_29  [key=2, style=dotted, color=green];
m10_45 -> m10_47  [key=1, style=dashed, color=green, label=foo];
m10_45 -> m10_48  [key=1, style=dashed, color=green, label=foo];
m10_46 -> m10_47  [key=0, style=solid, color=green];
m10_46 -> m10_29  [key=2, style=dotted, color=green];
m10_46 -> m10_48  [key=1, style=dashed, color=green, label=bar];
m10_46 -> m10_49  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_50  [key=2, style=dotted];
m10_47 -> m10_51  [key=2, style=dotted];
m10_47 -> m10_38  [key=0, style=bold, color=blue];
m10_49 -> m10_44  [key=0, style=bold, color=blue];
m10_95 -> m10_96  [key=0, style=solid, color=green];
m10_96 -> m10_97  [key=0, style=solid, color=green];
m10_96 -> m10_29  [key=2, style=dotted, color=green];
m10_97 -> m10_95  [key=0, style=bold, color=blue];
m10_76 -> m10_77  [key=0, style=solid, color=green];
m10_76 -> m10_29  [key=2, style=dotted, color=green];
m10_76 -> m10_79  [key=1, style=dashed, color=green, label=foo];
m10_76 -> m10_81  [key=1, style=dashed, color=green, label=foo];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_11 -> m10_14  [key=2, style=dotted, color=green];
m10_11 -> m10_17  [key=2, style=dotted, color=green];
m10_11 -> m10_18  [key=2, style=dotted, color=green];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_12 -> m10_14  [key=2, style=dotted, color=green];
m10_12 -> m10_17  [key=2, style=dotted, color=green];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_13 -> m10_8  [key=0, style=bold, color=blue];
m10_54 -> m10_55  [key=0, style=solid, color=green];
m10_54 -> m10_14  [key=2, style=dotted, color=green];
m10_54 -> m10_15  [key=2, style=dotted, color=green];
m10_54 -> m10_16  [key=2, style=dotted, color=green];
m10_55 -> m10_56  [key=0, style=solid, color=green];
m10_55 -> m10_14  [key=2, style=dotted, color=green];
m10_55 -> m10_15  [key=2, style=dotted, color=green];
m10_55 -> m10_16  [key=2, style=dotted, color=green];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_58  [key=2, style=dotted];
m10_56 -> m10_52  [key=0, style=bold, color=blue];
m10_57 -> m10_55  [key=0, style=bold, color=blue];
m10_57 -> m10_58  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid, color=green];
m10_93 -> m10_94  [key=0, style=solid, color=green];
m10_93 -> m10_29  [key=2, style=dotted, color=green];
m10_94 -> m10_92  [key=0, style=bold, color=blue];
m10_120 -> m10_121  [key=0, style=solid, color=green];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_76  [key=2, style=dotted];
m10_74 -> m10_72  [key=0, style=bold, color=blue];
m10_73 -> m10_74  [key=0, style=solid, color=green];
m10_73 -> m10_29  [key=2, style=dotted, color=green];
m10_75 -> m10_73  [key=0, style=bold, color=blue];
m10_75 -> m10_76  [key=0, style=solid, color=green];
m10_103 -> m10_104  [key=0, style=solid, color=green];
m10_103 -> m10_29  [key=2, style=dotted, color=green];
m10_102 -> m10_103  [key=0, style=solid, color=green];
m10_104 -> m10_102  [key=0, style=bold, color=blue];
m10_111 -> m10_112  [key=0, style=solid, color=green];
m10_111 -> m10_29  [key=2, style=dotted, color=green];
m10_110 -> m10_111  [key=0, style=solid, color=green];
m10_112 -> m10_110  [key=0, style=bold, color=blue];
m10_121 -> m10_122  [key=0, style=solid, color=green];
m10_121 -> m10_29  [key=2, style=dotted, color=green];
m10_122 -> m10_120  [key=0, style=bold, color=blue];
m10_58 -> m10_59  [key=0, style=solid, color=green];
m10_58 -> m10_23  [key=2, style=dotted];
m10_58 -> m10_24  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid, color=green];
m10_84 -> m10_85  [key=0, style=solid, color=green];
m10_84 -> m10_90  [key=2, style=dotted, color=green];
m10_84 -> m10_91  [key=2, style=dotted, color=green];
m10_85 -> m10_86  [key=0, style=solid, color=green];
m10_85 -> m10_14  [key=2, style=dotted, color=green];
m10_85 -> m10_17  [key=2, style=dotted, color=green];
m10_86 -> m10_87  [key=0, style=solid, color=green];
m10_86 -> m10_14  [key=2, style=dotted, color=green];
m10_86 -> m10_17  [key=2, style=dotted, color=green];
m10_87 -> m10_88  [key=0, style=solid, color=green];
m10_87 -> m10_14  [key=2, style=dotted, color=green];
m10_87 -> m10_17  [key=2, style=dotted, color=green];
m10_88 -> m10_89  [key=0, style=solid, color=green];
m10_88 -> m10_14  [key=2, style=dotted, color=green];
m10_88 -> m10_17  [key=2, style=dotted, color=green];
m10_89 -> m10_83  [key=0, style=bold, color=blue];
m10_15 -> m10_16  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid, color=green];
m10_77 -> m10_29  [key=2, style=dotted, color=green];
m10_77 -> m10_79  [key=1, style=dashed, color=green, label=bar];
m10_77 -> m10_80  [key=1, style=dashed, color=green, label=bar];
m10_77 -> m10_1  [key=1, style=dashed, color=red, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_27  [key=1, style=dashed, color=red, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_77 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Targets.Target<T>"];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_50  [key=2, style=dotted];
m10_79 -> m10_51  [key=2, style=dotted];
m10_79 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingMetadata"];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_50  [key=2, style=dotted];
m10_81 -> m10_51  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid, color=green];
m10_78 -> m10_29  [key=2, style=dotted, color=green];
m10_78 -> m10_80  [key=1, style=dashed, color=green, label=baz];
m10_78 -> m10_81  [key=1, style=dashed, color=green, label=baz];
m10_78 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_50  [key=2, style=dotted];
m10_80 -> m10_51  [key=2, style=dotted];
m10_82 -> m10_75  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid, color=green];
m10_0 -> m10_1  [key=0, style=solid, color=red];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label=T];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_6  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [key=2, style=dotted];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m10_155 -> m10_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_12  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_21  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_27  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_31  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_155 -> m10_35  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors"];
m10_156 -> m10_38  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m10_156 -> m10_39  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m10_156 -> m10_42  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m10_156 -> m10_45  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m10_156 -> m10_46  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties"];
m10_157 -> m10_53  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_157 -> m10_54  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_157 -> m10_55  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_157 -> m10_59  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_157 -> m10_62  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_157 -> m10_65  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors"];
m10_158 -> m10_68  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_69  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_70  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_73  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_76  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_77  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_158 -> m10_78  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties"];
m10_159 -> m10_84  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_85  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_86  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_87  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_88  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_93  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_96  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_99  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_103  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_106  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_107  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_159 -> m10_111  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveOpenGenericCircularReferenceBetweenConstructors"];
m10_160 -> m10_114  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_115  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_118  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_121  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_124  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_127  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m10_160 -> m10_128  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructorAndProperty"];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid, color=green];
m12_8 -> m12_16  [key=2, style=dotted];
m12_8 -> m12_17  [key=2, style=dotted];
m12_8 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=expected];
m12_8 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=expected];
m12_9 -> m12_10  [key=0, style=solid, color=green];
m12_9 -> m12_9  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IEnumerable<System.Reflection.Assembly> actual"];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_25  [key=2, style=dotted];
m12_14 -> m12_21  [key=2, style=dotted];
m12_14 -> m12_26  [key=2, style=dotted];
m12_14 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_10 -> m12_18  [key=2, style=dotted, color=red];
m12_10 -> m12_19  [key=2, style=dotted, color=red];
m12_10 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_10 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_10 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=actual];
m12_10 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=actual];
m12_10 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=actual];
m12_11 -> m12_12  [key=0, style=solid, color=red];
m12_11 -> m12_20  [key=2, style=dotted, color=red];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_21  [key=2, style=dotted];
m12_12 -> m12_22  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_23  [key=2, style=dotted];
m12_13 -> m12_21  [key=2, style=dotted];
m12_13 -> m12_24  [key=2, style=dotted];
m12_15 -> m12_7  [key=0, style=bold, color=blue];
m12_37 -> m12_38  [key=0, style=solid, color=green];
m12_38 -> m12_39  [key=0, style=solid, color=green];
m12_38 -> m12_20  [key=2, style=dotted, color=green];
m12_39 -> m12_40  [key=0, style=solid, color=red];
m12_39 -> m12_41  [key=2, style=dotted, color=red];
m12_39 -> d14  [key=2, style=dotted, color=red];
m12_39 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_40 -> m12_37  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_4  [key=2, style=dotted, color=green];
m12_2 -> m12_3  [key=0, style=solid, color=red];
m12_2 -> m12_5  [key=2, style=dotted, color=red];
m12_2 -> m12_6  [key=2, style=dotted, color=red];
m12_3 -> m12_0  [key=0, style=bold, color=blue];
m12_46 -> m12_47  [key=0, style=solid, color=red];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_17  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid, color=red];
m12_31 -> m12_32  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid, color=red];
m12_28 -> m12_19  [key=2, style=dotted, color=red];
m12_28 -> m12_30  [key=2, style=dotted, color=red];
m12_29 -> m12_27  [key=0, style=bold, color=blue];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_31  [key=0, style=bold, color=blue];
m12_36 -> m12_34  [key=0, style=bold, color=blue];
m12_43 -> m12_44  [key=0, style=solid, color=red];
m12_44 -> m12_45  [key=0, style=solid, color=red];
m12_44 -> m12_19  [key=2, style=dotted, color=red];
m12_44 -> m12_30  [key=2, style=dotted, color=red];
m12_44 -> m12_46  [key=1, style=dashed, color=red, label="lambda expression"];
m12_45 -> m12_43  [key=0, style=bold, color=blue];
m12_47 -> m12_48  [key=0, style=solid, color=red];
m12_47 -> m12_49  [key=2, style=dotted, color=red];
m12_48 -> m12_46  [key=0, style=bold, color=blue];
m12_50 -> m12_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext"];
m12_50 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext"];
m12_51 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m12_51 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m12_51 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m12_51 -> m12_38  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m12_51 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m12_52 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_9  [key=1, style=dashed, color=red, label="Ninject.Modules.INinjectModule"];
m13_7 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.INinjectModule"];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_17  [key=2, style=dotted, color=red];
m13_8 -> m13_10  [key=1, style=dashed, color=red, label=sw];
m13_8 -> m13_11  [key=1, style=dashed, color=red, label=sw];
m13_8 -> m13_12  [key=1, style=dashed, color=red, label=sw];
m13_8 -> m13_13  [key=1, style=dashed, color=red, label=sw];
m13_8 -> m13_14  [key=1, style=dashed, color=red, label=sw];
m13_8 -> m13_15  [key=1, style=dashed, color=red, label=sw];
m13_9 -> m13_10  [key=0, style=solid, color=red];
m13_9 -> m13_18  [key=2, style=dotted, color=red];
m13_9 -> m13_19  [key=2, style=dotted, color=red];
m13_9 -> m13_20  [key=2, style=dotted, color=red];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_18  [key=2, style=dotted];
m13_10 -> m13_19  [key=2, style=dotted];
m13_10 -> m13_21  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_22  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_22  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_22  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid, color=red];
m13_14 -> m13_22  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid, color=red];
m13_15 -> m13_23  [key=2, style=dotted, color=red];
m13_16 -> m13_7  [key=0, style=bold, color=blue];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_32 -> m13_38  [key=1, style=dashed, color=red, label="string[]"];
m13_32 -> m13_39  [key=1, style=dashed, color=red, label="string[]"];
m13_32 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_32 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_17  [key=2, style=dotted];
m13_33 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_39  [key=1, style=dashed, color=red, label=sw];
m13_33 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_33 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_19  [key=2, style=dotted];
m13_34 -> m13_21  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid, color=red];
m13_38 -> m13_41  [key=0, style=solid, color=red];
m13_39 -> m13_40  [key=0, style=solid, color=red];
m13_39 -> m13_20  [key=2, style=dotted, color=red];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_47  [key=2, style=dotted];
m13_42 -> m13_22  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_19  [key=2, style=dotted];
m13_44 -> m13_21  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_22  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid, color=red];
m13_36 -> m13_22  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_22  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_22  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_23  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid, color=red];
m13_37 -> m13_39  [key=1, style=dashed, color=red, label=i];
m13_37 -> m13_40  [key=1, style=dashed, color=red, label=i];
m13_40 -> m13_38  [key=0, style=solid, color=red];
m13_40 -> m13_40  [key=1, style=dashed, color=red, label=i];
m13_46 -> m13_32  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid, color=red];
m13_24 -> m13_26  [key=1, style=dashed, color=red, label=string];
m13_25 -> m13_26  [key=0, style=solid, color=red];
m13_25 -> m13_17  [key=2, style=dotted, color=red];
m13_25 -> m13_27  [key=1, style=dashed, color=red, label=sw];
m13_25 -> m13_28  [key=1, style=dashed, color=red, label=sw];
m13_25 -> m13_29  [key=1, style=dashed, color=red, label=sw];
m13_25 -> m13_30  [key=1, style=dashed, color=red, label=sw];
m13_26 -> m13_27  [key=0, style=solid, color=red];
m13_26 -> m13_21  [key=2, style=dotted, color=red];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_22  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_22  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_22  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_23  [key=2, style=dotted];
m13_31 -> m13_24  [key=0, style=bold, color=blue];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_92  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_90 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_17  [key=2, style=dotted];
m13_91 -> m13_93  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_94  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_98  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_91 -> m13_100  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_19  [key=2, style=dotted];
m13_92 -> m13_76  [key=2, style=dotted];
m13_92 -> m13_20  [key=2, style=dotted];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_47  [key=2, style=dotted];
m13_96 -> m13_22  [key=2, style=dotted];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_22  [key=2, style=dotted];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_77  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_22  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_22  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_22  [key=2, style=dotted];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_22  [key=2, style=dotted];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_23  [key=2, style=dotted];
m13_101 -> m13_90  [key=0, style=bold, color=blue];
m13_173 -> m13_177  [key=0, style=solid];
m13_173 -> m13_178  [key=1, style=dashed, color=darkseagreen4, label="System.Attribute"];
m13_173 -> m13_180  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_173 -> m13_181  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_177 -> m13_178  [key=0, style=solid];
m13_177 -> m13_174  [key=2, style=dotted];
m13_178 -> m13_179  [key=0, style=solid];
m13_178 -> m13_18  [key=2, style=dotted];
m13_178 -> m13_19  [key=2, style=dotted];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_174  [key=2, style=dotted];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_174  [key=2, style=dotted];
m13_179 -> m13_180  [key=0, style=solid];
m13_179 -> m13_183  [key=2, style=dotted];
m13_179 -> m13_184  [key=2, style=dotted];
m13_179 -> m13_179  [key=1, style=dashed, color=darkseagreen4, label=name];
m13_182 -> m13_173  [key=0, style=bold, color=blue];
m13_159 -> m13_160  [key=0, style=solid];
m13_159 -> m13_161  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_162  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
m13_159 -> m13_163  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_164  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
m13_159 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_167  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_168  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_169  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_159 -> m13_170  [key=1, style=dashed, color=darkseagreen4, label="System.IO.StringWriter"];
m13_160 -> m13_161  [key=0, style=solid];
m13_160 -> m13_162  [key=0, style=solid];
m13_160 -> m13_172  [key=2, style=dotted];
m13_161 -> m13_160  [key=0, style=solid];
m13_161 -> m13_173  [key=2, style=dotted];
m13_162 -> m13_163  [key=0, style=solid];
m13_162 -> m13_174  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_174  [key=2, style=dotted];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> m13_170  [key=0, style=solid];
m13_164 -> m13_175  [key=2, style=dotted];
m13_164 -> m13_167  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m13_164 -> m13_169  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m13_166 -> m13_165  [key=0, style=solid];
m13_166 -> m13_173  [key=2, style=dotted];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_19  [key=2, style=dotted];
m13_167 -> m13_174  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_168 -> m13_174  [key=2, style=dotted];
m13_169 -> m13_164  [key=0, style=solid];
m13_169 -> m13_174  [key=2, style=dotted];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_22  [key=2, style=dotted];
m13_165 -> m13_166  [key=0, style=solid];
m13_165 -> m13_167  [key=0, style=solid];
m13_165 -> m13_176  [key=2, style=dotted];
m13_171 -> m13_159  [key=0, style=bold, color=blue];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_78 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_78 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_17  [key=2, style=dotted];
m13_79 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_86  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_79 -> m13_88  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_21  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_19  [key=2, style=dotted];
m13_81 -> m13_20  [key=2, style=dotted];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_21  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_77  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_22  [key=2, style=dotted];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_22  [key=2, style=dotted];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_22  [key=2, style=dotted];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_22  [key=2, style=dotted];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_23  [key=2, style=dotted];
m13_89 -> m13_78  [key=0, style=bold, color=blue];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_113  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_17  [key=2, style=dotted];
m13_112 -> m13_114  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_115  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_116  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_117  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_118  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_119  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_120  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_112 -> m13_121  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_113 -> m13_114  [key=0, style=solid];
m13_113 -> m13_19  [key=2, style=dotted];
m13_113 -> m13_21  [key=2, style=dotted];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_22  [key=2, style=dotted];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_77  [key=2, style=dotted];
m13_116 -> m13_117  [key=0, style=solid];
m13_116 -> m13_22  [key=2, style=dotted];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_22  [key=2, style=dotted];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_22  [key=2, style=dotted];
m13_119 -> m13_120  [key=0, style=solid];
m13_119 -> m13_22  [key=2, style=dotted];
m13_120 -> m13_121  [key=0, style=solid];
m13_120 -> m13_22  [key=2, style=dotted];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_23  [key=2, style=dotted];
m13_122 -> m13_111  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_62 -> m13_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_62 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_17  [key=2, style=dotted];
m13_63 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_68  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_69  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_72  [key=1, style=dashed, color=red, label=sw];
m13_63 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_63 -> m13_74  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_19  [key=2, style=dotted];
m13_64 -> m13_76  [key=2, style=dotted];
m13_64 -> m13_20  [key=2, style=dotted];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_47  [key=2, style=dotted];
m13_68 -> m13_22  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_19  [key=2, style=dotted];
m13_70 -> m13_21  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_22  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_77  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_22  [key=2, style=dotted];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_22  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid, color=red];
m13_71 -> m13_22  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid, color=red];
m13_72 -> m13_22  [key=2, style=dotted, color=red];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_22  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_23  [key=2, style=dotted];
m13_75 -> m13_62  [key=0, style=bold, color=blue];
m13_123 -> m13_124  [key=0, style=solid];
m13_123 -> m13_125  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_123 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_123 -> m13_128  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_17  [key=2, style=dotted];
m13_124 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_124 -> m13_127  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_124 -> m13_128  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_124 -> m13_129  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_124 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_124 -> m13_131  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_19  [key=2, style=dotted];
m13_125 -> m13_21  [key=2, style=dotted];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_21  [key=2, style=dotted];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_47  [key=2, style=dotted];
m13_128 -> m13_22  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_22  [key=2, style=dotted];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_22  [key=2, style=dotted];
m13_130 -> m13_131  [key=0, style=solid];
m13_130 -> m13_22  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_23  [key=2, style=dotted];
m13_132 -> m13_123  [key=0, style=bold, color=blue];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=2, style=dotted];
m13_5 -> m13_3  [key=0, style=bold, color=blue];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_102 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_17  [key=2, style=dotted];
m13_103 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_103 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_103 -> m13_107  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_103 -> m13_108  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_103 -> m13_109  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_104 -> m13_105  [key=0, style=solid];
m13_104 -> m13_19  [key=2, style=dotted];
m13_104 -> m13_21  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_19  [key=2, style=dotted];
m13_105 -> m13_21  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_77  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_22  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_22  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_23  [key=2, style=dotted];
m13_110 -> m13_102  [key=0, style=bold, color=blue];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_135  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_133 -> m13_138  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_17  [key=2, style=dotted];
m13_134 -> m13_136  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_134 -> m13_137  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_134 -> m13_138  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_134 -> m13_139  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_134 -> m13_140  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_134 -> m13_141  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_135 -> m13_136  [key=0, style=solid];
m13_135 -> m13_19  [key=2, style=dotted];
m13_135 -> m13_76  [key=2, style=dotted];
m13_135 -> m13_20  [key=2, style=dotted];
m13_138 -> m13_139  [key=0, style=solid];
m13_138 -> m13_47  [key=2, style=dotted];
m13_138 -> m13_22  [key=2, style=dotted];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_22  [key=2, style=dotted];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_22  [key=2, style=dotted];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_22  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_22  [key=2, style=dotted];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_23  [key=2, style=dotted];
m13_142 -> m13_133  [key=0, style=bold, color=blue];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_48 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_48 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IRequest"];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_17  [key=2, style=dotted];
m13_49 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_54  [key=1, style=dashed, color=red, label=sw];
m13_49 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_56  [key=1, style=dashed, color=red, label=sw];
m13_49 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_49 -> m13_59  [key=1, style=dashed, color=red, label=sw];
m13_49 -> m13_60  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_19  [key=2, style=dotted];
m13_50 -> m13_21  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid, color=red];
m13_53 -> m13_47  [key=2, style=dotted];
m13_53 -> m13_22  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid, color=red];
m13_55 -> m13_19  [key=2, style=dotted];
m13_55 -> m13_21  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_22  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_22  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid, color=red];
m13_54 -> m13_22  [key=2, style=dotted, color=red];
m13_56 -> m13_57  [key=0, style=solid, color=red];
m13_56 -> m13_22  [key=2, style=dotted, color=red];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_22  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid, color=red];
m13_58 -> m13_22  [key=2, style=dotted];
m13_59 -> m13_60  [key=0, style=solid, color=red];
m13_59 -> m13_22  [key=2, style=dotted, color=red];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_23  [key=2, style=dotted];
m13_61 -> m13_48  [key=0, style=bold, color=blue];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_145  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_143 -> m13_149  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.IGrouping<int, Ninject.Planning.Directives.ConstructorInjectionDirective>"];
m13_143 -> m13_153  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_17  [key=2, style=dotted];
m13_144 -> m13_146  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_147  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_148  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_150  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_151  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_152  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_153  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_154  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_155  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_144 -> m13_157  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_145 -> m13_146  [key=0, style=solid];
m13_145 -> m13_19  [key=2, style=dotted];
m13_145 -> m13_76  [key=2, style=dotted];
m13_145 -> m13_20  [key=2, style=dotted];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_151  [key=0, style=solid];
m13_153 -> m13_154  [key=0, style=solid];
m13_153 -> m13_47  [key=2, style=dotted];
m13_153 -> m13_22  [key=2, style=dotted];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_22  [key=2, style=dotted];
m13_147 -> m13_148  [key=0, style=solid];
m13_147 -> m13_77  [key=2, style=dotted];
m13_148 -> m13_149  [key=0, style=solid];
m13_148 -> m13_22  [key=2, style=dotted];
m13_150 -> m13_149  [key=0, style=solid];
m13_150 -> m13_159  [key=2, style=dotted];
m13_151 -> m13_152  [key=0, style=solid];
m13_151 -> m13_77  [key=2, style=dotted];
m13_152 -> m13_153  [key=0, style=solid];
m13_152 -> m13_22  [key=2, style=dotted];
m13_154 -> m13_155  [key=0, style=solid];
m13_154 -> m13_22  [key=2, style=dotted];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_22  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_22  [key=2, style=dotted];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_23  [key=2, style=dotted];
m13_158 -> m13_143  [key=0, style=bold, color=blue];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_15  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_16  [key=2, style=dotted];
m14_13 -> m14_17  [key=2, style=dotted];
m14_14 -> m14_11  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_8  [key=2, style=dotted];
m14_2 -> m14_9  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_3 -> m14_9  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_9  [key=2, style=dotted];
m14_4 -> m14_10  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_8  [key=2, style=dotted];
m14_5 -> m14_9  [key=2, style=dotted];
m14_5 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_0  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid, color=green];
m14_26 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label=bool];
m14_27 -> m14_28  [key=0, style=solid, color=green];
m14_27 -> m14_30  [key=0, style=solid, color=green];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_33  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_32  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_31 -> m14_26  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_15  [key=2, style=dotted];
m14_19 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label=hammer];
m14_19 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=hammer];
m14_19 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label=hammer];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_16  [key=2, style=dotted];
m14_20 -> m14_25  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_16  [key=2, style=dotted];
m14_21 -> m14_17  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_16  [key=2, style=dotted];
m14_22 -> m14_17  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_16  [key=2, style=dotted];
m14_23 -> m14_17  [key=2, style=dotted];
m14_24 -> m14_18  [key=0, style=bold, color=blue];
m14_34 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_27  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m14_34 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalAttributeBindingTests"];
m15_207 -> m15_208  [key=0, style=solid, color=green];
m15_208 -> m15_209  [key=0, style=solid, color=green];
m15_208 -> m15_7  [key=2, style=dotted, color=green];
m15_208 -> m15_8  [key=2, style=dotted, color=green];
m15_209 -> m15_210  [key=0, style=solid, color=green];
m15_209 -> m15_7  [key=2, style=dotted, color=green];
m15_209 -> m15_8  [key=2, style=dotted, color=green];
m15_210 -> m15_211  [key=0, style=solid, color=green];
m15_210 -> m15_7  [key=2, style=dotted, color=green];
m15_210 -> m15_8  [key=2, style=dotted, color=green];
m15_210 -> m15_150  [key=2, style=dotted, color=green];
m15_211 -> m15_212  [key=0, style=solid, color=green];
m15_211 -> m15_7  [key=2, style=dotted, color=green];
m15_211 -> m15_10  [key=2, style=dotted, color=green];
m15_212 -> m15_213  [key=0, style=solid, color=green];
m15_212 -> m15_7  [key=2, style=dotted, color=green];
m15_212 -> m15_10  [key=2, style=dotted, color=green];
m15_213 -> m15_214  [key=0, style=solid, color=green];
m15_213 -> m15_7  [key=2, style=dotted, color=green];
m15_213 -> m15_10  [key=2, style=dotted, color=green];
m15_214 -> m15_215  [key=0, style=solid, color=green];
m15_214 -> m15_11  [key=2, style=dotted, color=green];
m15_214 -> m15_217  [key=1, style=dashed, color=green, label=warrior];
m15_215 -> m15_216  [key=0, style=solid, color=green];
m15_215 -> m15_11  [key=2, style=dotted, color=green];
m15_215 -> m15_218  [key=1, style=dashed, color=green, label=barracks];
m15_217 -> m15_13  [key=2, style=dotted];
m15_217 -> m15_218  [key=0, style=solid];
m15_217 -> m15_12  [key=2, style=dotted];
m15_216 -> m15_217  [key=0, style=solid, color=green];
m15_216 -> m15_11  [key=2, style=dotted, color=green];
m15_216 -> m15_219  [key=1, style=dashed, color=green, label=ninja];
m15_218 -> m15_13  [key=2, style=dotted];
m15_218 -> m15_219  [key=0, style=solid];
m15_218 -> m15_12  [key=2, style=dotted];
m15_219 -> m15_13  [key=2, style=dotted];
m15_219 -> m15_220  [key=0, style=solid];
m15_219 -> m15_12  [key=2, style=dotted];
m15_220 -> m15_207  [key=0, style=bold, color=blue];
m15_136 -> m15_137  [key=0, style=solid, color=green];
m15_137 -> m15_138  [key=0, style=solid, color=green];
m15_137 -> m15_7  [key=2, style=dotted, color=green];
m15_137 -> m15_8  [key=2, style=dotted, color=green];
m15_138 -> m15_139  [key=0, style=solid, color=green];
m15_138 -> m15_7  [key=2, style=dotted, color=green];
m15_138 -> m15_8  [key=2, style=dotted, color=green];
m15_139 -> m15_140  [key=0, style=solid, color=green];
m15_139 -> m15_7  [key=2, style=dotted, color=green];
m15_139 -> m15_8  [key=2, style=dotted, color=green];
m15_139 -> m15_150  [key=2, style=dotted, color=green];
m15_140 -> m15_141  [key=0, style=solid, color=green];
m15_140 -> m15_7  [key=2, style=dotted, color=green];
m15_140 -> m15_10  [key=2, style=dotted, color=green];
m15_141 -> m15_142  [key=0, style=solid, color=green];
m15_141 -> m15_7  [key=2, style=dotted, color=green];
m15_141 -> m15_10  [key=2, style=dotted, color=green];
m15_142 -> m15_143  [key=0, style=solid, color=green];
m15_142 -> m15_7  [key=2, style=dotted, color=green];
m15_142 -> m15_10  [key=2, style=dotted, color=green];
m15_143 -> m15_144  [key=0, style=solid, color=green];
m15_143 -> m15_11  [key=2, style=dotted, color=green];
m15_143 -> m15_146  [key=1, style=dashed, color=green, label=warrior];
m15_144 -> m15_145  [key=0, style=solid, color=green];
m15_144 -> m15_11  [key=2, style=dotted, color=green];
m15_144 -> m15_147  [key=1, style=dashed, color=green, label=barracks];
m15_146 -> m15_13  [key=2, style=dotted];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_12  [key=2, style=dotted];
m15_145 -> m15_146  [key=0, style=solid, color=green];
m15_145 -> m15_11  [key=2, style=dotted, color=green];
m15_145 -> m15_148  [key=1, style=dashed, color=green, label=ninja];
m15_147 -> m15_13  [key=2, style=dotted];
m15_147 -> m15_148  [key=0, style=solid];
m15_147 -> m15_12  [key=2, style=dotted];
m15_148 -> m15_13  [key=2, style=dotted];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> m15_12  [key=2, style=dotted];
m15_149 -> m15_136  [key=0, style=bold, color=blue];
m15_71 -> m15_72  [key=0, style=solid];
m15_74 -> m15_75  [key=0, style=solid, color=green];
m15_74 -> m15_7  [key=2, style=dotted, color=green];
m15_74 -> m15_82  [key=2, style=dotted, color=green];
m15_72 -> m15_74  [key=1, style=dashed, color=green, label=shortSword];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_80  [key=2, style=dotted];
m15_72 -> m15_77  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m15_73 -> m15_74  [key=0, style=solid, color=green];
m15_73 -> m15_75  [key=1, style=dashed, color=green, label=shuriken];
m15_73 -> m15_81  [key=2, style=dotted];
m15_73 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m15_75 -> m15_76  [key=0, style=solid, color=green];
m15_75 -> m15_7  [key=2, style=dotted, color=green];
m15_75 -> m15_82  [key=2, style=dotted, color=green];
m15_75 -> m15_55  [key=2, style=dotted, color=green];
m15_75 -> m15_85  [key=1, style=dashed, color=green, label="lambda expression"];
m15_76 -> m15_77  [key=0, style=solid, color=green];
m15_76 -> m15_83  [key=2, style=dotted, color=green];
m15_76 -> m15_78  [key=1, style=dashed, color=green, label=result];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_12  [key=2, style=dotted];
m15_77 -> m15_84  [key=2, style=dotted];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_12  [key=2, style=dotted];
m15_78 -> m15_84  [key=2, style=dotted];
m15_79 -> m15_71  [key=0, style=bold, color=blue];
m15_293 -> m15_294  [key=0, style=solid, color=green];
m15_294 -> m15_295  [key=0, style=solid, color=green];
m15_294 -> m15_7  [key=2, style=dotted, color=green];
m15_294 -> m15_10  [key=2, style=dotted, color=green];
m15_295 -> m15_296  [key=0, style=solid, color=green];
m15_295 -> m15_7  [key=2, style=dotted, color=green];
m15_295 -> m15_8  [key=2, style=dotted, color=green];
m15_296 -> m15_297  [key=0, style=solid, color=green];
m15_296 -> m15_7  [key=2, style=dotted, color=green];
m15_296 -> m15_8  [key=2, style=dotted, color=green];
m15_296 -> m15_300  [key=2, style=dotted, color=green];
m15_297 -> m15_298  [key=0, style=solid, color=green];
m15_297 -> m15_11  [key=2, style=dotted, color=green];
m15_298 -> m15_13  [key=2, style=dotted];
m15_298 -> m15_299  [key=0, style=solid];
m15_298 -> m15_12  [key=2, style=dotted];
m15_299 -> m15_293  [key=0, style=bold, color=blue];
m15_151 -> m15_152  [key=0, style=solid, color=green];
m15_152 -> m15_153  [key=0, style=solid, color=green];
m15_152 -> m15_124  [key=2, style=dotted, color=green];
m15_152 -> m15_10  [key=2, style=dotted, color=green];
m15_153 -> m15_154  [key=0, style=solid, color=green];
m15_153 -> m15_7  [key=2, style=dotted, color=green];
m15_153 -> m15_8  [key=2, style=dotted, color=green];
m15_153 -> m15_125  [key=2, style=dotted, color=green];
m15_154 -> m15_155  [key=0, style=solid, color=green];
m15_154 -> m15_7  [key=2, style=dotted, color=green];
m15_154 -> m15_8  [key=2, style=dotted, color=green];
m15_155 -> m15_156  [key=0, style=solid, color=green];
m15_155 -> m15_11  [key=2, style=dotted, color=green];
m15_156 -> m15_13  [key=2, style=dotted];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_12  [key=2, style=dotted];
m15_157 -> m15_151  [key=0, style=bold, color=blue];
m15_126 -> m15_127  [key=0, style=solid, color=green];
m15_127 -> m15_128  [key=0, style=solid, color=green];
m15_127 -> m15_124  [key=2, style=dotted, color=green];
m15_127 -> m15_10  [key=2, style=dotted, color=green];
m15_128 -> m15_129  [key=0, style=solid, color=green];
m15_128 -> m15_7  [key=2, style=dotted];
m15_128 -> m15_8  [key=2, style=dotted];
m15_128 -> m15_135  [key=2, style=dotted];
m15_129 -> m15_130  [key=0, style=solid, color=green];
m15_129 -> m15_7  [key=2, style=dotted, color=green];
m15_129 -> m15_8  [key=2, style=dotted, color=green];
m15_130 -> m15_131  [key=0, style=solid, color=green];
m15_130 -> m15_11  [key=2, style=dotted, color=green];
m15_130 -> m15_132  [key=1, style=dashed, color=green, label=service];
m15_131 -> m15_132  [key=0, style=solid, color=green];
m15_131 -> m15_11  [key=2, style=dotted, color=green];
m15_131 -> m15_133  [key=1, style=dashed, color=green, label=anotherService];
m15_132 -> m15_13  [key=2, style=dotted];
m15_132 -> m15_133  [key=0, style=solid];
m15_132 -> m15_12  [key=2, style=dotted];
m15_133 -> m15_13  [key=2, style=dotted];
m15_133 -> m15_134  [key=0, style=solid];
m15_133 -> m15_12  [key=2, style=dotted];
m15_134 -> m15_126  [key=0, style=bold, color=blue];
m15_111 -> m15_112  [key=0, style=solid, color=green];
m15_112 -> m15_113  [key=0, style=solid, color=green];
m15_112 -> m15_7  [key=2, style=dotted, color=green];
m15_112 -> m15_8  [key=2, style=dotted, color=green];
m15_113 -> m15_114  [key=0, style=solid, color=green];
m15_113 -> m15_7  [key=2, style=dotted, color=green];
m15_113 -> m15_8  [key=2, style=dotted, color=green];
m15_113 -> m15_9  [key=2, style=dotted, color=green];
m15_114 -> m15_115  [key=0, style=solid, color=green];
m15_114 -> m15_11  [key=2, style=dotted, color=green];
m15_115 -> m15_13  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_12  [key=2, style=dotted];
m15_116 -> m15_111  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid, color=green];
m15_1 -> m15_2  [key=0, style=solid, color=green];
m15_1 -> m15_7  [key=2, style=dotted, color=green];
m15_1 -> m15_8  [key=2, style=dotted, color=green];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_7  [key=2, style=dotted, color=green];
m15_2 -> m15_8  [key=2, style=dotted, color=green];
m15_2 -> m15_9  [key=2, style=dotted, color=green];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_7  [key=2, style=dotted, color=green];
m15_3 -> m15_10  [key=2, style=dotted, color=green];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_4 -> m15_11  [key=2, style=dotted, color=green];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_12  [key=2, style=dotted];
m15_5 -> m15_13  [key=2, style=dotted];
m15_6 -> m15_0  [key=0, style=bold, color=blue];
m15_88 -> m15_89  [key=0, style=solid];
m15_92 -> m15_93  [key=0, style=solid, color=green];
m15_92 -> m15_7  [key=2, style=dotted, color=green];
m15_92 -> m15_82  [key=2, style=dotted, color=green];
m15_89 -> m15_92  [key=1, style=dashed, color=green, label=shortSword];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_80  [key=2, style=dotted];
m15_89 -> m15_96  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m15_91 -> m15_92  [key=0, style=solid, color=green];
m15_91 -> m15_94  [key=1, style=dashed, color=green, label=shuriken];
m15_91 -> m15_81  [key=2, style=dotted];
m15_91 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m15_93 -> m15_94  [key=0, style=solid, color=green];
m15_93 -> m15_7  [key=2, style=dotted, color=green];
m15_93 -> m15_82  [key=2, style=dotted, color=green];
m15_90 -> m15_93  [key=1, style=dashed, color=green, label=sword];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_100  [key=2, style=dotted];
m15_90 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label=sword];
m15_94 -> m15_95  [key=0, style=solid, color=green];
m15_94 -> m15_7  [key=2, style=dotted, color=green];
m15_94 -> m15_82  [key=2, style=dotted, color=green];
m15_95 -> m15_96  [key=0, style=solid, color=green];
m15_95 -> m15_83  [key=2, style=dotted, color=green];
m15_95 -> m15_97  [key=1, style=dashed, color=green, label=result];
m15_95 -> m15_98  [key=1, style=dashed, color=green, label=result];
m15_96 -> m15_97  [key=0, style=solid];
m15_96 -> m15_12  [key=2, style=dotted];
m15_96 -> m15_84  [key=2, style=dotted];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_12  [key=2, style=dotted];
m15_97 -> m15_84  [key=2, style=dotted];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_12  [key=2, style=dotted];
m15_98 -> m15_101  [key=2, style=dotted];
m15_99 -> m15_88  [key=0, style=bold, color=blue];
m15_42 -> m15_43  [key=0, style=solid, color=green];
m15_43 -> m15_44  [key=0, style=solid, color=green];
m15_43 -> m15_11  [key=2, style=dotted, color=green];
m15_44 -> m15_45  [key=0, style=solid, color=green];
m15_44 -> m15_13  [key=2, style=dotted];
m15_44 -> m15_12  [key=2, style=dotted];
m15_45 -> m15_46  [key=0, style=solid, color=green];
m15_45 -> m15_7  [key=2, style=dotted, color=green];
m15_45 -> m15_8  [key=2, style=dotted, color=green];
m15_46 -> m15_47  [key=0, style=solid, color=green];
m15_46 -> m15_11  [key=2, style=dotted, color=green];
m15_47 -> m15_13  [key=2, style=dotted];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_12  [key=2, style=dotted];
m15_48 -> m15_42  [key=0, style=bold, color=blue];
m15_221 -> m15_222  [key=0, style=solid];
m15_223 -> m15_224  [key=0, style=solid, color=green];
m15_223 -> m15_7  [key=2, style=dotted, color=green];
m15_223 -> m15_10  [key=2, style=dotted, color=green];
m15_223 -> m15_231  [key=2, style=dotted, color=green];
m15_222 -> m15_223  [key=0, style=solid, color=green];
m15_222 -> m15_225  [key=1, style=dashed, color=green, label=Name];
m15_222 -> m15_222  [key=3, color=darkorchid, style=bold, label="Local variable string Name"];
m15_224 -> m15_225  [key=0, style=solid, color=green];
m15_224 -> m15_7  [key=2, style=dotted, color=green];
m15_224 -> m15_8  [key=2, style=dotted, color=green];
m15_225 -> m15_226  [key=0, style=solid, color=green];
m15_225 -> m15_7  [key=2, style=dotted, color=green];
m15_225 -> m15_8  [key=2, style=dotted, color=green];
m15_225 -> m15_232  [key=2, style=dotted, color=green];
m15_226 -> m15_227  [key=0, style=solid, color=green];
m15_226 -> m15_7  [key=2, style=dotted, color=green];
m15_226 -> m15_8  [key=2, style=dotted, color=green];
m15_227 -> m15_228  [key=0, style=solid, color=green];
m15_227 -> m15_11  [key=2, style=dotted, color=green];
m15_227 -> m15_229  [key=1, style=dashed, color=green, label=barack];
m15_228 -> m15_13  [key=2, style=dotted];
m15_228 -> m15_229  [key=0, style=solid];
m15_228 -> m15_12  [key=2, style=dotted];
m15_229 -> m15_13  [key=2, style=dotted];
m15_229 -> m15_230  [key=0, style=solid];
m15_229 -> m15_12  [key=2, style=dotted];
m15_230 -> m15_221  [key=0, style=bold, color=blue];
m15_286 -> m15_287  [key=0, style=solid, color=green];
m15_287 -> m15_288  [key=0, style=solid, color=green];
m15_287 -> m15_7  [key=2, style=dotted, color=green];
m15_287 -> m15_10  [key=2, style=dotted, color=green];
m15_288 -> m15_289  [key=0, style=solid, color=green];
m15_288 -> m15_7  [key=2, style=dotted, color=green];
m15_288 -> m15_8  [key=2, style=dotted, color=green];
m15_288 -> m15_285  [key=2, style=dotted, color=green];
m15_289 -> m15_290  [key=0, style=solid, color=green];
m15_289 -> m15_7  [key=2, style=dotted, color=green];
m15_289 -> m15_8  [key=2, style=dotted, color=green];
m15_290 -> m15_291  [key=0, style=solid, color=green];
m15_290 -> m15_11  [key=2, style=dotted, color=green];
m15_291 -> m15_13  [key=2, style=dotted];
m15_291 -> m15_292  [key=0, style=solid];
m15_291 -> m15_12  [key=2, style=dotted];
m15_292 -> m15_286  [key=0, style=bold, color=blue];
m15_102 -> m15_103  [key=0, style=solid];
m15_105 -> m15_106  [key=0, style=solid, color=green];
m15_105 -> m15_7  [key=2, style=dotted, color=green];
m15_105 -> m15_82  [key=2, style=dotted, color=green];
m15_103 -> m15_105  [key=1, style=dashed, color=green, label=shortSword];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_80  [key=2, style=dotted];
m15_103 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=shortSword];
m15_104 -> m15_105  [key=0, style=solid, color=green];
m15_104 -> m15_106  [key=1, style=dashed, color=green, label=shuriken];
m15_104 -> m15_81  [key=2, style=dotted];
m15_104 -> m15_109  [key=1, style=dashed, color=darkseagreen4, label=shuriken];
m15_106 -> m15_107  [key=0, style=solid, color=green];
m15_106 -> m15_7  [key=2, style=dotted, color=green];
m15_106 -> m15_82  [key=2, style=dotted, color=green];
m15_107 -> m15_108  [key=0, style=solid, color=green];
m15_107 -> m15_83  [key=2, style=dotted, color=green];
m15_107 -> m15_109  [key=1, style=dashed, color=green, label=result];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_12  [key=2, style=dotted];
m15_108 -> m15_84  [key=2, style=dotted];
m15_109 -> m15_110  [key=0, style=solid];
m15_109 -> m15_12  [key=2, style=dotted];
m15_109 -> m15_84  [key=2, style=dotted];
m15_110 -> m15_102  [key=0, style=bold, color=blue];
m15_38 -> m15_39  [key=0, style=solid, color=green];
m15_39 -> m15_40  [key=0, style=solid, color=green];
m15_39 -> m15_11  [key=2, style=dotted, color=green];
m15_40 -> m15_13  [key=2, style=dotted];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_12  [key=2, style=dotted];
m15_41 -> m15_38  [key=0, style=bold, color=blue];
m15_262 -> m15_263  [key=0, style=solid, color=green];
m15_263 -> m15_264  [key=0, style=solid, color=green];
m15_263 -> m15_7  [key=2, style=dotted, color=green];
m15_263 -> m15_10  [key=2, style=dotted, color=green];
m15_263 -> m15_253  [key=2, style=dotted, color=green];
m15_264 -> m15_265  [key=0, style=solid, color=green];
m15_264 -> m15_7  [key=2, style=dotted, color=green];
m15_264 -> m15_8  [key=2, style=dotted, color=green];
m15_265 -> m15_266  [key=0, style=solid, color=green];
m15_265 -> m15_7  [key=2, style=dotted, color=green];
m15_265 -> m15_8  [key=2, style=dotted, color=green];
m15_265 -> m15_271  [key=2, style=dotted, color=green];
m15_265 -> m15_272  [key=1, style=dashed, color=green, label="lambda expression"];
m15_266 -> m15_267  [key=0, style=solid, color=green];
m15_266 -> m15_7  [key=2, style=dotted, color=green];
m15_266 -> m15_8  [key=2, style=dotted, color=green];
m15_266 -> m15_271  [key=2, style=dotted, color=green];
m15_266 -> m15_275  [key=1, style=dashed, color=green, label="lambda expression"];
m15_267 -> m15_268  [key=0, style=solid, color=green];
m15_267 -> m15_11  [key=2, style=dotted, color=green];
m15_267 -> m15_269  [key=1, style=dashed, color=green, label=barack];
m15_268 -> m15_13  [key=2, style=dotted];
m15_268 -> m15_269  [key=0, style=solid];
m15_268 -> m15_12  [key=2, style=dotted];
m15_269 -> m15_13  [key=2, style=dotted];
m15_269 -> m15_270  [key=0, style=solid];
m15_269 -> m15_12  [key=2, style=dotted];
m15_270 -> m15_262  [key=0, style=bold, color=blue];
m15_201 -> m15_202  [key=0, style=solid, color=green];
m15_202 -> m15_203  [key=0, style=solid, color=green];
m15_202 -> m15_7  [key=2, style=dotted, color=green];
m15_202 -> m15_8  [key=2, style=dotted, color=green];
m15_203 -> m15_204  [key=0, style=solid, color=green];
m15_203 -> m15_7  [key=2, style=dotted, color=green];
m15_203 -> m15_8  [key=2, style=dotted, color=green];
m15_203 -> m15_197  [key=2, style=dotted, color=green];
m15_204 -> m15_205  [key=0, style=solid, color=green];
m15_204 -> m15_11  [key=2, style=dotted, color=green];
m15_205 -> m15_13  [key=2, style=dotted];
m15_205 -> m15_206  [key=0, style=solid];
m15_205 -> m15_12  [key=2, style=dotted];
m15_206 -> m15_201  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid, color=green];
m15_15 -> m15_16  [key=0, style=solid, color=green];
m15_15 -> m15_7  [key=2, style=dotted, color=green];
m15_15 -> m15_8  [key=2, style=dotted, color=green];
m15_16 -> m15_17  [key=0, style=solid, color=green];
m15_16 -> m15_7  [key=2, style=dotted, color=green];
m15_16 -> m15_8  [key=2, style=dotted, color=green];
m15_16 -> m15_9  [key=2, style=dotted, color=green];
m15_17 -> m15_18  [key=0, style=solid, color=green];
m15_17 -> m15_7  [key=2, style=dotted, color=green];
m15_17 -> m15_10  [key=2, style=dotted, color=green];
m15_18 -> m15_19  [key=0, style=solid, color=green];
m15_18 -> m15_11  [key=2, style=dotted, color=green];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_12  [key=2, style=dotted];
m15_19 -> m15_13  [key=2, style=dotted];
m15_20 -> m15_14  [key=0, style=bold, color=blue];
m15_191 -> m15_192  [key=0, style=solid, color=green];
m15_192 -> m15_193  [key=0, style=solid, color=green];
m15_192 -> m15_7  [key=2, style=dotted, color=green];
m15_192 -> m15_8  [key=2, style=dotted, color=green];
m15_193 -> m15_194  [key=0, style=solid, color=green];
m15_193 -> m15_7  [key=2, style=dotted, color=green];
m15_193 -> m15_8  [key=2, style=dotted, color=green];
m15_193 -> m15_197  [key=2, style=dotted, color=green];
m15_194 -> m15_194  [key=3, color=green, style=bold, label="Local variable System.Action getWarrior"];
m15_194 -> m15_195  [key=0, style=solid, color=green];
m15_195 -> m15_13  [key=2, style=dotted];
m15_195 -> m15_196  [key=0, style=solid];
m15_196 -> m15_191  [key=0, style=bold, color=blue];
m15_244 -> m15_245  [key=0, style=solid, color=green];
m15_245 -> m15_246  [key=0, style=solid, color=green];
m15_245 -> m15_7  [key=2, style=dotted, color=green];
m15_245 -> m15_10  [key=2, style=dotted, color=green];
m15_245 -> m15_253  [key=2, style=dotted, color=green];
m15_246 -> m15_247  [key=0, style=solid, color=green];
m15_246 -> m15_7  [key=2, style=dotted, color=green];
m15_246 -> m15_8  [key=2, style=dotted, color=green];
m15_247 -> m15_248  [key=0, style=solid, color=green];
m15_247 -> m15_7  [key=2, style=dotted, color=green];
m15_247 -> m15_8  [key=2, style=dotted, color=green];
m15_247 -> m15_254  [key=2, style=dotted, color=green];
m15_247 -> m15_255  [key=1, style=dashed, color=green, label="lambda expression"];
m15_248 -> m15_249  [key=0, style=solid, color=green];
m15_248 -> m15_7  [key=2, style=dotted, color=green];
m15_248 -> m15_8  [key=2, style=dotted, color=green];
m15_248 -> m15_254  [key=2, style=dotted, color=green];
m15_248 -> m15_259  [key=1, style=dashed, color=green, label="lambda expression"];
m15_249 -> m15_250  [key=0, style=solid, color=green];
m15_249 -> m15_11  [key=2, style=dotted, color=green];
m15_249 -> m15_251  [key=1, style=dashed, color=green, label=barack];
m15_250 -> m15_13  [key=2, style=dotted];
m15_250 -> m15_251  [key=0, style=solid];
m15_250 -> m15_12  [key=2, style=dotted];
m15_251 -> m15_13  [key=2, style=dotted];
m15_251 -> m15_252  [key=0, style=solid];
m15_251 -> m15_12  [key=2, style=dotted];
m15_252 -> m15_244  [key=0, style=bold, color=blue];
m15_275 -> m15_276  [key=0, style=solid, color=green];
m15_35 -> m15_36  [key=0, style=solid, color=green];
m15_36 -> m15_37  [key=0, style=solid, color=green];
m15_36 -> m15_11  [key=2, style=dotted, color=green];
m15_37 -> m15_35  [key=0, style=bold, color=blue];
m15_56 -> m15_57  [key=0, style=solid, color=green];
m15_59 -> m15_60  [key=0, style=solid, color=green];
m15_57 -> m15_58  [key=0, style=solid, color=green];
m15_58 -> m15_56  [key=0, style=bold, color=blue];
m15_60 -> m15_61  [key=0, style=solid, color=green];
m15_61 -> m15_59  [key=0, style=bold, color=blue];
m15_68 -> m15_69  [key=0, style=solid, color=green];
m15_69 -> m15_70  [key=0, style=solid, color=green];
m15_70 -> m15_68  [key=0, style=bold, color=blue];
m15_85 -> m15_86  [key=0, style=solid, color=green];
m15_86 -> m15_87  [key=0, style=solid, color=green];
m15_87 -> m15_85  [key=0, style=bold, color=blue];
m15_199 -> m15_200  [key=0, style=solid, color=green];
m15_199 -> m15_11  [key=2, style=dotted, color=green];
m15_198 -> m15_199  [key=0, style=solid, color=green];
m15_200 -> m15_198  [key=0, style=bold, color=blue];
m15_255 -> m15_256  [key=0, style=solid, color=green];
m15_259 -> m15_260  [key=0, style=solid, color=green];
m15_256 -> m15_257  [key=0, style=solid, color=green];
m15_256 -> m15_258  [key=2, style=dotted, color=green];
m15_257 -> m15_255  [key=0, style=bold, color=blue];
m15_260 -> m15_261  [key=0, style=solid, color=green];
m15_260 -> m15_258  [key=2, style=dotted, color=green];
m15_261 -> m15_259  [key=0, style=bold, color=blue];
m15_272 -> m15_273  [key=0, style=solid, color=green];
m15_273 -> m15_274  [key=0, style=solid, color=green];
m15_273 -> m15_258  [key=2, style=dotted, color=green];
m15_274 -> m15_272  [key=0, style=bold, color=blue];
m15_276 -> m15_277  [key=0, style=solid, color=green];
m15_276 -> m15_258  [key=2, style=dotted, color=green];
m15_277 -> m15_275  [key=0, style=bold, color=blue];
m15_167 -> m15_168  [key=0, style=solid, color=green];
m15_168 -> m15_169  [key=0, style=solid, color=green];
m15_168 -> m15_7  [key=2, style=dotted, color=green];
m15_168 -> m15_8  [key=2, style=dotted, color=green];
m15_169 -> m15_170  [key=0, style=solid, color=green];
m15_169 -> m15_7  [key=2, style=dotted];
m15_169 -> m15_8  [key=2, style=dotted];
m15_169 -> m15_135  [key=2, style=dotted];
m15_170 -> m15_171  [key=0, style=solid, color=green];
m15_170 -> m15_7  [key=2, style=dotted, color=green];
m15_170 -> m15_10  [key=2, style=dotted, color=green];
m15_171 -> m15_172  [key=0, style=solid, color=green];
m15_171 -> m15_11  [key=2, style=dotted, color=green];
m15_172 -> m15_13  [key=2, style=dotted];
m15_172 -> m15_173  [key=0, style=solid];
m15_172 -> m15_12  [key=2, style=dotted];
m15_173 -> m15_167  [key=0, style=bold, color=blue];
m15_182 -> m15_183  [key=0, style=solid, color=green];
m15_183 -> m15_184  [key=0, style=solid, color=green];
m15_183 -> m15_124  [key=2, style=dotted, color=green];
m15_183 -> m15_10  [key=2, style=dotted, color=green];
m15_184 -> m15_185  [key=0, style=solid, color=green];
m15_184 -> m15_7  [key=2, style=dotted, color=green];
m15_184 -> m15_8  [key=2, style=dotted, color=green];
m15_184 -> m15_150  [key=2, style=dotted, color=green];
m15_185 -> m15_186  [key=0, style=solid, color=green];
m15_185 -> m15_7  [key=2, style=dotted, color=green];
m15_185 -> m15_8  [key=2, style=dotted, color=green];
m15_186 -> m15_187  [key=0, style=solid, color=green];
m15_186 -> m15_11  [key=2, style=dotted, color=green];
m15_186 -> m15_188  [key=1, style=dashed, color=green, label=service];
m15_187 -> m15_188  [key=0, style=solid, color=green];
m15_187 -> m15_11  [key=2, style=dotted, color=green];
m15_187 -> m15_189  [key=1, style=dashed, color=green, label=anotherService];
m15_188 -> m15_13  [key=2, style=dotted];
m15_188 -> m15_189  [key=0, style=solid];
m15_188 -> m15_12  [key=2, style=dotted];
m15_189 -> m15_13  [key=2, style=dotted];
m15_189 -> m15_190  [key=0, style=solid];
m15_189 -> m15_12  [key=2, style=dotted];
m15_190 -> m15_182  [key=0, style=bold, color=blue];
m15_28 -> m15_29  [key=0, style=solid, color=green];
m15_29 -> m15_30  [key=0, style=solid, color=green];
m15_29 -> m15_7  [key=2, style=dotted, color=green];
m15_29 -> m15_8  [key=2, style=dotted, color=green];
m15_30 -> m15_31  [key=0, style=solid, color=green];
m15_30 -> m15_7  [key=2, style=dotted, color=green];
m15_30 -> m15_8  [key=2, style=dotted, color=green];
m15_30 -> m15_9  [key=2, style=dotted, color=green];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_31 -> m15_7  [key=2, style=dotted, color=green];
m15_31 -> m15_8  [key=2, style=dotted, color=green];
m15_31 -> m15_9  [key=2, style=dotted, color=green];
m15_32 -> m15_33  [key=0, style=solid, color=green];
m15_32 -> m15_7  [key=2, style=dotted, color=green];
m15_32 -> m15_10  [key=2, style=dotted, color=green];
m15_33 -> m15_34  [key=0, style=solid, color=green];
m15_33 -> m15_13  [key=2, style=dotted, color=green];
m15_33 -> m15_35  [key=1, style=dashed, color=green, label="lambda expression"];
m15_34 -> m15_28  [key=0, style=bold, color=blue];
m15_62 -> m15_63  [key=0, style=solid, color=green];
m15_63 -> m15_64  [key=0, style=solid, color=green];
m15_63 -> m15_7  [key=2, style=dotted, color=green];
m15_63 -> m15_10  [key=2, style=dotted, color=green];
m15_63 -> m15_55  [key=2, style=dotted, color=green];
m15_63 -> m15_68  [key=1, style=dashed, color=green, label="lambda expression"];
m15_64 -> m15_65  [key=0, style=solid, color=green];
m15_64 -> m15_7  [key=2, style=dotted, color=green];
m15_64 -> m15_8  [key=2, style=dotted, color=green];
m15_65 -> m15_66  [key=0, style=solid, color=green];
m15_65 -> m15_11  [key=2, style=dotted, color=green];
m15_66 -> m15_13  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_12  [key=2, style=dotted];
m15_67 -> m15_62  [key=0, style=bold, color=blue];
m15_21 -> m15_22  [key=0, style=solid, color=green];
m15_22 -> m15_23  [key=0, style=solid, color=green];
m15_22 -> m15_7  [key=2, style=dotted, color=green];
m15_22 -> m15_8  [key=2, style=dotted, color=green];
m15_23 -> m15_24  [key=0, style=solid, color=green];
m15_23 -> m15_7  [key=2, style=dotted, color=green];
m15_23 -> m15_8  [key=2, style=dotted, color=green];
m15_23 -> m15_9  [key=2, style=dotted, color=green];
m15_24 -> m15_25  [key=0, style=solid, color=green];
m15_24 -> m15_7  [key=2, style=dotted, color=green];
m15_24 -> m15_10  [key=2, style=dotted, color=green];
m15_25 -> m15_26  [key=0, style=solid, color=green];
m15_25 -> m15_11  [key=2, style=dotted, color=green];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_12  [key=2, style=dotted];
m15_26 -> m15_13  [key=2, style=dotted];
m15_27 -> m15_21  [key=0, style=bold, color=blue];
m15_49 -> m15_50  [key=0, style=solid, color=green];
m15_50 -> m15_51  [key=0, style=solid, color=green];
m15_50 -> m15_7  [key=2, style=dotted, color=green];
m15_50 -> m15_10  [key=2, style=dotted, color=green];
m15_50 -> m15_55  [key=2, style=dotted, color=green];
m15_50 -> m15_56  [key=1, style=dashed, color=green, label="lambda expression"];
m15_51 -> m15_52  [key=0, style=solid, color=green];
m15_51 -> m15_7  [key=2, style=dotted, color=green];
m15_51 -> m15_8  [key=2, style=dotted, color=green];
m15_51 -> m15_55  [key=2, style=dotted, color=green];
m15_51 -> m15_59  [key=1, style=dashed, color=green, label="lambda expression"];
m15_52 -> m15_53  [key=0, style=solid, color=green];
m15_52 -> m15_11  [key=2, style=dotted, color=green];
m15_53 -> m15_13  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_12  [key=2, style=dotted];
m15_54 -> m15_49  [key=0, style=bold, color=blue];
m15_158 -> m15_159  [key=0, style=solid, color=green];
m15_159 -> m15_160  [key=0, style=solid, color=green];
m15_159 -> m15_124  [key=2, style=dotted, color=green];
m15_159 -> m15_10  [key=2, style=dotted, color=green];
m15_160 -> m15_161  [key=0, style=solid, color=green];
m15_160 -> m15_7  [key=2, style=dotted, color=green];
m15_160 -> m15_8  [key=2, style=dotted, color=green];
m15_160 -> m15_135  [key=2, style=dotted, color=green];
m15_161 -> m15_162  [key=0, style=solid, color=green];
m15_161 -> m15_7  [key=2, style=dotted, color=green];
m15_161 -> m15_8  [key=2, style=dotted, color=green];
m15_162 -> m15_163  [key=0, style=solid, color=green];
m15_162 -> m15_11  [key=2, style=dotted, color=green];
m15_162 -> m15_164  [key=1, style=dashed, color=green, label=service];
m15_163 -> m15_164  [key=0, style=solid, color=green];
m15_163 -> m15_11  [key=2, style=dotted, color=green];
m15_163 -> m15_165  [key=1, style=dashed, color=green, label=anotherService];
m15_164 -> m15_13  [key=2, style=dotted];
m15_164 -> m15_165  [key=0, style=solid];
m15_164 -> m15_12  [key=2, style=dotted];
m15_165 -> m15_13  [key=2, style=dotted];
m15_165 -> m15_166  [key=0, style=solid];
m15_165 -> m15_12  [key=2, style=dotted];
m15_166 -> m15_158  [key=0, style=bold, color=blue];
m15_278 -> m15_279  [key=0, style=solid, color=green];
m15_279 -> m15_280  [key=0, style=solid, color=green];
m15_279 -> m15_7  [key=2, style=dotted, color=green];
m15_279 -> m15_10  [key=2, style=dotted, color=green];
m15_280 -> m15_281  [key=0, style=solid, color=green];
m15_280 -> m15_7  [key=2, style=dotted, color=green];
m15_280 -> m15_8  [key=2, style=dotted, color=green];
m15_281 -> m15_282  [key=0, style=solid, color=green];
m15_281 -> m15_7  [key=2, style=dotted, color=green];
m15_281 -> m15_8  [key=2, style=dotted, color=green];
m15_281 -> m15_285  [key=2, style=dotted, color=green];
m15_282 -> m15_283  [key=0, style=solid, color=green];
m15_282 -> m15_11  [key=2, style=dotted, color=green];
m15_283 -> m15_13  [key=2, style=dotted];
m15_283 -> m15_284  [key=0, style=solid];
m15_283 -> m15_12  [key=2, style=dotted];
m15_284 -> m15_278  [key=0, style=bold, color=blue];
m15_117 -> m15_118  [key=0, style=solid, color=green];
m15_118 -> m15_119  [key=0, style=solid, color=green];
m15_118 -> m15_124  [key=2, style=dotted, color=green];
m15_118 -> m15_10  [key=2, style=dotted, color=green];
m15_119 -> m15_120  [key=0, style=solid, color=green];
m15_119 -> m15_7  [key=2, style=dotted, color=green];
m15_119 -> m15_8  [key=2, style=dotted, color=green];
m15_119 -> m15_125  [key=2, style=dotted, color=green];
m15_120 -> m15_121  [key=0, style=solid, color=green];
m15_120 -> m15_7  [key=2, style=dotted, color=green];
m15_120 -> m15_8  [key=2, style=dotted, color=green];
m15_121 -> m15_122  [key=0, style=solid, color=green];
m15_121 -> m15_11  [key=2, style=dotted, color=green];
m15_122 -> m15_13  [key=2, style=dotted];
m15_122 -> m15_123  [key=0, style=solid];
m15_122 -> m15_12  [key=2, style=dotted];
m15_123 -> m15_117  [key=0, style=bold, color=blue];
m15_174 -> m15_175  [key=0, style=solid, color=green];
m15_175 -> m15_176  [key=0, style=solid, color=green];
m15_175 -> m15_124  [key=2, style=dotted, color=green];
m15_175 -> m15_10  [key=2, style=dotted, color=green];
m15_176 -> m15_177  [key=0, style=solid, color=green];
m15_176 -> m15_7  [key=2, style=dotted, color=green];
m15_176 -> m15_8  [key=2, style=dotted, color=green];
m15_176 -> m15_181  [key=2, style=dotted, color=green];
m15_177 -> m15_178  [key=0, style=solid, color=green];
m15_177 -> m15_7  [key=2, style=dotted, color=green];
m15_177 -> m15_8  [key=2, style=dotted, color=green];
m15_178 -> m15_179  [key=0, style=solid, color=green];
m15_178 -> m15_11  [key=2, style=dotted, color=green];
m15_179 -> m15_13  [key=2, style=dotted];
m15_179 -> m15_180  [key=0, style=solid];
m15_179 -> m15_12  [key=2, style=dotted];
m15_180 -> m15_174  [key=0, style=bold, color=blue];
m15_233 -> m15_234  [key=0, style=solid];
m15_235 -> m15_236  [key=0, style=solid, color=green];
m15_235 -> m15_7  [key=2, style=dotted, color=green];
m15_235 -> m15_10  [key=2, style=dotted, color=green];
m15_235 -> m15_231  [key=2, style=dotted, color=green];
m15_234 -> m15_235  [key=0, style=solid, color=green];
m15_234 -> m15_237  [key=1, style=dashed, color=green, label=Name];
m15_234 -> m15_222  [key=3, color=darkorchid, style=bold, label="Local variable string Name"];
m15_236 -> m15_237  [key=0, style=solid, color=green];
m15_236 -> m15_7  [key=2, style=dotted, color=green];
m15_236 -> m15_8  [key=2, style=dotted, color=green];
m15_237 -> m15_238  [key=0, style=solid, color=green];
m15_237 -> m15_7  [key=2, style=dotted, color=green];
m15_237 -> m15_8  [key=2, style=dotted, color=green];
m15_237 -> m15_243  [key=2, style=dotted, color=green];
m15_238 -> m15_239  [key=0, style=solid, color=green];
m15_238 -> m15_7  [key=2, style=dotted, color=green];
m15_238 -> m15_8  [key=2, style=dotted, color=green];
m15_239 -> m15_240  [key=0, style=solid, color=green];
m15_239 -> m15_11  [key=2, style=dotted, color=green];
m15_239 -> m15_241  [key=1, style=dashed, color=green, label=barack];
m15_240 -> m15_13  [key=2, style=dotted];
m15_240 -> m15_241  [key=0, style=solid];
m15_240 -> m15_12  [key=2, style=dotted];
m15_241 -> m15_13  [key=2, style=dotted];
m15_241 -> m15_242  [key=0, style=solid];
m15_241 -> m15_12  [key=2, style=dotted];
m15_242 -> m15_233  [key=0, style=bold, color=blue];
m15_314 -> m15_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_2  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_3  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_4  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_15  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_16  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_17  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_18  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_25  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_29  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_30  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_31  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_32  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_33  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_36  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_39  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_43  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_45  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_46  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_50  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_51  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_52  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_63  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_64  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_65  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_74  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_75  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_76  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_92  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_93  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_94  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_95  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_105  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_106  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_107  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_112  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_113  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_114  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_118  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_119  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_120  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_121  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_127  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_129  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_130  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_131  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_137  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_138  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_139  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_140  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_141  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_142  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_143  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_144  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_145  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_152  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_153  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_154  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_155  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_159  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_160  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_161  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_162  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_163  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_168  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_170  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_171  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_175  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_176  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_177  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_178  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_183  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_184  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_185  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_186  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_187  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_192  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_193  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_194  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_199  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_202  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_203  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_204  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_208  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_209  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_210  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_211  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_212  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_213  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_214  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_215  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_216  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_223  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_225  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_224  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_226  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_227  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_235  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_237  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_236  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_238  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_239  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_245  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_246  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_247  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_248  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_249  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_263  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_264  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_265  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_266  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_267  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_279  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_280  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_281  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_282  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_287  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_288  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_289  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_290  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_294  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_295  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_296  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_297  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_128  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m15_314 -> m15_169  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m16_13 -> m16_14  [key=0, style=solid, color=green];
m16_14 -> m16_15  [key=0, style=solid, color=green];
m16_14 -> m16_18  [key=2, style=dotted, color=green];
m16_14 -> m16_16  [key=1, style=dashed, color=green, label=instance];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_19  [key=2, style=dotted];
m16_15 -> m16_20  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_19  [key=2, style=dotted];
m16_16 -> m16_21  [key=2, style=dotted];
m16_17 -> m16_13  [key=0, style=bold, color=blue];
m16_23 -> m16_14  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.WhenParentNamed"];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid, color=green];
m17_8 -> m17_13  [key=2, style=dotted];
m17_8 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label=sword];
m17_9 -> m17_10  [key=0, style=solid, color=green];
m17_9 -> m17_14  [key=2, style=dotted, color=green];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_16  [key=2, style=dotted];
m17_11 -> m17_17  [key=2, style=dotted];
m17_10 -> m17_11  [key=0, style=solid, color=green];
m17_10 -> m17_15  [key=2, style=dotted, color=green];
m17_12 -> m17_7  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_3 -> m17_4  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_6  [key=2, style=dotted];
m17_5 -> m17_3  [key=0, style=bold, color=blue];
m17_18 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext"];
m17_18 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ConstantProviderTests.ConstantProviderContext"];
m17_19 -> m17_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled"];
m17_19 -> m17_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.ConstantProviderTests.WhenCreateIsCalled"];
m18_32 -> m18_33  [key=0, style=solid, color=green];
m18_33 -> m18_34  [key=0, style=solid, color=green];
m18_33 -> m18_15  [key=2, style=dotted, color=green];
m18_33 -> m18_14  [key=2, style=dotted, color=green];
m18_33 -> m18_16  [key=2, style=dotted, color=green];
m18_33 -> m18_35  [key=1, style=dashed, color=green, label=builder];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_40  [key=2, style=dotted];
m18_34 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=provider];
m18_34 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=provider];
m18_35 -> m18_36  [key=0, style=solid, color=green];
m18_35 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_18  [key=2, style=dotted];
m18_38 -> m18_41  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid, color=green];
m18_36 -> m18_17  [key=2, style=dotted, color=green];
m18_37 -> m18_38  [key=0, style=solid, color=green];
m18_37 -> m18_17  [key=2, style=dotted, color=green];
m18_39 -> m18_32  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_9 -> m18_14  [key=2, style=dotted];
m18_9 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label=sword];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_15  [key=2, style=dotted, color=green];
m18_10 -> m18_16  [key=2, style=dotted, color=green];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_18  [key=2, style=dotted];
m18_12 -> m18_19  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid, color=green];
m18_11 -> m18_17  [key=2, style=dotted, color=green];
m18_13 -> m18_8  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=2, style=dotted];
m18_6 -> m18_4  [key=0, style=bold, color=blue];
m18_42 -> m18_43  [key=0, style=solid];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_45  [key=2, style=dotted];
m18_44 -> m18_42  [key=0, style=bold, color=blue];
m18_20 -> m18_21  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid, color=green];
m18_21 -> m18_14  [key=2, style=dotted];
m18_21 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=sword];
m18_22 -> m18_23  [key=0, style=solid, color=green];
m18_22 -> m18_15  [key=2, style=dotted, color=green];
m18_22 -> m18_16  [key=2, style=dotted, color=green];
m18_22 -> m18_29  [key=2, style=dotted, color=green];
m18_25 -> m18_26  [key=0, style=solid, color=green];
m18_25 -> m18_18  [key=2, style=dotted];
m18_25 -> m18_19  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid, color=green];
m18_23 -> m18_15  [key=2, style=dotted, color=green];
m18_23 -> m18_30  [key=2, style=dotted, color=green];
m18_24 -> m18_25  [key=0, style=solid, color=green];
m18_24 -> m18_17  [key=2, style=dotted, color=green];
m18_26 -> m18_27  [key=0, style=solid, color=green];
m18_26 -> m18_17  [key=2, style=dotted, color=green];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_18  [key=2, style=dotted];
m18_27 -> m18_31  [key=2, style=dotted];
m18_28 -> m18_20  [key=0, style=bold, color=blue];
m18_46 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstantTests.ConstantContext"];
m18_46 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstantTests.ConstantContext"];
m18_47 -> m18_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_26  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_33  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_36  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_47 -> m18_37  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConstantTests.WhenTypeIsBoundToAConstant"];
m18_48 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=provider];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=2, style=dotted];
m19_6 -> m19_4  [key=0, style=bold, color=blue];
m19_140 -> m19_141  [key=0, style=solid];
m19_141 -> m19_142  [key=0, style=solid, color=red];
m19_141 -> m19_129  [key=2, style=dotted];
m19_141 -> m19_32  [key=2, style=dotted];
m19_141 -> m19_149  [key=1, style=dashed, color=red, label=ninja];
m19_142 -> m19_143  [key=0, style=solid, color=red];
m19_142 -> m19_15  [key=2, style=dotted, color=red];
m19_142 -> m19_95  [key=2, style=dotted, color=red];
m19_142 -> m19_148  [key=1, style=dashed, color=red, label="lambda expression"];
m19_143 -> m19_144  [key=0, style=solid, color=red];
m19_143 -> m19_17  [key=2, style=dotted, color=red];
m19_143 -> m19_145  [key=1, style=dashed, color=red, label=barracks1];
m19_144 -> m19_145  [key=0, style=solid, color=red];
m19_144 -> m19_17  [key=2, style=dotted, color=red];
m19_145 -> m19_146  [key=0, style=solid];
m19_145 -> m19_18  [key=2, style=dotted];
m19_145 -> m19_147  [key=2, style=dotted];
m19_146 -> m19_140  [key=0, style=bold, color=blue];
m19_228 -> m19_229  [key=0, style=solid];
m19_229 -> m19_230  [key=0, style=solid];
m19_230 -> m19_228  [key=0, style=bold, color=blue];
m19_33 -> m19_34  [key=0, style=solid, color=red];
m19_34 -> m19_35  [key=0, style=solid, color=red];
m19_34 -> m19_15  [key=2, style=dotted, color=red];
m19_34 -> m19_16  [key=2, style=dotted, color=red];
m19_35 -> m19_36  [key=0, style=solid, color=red];
m19_35 -> m19_15  [key=2, style=dotted, color=red];
m19_35 -> m19_41  [key=2, style=dotted, color=red];
m19_36 -> m19_37  [key=0, style=solid, color=red];
m19_36 -> m19_17  [key=2, style=dotted, color=red];
m19_36 -> m19_38  [key=1, style=dashed, color=red, label=barracks];
m19_36 -> m19_39  [key=1, style=dashed, color=red, label=barracks];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_18  [key=2, style=dotted];
m19_37 -> m19_19  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_18  [key=2, style=dotted];
m19_38 -> m19_20  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_18  [key=2, style=dotted];
m19_39 -> m19_19  [key=2, style=dotted];
m19_40 -> m19_33  [key=0, style=bold, color=blue];
m19_163 -> m19_164  [key=0, style=solid];
m19_164 -> m19_165  [key=0, style=solid, color=red];
m19_164 -> m19_164  [key=3, color=darkorchid, style=bold, label="Local variable int activationCount"];
m19_165 -> m19_166  [key=0, style=solid, color=red];
m19_165 -> m19_15  [key=2, style=dotted, color=red];
m19_165 -> m19_16  [key=2, style=dotted, color=red];
m19_165 -> m19_177  [key=2, style=dotted, color=red];
m19_165 -> m19_178  [key=2, style=dotted, color=red];
m19_165 -> m19_180  [key=1, style=dashed, color=red, label="lambda expression"];
m19_165 -> m19_181  [key=1, style=dashed, color=red, label=activationCount];
m19_165 -> m19_169  [key=1, style=dashed, color=red, label=activationCount];
m19_165 -> m19_175  [key=1, style=dashed, color=red, label=activationCount];
m19_166 -> m19_167  [key=0, style=solid, color=red];
m19_166 -> m19_15  [key=2, style=dotted, color=red];
m19_166 -> m19_95  [key=2, style=dotted, color=red];
m19_166 -> m19_183  [key=1, style=dashed, color=red, label="lambda expression"];
m19_169 -> m19_170  [key=0, style=solid, color=red];
m19_169 -> m19_18  [key=2, style=dotted];
m19_169 -> m19_179  [key=2, style=dotted];
m19_175 -> m19_176  [key=0, style=solid];
m19_175 -> m19_18  [key=2, style=dotted];
m19_175 -> m19_179  [key=2, style=dotted];
m19_167 -> m19_168  [key=0, style=solid, color=red];
m19_167 -> m19_15  [key=2, style=dotted, color=red];
m19_167 -> m19_41  [key=2, style=dotted, color=red];
m19_168 -> m19_169  [key=0, style=solid, color=red];
m19_168 -> m19_15  [key=2, style=dotted, color=red];
m19_168 -> m19_41  [key=2, style=dotted, color=red];
m19_170 -> m19_171  [key=0, style=solid, color=red];
m19_170 -> m19_17  [key=2, style=dotted, color=red];
m19_170 -> m19_172  [key=1, style=dashed, color=red, label=barracks];
m19_170 -> m19_173  [key=1, style=dashed, color=red, label=barracks];
m19_170 -> m19_174  [key=1, style=dashed, color=red, label=barracks];
m19_171 -> m19_172  [key=0, style=solid];
m19_171 -> m19_18  [key=2, style=dotted];
m19_171 -> m19_19  [key=2, style=dotted];
m19_172 -> m19_173  [key=0, style=solid];
m19_172 -> m19_18  [key=2, style=dotted];
m19_172 -> m19_19  [key=2, style=dotted];
m19_173 -> m19_174  [key=0, style=solid];
m19_173 -> m19_18  [key=2, style=dotted];
m19_173 -> m19_75  [key=2, style=dotted];
m19_174 -> m19_175  [key=0, style=solid];
m19_174 -> m19_18  [key=2, style=dotted];
m19_174 -> m19_19  [key=2, style=dotted];
m19_176 -> m19_163  [key=0, style=bold, color=blue];
m19_206 -> m19_207  [key=0, style=solid, color=red];
m19_207 -> m19_208  [key=0, style=solid, color=red];
m19_207 -> m19_15  [key=2, style=dotted, color=red];
m19_207 -> m19_16  [key=2, style=dotted, color=red];
m19_208 -> m19_209  [key=0, style=solid, color=red];
m19_208 -> m19_17  [key=2, style=dotted, color=red];
m19_209 -> m19_210  [key=0, style=solid];
m19_209 -> m19_18  [key=2, style=dotted];
m19_209 -> m19_19  [key=2, style=dotted];
m19_210 -> m19_206  [key=0, style=bold, color=blue];
m19_130 -> m19_131  [key=0, style=solid, color=red];
m19_131 -> m19_132  [key=0, style=solid, color=red];
m19_131 -> m19_15  [key=2, style=dotted, color=red];
m19_131 -> m19_95  [key=2, style=dotted, color=red];
m19_131 -> m19_137  [key=1, style=dashed, color=red, label="lambda expression"];
m19_132 -> m19_133  [key=0, style=solid, color=red];
m19_132 -> m19_17  [key=2, style=dotted, color=red];
m19_132 -> m19_134  [key=1, style=dashed, color=red, label=barracks1];
m19_133 -> m19_134  [key=0, style=solid, color=red];
m19_133 -> m19_17  [key=2, style=dotted, color=red];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_18  [key=2, style=dotted];
m19_134 -> m19_136  [key=2, style=dotted];
m19_135 -> m19_130  [key=0, style=bold, color=blue];
m19_21 -> m19_22  [key=0, style=solid, color=red];
m19_22 -> m19_23  [key=0, style=solid, color=red];
m19_22 -> m19_15  [key=2, style=dotted, color=red];
m19_22 -> m19_16  [key=2, style=dotted, color=red];
m19_23 -> m19_24  [key=0, style=solid, color=red];
m19_23 -> m19_30  [key=2, style=dotted];
m19_23 -> m19_31  [key=2, style=dotted];
m19_23 -> m19_32  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid, color=red];
m19_24 -> m19_17  [key=2, style=dotted, color=red];
m19_24 -> m19_26  [key=1, style=dashed, color=red, label=barracks];
m19_24 -> m19_27  [key=1, style=dashed, color=red, label=barracks];
m19_24 -> m19_28  [key=1, style=dashed, color=red, label=barracks];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_18  [key=2, style=dotted];
m19_25 -> m19_19  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_18  [key=2, style=dotted];
m19_26 -> m19_19  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_18  [key=2, style=dotted];
m19_27 -> m19_19  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_18  [key=2, style=dotted];
m19_28 -> m19_20  [key=2, style=dotted];
m19_29 -> m19_21  [key=0, style=bold, color=blue];
m19_100 -> m19_101  [key=0, style=solid, color=red];
m19_101 -> m19_102  [key=0, style=solid, color=red];
m19_101 -> m19_15  [key=2, style=dotted, color=red];
m19_101 -> m19_95  [key=2, style=dotted, color=red];
m19_101 -> m19_110  [key=1, style=dashed, color=red, label="lambda expression"];
m19_102 -> m19_103  [key=0, style=solid, color=red];
m19_102 -> m19_15  [key=2, style=dotted, color=red];
m19_102 -> m19_41  [key=2, style=dotted, color=red];
m19_103 -> m19_104  [key=0, style=solid, color=red];
m19_103 -> m19_15  [key=2, style=dotted, color=red];
m19_103 -> m19_41  [key=2, style=dotted, color=red];
m19_104 -> m19_105  [key=0, style=solid, color=red];
m19_104 -> m19_17  [key=2, style=dotted, color=red];
m19_104 -> m19_106  [key=1, style=dashed, color=red, label=barracks];
m19_104 -> m19_107  [key=1, style=dashed, color=red, label=barracks];
m19_104 -> m19_108  [key=1, style=dashed, color=red, label=barracks];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_18  [key=2, style=dotted];
m19_105 -> m19_19  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_18  [key=2, style=dotted];
m19_106 -> m19_19  [key=2, style=dotted];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_18  [key=2, style=dotted];
m19_107 -> m19_75  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_18  [key=2, style=dotted];
m19_108 -> m19_20  [key=2, style=dotted];
m19_109 -> m19_100  [key=0, style=bold, color=blue];
m19_218 -> m19_219  [key=0, style=solid];
m19_219 -> m19_220  [key=0, style=solid];
m19_220 -> m19_218  [key=0, style=bold, color=blue];
m19_8 -> m19_9  [key=0, style=solid, color=red];
m19_9 -> m19_10  [key=0, style=solid, color=red];
m19_9 -> m19_15  [key=2, style=dotted, color=red];
m19_9 -> m19_16  [key=2, style=dotted, color=red];
m19_10 -> m19_11  [key=0, style=solid, color=red];
m19_10 -> m19_17  [key=2, style=dotted, color=red];
m19_10 -> m19_12  [key=1, style=dashed, color=red, label=barracks];
m19_10 -> m19_13  [key=1, style=dashed, color=red, label=barracks];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_18  [key=2, style=dotted];
m19_11 -> m19_19  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_18  [key=2, style=dotted];
m19_12 -> m19_20  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_13 -> m19_20  [key=2, style=dotted];
m19_14 -> m19_8  [key=0, style=bold, color=blue];
m19_237 -> m19_238  [key=0, style=solid];
m19_238 -> m19_239  [key=0, style=solid];
m19_239 -> m19_237  [key=0, style=bold, color=blue];
m19_42 -> m19_43  [key=0, style=solid, color=red];
m19_43 -> m19_44  [key=0, style=solid, color=red];
m19_43 -> m19_15  [key=2, style=dotted, color=red];
m19_43 -> m19_16  [key=2, style=dotted, color=red];
m19_44 -> m19_45  [key=0, style=solid, color=red];
m19_44 -> m19_15  [key=2, style=dotted, color=red];
m19_44 -> m19_41  [key=2, style=dotted, color=red];
m19_45 -> m19_46  [key=0, style=solid, color=red];
m19_45 -> m19_15  [key=2, style=dotted, color=red];
m19_45 -> m19_41  [key=2, style=dotted, color=red];
m19_45 -> m19_51  [key=2, style=dotted, color=red];
m19_45 -> m19_52  [key=1, style=dashed, color=red, label="lambda expression"];
m19_46 -> m19_47  [key=0, style=solid, color=red];
m19_46 -> m19_17  [key=2, style=dotted, color=red];
m19_46 -> m19_48  [key=1, style=dashed, color=red, label=barracks];
m19_46 -> m19_49  [key=1, style=dashed, color=red, label=barracks];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_18  [key=2, style=dotted];
m19_47 -> m19_19  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_18  [key=2, style=dotted];
m19_48 -> m19_20  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_18  [key=2, style=dotted];
m19_49 -> m19_19  [key=2, style=dotted];
m19_50 -> m19_42  [key=0, style=bold, color=blue];
m19_151 -> m19_152  [key=0, style=solid];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_129  [key=2, style=dotted];
m19_152 -> m19_32  [key=2, style=dotted];
m19_153 -> m19_151  [key=0, style=bold, color=blue];
m19_154 -> m19_155  [key=0, style=solid, color=red];
m19_155 -> m19_156  [key=0, style=solid, color=red];
m19_155 -> m19_15  [key=2, style=dotted, color=red];
m19_155 -> m19_95  [key=2, style=dotted, color=red];
m19_155 -> m19_160  [key=1, style=dashed, color=red, label="lambda expression"];
m19_156 -> m19_157  [key=0, style=solid, color=red];
m19_156 -> m19_17  [key=2, style=dotted, color=red];
m19_156 -> m19_158  [key=1, style=dashed, color=red, label=barracks1];
m19_157 -> m19_158  [key=0, style=solid, color=red];
m19_157 -> m19_17  [key=2, style=dotted, color=red];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_18  [key=2, style=dotted];
m19_158 -> m19_136  [key=2, style=dotted];
m19_159 -> m19_154  [key=0, style=bold, color=blue];
m19_233 -> m19_234  [key=0, style=solid];
m19_234 -> m19_233  [key=0, style=bold, color=blue];
m19_55 -> m19_56  [key=0, style=solid, color=red];
m19_56 -> m19_57  [key=0, style=solid, color=red];
m19_56 -> m19_15  [key=2, style=dotted, color=red];
m19_56 -> m19_16  [key=2, style=dotted, color=red];
m19_57 -> m19_58  [key=0, style=solid, color=red];
m19_57 -> m19_15  [key=2, style=dotted, color=red];
m19_57 -> m19_41  [key=2, style=dotted, color=red];
m19_58 -> m19_59  [key=0, style=solid, color=red];
m19_58 -> m19_15  [key=2, style=dotted, color=red];
m19_58 -> m19_41  [key=2, style=dotted, color=red];
m19_59 -> m19_60  [key=0, style=solid, color=red];
m19_59 -> m19_17  [key=2, style=dotted, color=red];
m19_59 -> m19_61  [key=1, style=dashed, color=red, label=barracks];
m19_59 -> m19_62  [key=1, style=dashed, color=red, label=barracks];
m19_59 -> m19_63  [key=1, style=dashed, color=red, label=barracks];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_18  [key=2, style=dotted];
m19_60 -> m19_19  [key=2, style=dotted];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_18  [key=2, style=dotted];
m19_61 -> m19_19  [key=2, style=dotted];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_18  [key=2, style=dotted];
m19_62 -> m19_19  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_18  [key=2, style=dotted];
m19_63 -> m19_19  [key=2, style=dotted];
m19_64 -> m19_55  [key=0, style=bold, color=blue];
m19_195 -> m19_196  [key=0, style=solid, color=red];
m19_196 -> m19_197  [key=0, style=solid, color=red];
m19_196 -> m19_17  [key=2, style=dotted, color=red];
m19_197 -> m19_198  [key=0, style=solid];
m19_197 -> m19_18  [key=2, style=dotted];
m19_197 -> m19_20  [key=2, style=dotted];
m19_198 -> m19_195  [key=0, style=bold, color=blue];
m19_221 -> m19_222  [key=0, style=solid];
m19_222 -> m19_221  [key=0, style=bold, color=blue];
m19_231 -> m19_232  [key=0, style=solid];
m19_232 -> m19_231  [key=0, style=bold, color=blue];
m19_199 -> m19_200  [key=0, style=solid, color=red];
m19_200 -> m19_201  [key=0, style=solid, color=red];
m19_200 -> m19_204  [key=2, style=dotted, color=red];
m19_200 -> m19_205  [key=2, style=dotted, color=red];
m19_201 -> m19_202  [key=0, style=solid, color=red];
m19_201 -> m19_17  [key=2, style=dotted, color=red];
m19_202 -> m19_203  [key=0, style=solid];
m19_202 -> m19_18  [key=2, style=dotted];
m19_202 -> m19_19  [key=2, style=dotted];
m19_203 -> m19_199  [key=0, style=bold, color=blue];
m19_115 -> m19_116  [key=0, style=solid, color=red];
m19_116 -> m19_117  [key=0, style=solid, color=red];
m19_116 -> m19_15  [key=2, style=dotted, color=red];
m19_116 -> m19_95  [key=2, style=dotted, color=red];
m19_116 -> m19_125  [key=1, style=dashed, color=red, label="lambda expression"];
m19_117 -> m19_118  [key=0, style=solid, color=red];
m19_117 -> m19_15  [key=2, style=dotted, color=red];
m19_117 -> m19_41  [key=2, style=dotted, color=red];
m19_118 -> m19_119  [key=0, style=solid, color=red];
m19_118 -> m19_15  [key=2, style=dotted, color=red];
m19_118 -> m19_41  [key=2, style=dotted, color=red];
m19_119 -> m19_120  [key=0, style=solid, color=red];
m19_119 -> m19_17  [key=2, style=dotted, color=red];
m19_119 -> m19_121  [key=1, style=dashed, color=red, label=barracks];
m19_119 -> m19_122  [key=1, style=dashed, color=red, label=barracks];
m19_119 -> m19_123  [key=1, style=dashed, color=red, label=barracks];
m19_120 -> m19_121  [key=0, style=solid];
m19_120 -> m19_18  [key=2, style=dotted];
m19_120 -> m19_19  [key=2, style=dotted];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_18  [key=2, style=dotted];
m19_121 -> m19_19  [key=2, style=dotted];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_18  [key=2, style=dotted];
m19_122 -> m19_75  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_18  [key=2, style=dotted];
m19_123 -> m19_19  [key=2, style=dotted];
m19_124 -> m19_115  [key=0, style=bold, color=blue];
m19_223 -> m19_224  [key=0, style=solid];
m19_224 -> m19_225  [key=0, style=solid];
m19_225 -> m19_223  [key=0, style=bold, color=blue];
m19_235 -> m19_236  [key=0, style=solid];
m19_236 -> m19_235  [key=0, style=bold, color=blue];
m19_192 -> m19_193  [key=0, style=solid, color=red];
m19_52 -> m19_53  [key=0, style=solid, color=red];
m19_53 -> m19_54  [key=0, style=solid, color=red];
m19_54 -> m19_52  [key=0, style=bold, color=blue];
m19_77 -> m19_78  [key=0, style=solid, color=red];
m19_80 -> m19_81  [key=0, style=solid, color=red];
m19_83 -> m19_84  [key=0, style=solid, color=red];
m19_78 -> m19_79  [key=0, style=solid, color=red];
m19_78 -> m19_17  [key=2, style=dotted, color=red];
m19_79 -> m19_77  [key=0, style=bold, color=blue];
m19_81 -> m19_82  [key=0, style=solid, color=red];
m19_81 -> m19_17  [key=2, style=dotted, color=red];
m19_82 -> m19_80  [key=0, style=bold, color=blue];
m19_84 -> m19_85  [key=0, style=solid, color=red];
m19_84 -> m19_17  [key=2, style=dotted, color=red];
m19_85 -> m19_83  [key=0, style=bold, color=blue];
m19_96 -> m19_97  [key=0, style=solid, color=red];
m19_97 -> m19_98  [key=0, style=solid, color=red];
m19_97 -> m19_99  [key=2, style=dotted, color=red];
m19_98 -> m19_96  [key=0, style=bold, color=blue];
m19_110 -> m19_111  [key=0, style=solid, color=red];
m19_111 -> m19_112  [key=0, style=solid, color=red];
m19_111 -> m19_113  [key=2, style=dotted, color=red];
m19_111 -> m19_114  [key=2, style=dotted, color=red];
m19_112 -> m19_110  [key=0, style=bold, color=blue];
m19_125 -> m19_126  [key=0, style=solid, color=red];
m19_126 -> m19_127  [key=0, style=solid, color=red];
m19_126 -> m19_128  [key=2, style=dotted, color=red];
m19_126 -> m19_129  [key=2, style=dotted, color=red];
m19_126 -> m19_32  [key=2, style=dotted, color=red];
m19_126 -> m19_114  [key=2, style=dotted, color=red];
m19_127 -> m19_125  [key=0, style=bold, color=blue];
m19_137 -> m19_138  [key=0, style=solid, color=red];
m19_138 -> m19_139  [key=0, style=solid, color=red];
m19_138 -> m19_113  [key=2, style=dotted, color=red];
m19_138 -> m19_129  [key=2, style=dotted, color=red];
m19_138 -> m19_32  [key=2, style=dotted, color=red];
m19_139 -> m19_137  [key=0, style=bold, color=blue];
m19_149 -> m19_150  [key=0, style=solid, color=red];
m19_149 -> m19_113  [key=2, style=dotted, color=red];
m19_148 -> m19_149  [key=0, style=solid, color=red];
m19_150 -> m19_148  [key=0, style=bold, color=blue];
m19_160 -> m19_161  [key=0, style=solid, color=red];
m19_161 -> m19_162  [key=0, style=solid, color=red];
m19_161 -> m19_113  [key=2, style=dotted, color=red];
m19_161 -> m19_151  [key=2, style=dotted, color=red];
m19_162 -> m19_160  [key=0, style=bold, color=blue];
m19_180 -> m19_181  [key=0, style=solid, color=red];
m19_181 -> m19_182  [key=0, style=solid, color=red];
m19_181 -> m19_181  [key=1, style=dashed, color=red, label=activationCount];
m19_183 -> m19_184  [key=0, style=solid, color=red];
m19_182 -> m19_180  [key=0, style=bold, color=blue];
m19_184 -> m19_185  [key=0, style=solid, color=red];
m19_184 -> m19_128  [key=2, style=dotted, color=red];
m19_184 -> m19_186  [key=2, style=dotted, color=red];
m19_184 -> m19_114  [key=2, style=dotted, color=red];
m19_185 -> m19_183  [key=0, style=bold, color=blue];
m19_193 -> m19_194  [key=0, style=solid, color=red];
m19_193 -> m19_17  [key=2, style=dotted, color=red];
m19_194 -> m19_192  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=2, style=dotted];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_226 -> m19_227  [key=0, style=solid];
m19_227 -> m19_226  [key=0, style=bold, color=blue];
m19_65 -> m19_66  [key=0, style=solid, color=red];
m19_66 -> m19_67  [key=0, style=solid, color=red];
m19_66 -> m19_15  [key=2, style=dotted, color=red];
m19_66 -> m19_16  [key=2, style=dotted, color=red];
m19_67 -> m19_68  [key=0, style=solid, color=red];
m19_67 -> m19_75  [key=2, style=dotted, color=red];
m19_67 -> m19_77  [key=1, style=dashed, color=red, label="lambda expression"];
m19_68 -> m19_69  [key=0, style=solid, color=red];
m19_68 -> m19_15  [key=2, style=dotted, color=red];
m19_68 -> m19_41  [key=2, style=dotted, color=red];
m19_69 -> m19_70  [key=0, style=solid, color=red];
m19_69 -> m19_75  [key=2, style=dotted, color=red];
m19_69 -> m19_80  [key=1, style=dashed, color=red, label="lambda expression"];
m19_70 -> m19_71  [key=0, style=solid, color=red];
m19_70 -> m19_76  [key=2, style=dotted, color=red];
m19_71 -> m19_72  [key=0, style=solid, color=red];
m19_71 -> m19_15  [key=2, style=dotted, color=red];
m19_71 -> m19_41  [key=2, style=dotted, color=red];
m19_72 -> m19_73  [key=0, style=solid, color=red];
m19_72 -> m19_75  [key=2, style=dotted, color=red];
m19_72 -> m19_83  [key=1, style=dashed, color=red, label="lambda expression"];
m19_73 -> m19_74  [key=0, style=solid, color=red];
m19_73 -> m19_76  [key=2, style=dotted, color=red];
m19_74 -> m19_65  [key=0, style=bold, color=blue];
m19_211 -> m19_212  [key=0, style=solid, color=red];
m19_212 -> m19_213  [key=0, style=solid, color=red];
m19_212 -> m19_17  [key=2, style=dotted, color=red];
m19_213 -> m19_214  [key=0, style=solid];
m19_213 -> m19_18  [key=2, style=dotted];
m19_213 -> m19_215  [key=2, style=dotted];
m19_214 -> m19_211  [key=0, style=bold, color=blue];
m19_216 -> m19_217  [key=0, style=solid];
m19_217 -> m19_216  [key=0, style=bold, color=blue];
m19_86 -> m19_87  [key=0, style=solid, color=red];
m19_87 -> m19_88  [key=0, style=solid, color=red];
m19_87 -> m19_15  [key=2, style=dotted, color=red];
m19_87 -> m19_95  [key=2, style=dotted, color=red];
m19_87 -> m19_96  [key=1, style=dashed, color=red, label="lambda expression"];
m19_88 -> m19_89  [key=0, style=solid, color=red];
m19_88 -> m19_15  [key=2, style=dotted, color=red];
m19_88 -> m19_41  [key=2, style=dotted, color=red];
m19_89 -> m19_90  [key=0, style=solid, color=red];
m19_89 -> m19_15  [key=2, style=dotted, color=red];
m19_89 -> m19_41  [key=2, style=dotted, color=red];
m19_90 -> m19_91  [key=0, style=solid, color=red];
m19_90 -> m19_17  [key=2, style=dotted, color=red];
m19_90 -> m19_92  [key=1, style=dashed, color=red, label=barracks];
m19_90 -> m19_93  [key=1, style=dashed, color=red, label=barracks];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_18  [key=2, style=dotted];
m19_91 -> m19_19  [key=2, style=dotted];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_18  [key=2, style=dotted];
m19_92 -> m19_20  [key=2, style=dotted];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_18  [key=2, style=dotted];
m19_93 -> m19_20  [key=2, style=dotted];
m19_94 -> m19_86  [key=0, style=bold, color=blue];
m19_187 -> m19_188  [key=0, style=solid, color=red];
m19_188 -> m19_189  [key=0, style=solid, color=red];
m19_188 -> m19_15  [key=2, style=dotted, color=red];
m19_188 -> m19_16  [key=2, style=dotted, color=red];
m19_189 -> m19_190  [key=0, style=solid, color=red];
m19_189 -> m19_189  [key=3, color=red, style=bold, label="Local variable System.Action getClassWithTwoInjectAttributes"];
m19_190 -> m19_191  [key=0, style=solid];
m19_190 -> m19_75  [key=2, style=dotted];
m19_191 -> m19_187  [key=0, style=bold, color=blue];
m19_240 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_9  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_10  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_22  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_24  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_34  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_35  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_36  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_43  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_44  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_45  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_46  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_56  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_57  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_58  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_59  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_66  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_67  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_78  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_68  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_69  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_81  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_70  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_71  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_72  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_84  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_73  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_87  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_88  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_89  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_90  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_101  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_102  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_103  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_104  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_116  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_117  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_118  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_119  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_131  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_132  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_133  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_142  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_143  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_144  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_155  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_156  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_157  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_165  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_166  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_167  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_168  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_170  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_188  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_189  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_193  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_196  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_200  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_201  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_207  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_208  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_240 -> m19_212  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ConstructorSelectionTests"];
m19_241 -> m19_149  [key=1, style=dashed, color=red, label=ninja];
m19_242 -> m19_181  [key=1, style=dashed, color=red, label=activationCount];
m19_243 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithDefaultValue"];
m19_244 -> m19_224  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithGeneric"];
m19_245 -> m19_229  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithSelfBindableType"];
m19_246 -> m19_238  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConstructorSelectionTests.ClassWithObsoleteContructor"];
m20_20 -> m20_21  [key=0, style=solid, color=green];
m20_21 -> m20_22  [key=0, style=solid, color=green];
m20_21 -> m20_14  [key=2, style=dotted, color=green];
m20_21 -> m20_15  [key=2, style=dotted, color=green];
m20_22 -> m20_23  [key=0, style=solid, color=green];
m20_22 -> m20_14  [key=2, style=dotted, color=green];
m20_22 -> m20_27  [key=2, style=dotted, color=green];
m20_23 -> m20_24  [key=0, style=solid, color=green];
m20_23 -> m20_16  [key=2, style=dotted, color=green];
m20_23 -> m20_25  [key=1, style=dashed, color=green, label=shield];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_17  [key=2, style=dotted];
m20_24 -> m20_18  [key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_17  [key=2, style=dotted];
m20_25 -> m20_19  [key=2, style=dotted];
m20_26 -> m20_20  [key=0, style=bold, color=blue];
m20_28 -> m20_29  [key=0, style=solid, color=green];
m20_29 -> m20_30  [key=0, style=solid, color=green];
m20_29 -> m20_14  [key=2, style=dotted, color=green];
m20_29 -> m20_15  [key=2, style=dotted, color=green];
m20_29 -> m20_34  [key=2, style=dotted, color=green];
m20_30 -> m20_31  [key=0, style=solid, color=green];
m20_30 -> m20_16  [key=2, style=dotted, color=green];
m20_30 -> m20_32  [key=1, style=dashed, color=green, label=shield];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_17  [key=2, style=dotted];
m20_31 -> m20_18  [key=2, style=dotted];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_17  [key=2, style=dotted];
m20_32 -> m20_19  [key=2, style=dotted];
m20_33 -> m20_28  [key=0, style=bold, color=blue];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_7  [key=2, style=dotted];
m20_6 -> m20_4  [key=0, style=bold, color=blue];
m20_35 -> m20_36  [key=0, style=solid, color=green];
m20_36 -> m20_37  [key=0, style=solid, color=green];
m20_36 -> m20_14  [key=2, style=dotted, color=green];
m20_36 -> m20_15  [key=2, style=dotted, color=green];
m20_37 -> m20_38  [key=0, style=solid, color=green];
m20_37 -> m20_14  [key=2, style=dotted, color=green];
m20_37 -> m20_15  [key=2, style=dotted, color=green];
m20_38 -> m20_39  [key=0, style=solid, color=green];
m20_38 -> m20_16  [key=2, style=dotted, color=green];
m20_38 -> m20_40  [key=1, style=dashed, color=green, label=shield1];
m20_38 -> m20_41  [key=1, style=dashed, color=green, label=shield1];
m20_39 -> m20_40  [key=0, style=solid, color=green];
m20_39 -> m20_16  [key=2, style=dotted, color=green];
m20_39 -> m20_42  [key=1, style=dashed, color=green, label=shield2];
m20_39 -> m20_43  [key=1, style=dashed, color=green, label=shield2];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_17  [key=2, style=dotted];
m20_40 -> m20_18  [key=2, style=dotted];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_17  [key=2, style=dotted];
m20_41 -> m20_19  [key=2, style=dotted];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_17  [key=2, style=dotted];
m20_42 -> m20_18  [key=2, style=dotted];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_17  [key=2, style=dotted];
m20_43 -> m20_19  [key=2, style=dotted];
m20_44 -> m20_35  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_8 -> m20_9  [key=0, style=solid, color=green];
m20_9 -> m20_10  [key=0, style=solid, color=green];
m20_9 -> m20_14  [key=2, style=dotted, color=green];
m20_9 -> m20_15  [key=2, style=dotted, color=green];
m20_10 -> m20_11  [key=0, style=solid, color=green];
m20_10 -> m20_16  [key=2, style=dotted, color=green];
m20_10 -> m20_12  [key=1, style=dashed, color=green, label=shield];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_17  [key=2, style=dotted];
m20_11 -> m20_18  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_17  [key=2, style=dotted];
m20_12 -> m20_19  [key=2, style=dotted];
m20_13 -> m20_8  [key=0, style=bold, color=blue];
m20_45 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_21  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_29  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_30  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_36  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_37  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_38  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m20_45 -> m20_39  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultParameterTests"];
m21_62 -> m21_63  [key=0, style=solid];
m21_64 -> m21_65  [key=0, style=solid, color=green];
m21_63 -> m21_64  [key=0, style=solid, color=green];
m21_63 -> m21_72  [key=1, style=dashed, color=green, label=obj];
m21_63 -> m21_68  [key=2, style=dotted];
m21_65 -> m21_66  [key=0, style=solid, color=green];
m21_65 -> m21_69  [key=2, style=dotted, color=green];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_70  [key=2, style=dotted];
m21_67 -> m21_62  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_9  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=2, style=dotted];
m21_5 -> m21_10  [key=2, style=dotted];
m21_6 -> m21_4  [key=0, style=bold, color=blue];
m21_6 -> m21_0  [key=0, style=bold, color=blue];
m21_11 -> m21_12  [key=0, style=solid, color=green];
m21_12 -> m21_13  [key=0, style=solid, color=green];
m21_12 -> m21_7  [key=2, style=dotted];
m21_12 -> m21_8  [key=2, style=dotted];
m21_12 -> m21_9  [key=2, style=dotted, color=green];
m21_12 -> m21_14  [key=1, style=dashed, color=green, label=firstInstance];
m21_13 -> m21_14  [key=0, style=solid, color=green];
m21_13 -> m21_9  [key=2, style=dotted, color=green];
m21_13 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label=parent];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_17  [key=2, style=dotted];
m21_14 -> m21_18  [key=2, style=dotted];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_18  [key=2, style=dotted];
m21_15 -> m21_11  [key=0, style=bold, color=blue];
m21_16 -> m21_11  [key=0, style=bold, color=blue];
m21_45 -> m21_46  [key=0, style=solid, color=green];
m21_46 -> m21_47  [key=0, style=solid, color=green];
m21_46 -> m21_7  [key=2, style=dotted, color=green];
m21_46 -> m21_50  [key=2, style=dotted, color=green];
m21_47 -> m21_48  [key=0, style=solid, color=green];
m21_47 -> m21_30  [key=2, style=dotted, color=green];
m21_47 -> m21_31  [key=2, style=dotted, color=green];
m21_48 -> m21_17  [key=2, style=dotted];
m21_48 -> m21_32  [key=2, style=dotted];
m21_48 -> m21_49  [key=0, style=solid];
m21_49 -> m21_45  [key=0, style=bold, color=blue];
m21_79 -> m21_80  [key=0, style=solid, color=green];
m21_80 -> m21_81  [key=0, style=solid, color=green];
m21_80 -> m21_7  [key=2, style=dotted, color=green];
m21_80 -> m21_28  [key=2, style=dotted, color=green];
m21_80 -> m21_84  [key=2, style=dotted, color=green];
m21_81 -> m21_82  [key=0, style=solid, color=green];
m21_81 -> m21_30  [key=2, style=dotted, color=green];
m21_81 -> m21_31  [key=2, style=dotted, color=green];
m21_82 -> m21_17  [key=2, style=dotted];
m21_82 -> m21_32  [key=2, style=dotted];
m21_82 -> m21_83  [key=0, style=solid];
m21_83 -> m21_79  [key=0, style=bold, color=blue];
m21_22 -> m21_23  [key=0, style=solid, color=green];
m21_23 -> m21_24  [key=0, style=solid, color=green];
m21_23 -> m21_7  [key=2, style=dotted, color=green];
m21_23 -> m21_28  [key=2, style=dotted, color=green];
m21_23 -> m21_29  [key=2, style=dotted, color=green];
m21_24 -> m21_25  [key=0, style=solid, color=green];
m21_24 -> m21_30  [key=2, style=dotted, color=green];
m21_24 -> m21_31  [key=2, style=dotted, color=green];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_17  [key=2, style=dotted];
m21_25 -> m21_32  [key=2, style=dotted];
m21_26 -> m21_22  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [key=2, style=dotted];
m21_42 -> m21_43  [key=0, style=solid];
m21_43 -> m21_11  [key=2, style=dotted];
m21_43 -> m21_44  [key=0, style=solid];
m21_44 -> m21_42  [key=0, style=bold, color=blue];
m21_74 -> m21_75  [key=0, style=solid, color=green];
m21_75 -> m21_76  [key=0, style=solid, color=green];
m21_75 -> m21_7  [key=2, style=dotted, color=green];
m21_75 -> m21_28  [key=2, style=dotted, color=green];
m21_75 -> m21_29  [key=2, style=dotted, color=green];
m21_76 -> m21_77  [key=0, style=solid, color=green];
m21_76 -> m21_30  [key=2, style=dotted, color=green];
m21_76 -> m21_31  [key=2, style=dotted, color=green];
m21_77 -> m21_17  [key=2, style=dotted];
m21_77 -> m21_32  [key=2, style=dotted];
m21_77 -> m21_78  [key=0, style=solid];
m21_78 -> m21_74  [key=0, style=bold, color=blue];
m21_57 -> m21_58  [key=0, style=solid, color=green];
m21_58 -> m21_59  [key=0, style=solid, color=green];
m21_58 -> m21_7  [key=2, style=dotted, color=green];
m21_58 -> m21_50  [key=2, style=dotted, color=green];
m21_59 -> m21_60  [key=0, style=solid, color=green];
m21_59 -> m21_30  [key=2, style=dotted, color=green];
m21_59 -> m21_31  [key=2, style=dotted, color=green];
m21_60 -> m21_61  [key=0, style=solid, color=green];
m21_60 -> m21_17  [key=2, style=dotted, color=green];
m21_60 -> m21_32  [key=2, style=dotted, color=green];
m21_61 -> m21_57  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_1 -> m21_7  [key=2, style=dotted];
m21_1 -> m21_8  [key=2, style=dotted];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_7  [key=2, style=dotted];
m21_2 -> m21_8  [key=2, style=dotted];
m21_9 -> m21_3  [key=0, style=bold, color=blue];
m21_3 -> m21_8  [key=0, style=solid];
m21_3 -> m21_62  [key=3, color=darkorchid, style=bold, label="method methodReturn void InitializeKernel"];
m21_3 -> m21_96  [key=3, color=darkorchid, style=bold, label="method methodReturn void InitializeKernel"];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_7  [key=2, style=dotted];
m21_85 -> m21_86  [key=0, style=solid, color=green];
m21_86 -> m21_87  [key=0, style=solid, color=green];
m21_86 -> m21_17  [key=2, style=dotted, color=green];
m21_86 -> m21_32  [key=2, style=dotted, color=green];
m21_87 -> m21_85  [key=0, style=bold, color=blue];
m21_71 -> m21_72  [key=0, style=solid, color=green];
m21_72 -> m21_73  [key=0, style=solid, color=green];
m21_73 -> m21_71  [key=0, style=bold, color=blue];
m21_54 -> m21_55  [key=0, style=solid];
m21_55 -> m21_11  [key=2, style=dotted];
m21_55 -> m21_56  [key=0, style=solid];
m21_56 -> m21_54  [key=0, style=bold, color=blue];
m21_91 -> m21_92  [key=0, style=solid, color=green];
m21_92 -> m21_93  [key=0, style=solid, color=green];
m21_92 -> m21_7  [key=2, style=dotted, color=green];
m21_92 -> m21_50  [key=2, style=dotted, color=green];
m21_93 -> m21_94  [key=0, style=solid, color=green];
m21_93 -> m21_30  [key=2, style=dotted, color=green];
m21_93 -> m21_31  [key=2, style=dotted, color=green];
m21_94 -> m21_17  [key=2, style=dotted];
m21_94 -> m21_32  [key=2, style=dotted];
m21_94 -> m21_95  [key=0, style=solid];
m21_95 -> m21_91  [key=0, style=bold, color=blue];
m21_33 -> m21_34  [key=0, style=solid, color=green];
m21_34 -> m21_35  [key=0, style=solid, color=green];
m21_34 -> m21_7  [key=2, style=dotted, color=green];
m21_34 -> m21_28  [key=2, style=dotted, color=green];
m21_34 -> m21_38  [key=2, style=dotted, color=green];
m21_35 -> m21_36  [key=0, style=solid, color=green];
m21_35 -> m21_30  [key=2, style=dotted, color=green];
m21_35 -> m21_31  [key=2, style=dotted, color=green];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_17  [key=2, style=dotted];
m21_36 -> m21_32  [key=2, style=dotted];
m21_37 -> m21_33  [key=0, style=bold, color=blue];
m21_96 -> m21_97  [key=0, style=solid];
m21_97 -> m21_69  [key=2, style=dotted];
m21_97 -> m21_98  [key=0, style=solid];
m21_98 -> m21_70  [key=2, style=dotted];
m21_98 -> m21_99  [key=0, style=solid];
m21_99 -> m21_96  [key=0, style=bold, color=blue];
m21_39 -> m21_40  [key=0, style=solid, color=green];
m21_40 -> m21_41  [key=0, style=solid, color=green];
m21_40 -> m21_17  [key=2, style=dotted, color=green];
m21_40 -> m21_32  [key=2, style=dotted, color=green];
m21_41 -> m21_39  [key=0, style=bold, color=blue];
m21_88 -> m21_89  [key=0, style=solid];
m21_89 -> m21_11  [key=2, style=dotted];
m21_89 -> m21_90  [key=0, style=solid];
m21_90 -> m21_88  [key=0, style=bold, color=blue];
m21_51 -> m21_52  [key=0, style=solid, color=green];
m21_52 -> m21_53  [key=0, style=solid, color=green];
m21_52 -> m21_17  [key=2, style=dotted, color=green];
m21_52 -> m21_32  [key=2, style=dotted, color=green];
m21_53 -> m21_51  [key=0, style=bold, color=blue];
m21_19 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_19 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.EnumerableDependenciesTests.WhenServiceRequestsUnconstrainedEnumerableOfDependencies"];
m21_100 -> m21_12  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext"];
m21_100 -> m21_13  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext"];
m21_100 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext"];
m21_100 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext"];
m21_100 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.DefaultScopeContext"];
m21_101 -> m21_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_34  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_35  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_40  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_46  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_47  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_101 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithDefaults"];
m21_102 -> m21_52  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_58  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_59  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_60  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_64  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_65  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_102 -> m21_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithNewObjectScope"];
m21_103 -> m21_72  [key=1, style=dashed, color=green, label=obj];
m21_104 -> m21_75  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_76  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_80  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_81  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_86  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_92  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_93  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m21_104 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.DefaultScopeCallbackTests.WhenKernelIsCreatedWithThreadScopeAsDefault"];
m22_6 -> m22_7  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid, color=green];
m22_9 -> m22_14  [key=2, style=dotted, color=green];
m22_8 -> m22_9  [key=0, style=solid, color=green];
m22_8 -> m22_13  [key=2, style=dotted];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_15  [key=2, style=dotted];
m22_10 -> m22_16  [key=2, style=dotted];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label=instance];
m22_7 -> m22_12  [key=2, style=dotted];
m22_11 -> m22_6  [key=0, style=bold, color=blue];
m22_17 -> m22_18  [key=0, style=solid];
m22_20 -> m22_21  [key=0, style=solid, color=green];
m22_20 -> m22_14  [key=2, style=dotted, color=green];
m22_19 -> m22_20  [key=0, style=solid, color=green];
m22_19 -> m22_13  [key=2, style=dotted];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_22  [key=2, style=dotted];
m22_21 -> m22_17  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_1 -> m22_4  [key=2, style=dotted, color=green];
m22_2 -> m22_3  [key=0, style=solid, color=green];
m22_2 -> m22_5  [key=2, style=dotted, color=green];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m22_23 -> m22_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext"];
m22_23 -> m22_2  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.DisposableStrategyTests.DisposableStrategyContext"];
m22_24 -> m22_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled"];
m22_24 -> m22_20  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.DisposableStrategyTests.WhenDeactivateIsCalled"];
m23_48 -> m23_49  [key=0, style=solid, color=red];
m23_49 -> m23_50  [key=0, style=solid, color=red];
m23_49 -> m23_52  [key=2, style=dotted, color=red];
m23_50 -> m23_51  [key=0, style=solid, color=red];
m23_50 -> m23_53  [key=2, style=dotted, color=red];
m23_51 -> m23_48  [key=0, style=bold, color=blue];
m23_23 -> m23_24  [key=0, style=solid, color=red];
m23_24 -> m23_25  [key=0, style=solid, color=red];
m23_24 -> m23_19  [key=2, style=dotted, color=red];
m23_24 -> m23_26  [key=1, style=dashed, color=red, label=samurai];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_20  [key=2, style=dotted];
m23_25 -> m23_21  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_20  [key=2, style=dotted];
m23_26 -> m23_28  [key=2, style=dotted];
m23_27 -> m23_23  [key=0, style=bold, color=blue];
m23_35 -> m23_36  [key=0, style=solid];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_41  [key=2, style=dotted];
m23_36 -> m23_38  [key=1, style=dashed, color=red, label=samurai];
m23_36 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label=samurai];
m23_37 -> m23_38  [key=0, style=solid, color=red];
m23_37 -> m23_18  [key=2, style=dotted];
m23_37 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label=sword];
m23_38 -> m23_39  [key=0, style=solid, color=red];
m23_38 -> m23_42  [key=2, style=dotted, color=red];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_20  [key=2, style=dotted];
m23_39 -> m23_22  [key=2, style=dotted];
m23_40 -> m23_35  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_1 -> m23_4  [key=2, style=dotted, color=red];
m23_2 -> m23_3  [key=0, style=solid, color=red];
m23_2 -> m23_5  [key=2, style=dotted, color=red];
m23_3 -> m23_0  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid, color=red];
m23_7 -> m23_8  [key=0, style=solid, color=red];
m23_7 -> m23_10  [key=2, style=dotted, color=red];
m23_8 -> m23_9  [key=0, style=solid, color=red];
m23_8 -> m23_11  [key=2, style=dotted, color=red];
m23_9 -> m23_6  [key=0, style=bold, color=blue];
m23_54 -> m23_55  [key=0, style=solid];
m23_55 -> m23_56  [key=0, style=solid, color=red];
m23_55 -> m23_41  [key=2, style=dotted];
m23_55 -> m23_18  [key=2, style=dotted];
m23_55 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=samurai];
m23_56 -> m23_57  [key=0, style=solid, color=red];
m23_56 -> m23_59  [key=2, style=dotted, color=red];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_20  [key=2, style=dotted];
m23_57 -> m23_60  [key=2, style=dotted];
m23_58 -> m23_54  [key=0, style=bold, color=blue];
m23_61 -> m23_62  [key=0, style=solid, color=red];
m23_62 -> m23_63  [key=0, style=solid, color=red];
m23_62 -> m23_52  [key=2, style=dotted, color=red];
m23_63 -> m23_64  [key=0, style=solid, color=red];
m23_63 -> m23_53  [key=2, style=dotted, color=red];
m23_64 -> m23_61  [key=0, style=bold, color=blue];
m23_43 -> m23_44  [key=0, style=solid];
m23_44 -> m23_45  [key=0, style=solid, color=red];
m23_44 -> m23_41  [key=2, style=dotted];
m23_44 -> m23_18  [key=2, style=dotted];
m23_44 -> m23_46  [key=1, style=dashed, color=darkseagreen4, label=samurai];
m23_45 -> m23_46  [key=0, style=solid, color=red];
m23_45 -> m23_42  [key=2, style=dotted, color=red];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_20  [key=2, style=dotted];
m23_46 -> m23_28  [key=2, style=dotted];
m23_47 -> m23_43  [key=0, style=bold, color=blue];
m23_29 -> m23_30  [key=0, style=solid, color=red];
m23_30 -> m23_31  [key=0, style=solid, color=red];
m23_30 -> m23_33  [key=2, style=dotted, color=red];
m23_31 -> m23_32  [key=0, style=solid, color=red];
m23_31 -> m23_34  [key=2, style=dotted, color=red];
m23_32 -> m23_29  [key=0, style=bold, color=blue];
m23_65 -> m23_66  [key=0, style=solid];
m23_66 -> m23_67  [key=0, style=solid, color=red];
m23_66 -> m23_41  [key=2, style=dotted];
m23_66 -> m23_18  [key=2, style=dotted];
m23_66 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=samurai];
m23_67 -> m23_68  [key=0, style=solid, color=red];
m23_67 -> m23_59  [key=2, style=dotted, color=red];
m23_68 -> m23_69  [key=0, style=solid];
m23_68 -> m23_20  [key=2, style=dotted];
m23_68 -> m23_70  [key=2, style=dotted];
m23_69 -> m23_65  [key=0, style=bold, color=blue];
m23_12 -> m23_13  [key=0, style=solid];
m23_13 -> m23_14  [key=0, style=solid, color=red];
m23_13 -> m23_18  [key=2, style=dotted];
m23_13 -> m23_16  [key=1, style=dashed, color=darkseagreen4, label=sword];
m23_14 -> m23_15  [key=0, style=solid, color=red];
m23_14 -> m23_19  [key=2, style=dotted, color=red];
m23_14 -> m23_16  [key=1, style=dashed, color=red, label=samurai];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_20  [key=2, style=dotted];
m23_16 -> m23_22  [key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_20  [key=2, style=dotted];
m23_15 -> m23_21  [key=2, style=dotted];
m23_17 -> m23_12  [key=0, style=bold, color=blue];
m23_71 -> m23_1  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext"];
m23_71 -> m23_2  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.DynamicMethodInjectorFactoryContext"];
m23_72 -> m23_7  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked"];
m23_72 -> m23_8  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked"];
m23_72 -> m23_14  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked"];
m23_72 -> m23_24  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenConstructorInjectorIsInvoked"];
m23_73 -> m23_30  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked"];
m23_73 -> m23_31  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked"];
m23_73 -> m23_38  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked"];
m23_73 -> m23_45  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenPropertyInjectorIsInvoked"];
m23_74 -> m23_49  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod"];
m23_74 -> m23_50  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod"];
m23_74 -> m23_56  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnVoidMethod"];
m23_75 -> m23_62  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod"];
m23_75 -> m23_63  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod"];
m23_75 -> m23_67  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.DynamicMethodInjectorFactoryTests.WhenMethodInjectorIsInvokedOnNonVoidMethod"];
m24_0 -> m24_1  [key=0, style=solid, color=red];
m24_1 -> m24_2  [key=0, style=solid, color=red];
m24_1 -> m24_3  [key=2, style=dotted, color=red];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=2, style=dotted];
m24_5 -> m24_8  [key=2, style=dotted];
m24_5 -> m24_9  [key=2, style=dotted];
m24_5 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_6 -> m24_4  [key=0, style=bold, color=blue];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=2, style=dotted];
m24_15 -> m24_18  [key=2, style=dotted];
m24_16 -> m24_14  [key=0, style=bold, color=blue];
m24_10 -> m24_11  [key=0, style=solid];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_13  [key=2, style=dotted];
m24_12 -> m24_10  [key=0, style=bold, color=blue];
m25_8 -> m25_9  [key=0, style=solid, color=green];
m25_9 -> m25_10  [key=0, style=solid, color=green];
m25_9 -> m25_15  [key=2, style=dotted, color=green];
m25_9 -> m25_16  [key=2, style=dotted, color=green];
m25_10 -> m25_11  [key=0, style=solid, color=green];
m25_10 -> m25_17  [key=2, style=dotted];
m25_10 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m25_10 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m25_11 -> m25_12  [key=0, style=solid, color=green];
m25_11 -> m25_18  [key=2, style=dotted, color=green];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_19  [key=2, style=dotted];
m25_12 -> m25_20  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_19  [key=2, style=dotted];
m25_13 -> m25_21  [key=2, style=dotted];
m25_14 -> m25_8  [key=0, style=bold, color=blue];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=2, style=dotted];
m25_6 -> m25_4  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=2, style=dotted];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_24  [key=0, style=solid, color=green];
m25_23 -> m25_28  [key=2, style=dotted];
m25_23 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=instance];
m25_24 -> m25_25  [key=0, style=solid, color=green];
m25_24 -> m25_18  [key=2, style=dotted, color=green];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_19  [key=2, style=dotted];
m25_26 -> m25_29  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid, color=green];
m25_25 -> m25_7  [key=2, style=dotted, color=green];
m25_27 -> m25_22  [key=0, style=bold, color=blue];
m25_30 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext"];
m25_30 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext"];
m25_31 -> m25_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m25_31 -> m25_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m25_31 -> m25_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m25_31 -> m25_25  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_4  [key=0, style=bold, color=blue];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [key=0, style=bold, color=blue];
m27_12 -> m27_13  [key=0, style=solid];
m27_13 -> m27_12  [key=0, style=bold, color=blue];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_10  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m27_14 -> m27_15  [key=0, style=solid];
m27_15 -> m27_14  [key=0, style=bold, color=blue];
m27_6 -> m27_7  [key=0, style=solid];
m27_7 -> m27_6  [key=0, style=bold, color=blue];
m27_8 -> m27_9  [key=0, style=solid];
m27_9 -> m27_8  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [key=0, style=bold, color=blue];
m31_8 -> m31_9  [key=0, style=solid, color=green];
m31_9 -> m31_10  [key=0, style=solid, color=green];
m31_9 -> m31_14  [key=2, style=dotted, color=green];
m31_9 -> m31_15  [key=2, style=dotted, color=green];
m31_9 -> m31_16  [key=2, style=dotted, color=green];
m31_10 -> m31_11  [key=0, style=solid, color=green];
m31_10 -> m31_17  [key=2, style=dotted, color=green];
m31_10 -> m31_12  [key=1, style=dashed, color=green, label=instance];
m31_11 -> m31_12  [key=0, style=solid, color=green];
m31_11 -> m31_18  [key=2, style=dotted, color=green];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_19  [key=2, style=dotted];
m31_12 -> m31_20  [key=2, style=dotted];
m31_13 -> m31_8  [key=0, style=bold, color=blue];
m31_21 -> m31_22  [key=0, style=solid, color=green];
m31_22 -> m31_23  [key=0, style=solid, color=green];
m31_22 -> m31_14  [key=2, style=dotted, color=green];
m31_22 -> m31_15  [key=2, style=dotted, color=green];
m31_22 -> m31_16  [key=2, style=dotted, color=green];
m31_23 -> m31_24  [key=0, style=solid, color=green];
m31_23 -> m31_17  [key=2, style=dotted, color=green];
m31_23 -> m31_25  [key=1, style=dashed, color=green, label=instance1];
m31_23 -> m31_26  [key=1, style=dashed, color=green, label=instance1];
m31_23 -> m31_28  [key=1, style=dashed, color=green, label=instance1];
m31_24 -> m31_25  [key=0, style=solid, color=green];
m31_24 -> m31_17  [key=2, style=dotted, color=green];
m31_24 -> m31_29  [key=1, style=dashed, color=green, label=instance2];
m31_25 -> m31_26  [key=0, style=solid, color=green];
m31_25 -> m31_19  [key=2, style=dotted];
m31_25 -> m31_31  [key=2, style=dotted];
m31_26 -> m31_27  [key=0, style=solid, color=green];
m31_26 -> m31_18  [key=2, style=dotted, color=green];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_19  [key=2, style=dotted];
m31_28 -> m31_32  [key=2, style=dotted];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_19  [key=2, style=dotted];
m31_29 -> m31_32  [key=2, style=dotted];
m31_27 -> m31_28  [key=0, style=solid, color=green];
m31_27 -> m31_17  [key=2, style=dotted, color=green];
m31_27 -> m31_29  [key=1, style=dashed, color=green, label=instance3];
m31_30 -> m31_21  [key=0, style=bold, color=blue];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=2, style=dotted];
m31_6 -> m31_4  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=2, style=dotted];
m31_2 -> m31_0  [key=0, style=bold, color=blue];
m31_33 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext"];
m31_33 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ManualReleaseTests.ManualReleaseContext"];
m31_34 -> m31_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_26  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m31_34 -> m31_27  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ManualReleaseTests.WhenReleaseIsCalled"];
m32_20 -> m32_21  [key=0, style=solid];
m32_21 -> m32_20  [key=0, style=bold, color=blue];
m32_14 -> m32_19  [key=0, style=solid];
m32_19 -> m32_14  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_13  [key=2, style=dotted];
m32_1 -> m32_3  [key=1, style=dashed, color=green, label=method];
m32_2 -> m32_3  [key=0, style=solid, color=green];
m32_2 -> m32_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated"];
m32_2 -> m32_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated"];
m32_2 -> m32_2  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Injection.MethodInjector injector"];
m32_3 -> m32_4  [key=0, style=solid, color=green];
m32_3 -> m32_14  [key=2, style=dotted, color=green];
m32_4 -> m32_5  [key=0, style=solid, color=green];
m32_4 -> m32_6  [key=1, style=dashed, color=green, label=targets];
m32_4 -> m32_7  [key=1, style=dashed, color=green, label=targets];
m32_4 -> m32_8  [key=1, style=dashed, color=green, label=targets];
m32_4 -> m32_9  [key=1, style=dashed, color=green, label=targets];
m32_4 -> m32_10  [key=1, style=dashed, color=green, label=targets];
m32_4 -> m32_11  [key=1, style=dashed, color=green, label=targets];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_15  [key=2, style=dotted];
m32_5 -> m32_16  [key=2, style=dotted];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_15  [key=2, style=dotted];
m32_6 -> m32_16  [key=2, style=dotted];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_15  [key=2, style=dotted];
m32_7 -> m32_16  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_15  [key=2, style=dotted];
m32_8 -> m32_16  [key=2, style=dotted];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_15  [key=2, style=dotted];
m32_9 -> m32_16  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_15  [key=2, style=dotted];
m32_10 -> m32_16  [key=2, style=dotted];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_15  [key=2, style=dotted];
m32_11 -> m32_16  [key=2, style=dotted];
m32_12 -> m32_0  [key=0, style=bold, color=blue];
m32_17 -> m32_18  [key=0, style=solid];
m32_18 -> m32_17  [key=0, style=bold, color=blue];
m32_24 -> m32_3  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated"];
m32_24 -> m32_4  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionDirectiveBaseTests.WhenDirectiveIsCreated"];
m33_4 -> m33_5  [key=0, style=solid, color=green];
m33_5 -> m33_6  [key=0, style=solid, color=green];
m33_5 -> m33_14  [key=2, style=dotted, color=green];
m33_6 -> m33_7  [key=0, style=solid, color=green];
m33_6 -> m33_15  [key=2, style=dotted, color=green];
m33_7 -> m33_8  [key=0, style=solid, color=green];
m33_7 -> m33_16  [key=2, style=dotted, color=green];
m33_8 -> m33_9  [key=0, style=solid, color=green];
m33_9 -> m33_10  [key=0, style=solid, color=green];
m33_10 -> m33_11  [key=0, style=solid, color=green];
m33_10 -> m33_17  [key=2, style=dotted, color=green];
m33_11 -> m33_12  [key=0, style=solid, color=green];
m33_11 -> m33_18  [key=2, style=dotted, color=green];
m33_11 -> m33_19  [key=2, style=dotted, color=green];
m33_11 -> m33_27  [key=1, style=dashed, color=green, label="lambda expression"];
m33_12 -> m33_13  [key=0, style=solid, color=green];
m33_12 -> m33_20  [key=2, style=dotted, color=green];
m33_12 -> m33_19  [key=2, style=dotted, color=green];
m33_12 -> m33_30  [key=1, style=dashed, color=green, label="lambda expression"];
m33_13 -> m33_4  [key=0, style=bold, color=blue];
m33_61 -> m33_62  [key=0, style=solid, color=green];
m33_62 -> m33_63  [key=0, style=solid, color=green];
m33_62 -> m33_38  [key=2, style=dotted, color=green];
m33_63 -> m33_64  [key=0, style=solid, color=green];
m33_63 -> m33_66  [key=2, style=dotted, color=green];
m33_63 -> m33_67  [key=2, style=dotted, color=green];
m33_64 -> m33_65  [key=0, style=solid, color=green];
m33_64 -> m33_66  [key=2, style=dotted, color=green];
m33_64 -> m33_67  [key=2, style=dotted, color=green];
m33_65 -> m33_61  [key=0, style=bold, color=blue];
m33_43 -> m33_44  [key=0, style=solid, color=green];
m33_44 -> m33_45  [key=0, style=solid, color=green];
m33_44 -> m33_38  [key=2, style=dotted, color=green];
m33_45 -> m33_43  [key=0, style=bold, color=blue];
m33_17 -> m33_68  [key=0, style=solid];
m33_68 -> m33_17  [key=0, style=bold, color=blue];
m33_80 -> m33_81  [key=0, style=solid, color=green];
m33_27 -> m33_28  [key=0, style=solid, color=green];
m33_30 -> m33_31  [key=0, style=solid, color=green];
m33_22 -> m33_23  [key=0, style=solid, color=green];
m33_21 -> m33_22  [key=0, style=solid, color=green];
m33_23 -> m33_21  [key=0, style=bold, color=blue];
m33_25 -> m33_26  [key=0, style=solid, color=green];
m33_24 -> m33_25  [key=0, style=solid, color=green];
m33_26 -> m33_24  [key=0, style=bold, color=blue];
m33_28 -> m33_29  [key=0, style=solid, color=green];
m33_29 -> m33_27  [key=0, style=bold, color=blue];
m33_31 -> m33_32  [key=0, style=solid, color=green];
m33_31 -> m33_33  [key=2, style=dotted, color=green];
m33_32 -> m33_30  [key=0, style=bold, color=blue];
m33_40 -> m33_41  [key=0, style=solid, color=green];
m33_41 -> m33_42  [key=0, style=solid, color=green];
m33_41 -> m33_33  [key=2, style=dotted, color=green];
m33_42 -> m33_40  [key=0, style=bold, color=blue];
m33_51 -> m33_52  [key=0, style=solid, color=green];
m33_52 -> m33_53  [key=0, style=solid, color=green];
m33_52 -> m33_50  [key=2, style=dotted, color=green];
m33_52 -> m33_54  [key=1, style=dashed, color=green, label="lambda expression"];
m33_53 -> m33_51  [key=0, style=bold, color=blue];
m33_54 -> m33_55  [key=0, style=solid, color=green];
m33_55 -> m33_56  [key=0, style=solid, color=green];
m33_55 -> d14  [key=2, style=dotted, color=green];
m33_55 -> m33_57  [key=1, style=dashed, color=green, label="lambda expression"];
m33_56 -> m33_54  [key=0, style=bold, color=blue];
m33_57 -> m33_58  [key=0, style=solid, color=green];
m33_58 -> m33_59  [key=0, style=solid, color=green];
m33_58 -> m33_60  [key=2, style=dotted, color=green];
m33_59 -> m33_57  [key=0, style=bold, color=blue];
m33_76 -> m33_77  [key=0, style=solid, color=green];
m33_77 -> m33_78  [key=0, style=solid, color=green];
m33_77 -> m33_79  [key=2, style=dotted, color=green];
m33_78 -> m33_76  [key=0, style=bold, color=blue];
m33_81 -> m33_82  [key=0, style=solid, color=green];
m33_82 -> m33_80  [key=0, style=bold, color=blue];
m33_34 -> m33_35  [key=0, style=solid, color=green];
m33_35 -> m33_36  [key=0, style=solid, color=green];
m33_35 -> m33_38  [key=2, style=dotted, color=green];
m33_36 -> m33_37  [key=0, style=solid, color=green];
m33_36 -> d14  [key=2, style=dotted, color=green];
m33_36 -> m33_40  [key=1, style=dashed, color=green, label="lambda expression"];
m33_37 -> m33_34  [key=0, style=bold, color=blue];
m33_46 -> m33_47  [key=0, style=solid, color=green];
m33_47 -> m33_48  [key=0, style=solid, color=green];
m33_47 -> m33_38  [key=2, style=dotted, color=green];
m33_48 -> m33_49  [key=0, style=solid, color=green];
m33_48 -> m33_50  [key=2, style=dotted, color=green];
m33_48 -> m33_51  [key=1, style=dashed, color=green, label="lambda expression"];
m33_49 -> m33_46  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid, color=green];
m33_1 -> m33_2  [key=0, style=solid, color=green];
m33_1 -> m33_3  [key=2, style=dotted, color=green];
m33_2 -> m33_0  [key=0, style=bold, color=blue];
m33_69 -> m33_70  [key=0, style=solid, color=green];
m33_70 -> m33_71  [key=0, style=solid, color=green];
m33_70 -> m33_73  [key=2, style=dotted, color=green];
m33_70 -> m33_74  [key=2, style=dotted, color=green];
m33_70 -> m33_75  [key=2, style=dotted, color=green];
m33_70 -> m33_76  [key=1, style=dashed, color=green, label="lambda expression"];
m33_71 -> m33_72  [key=0, style=solid, color=green];
m33_71 -> m33_74  [key=2, style=dotted, color=green];
m33_71 -> m33_75  [key=2, style=dotted, color=green];
m33_71 -> m33_80  [key=1, style=dashed, color=green, label="lambda expression"];
m33_72 -> m33_69  [key=0, style=bold, color=blue];
m33_87 -> m33_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext"];
m33_88 -> m33_5  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_6  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_7  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_8  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_12  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_25  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_35  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_36  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_44  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_47  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_48  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_52  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_55  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_58  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_62  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_63  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_88 -> m33_64  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m33_89 -> m33_70  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective"];
m33_89 -> m33_71  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective"];
m34_23 -> m34_33  [key=0, style=solid];
m34_23 -> m34_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_23 -> m34_7  [key=3, color=darkorchid, style=bold, label="Parameter variable string pattern"];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_35  [key=2, style=dotted];
m34_33 -> m34_36  [key=2, style=dotted];
m34_33 -> m34_15  [key=2, style=dotted];
m34_33 -> m34_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_34 -> m34_23  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IKernel"];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_4  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_0  [key=0, style=bold, color=blue];
m34_36 -> m34_42  [key=0, style=solid];
m34_36 -> m34_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_42 -> m34_43  [key=0, style=solid];
m34_42 -> m34_44  [key=2, style=dotted];
m34_42 -> m34_45  [key=2, style=dotted];
m34_42 -> m34_46  [key=2, style=dotted];
m34_42 -> m34_47  [key=2, style=dotted];
m34_42 -> m34_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_43 -> m34_36  [key=0, style=bold, color=blue];
m34_46 -> m34_52  [key=0, style=solid];
m34_52 -> m34_53  [key=0, style=solid];
m34_52 -> m34_54  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m34_52 -> m34_59  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m34_53 -> m34_54  [key=0, style=solid];
m34_54 -> m34_55  [key=0, style=solid];
m34_54 -> m34_56  [key=2, style=dotted];
m34_54 -> m34_57  [key=2, style=dotted];
m34_54 -> m34_47  [key=2, style=dotted];
m34_54 -> m34_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_55 -> m34_46  [key=0, style=bold, color=blue];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_14  [key=2, style=dotted];
m34_6 -> m34_10  [key=1, style=dashed, color=darkseagreen4, label=plugins];
m34_7 -> m34_8  [key=0, style=solid];
m34_7 -> m34_15  [key=2, style=dotted];
m34_7 -> m34_16  [key=2, style=dotted];
m34_7 -> m34_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_7 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_10 -> m34_11  [key=0, style=solid];
m34_10 -> m34_17  [key=2, style=dotted];
m34_10 -> m34_18  [key=2, style=dotted];
m34_10 -> m34_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_10 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label=plugin];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_13  [key=0, style=solid];
m34_8 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label=fileGroup];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_30  [key=1, style=dashed, color=darkseagreen4, label=extension];
m34_12 -> m34_8  [key=0, style=solid];
m34_12 -> m34_19  [key=2, style=dotted];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_8  [key=0, style=solid];
m34_13 -> m34_5  [key=0, style=bold, color=blue];
m34_58 -> m34_59  [key=0, style=solid];
m34_20 -> m34_21  [key=0, style=solid];
m34_24 -> m34_25  [key=0, style=solid];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_32  [key=2, style=dotted];
m34_29 -> m34_30  [key=0, style=solid];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=2, style=dotted];
m34_22 -> m34_20  [key=0, style=bold, color=blue];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_27  [key=2, style=dotted];
m34_25 -> m34_28  [key=2, style=dotted];
m34_26 -> m34_24  [key=0, style=bold, color=blue];
m34_31 -> m34_29  [key=0, style=bold, color=blue];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_40  [key=2, style=dotted];
m34_38 -> m34_41  [key=2, style=dotted];
m34_37 -> m34_38  [key=0, style=solid];
m34_39 -> m34_37  [key=0, style=bold, color=blue];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> m34_51  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_50 -> m34_48  [key=0, style=bold, color=blue];
m34_59 -> m34_60  [key=0, style=solid];
m34_59 -> m34_51  [key=2, style=dotted];
m34_60 -> m34_58  [key=0, style=bold, color=blue];
m34_61 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.ModuleLoader"];
m34_61 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.ModuleLoader"];
m34_62 -> m34_30  [key=1, style=dashed, color=darkseagreen4, label=extension];
m34_63 -> m34_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_64 -> m34_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_65 -> m34_59  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m35_32 -> m35_33  [key=0, style=solid, color=red];
m35_33 -> m35_34  [key=0, style=solid, color=red];
m35_33 -> m35_39  [key=2, style=dotted, color=red];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_40  [key=2, style=dotted];
m35_34 -> m35_36  [key=1, style=dashed, color=red, label=fooFiles];
m35_34 -> m35_43  [key=1, style=dashed, color=red, label=fooFiles];
m35_34 -> m35_47  [key=1, style=dashed, color=red, label=fooFiles];
m35_35 -> m35_36  [key=0, style=solid, color=red];
m35_35 -> m35_40  [key=2, style=dotted];
m35_35 -> m35_37  [key=1, style=dashed, color=red, label=barFiles];
m35_35 -> m35_51  [key=1, style=dashed, color=red, label=barFiles];
m35_35 -> m35_54  [key=1, style=dashed, color=red, label=barFiles];
m35_36 -> m35_37  [key=0, style=solid, color=red];
m35_36 -> d14  [key=2, style=dotted, color=red];
m35_36 -> m35_42  [key=1, style=dashed, color=red, label="lambda expression"];
m35_37 -> m35_38  [key=0, style=solid, color=red];
m35_37 -> d14  [key=2, style=dotted, color=red];
m35_37 -> m35_50  [key=1, style=dashed, color=red, label="lambda expression"];
m35_38 -> m35_32  [key=0, style=bold, color=blue];
m35_18 -> m35_1  [key=1, style=dashed, color=green, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m35_18 -> m35_2  [key=1, style=dashed, color=green, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m35_18 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m35_18 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m35_18 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m35_53 -> m35_54  [key=0, style=solid, color=red];
m35_19 -> m35_20  [key=0, style=solid, color=red];
m35_22 -> m35_23  [key=0, style=solid, color=red];
m35_26 -> m35_27  [key=0, style=solid, color=red];
m35_29 -> m35_30  [key=0, style=solid, color=red];
m35_20 -> m35_21  [key=0, style=solid, color=red];
m35_21 -> m35_19  [key=0, style=bold, color=blue];
m35_23 -> m35_24  [key=0, style=solid, color=red];
m35_23 -> m35_25  [key=2, style=dotted, color=red];
m35_24 -> m35_22  [key=0, style=bold, color=blue];
m35_27 -> m35_28  [key=0, style=solid, color=red];
m35_28 -> m35_26  [key=0, style=bold, color=blue];
m35_30 -> m35_31  [key=0, style=solid, color=red];
m35_31 -> m35_29  [key=0, style=bold, color=blue];
m35_43 -> m35_44  [key=0, style=solid, color=red];
m35_43 -> m35_25  [key=2, style=dotted, color=red];
m35_43 -> m35_45  [key=2, style=dotted, color=red];
m35_43 -> m35_46  [key=1, style=dashed, color=red, label="lambda expression"];
m35_47 -> m35_48  [key=0, style=solid, color=red];
m35_47 -> m35_49  [key=2, style=dotted, color=red];
m35_51 -> m35_52  [key=0, style=solid, color=red];
m35_51 -> m35_25  [key=2, style=dotted, color=red];
m35_51 -> m35_45  [key=2, style=dotted, color=red];
m35_51 -> m35_53  [key=1, style=dashed, color=red, label="lambda expression"];
m35_54 -> m35_55  [key=0, style=solid, color=red];
m35_54 -> m35_49  [key=2, style=dotted, color=red];
m35_42 -> m35_43  [key=0, style=solid, color=red];
m35_50 -> m35_51  [key=0, style=solid, color=red];
m35_44 -> m35_42  [key=0, style=bold, color=blue];
m35_46 -> m35_47  [key=0, style=solid, color=red];
m35_48 -> m35_46  [key=0, style=bold, color=blue];
m35_52 -> m35_50  [key=0, style=bold, color=blue];
m35_55 -> m35_53  [key=0, style=bold, color=blue];
m35_4 -> m35_5  [key=0, style=solid, color=red];
m35_4 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.IPlan"];
m35_4 -> m35_14  [key=2, style=dotted, color=red];
m35_5 -> m35_6  [key=0, style=solid, color=red];
m35_5 -> m35_13  [key=2, style=dotted];
m35_5 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m35_5 -> m35_15  [key=2, style=dotted, color=red];
m35_9 -> m35_10  [key=0, style=solid, color=red];
m35_9 -> m35_14  [key=2, style=dotted];
m35_9 -> m35_16  [key=2, style=dotted, color=red];
m35_9 -> m35_17  [key=2, style=dotted, color=red];
m35_9 -> m35_26  [key=1, style=dashed, color=red, label="lambda expression"];
m35_10 -> m35_11  [key=0, style=solid, color=red];
m35_10 -> m35_15  [key=2, style=dotted];
m35_10 -> m35_16  [key=2, style=dotted, color=red];
m35_10 -> m35_17  [key=2, style=dotted, color=red];
m35_10 -> m35_29  [key=1, style=dashed, color=red, label="lambda expression"];
m35_6 -> m35_7  [key=0, style=solid, color=red];
m35_6 -> m35_8  [key=0, style=solid];
m35_8 -> m35_9  [key=0, style=solid, color=red];
m35_8 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m35_8 -> m35_12  [key=0, style=solid];
m35_8 -> m35_18  [key=2, style=dotted, color=red];
m35_8 -> m35_17  [key=2, style=dotted, color=red];
m35_8 -> m35_22  [key=1, style=dashed, color=red, label="lambda expression"];
m35_11 -> m35_8  [key=0, style=solid];
m35_11 -> m35_17  [key=2, style=dotted];
m35_11 -> m35_0  [key=0, style=bold, color=blue];
m35_7 -> m35_12  [key=0, style=solid];
m35_7 -> m35_8  [key=0, style=solid, color=red];
m35_7 -> m35_16  [key=2, style=dotted, color=red];
m35_7 -> m35_17  [key=2, style=dotted, color=red];
m35_7 -> m35_19  [key=1, style=dashed, color=red, label="lambda expression"];
m35_12 -> m35_4  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid, color=red];
m35_0 -> m35_2  [key=1, style=dashed, color=green, label="Ninject.Injection.IInjectorFactory"];
m35_1 -> m35_2  [key=0, style=solid, color=red];
m35_1 -> m35_12  [key=2, style=dotted, color=red];
m35_2 -> m35_3  [key=0, style=solid, color=red];
m35_2 -> m35_13  [key=2, style=dotted, color=red];
m35_3 -> m35_0  [key=0, style=bold, color=blue];
m35_3 -> m35_4  [key=0, style=solid, color=red];
m35_3 -> m35_14  [key=2, style=dotted, color=red];
m35_56 -> m35_1  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_2  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_3  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_4  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_5  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_6  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_7  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_8  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_9  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_56 -> m35_10  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.ModuleLoaderContext"];
m35_57 -> m35_33  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled"];
m35_57 -> m35_36  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled"];
m35_57 -> m35_37  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.ModuleLoaderTests.WhenLoadModulesIsCalled"];
m35_58 -> m35_43  [key=1, style=dashed, color=red, label=fooFiles];
m35_58 -> m35_47  [key=1, style=dashed, color=red, label=fooFiles];
m35_59 -> m35_51  [key=1, style=dashed, color=red, label=barFiles];
m35_59 -> m35_54  [key=1, style=dashed, color=red, label=barFiles];
m36_15 -> m36_16  [key=0, style=solid];
m36_16 -> m36_17  [key=0, style=solid];
m36_16 -> m36_18  [key=2, style=dotted];
m36_17 -> m36_15  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IKernel"];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_5  [key=2, style=dotted];
m36_2 -> m36_6  [key=2, style=dotted];
m36_3 -> m36_0  [key=0, style=bold, color=blue];
m36_11 -> m36_12  [key=0, style=solid];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_14  [key=2, style=dotted];
m36_13 -> m36_11  [key=0, style=bold, color=blue];
m36_7 -> m36_8  [key=0, style=solid];
m36_8 -> m36_9  [key=0, style=solid];
m36_8 -> m36_10  [key=2, style=dotted];
m36_9 -> m36_7  [key=0, style=bold, color=blue];
m37_18 -> m37_19  [key=0, style=solid, color=green];
m37_19 -> m37_20  [key=0, style=solid, color=green];
m37_19 -> m37_10  [key=2, style=dotted, color=green];
m37_19 -> m37_11  [key=2, style=dotted, color=green];
m37_19 -> m37_23  [key=1, style=dashed, color=green, label="lambda expression"];
m37_20 -> m37_21  [key=0, style=solid, color=green];
m37_20 -> m37_12  [key=2, style=dotted, color=green];
m37_20 -> m37_13  [key=2, style=dotted, color=green];
m37_20 -> m37_22  [key=2, style=dotted, color=green];
m37_21 -> m37_18  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid, color=green];
m37_1 -> m37_2  [key=0, style=solid, color=green];
m37_1 -> m37_4  [key=2, style=dotted, color=green];
m37_2 -> m37_3  [key=0, style=solid, color=green];
m37_2 -> m37_5  [key=2, style=dotted, color=green];
m37_3 -> m37_0  [key=0, style=bold, color=blue];
m37_6 -> m37_7  [key=0, style=solid, color=green];
m37_7 -> m37_8  [key=0, style=solid, color=green];
m37_7 -> m37_10  [key=2, style=dotted, color=green];
m37_7 -> m37_11  [key=2, style=dotted, color=green];
m37_7 -> m37_15  [key=1, style=dashed, color=green, label="lambda expression"];
m37_8 -> m37_9  [key=0, style=solid, color=green];
m37_8 -> m37_12  [key=2, style=dotted, color=green];
m37_8 -> m37_13  [key=2, style=dotted, color=green];
m37_8 -> m37_14  [key=2, style=dotted, color=green];
m37_9 -> m37_6  [key=0, style=bold, color=blue];
m37_23 -> m37_24  [key=0, style=solid, color=green];
m37_15 -> m37_16  [key=0, style=solid, color=green];
m37_16 -> m37_17  [key=0, style=solid, color=green];
m37_17 -> m37_15  [key=0, style=bold, color=blue];
m37_24 -> m37_25  [key=0, style=solid, color=green];
m37_25 -> m37_23  [key=0, style=bold, color=blue];
m37_26 -> m37_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext"];
m37_26 -> m37_2  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.NamedAttributeContext"];
m37_27 -> m37_7  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled"];
m37_27 -> m37_8  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled"];
m37_27 -> m37_19  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled"];
m37_27 -> m37_20  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.NamedAttributeTests.WhenMatchesIsCalled"];
m38_8 -> m38_9  [key=0, style=solid, color=green];
m38_8 -> m38_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.IWeapon"];
m38_9 -> m38_10  [key=0, style=solid, color=green];
m38_10 -> m38_11  [key=0, style=solid, color=green];
m38_11 -> m38_8  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_0  [key=0, style=bold, color=blue];
m38_2 -> m38_3  [key=0, style=solid, color=green];
m38_3 -> m38_4  [key=0, style=solid, color=green];
m38_4 -> m38_2  [key=0, style=bold, color=blue];
m38_5 -> m38_6  [key=0, style=solid, color=green];
m38_6 -> m38_7  [key=0, style=solid, color=green];
m38_7 -> m38_5  [key=0, style=bold, color=blue];
m38_12 -> m38_3  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.NinjaBarracks"];
m38_12 -> m38_6  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.NinjaBarracks"];
m38_12 -> m38_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.NinjaBarracks"];
m38_12 -> m38_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.NinjaBarracks"];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_3  [key=2, style=dotted];
m39_2 -> m39_0  [key=0, style=bold, color=blue];
m39_4 -> m39_5  [key=0, style=solid];
m39_5 -> m39_6  [key=0, style=solid];
m39_6 -> m39_4  [key=0, style=bold, color=blue];
m39_7 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.NinjectSettings"];
m39_7 -> m39_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.NinjectSettings"];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_7  [key=2, style=dotted];
m40_1 -> m40_3  [key=1, style=dashed, color=green, label=method];
m40_2 -> m40_3  [key=0, style=solid, color=green];
m40_2 -> m40_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated"];
m40_2 -> m40_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated"];
m40_2 -> m40_2  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Injection.PropertyInjector injector"];
m40_3 -> m40_4  [key=0, style=solid, color=green];
m40_3 -> m40_8  [key=2, style=dotted, color=green];
m40_4 -> m40_5  [key=0, style=solid, color=green];
m40_4 -> m40_9  [key=2, style=dotted, color=green];
m40_4 -> m40_10  [key=2, style=dotted, color=green];
m40_5 -> m40_6  [key=0, style=solid, color=green];
m40_5 -> m40_9  [key=2, style=dotted, color=green];
m40_5 -> m40_10  [key=2, style=dotted, color=green];
m40_6 -> m40_0  [key=0, style=bold, color=blue];
m40_11 -> m40_12  [key=0, style=solid];
m40_12 -> m40_11  [key=0, style=bold, color=blue];
m40_15 -> m40_3  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated"];
m40_15 -> m40_4  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated"];
m40_15 -> m40_5  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated"];
m41_0 -> m41_1  [key=0, style=solid, color=red];
m41_1 -> m41_2  [key=0, style=solid, color=red];
m41_1 -> m41_6  [key=2, style=dotted, color=red];
m41_2 -> m41_3  [key=0, style=solid, color=red];
m41_2 -> m41_7  [key=2, style=dotted, color=red];
m41_2 -> m41_8  [key=2, style=dotted, color=red];
m41_3 -> m41_4  [key=0, style=solid, color=red];
m41_3 -> m41_7  [key=2, style=dotted, color=red];
m41_3 -> m41_8  [key=2, style=dotted, color=red];
m41_4 -> m41_5  [key=0, style=solid, color=red];
m41_4 -> m41_7  [key=2, style=dotted, color=red];
m41_4 -> m41_8  [key=2, style=dotted, color=red];
m41_4 -> m41_9  [key=2, style=dotted, color=red];
m41_5 -> m41_0  [key=0, style=bold, color=blue];
m41_10 -> m41_11  [key=0, style=solid, color=red];
m41_10 -> m41_14  [key=1, style=dashed, color=darkseagreen4, label=bool];
m41_11 -> m41_12  [key=0, style=solid, color=red];
m41_11 -> m41_14  [key=0, style=solid, color=red];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_17  [key=2, style=dotted];
m41_12 -> m41_13  [key=0, style=solid, color=red];
m41_12 -> m41_16  [key=2, style=dotted, color=red];
m41_13 -> m41_14  [key=0, style=solid, color=red];
m41_15 -> m41_10  [key=0, style=bold, color=blue];
m41_31 -> m41_32  [key=0, style=solid, color=red];
m41_32 -> m41_33  [key=0, style=solid, color=red];
m41_32 -> m41_28  [key=2, style=dotted, color=red];
m41_32 -> m41_34  [key=1, style=dashed, color=red, label=instance];
m41_32 -> m41_35  [key=1, style=dashed, color=red, label=instance];
m41_33 -> m41_34  [key=0, style=solid];
m41_33 -> m41_29  [key=2, style=dotted];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_37  [key=2, style=dotted];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_37  [key=2, style=dotted];
m41_36 -> m41_31  [key=0, style=bold, color=blue];
m41_18 -> m41_19  [key=0, style=solid, color=red];
m41_19 -> m41_20  [key=0, style=solid, color=red];
m41_20 -> m41_21  [key=0, style=solid, color=red];
m41_20 -> m41_28  [key=2, style=dotted, color=red];
m41_20 -> m41_22  [key=1, style=dashed, color=red, label=instance];
m41_20 -> m41_23  [key=1, style=dashed, color=red, label=instance];
m41_20 -> m41_24  [key=1, style=dashed, color=red, label=instance];
m41_20 -> m41_25  [key=1, style=dashed, color=red, label=instance];
m41_20 -> m41_26  [key=1, style=dashed, color=red, label=instance];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_29  [key=2, style=dotted];
m41_22 -> m41_23  [key=0, style=solid];
m41_22 -> m41_30  [key=2, style=dotted];
m41_23 -> m41_24  [key=0, style=solid];
m41_23 -> m41_29  [key=2, style=dotted];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_30  [key=2, style=dotted];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_29  [key=2, style=dotted];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_30  [key=2, style=dotted];
m41_27 -> m41_18  [key=0, style=bold, color=blue];
m41_38 -> m41_1  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_2  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_3  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_4  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_11  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_12  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_13  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_38 -> m41_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext"];
m41_39 -> m41_19  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests"];
m41_39 -> m41_20  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests"];
m41_39 -> m41_32  [key=1, style=dashed, color=red, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests"];
m42_18 -> m42_67  [key=0, style=solid];
m42_67 -> m42_18  [key=0, style=bold, color=blue];
m42_39 -> m42_40  [key=0, style=solid, color=green];
m42_40 -> m42_41  [key=0, style=solid, color=green];
m42_40 -> m42_43  [key=2, style=dotted, color=green];
m42_41 -> m42_42  [key=0, style=solid, color=green];
m42_41 -> d14  [key=2, style=dotted, color=green];
m42_41 -> m42_45  [key=1, style=dashed, color=green, label="lambda expression"];
m42_42 -> m42_39  [key=0, style=bold, color=blue];
m42_56 -> m42_57  [key=0, style=solid, color=green];
m42_29 -> m42_30  [key=0, style=solid, color=green];
m42_32 -> m42_33  [key=0, style=solid, color=green];
m42_35 -> m42_36  [key=0, style=solid, color=green];
m42_23 -> m42_24  [key=0, style=solid, color=green];
m42_24 -> m42_25  [key=0, style=solid, color=green];
m42_25 -> m42_23  [key=0, style=bold, color=blue];
m42_26 -> m42_27  [key=0, style=solid, color=green];
m42_27 -> m42_28  [key=0, style=solid, color=green];
m42_28 -> m42_26  [key=0, style=bold, color=blue];
m42_30 -> m42_31  [key=0, style=solid, color=green];
m42_31 -> m42_29  [key=0, style=bold, color=blue];
m42_33 -> m42_34  [key=0, style=solid, color=green];
m42_34 -> m42_32  [key=0, style=bold, color=blue];
m42_36 -> m42_37  [key=0, style=solid, color=green];
m42_36 -> m42_38  [key=2, style=dotted, color=green];
m42_37 -> m42_35  [key=0, style=bold, color=blue];
m42_45 -> m42_46  [key=0, style=solid, color=green];
m42_46 -> m42_47  [key=0, style=solid, color=green];
m42_46 -> m42_38  [key=2, style=dotted, color=green];
m42_47 -> m42_45  [key=0, style=bold, color=blue];
m42_53 -> m42_54  [key=0, style=solid, color=green];
m42_54 -> m42_55  [key=0, style=solid, color=green];
m42_54 -> d14  [key=2, style=dotted, color=green];
m42_54 -> m42_56  [key=1, style=dashed, color=green, label="lambda expression"];
m42_55 -> m42_53  [key=0, style=bold, color=blue];
m42_57 -> m42_58  [key=0, style=solid, color=green];
m42_57 -> m42_59  [key=2, style=dotted, color=green];
m42_58 -> m42_56  [key=0, style=bold, color=blue];
m42_48 -> m42_49  [key=0, style=solid, color=green];
m42_49 -> m42_50  [key=0, style=solid, color=green];
m42_49 -> m42_43  [key=2, style=dotted, color=green];
m42_50 -> m42_51  [key=0, style=solid, color=green];
m42_50 -> m42_52  [key=2, style=dotted, color=green];
m42_50 -> m42_53  [key=1, style=dashed, color=green, label="lambda expression"];
m42_51 -> m42_48  [key=0, style=bold, color=blue];
m42_68 -> m42_69  [key=0, style=solid, color=green];
m42_69 -> m42_70  [key=0, style=solid, color=green];
m42_69 -> m42_72  [key=2, style=dotted, color=green];
m42_70 -> m42_71  [key=0, style=solid, color=green];
m42_71 -> m42_68  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid, color=green];
m42_1 -> m42_2  [key=0, style=solid, color=green];
m42_1 -> m42_3  [key=2, style=dotted, color=green];
m42_1 -> m42_4  [key=2, style=dotted, color=green];
m42_2 -> m42_0  [key=0, style=bold, color=blue];
m42_60 -> m42_61  [key=0, style=solid, color=green];
m42_61 -> m42_62  [key=0, style=solid, color=green];
m42_61 -> m42_43  [key=2, style=dotted, color=green];
m42_62 -> m42_63  [key=0, style=solid, color=green];
m42_62 -> m42_65  [key=2, style=dotted, color=green];
m42_62 -> m42_66  [key=2, style=dotted, color=green];
m42_63 -> m42_64  [key=0, style=solid, color=green];
m42_63 -> m42_65  [key=2, style=dotted, color=green];
m42_63 -> m42_66  [key=2, style=dotted, color=green];
m42_64 -> m42_60  [key=0, style=bold, color=blue];
m42_5 -> m42_6  [key=0, style=solid, color=green];
m42_6 -> m42_7  [key=0, style=solid, color=green];
m42_6 -> m42_16  [key=2, style=dotted, color=green];
m42_7 -> m42_8  [key=0, style=solid, color=green];
m42_7 -> m42_17  [key=2, style=dotted, color=green];
m42_8 -> m42_9  [key=0, style=solid, color=green];
m42_9 -> m42_10  [key=0, style=solid, color=green];
m42_10 -> m42_11  [key=0, style=solid, color=green];
m42_10 -> m42_18  [key=2, style=dotted, color=green];
m42_11 -> m42_12  [key=0, style=solid, color=green];
m42_11 -> m42_19  [key=2, style=dotted, color=green];
m42_11 -> m42_20  [key=2, style=dotted, color=green];
m42_11 -> m42_29  [key=1, style=dashed, color=green, label="lambda expression"];
m42_12 -> m42_13  [key=0, style=solid, color=green];
m42_12 -> m42_19  [key=2, style=dotted, color=green];
m42_12 -> m42_20  [key=2, style=dotted, color=green];
m42_12 -> m42_32  [key=1, style=dashed, color=green, label="lambda expression"];
m42_13 -> m42_14  [key=0, style=solid, color=green];
m42_13 -> m42_21  [key=2, style=dotted, color=green];
m42_14 -> m42_15  [key=0, style=solid, color=green];
m42_14 -> m42_22  [key=2, style=dotted, color=green];
m42_14 -> m42_20  [key=2, style=dotted, color=green];
m42_14 -> m42_35  [key=1, style=dashed, color=green, label="lambda expression"];
m42_15 -> m42_5  [key=0, style=bold, color=blue];
m42_73 -> m42_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.PropertyInjectionDirectiveContext"];
m42_74 -> m42_6  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_7  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_8  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_27  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_12  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_13  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_14  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_40  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_41  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_49  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_50  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_54  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_57  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_61  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_62  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_74 -> m42_63  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.WhenActivateIsCalled"];
m42_75 -> m42_69  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective"];
m42_75 -> m42_70  [key=1, style=dashed, color=green, label="Ninject.Tests.Unit.PropertyInjectionStrategyTests.FakePropertyInjectionDirective"];
m44_0 -> m44_1  [key=0, style=solid, color=green];
m44_1 -> m44_2  [key=0, style=solid, color=green];
m44_2 -> m44_0  [key=0, style=bold, color=blue];
m44_6 -> m44_7  [key=0, style=solid];
m44_7 -> m44_6  [key=0, style=bold, color=blue];
m44_3 -> m44_4  [key=0, style=solid, color=green];
m44_4 -> m44_5  [key=0, style=solid, color=green];
m44_5 -> m44_3  [key=0, style=bold, color=blue];
m44_8 -> m44_9  [key=0, style=solid, color=green];
m44_8 -> m44_10  [key=1, style=dashed, color=green, label=string];
m44_9 -> m44_10  [key=0, style=solid, color=green];
m44_10 -> m44_11  [key=0, style=solid, color=green];
m44_10 -> m44_12  [key=2, style=dotted, color=green];
m44_11 -> m44_8  [key=0, style=bold, color=blue];
m44_13 -> m44_1  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Samurai"];
m44_13 -> m44_4  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Samurai"];
m44_13 -> m44_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Samurai"];
m44_13 -> m44_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Fakes.Samurai"];
m45_115 -> m45_116  [key=0, style=solid];
m45_116 -> m45_93  [key=2, style=dotted];
m45_116 -> m45_117  [key=0, style=solid];
m45_117 -> m45_115  [key=0, style=bold, color=blue];
m45_33 -> m45_34  [key=0, style=solid, color=green];
m45_34 -> m45_35  [key=0, style=solid, color=green];
m45_34 -> m45_14  [key=2, style=dotted, color=green];
m45_34 -> m45_15  [key=2, style=dotted, color=green];
m45_34 -> m45_9  [key=2, style=dotted, color=green];
m45_35 -> m45_36  [key=0, style=solid, color=green];
m45_35 -> m45_17  [key=2, style=dotted, color=green];
m45_35 -> m45_37  [key=1, style=dashed, color=green, label=instance];
m45_36 -> m45_37  [key=0, style=solid, color=green];
m45_36 -> m45_7  [key=2, style=dotted, color=green];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_18  [key=2, style=dotted];
m45_37 -> m45_32  [key=2, style=dotted];
m45_38 -> m45_33  [key=0, style=bold, color=blue];
m45_83 -> m45_84  [key=0, style=solid, color=green];
m45_84 -> m45_85  [key=0, style=solid, color=green];
m45_84 -> m45_14  [key=2, style=dotted, color=green];
m45_84 -> m45_89  [key=2, style=dotted, color=green];
m45_84 -> m45_9  [key=2, style=dotted, color=green];
m45_84 -> m45_90  [key=1, style=dashed, color=green, label="lambda expression"];
m45_85 -> m45_86  [key=0, style=solid, color=green];
m45_85 -> m45_17  [key=2, style=dotted, color=green];
m45_85 -> m45_87  [key=1, style=dashed, color=green, label=instance1];
m45_86 -> m45_87  [key=0, style=solid, color=green];
m45_86 -> m45_17  [key=2, style=dotted, color=green];
m45_87 -> m45_88  [key=0, style=solid];
m45_87 -> m45_18  [key=2, style=dotted];
m45_87 -> m45_19  [key=2, style=dotted];
m45_88 -> m45_83  [key=0, style=bold, color=blue];
m45_61 -> m45_62  [key=0, style=solid, color=green];
m45_62 -> m45_63  [key=0, style=solid, color=green];
m45_62 -> m45_14  [key=2, style=dotted, color=green];
m45_62 -> m45_67  [key=2, style=dotted, color=green];
m45_62 -> m45_9  [key=2, style=dotted, color=green];
m45_63 -> m45_64  [key=0, style=solid, color=green];
m45_63 -> m45_17  [key=2, style=dotted, color=green];
m45_63 -> m45_65  [key=1, style=dashed, color=green, label=instance1];
m45_64 -> m45_65  [key=0, style=solid, color=green];
m45_64 -> m45_17  [key=2, style=dotted, color=green];
m45_65 -> m45_66  [key=0, style=solid];
m45_65 -> m45_18  [key=2, style=dotted];
m45_65 -> m45_19  [key=2, style=dotted];
m45_66 -> m45_61  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=2, style=dotted];
m45_1 -> m45_7  [key=2, style=dotted];
m45_1 -> m45_8  [key=2, style=dotted];
m45_1 -> m45_9  [key=2, style=dotted];
m45_2 -> m45_0  [key=0, style=bold, color=blue];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_7  [key=2, style=dotted];
m45_2 -> m45_8  [key=2, style=dotted];
m45_2 -> m45_9  [key=2, style=dotted];
m45_46 -> m45_47  [key=0, style=solid, color=green];
m45_47 -> m45_48  [key=0, style=solid, color=green];
m45_47 -> m45_14  [key=2, style=dotted, color=green];
m45_47 -> m45_45  [key=2, style=dotted, color=green];
m45_47 -> m45_9  [key=2, style=dotted, color=green];
m45_48 -> m45_49  [key=0, style=solid, color=green];
m45_48 -> m45_17  [key=2, style=dotted, color=green];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_29  [key=2, style=dotted];
m45_49 -> m45_53  [key=1, style=dashed, color=darkseagreen4, label=reference];
m45_50 -> m45_51  [key=0, style=solid];
m45_53 -> m45_18  [key=2, style=dotted];
m45_53 -> m45_32  [key=2, style=dotted];
m45_53 -> m45_54  [key=0, style=solid];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_30  [key=2, style=dotted];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_31  [key=2, style=dotted];
m45_54 -> m45_46  [key=0, style=bold, color=blue];
m45_11 -> m45_12  [key=0, style=solid, color=green];
m45_11 -> m45_17  [key=2, style=dotted, color=green];
m45_9 -> m45_10  [key=0, style=solid, color=green];
m45_9 -> m45_14  [key=2, style=dotted, color=green];
m45_9 -> m45_15  [key=2, style=dotted, color=green];
m45_9 -> m45_9  [key=2, style=dotted, color=green];
m45_39 -> m45_40  [key=0, style=solid, color=green];
m45_40 -> m45_41  [key=0, style=solid, color=green];
m45_40 -> m45_14  [key=2, style=dotted, color=green];
m45_40 -> m45_45  [key=2, style=dotted, color=green];
m45_40 -> m45_9  [key=2, style=dotted, color=green];
m45_41 -> m45_42  [key=0, style=solid, color=green];
m45_41 -> m45_17  [key=2, style=dotted, color=green];
m45_41 -> m45_43  [key=1, style=dashed, color=green, label=sword1];
m45_42 -> m45_43  [key=0, style=solid, color=green];
m45_42 -> m45_17  [key=2, style=dotted, color=green];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_18  [key=2, style=dotted];
m45_43 -> m45_19  [key=2, style=dotted];
m45_44 -> m45_39  [key=0, style=bold, color=blue];
m45_94 -> m45_95  [key=0, style=solid, color=green];
m45_95 -> m45_96  [key=0, style=solid, color=green];
m45_95 -> m45_14  [key=2, style=dotted, color=green];
m45_95 -> m45_89  [key=2, style=dotted, color=green];
m45_95 -> m45_9  [key=2, style=dotted, color=green];
m45_95 -> m45_103  [key=1, style=dashed, color=green, label="lambda expression"];
m45_96 -> m45_97  [key=0, style=solid, color=green];
m45_96 -> m45_17  [key=2, style=dotted, color=green];
m45_97 -> m45_98  [key=0, style=solid];
m45_97 -> m45_29  [key=2, style=dotted];
m45_97 -> m45_101  [key=1, style=dashed, color=darkseagreen4, label=reference];
m45_98 -> m45_99  [key=0, style=solid];
m45_101 -> m45_18  [key=2, style=dotted];
m45_101 -> m45_32  [key=2, style=dotted];
m45_101 -> m45_102  [key=0, style=solid];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_30  [key=2, style=dotted];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_31  [key=2, style=dotted];
m45_102 -> m45_94  [key=0, style=bold, color=blue];
m45_8 -> m45_9  [key=0, style=solid, color=green];
m45_77 -> m45_78  [key=0, style=solid, color=green];
m45_78 -> m45_79  [key=0, style=solid, color=green];
m45_78 -> m45_14  [key=2, style=dotted, color=green];
m45_78 -> m45_67  [key=2, style=dotted, color=green];
m45_78 -> m45_9  [key=2, style=dotted, color=green];
m45_79 -> m45_80  [key=0, style=solid, color=green];
m45_79 -> m45_17  [key=2, style=dotted, color=green];
m45_79 -> m45_81  [key=1, style=dashed, color=green, label=instance];
m45_80 -> m45_81  [key=0, style=solid, color=green];
m45_80 -> m45_7  [key=2, style=dotted, color=green];
m45_81 -> m45_82  [key=0, style=solid];
m45_81 -> m45_18  [key=2, style=dotted];
m45_81 -> m45_32  [key=2, style=dotted];
m45_82 -> m45_77  [key=0, style=bold, color=blue];
m45_55 -> m45_56  [key=0, style=solid, color=green];
m45_56 -> m45_57  [key=0, style=solid, color=green];
m45_56 -> m45_14  [key=2, style=dotted, color=green];
m45_56 -> m45_45  [key=2, style=dotted, color=green];
m45_56 -> m45_9  [key=2, style=dotted, color=green];
m45_57 -> m45_58  [key=0, style=solid, color=green];
m45_57 -> m45_17  [key=2, style=dotted, color=green];
m45_57 -> m45_59  [key=1, style=dashed, color=green, label=instance];
m45_58 -> m45_59  [key=0, style=solid, color=green];
m45_58 -> m45_7  [key=2, style=dotted, color=green];
m45_59 -> m45_60  [key=0, style=solid];
m45_59 -> m45_18  [key=2, style=dotted];
m45_59 -> m45_32  [key=2, style=dotted];
m45_60 -> m45_55  [key=0, style=bold, color=blue];
m45_106 -> m45_107  [key=0, style=solid, color=green];
m45_107 -> m45_108  [key=0, style=solid, color=green];
m45_107 -> m45_14  [key=2, style=dotted, color=green];
m45_107 -> m45_89  [key=2, style=dotted, color=green];
m45_107 -> m45_9  [key=2, style=dotted, color=green];
m45_107 -> m45_112  [key=1, style=dashed, color=green, label="lambda expression"];
m45_108 -> m45_109  [key=0, style=solid, color=green];
m45_108 -> m45_17  [key=2, style=dotted, color=green];
m45_108 -> m45_110  [key=1, style=dashed, color=green, label=instance];
m45_109 -> m45_110  [key=0, style=solid, color=green];
m45_109 -> m45_7  [key=2, style=dotted, color=green];
m45_110 -> m45_111  [key=0, style=solid];
m45_110 -> m45_18  [key=2, style=dotted];
m45_110 -> m45_32  [key=2, style=dotted];
m45_111 -> m45_106  [key=0, style=bold, color=blue];
m45_68 -> m45_69  [key=0, style=solid, color=green];
m45_69 -> m45_70  [key=0, style=solid, color=green];
m45_69 -> m45_14  [key=2, style=dotted, color=green];
m45_69 -> m45_67  [key=2, style=dotted, color=green];
m45_69 -> m45_9  [key=2, style=dotted, color=green];
m45_70 -> m45_71  [key=0, style=solid, color=green];
m45_70 -> m45_17  [key=2, style=dotted, color=green];
m45_71 -> m45_72  [key=0, style=solid];
m45_71 -> m45_29  [key=2, style=dotted];
m45_71 -> m45_75  [key=1, style=dashed, color=darkseagreen4, label=reference];
m45_72 -> m45_73  [key=0, style=solid];
m45_75 -> m45_18  [key=2, style=dotted];
m45_75 -> m45_32  [key=2, style=dotted];
m45_75 -> m45_76  [key=0, style=solid];
m45_73 -> m45_74  [key=0, style=solid];
m45_73 -> m45_30  [key=2, style=dotted];
m45_74 -> m45_75  [key=0, style=solid];
m45_74 -> m45_31  [key=2, style=dotted];
m45_76 -> m45_68  [key=0, style=bold, color=blue];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_7  [key=2, style=dotted];
m45_3 -> m45_8  [key=2, style=dotted];
m45_3 -> m45_9  [key=2, style=dotted];
m45_10 -> m45_11  [key=0, style=solid, color=green];
m45_10 -> m45_17  [key=2, style=dotted, color=green];
m45_10 -> m45_12  [key=1, style=dashed, color=green, label=instance1];
m45_12 -> m45_13  [key=0, style=solid];
m45_12 -> m45_18  [key=2, style=dotted];
m45_12 -> m45_19  [key=2, style=dotted];
m45_12 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Web.Mvc.MvcModule"];
m45_12 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Web.Mvc.MvcModule"];
m45_12 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Web.Mvc.MvcModule"];
m45_12 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Web.Mvc.MvcModule"];
m45_12 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Web.Mvc.MvcModule"];
m45_13 -> m45_8  [key=0, style=bold, color=blue];
m45_112 -> m45_113  [key=0, style=solid, color=green];
m45_90 -> m45_91  [key=0, style=solid, color=green];
m45_91 -> m45_92  [key=0, style=solid, color=green];
m45_91 -> m45_93  [key=2, style=dotted, color=green];
m45_92 -> m45_90  [key=0, style=bold, color=blue];
m45_103 -> m45_104  [key=0, style=solid, color=green];
m45_104 -> m45_105  [key=0, style=solid, color=green];
m45_104 -> m45_93  [key=2, style=dotted, color=green];
m45_105 -> m45_103  [key=0, style=bold, color=blue];
m45_113 -> m45_114  [key=0, style=solid, color=green];
m45_113 -> m45_93  [key=2, style=dotted, color=green];
m45_114 -> m45_112  [key=0, style=bold, color=blue];
m45_20 -> m45_21  [key=0, style=solid, color=green];
m45_21 -> m45_22  [key=0, style=solid, color=green];
m45_21 -> m45_14  [key=2, style=dotted, color=green];
m45_21 -> m45_15  [key=2, style=dotted, color=green];
m45_21 -> m45_9  [key=2, style=dotted, color=green];
m45_22 -> m45_23  [key=0, style=solid, color=green];
m45_22 -> m45_17  [key=2, style=dotted, color=green];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_29  [key=2, style=dotted];
m45_23 -> m45_27  [key=1, style=dashed, color=darkseagreen4, label=reference];
m45_24 -> m45_25  [key=0, style=solid];
m45_27 -> m45_18  [key=2, style=dotted];
m45_27 -> m45_28  [key=0, style=solid];
m45_27 -> m45_32  [key=2, style=dotted];
m45_25 -> m45_26  [key=0, style=solid];
m45_25 -> m45_30  [key=2, style=dotted];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_31  [key=2, style=dotted];
m45_28 -> m45_20  [key=0, style=bold, color=blue];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_7  [key=2, style=dotted];
m45_4 -> m45_10  [key=2, style=dotted];
m45_4 -> m45_11  [key=2, style=dotted];
m45_5 -> m45_7  [key=2, style=dotted];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_10  [key=2, style=dotted];
m45_5 -> m45_11  [key=2, style=dotted];
m45_6 -> m45_4  [key=0, style=bold, color=blue];
m45_6 -> m45_0  [key=0, style=bold, color=blue];
m45_119 -> m45_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_21  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_34  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_35  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_119 -> m45_36  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToInterfaceInSingletonScope"];
m45_120 -> m45_40  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_41  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_42  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_47  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_48  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_56  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_57  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_120 -> m45_58  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToSelfInSingletonScope"];
m45_121 -> m45_62  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_63  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_64  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_69  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_70  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_78  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_79  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_121 -> m45_80  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToProviderInSingletonScope"];
m45_122 -> m45_84  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_85  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_86  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_95  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_96  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_107  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_108  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_122 -> m45_109  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SingletonScopeTests.WhenServiceIsBoundToMethodInSingletonScope"];
m45_118 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext"];
m45_118 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.SingletonScopeTests.SingletonScopeContext"];
m46_21 -> m46_22  [key=0, style=solid, color=green];
m46_22 -> m46_23  [key=0, style=solid, color=green];
m46_22 -> m46_15  [key=2, style=dotted, color=green];
m46_22 -> m46_16  [key=2, style=dotted, color=green];
m46_23 -> m46_24  [key=0, style=solid, color=green];
m46_23 -> m46_17  [key=2, style=dotted, color=green];
m46_23 -> m46_25  [key=1, style=dashed, color=green, label=instance];
m46_23 -> m46_26  [key=1, style=dashed, color=green, label=instance];
m46_24 -> m46_25  [key=0, style=solid];
m46_24 -> m46_18  [key=2, style=dotted];
m46_24 -> m46_19  [key=2, style=dotted];
m46_25 -> m46_26  [key=0, style=solid, color=green];
m46_25 -> m46_18  [key=2, style=dotted];
m46_25 -> m46_19  [key=2, style=dotted];
m46_26 -> m46_27  [key=0, style=solid, color=green];
m46_26 -> m46_18  [key=2, style=dotted, color=green];
m46_26 -> m46_20  [key=2, style=dotted, color=green];
m46_27 -> m46_21  [key=0, style=bold, color=blue];
m46_42 -> m46_43  [key=0, style=solid, color=green];
m46_43 -> m46_44  [key=0, style=solid, color=green];
m46_44 -> m46_42  [key=0, style=bold, color=blue];
m46_36 -> m46_37  [key=0, style=solid, color=green];
m46_37 -> m46_38  [key=0, style=solid, color=green];
m46_38 -> m46_36  [key=0, style=bold, color=blue];
m46_39 -> m46_40  [key=0, style=solid];
m46_40 -> m46_41  [key=0, style=solid];
m46_41 -> m46_39  [key=0, style=bold, color=blue];
m46_4 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_7  [key=2, style=dotted];
m46_6 -> m46_4  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=2, style=dotted];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_28 -> m46_29  [key=0, style=solid, color=green];
m46_29 -> m46_30  [key=0, style=solid, color=green];
m46_29 -> m46_15  [key=2, style=dotted, color=green];
m46_29 -> m46_16  [key=2, style=dotted, color=green];
m46_30 -> m46_31  [key=0, style=solid, color=green];
m46_30 -> m46_32  [key=2, style=dotted, color=green];
m46_30 -> m46_33  [key=1, style=dashed, color=green, label="lambda expression"];
m46_31 -> m46_28  [key=0, style=bold, color=blue];
m46_33 -> m46_34  [key=0, style=solid, color=green];
m46_34 -> m46_35  [key=0, style=solid, color=green];
m46_34 -> m46_17  [key=2, style=dotted, color=green];
m46_35 -> m46_33  [key=0, style=bold, color=blue];
m46_8 -> m46_9  [key=0, style=solid, color=green];
m46_9 -> m46_10  [key=0, style=solid, color=green];
m46_9 -> m46_15  [key=2, style=dotted, color=green];
m46_9 -> m46_16  [key=2, style=dotted, color=green];
m46_10 -> m46_11  [key=0, style=solid, color=green];
m46_10 -> m46_17  [key=2, style=dotted, color=green];
m46_10 -> m46_12  [key=1, style=dashed, color=green, label=instance];
m46_10 -> m46_13  [key=1, style=dashed, color=green, label=instance];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_18  [key=2, style=dotted];
m46_11 -> m46_19  [key=2, style=dotted];
m46_12 -> m46_13  [key=0, style=solid, color=green];
m46_12 -> m46_18  [key=2, style=dotted];
m46_12 -> m46_19  [key=2, style=dotted];
m46_13 -> m46_14  [key=0, style=solid, color=green];
m46_13 -> m46_18  [key=2, style=dotted, color=green];
m46_13 -> m46_20  [key=2, style=dotted, color=green];
m46_14 -> m46_8  [key=0, style=bold, color=blue];
m46_45 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext"];
m46_45 -> m46_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.SpecialResolutionTests.SpecialResolutionContext"];
m46_46 -> m46_9  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel"];
m46_46 -> m46_10  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel"];
m46_46 -> m46_13  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsKernel"];
m46_47 -> m46_22  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot"];
m46_47 -> m46_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot"];
m46_47 -> m46_26  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsResolutionRoot"];
m46_48 -> m46_29  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString"];
m46_48 -> m46_30  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString"];
m46_48 -> m46_34  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.WhenServiceRequestsString"];
m46_49 -> m46_37  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsKernel"];
m46_50 -> m46_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsResolutionRoot"];
m46_51 -> m46_43  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.SpecialResolutionTests.RequestsString"];
m47_2 -> m47_3  [key=0, style=solid];
m47_3 -> m47_2  [key=0, style=bold, color=blue];
m47_4 -> m47_5  [key=0, style=solid];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_36  [key=2, style=dotted];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_36  [key=2, style=dotted];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_36  [key=2, style=dotted];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_36  [key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_36  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_10 -> m47_36  [key=2, style=dotted];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_36  [key=2, style=dotted];
m47_12 -> m47_13  [key=0, style=solid];
m47_12 -> m47_36  [key=2, style=dotted];
m47_13 -> m47_14  [key=0, style=solid];
m47_13 -> m47_15  [key=0, style=solid];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_36  [key=2, style=dotted];
m47_15 -> m47_16  [key=0, style=solid];
m47_15 -> m47_36  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_16 -> m47_36  [key=2, style=dotted];
m47_17 -> m47_18  [key=0, style=solid];
m47_17 -> m47_36  [key=2, style=dotted];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_36  [key=2, style=dotted];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_36  [key=2, style=dotted];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_36  [key=2, style=dotted];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_36  [key=2, style=dotted];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_36  [key=2, style=dotted];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_36  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_36  [key=2, style=dotted];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_36  [key=2, style=dotted];
m47_26 -> m47_27  [key=0, style=solid];
m47_26 -> m47_28  [key=0, style=solid];
m47_27 -> m47_29  [key=0, style=solid];
m47_27 -> m47_36  [key=2, style=dotted];
m47_28 -> m47_29  [key=0, style=solid];
m47_28 -> m47_36  [key=2, style=dotted];
m47_29 -> m47_30  [key=0, style=solid];
m47_29 -> m47_36  [key=2, style=dotted];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_36  [key=2, style=dotted];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_36  [key=2, style=dotted];
m47_32 -> m47_33  [key=0, style=solid];
m47_32 -> m47_36  [key=2, style=dotted];
m47_33 -> m47_34  [key=0, style=solid];
m47_33 -> m47_36  [key=2, style=dotted];
m47_34 -> m47_35  [key=0, style=solid];
m47_34 -> m47_36  [key=2, style=dotted];
m47_35 -> m47_4  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_0  [key=0, style=bold, color=blue];
m47_37 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_27  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_33  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m47_37 -> m47_34  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m48_5 -> m48_6  [key=0, style=solid];
m48_5 -> m48_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_8  [key=0, style=solid];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_9  [key=2, style=dotted];
m48_8 -> m48_5  [key=0, style=bold, color=blue];
m48_4 -> m48_10  [key=0, style=solid];
m48_10 -> m48_4  [key=0, style=bold, color=blue];
m48_9 -> m48_11  [key=0, style=solid];
m48_11 -> m48_9  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_3  [key=0, style=solid];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> m48_4  [key=2, style=dotted];
m48_3 -> m48_0  [key=0, style=bold, color=blue];
m48_12 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>"];
m48_12 -> m48_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.Strategies.ActivationStrategyFor<T>"];
m49_46 -> m49_52  [key=0, style=solid];
m49_46 -> m49_54  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_46 -> m49_12  [key=2, style=dotted];
m49_46 -> m49_47  [key=0, style=solid];
m49_52 -> m49_53  [key=0, style=solid];
m49_52 -> m49_54  [key=0, style=solid];
m49_52 -> m49_7  [key=2, style=dotted];
m49_52 -> m49_8  [key=2, style=dotted];
m49_52 -> m49_58  [key=2, style=dotted];
m49_52 -> m49_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_54 -> m49_55  [key=0, style=solid];
m49_54 -> m49_60  [key=0, style=solid];
m49_54 -> m49_65  [key=2, style=dotted];
m49_54 -> m49_12  [key=2, style=dotted];
m49_55 -> m49_56  [key=0, style=solid];
m49_55 -> m49_66  [key=2, style=dotted];
m49_55 -> m49_57  [key=1, style=dashed, color=darkseagreen4, label=gtd];
m49_55 -> m49_48  [key=0, style=bold, color=blue];
m49_56 -> m49_57  [key=0, style=solid];
m49_56 -> m49_65  [key=2, style=dotted];
m49_56 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label=argument];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_69  [key=2, style=dotted];
m49_60 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m49_62 -> m49_64  [key=0, style=solid];
m49_62 -> m49_70  [key=2, style=dotted];
m49_62 -> m49_71  [key=2, style=dotted];
m49_62 -> m49_63  [key=0, style=solid];
m49_63 -> m49_64  [key=0, style=solid];
m49_63 -> m49_72  [key=2, style=dotted];
m49_53 -> m49_64  [key=0, style=solid];
m49_53 -> m49_11  [key=2, style=dotted];
m49_53 -> m49_54  [key=0, style=solid];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_65  [key=2, style=dotted];
m49_59 -> m49_64  [key=0, style=solid];
m49_59 -> m49_50  [key=2, style=dotted];
m49_59 -> m49_68  [key=2, style=dotted];
m49_58 -> m49_59  [key=0, style=solid];
m49_58 -> m49_60  [key=0, style=solid];
m49_58 -> m49_65  [key=2, style=dotted];
m49_58 -> m49_67  [key=2, style=dotted];
m49_61 -> m49_62  [key=0, style=solid];
m49_61 -> m49_63  [key=0, style=solid];
m49_64 -> m49_46  [key=0, style=bold, color=blue];
m49_64 -> m49_62  [key=0, style=bold, color=blue];
m49_12 -> m49_13  [key=0, style=solid];
m49_13 -> m49_14  [key=0, style=solid];
m49_13 -> m49_15  [key=2, style=dotted];
m49_14 -> m49_12  [key=0, style=bold, color=blue];
m49_14 -> m49_15  [key=0, style=solid, color=green];
m49_14 -> m49_7  [key=2, style=dotted];
m49_14 -> m49_8  [key=2, style=dotted];
m49_15 -> m49_16  [key=0, style=solid, color=green];
m49_15 -> m49_7  [key=2, style=dotted, color=green];
m49_15 -> m49_8  [key=2, style=dotted, color=green];
m49_15 -> m49_9  [key=2, style=dotted, color=green];
m49_50 -> m49_73  [key=0, style=solid];
m49_50 -> m49_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_50 -> m49_51  [key=0, style=solid];
m49_50 -> m49_56  [key=2, style=dotted];
m49_50 -> m49_57  [key=2, style=dotted];
m49_73 -> m49_74  [key=0, style=solid];
m49_73 -> m49_75  [key=2, style=dotted];
m49_73 -> m49_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_74 -> m49_50  [key=0, style=bold, color=blue];
m49_41 -> m49_42  [key=0, style=solid];
m49_41 -> m49_25  [key=0, style=bold, color=blue];
m49_45 -> m49_46  [key=0, style=solid, color=green];
m49_45 -> m49_11  [key=2, style=dotted, color=green];
m49_45 -> m49_43  [key=0, style=bold, color=blue];
m49_44 -> m49_45  [key=0, style=solid, color=green];
m49_44 -> m49_7  [key=2, style=dotted];
m49_44 -> m49_8  [key=2, style=dotted];
m49_44 -> m49_46  [key=2, style=dotted];
m49_42 -> m49_11  [key=2, style=dotted];
m49_42 -> m49_43  [key=0, style=solid];
m49_43 -> m49_12  [key=2, style=dotted];
m49_43 -> m49_44  [key=0, style=solid];
m49_47 -> m49_41  [key=0, style=bold, color=blue];
m49_47 -> m49_48  [key=0, style=solid];
m49_26 -> m49_27  [key=0, style=solid];
m49_26 -> m49_20  [key=0, style=bold, color=blue];
m49_27 -> m49_28  [key=0, style=solid];
m49_27 -> m49_29  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m49_27 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_30  [key=0, style=solid];
m49_28 -> m49_33  [key=2, style=dotted];
m49_28 -> m49_7  [key=2, style=dotted];
m49_28 -> m49_8  [key=2, style=dotted];
m49_29 -> m49_30  [key=0, style=solid];
m49_29 -> m49_8  [key=2, style=dotted];
m49_29 -> m49_7  [key=2, style=dotted];
m49_29 -> m49_9  [key=2, style=dotted];
m49_30 -> m49_31  [key=0, style=solid];
m49_30 -> m49_34  [key=2, style=dotted];
m49_30 -> m49_7  [key=2, style=dotted];
m49_30 -> m49_8  [key=2, style=dotted];
m49_30 -> m49_9  [key=2, style=dotted];
m49_31 -> m49_32  [key=0, style=solid, color=green];
m49_31 -> m49_35  [key=2, style=dotted];
m49_31 -> m49_7  [key=2, style=dotted];
m49_31 -> m49_10  [key=2, style=dotted];
m49_32 -> m49_26  [key=0, style=bold, color=blue];
m49_32 -> m49_33  [key=0, style=solid, color=green];
m49_32 -> m49_12  [key=2, style=dotted, color=green];
m49_32 -> m49_34  [key=1, style=dashed, color=green, label="lambda expression"];
m49_82 -> m49_83  [key=0, style=solid];
m49_82 -> m49_87  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_82 -> m49_88  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_83 -> m49_84  [key=0, style=solid];
m49_83 -> m49_94  [key=2, style=dotted];
m49_83 -> m49_85  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m49_87 -> m49_88  [key=0, style=solid];
m49_87 -> m49_89  [key=0, style=solid];
m49_87 -> m49_20  [key=2, style=dotted];
m49_87 -> m49_99  [key=2, style=dotted];
m49_88 -> m49_89  [key=0, style=solid];
m49_88 -> m49_100  [key=2, style=dotted];
m49_84 -> m49_85  [key=0, style=solid];
m49_84 -> m49_95  [key=2, style=dotted];
m49_84 -> m49_75  [key=2, style=dotted];
m49_84 -> m49_96  [key=2, style=dotted];
m49_84 -> m49_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_85 -> m49_86  [key=0, style=solid];
m49_85 -> m49_97  [key=2, style=dotted];
m49_85 -> m49_88  [key=1, style=dashed, color=darkseagreen4, label=instance];
m49_85 -> m49_89  [key=1, style=dashed, color=darkseagreen4, label=instance];
m49_86 -> m49_87  [key=0, style=solid];
m49_86 -> m49_98  [key=2, style=dotted];
m49_89 -> m49_93  [key=0, style=solid];
m49_90 -> m49_91  [key=0, style=solid];
m49_91 -> m49_92  [key=0, style=solid];
m49_91 -> m49_101  [key=2, style=dotted];
m49_92 -> m49_93  [key=0, style=solid];
m49_93 -> m49_82  [key=0, style=bold, color=blue];
m49_51 -> m49_12  [key=2, style=dotted];
m49_51 -> m49_52  [key=0, style=solid];
m49_35 -> m49_36  [key=0, style=solid, color=green];
m49_35 -> m49_11  [key=2, style=dotted, color=green];
m49_20 -> m49_21  [key=0, style=solid];
m49_0 -> m49_1  [key=0, style=solid];
m49_0 -> m49_6  [key=1, style=dashed, color=darkseagreen4, label=bool];
m49_1 -> m49_2  [key=0, style=solid, color=green];
m49_1 -> m49_6  [key=0, style=solid];
m49_1 -> m49_7  [key=2, style=dotted];
m49_1 -> m49_8  [key=2, style=dotted];
m49_6 -> m49_7  [key=0, style=solid];
m49_6 -> m49_11  [key=2, style=dotted];
m49_6 -> m49_0  [key=0, style=bold, color=blue];
m49_2 -> m49_3  [key=0, style=solid, color=green];
m49_2 -> m49_4  [key=0, style=solid];
m49_2 -> m49_7  [key=2, style=dotted, color=green];
m49_2 -> m49_8  [key=2, style=dotted, color=green];
m49_2 -> m49_9  [key=2, style=dotted, color=green];
m49_3 -> m49_2  [key=0, style=solid];
m49_3 -> m49_8  [key=2, style=dotted];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_7  [key=2, style=dotted];
m49_3 -> m49_10  [key=2, style=dotted];
m49_4 -> m49_5  [key=0, style=solid];
m49_4 -> m49_9  [key=2, style=dotted];
m49_4 -> m49_11  [key=2, style=dotted];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_10  [key=2, style=dotted];
m49_5 -> m49_12  [key=2, style=dotted];
m49_7 -> m49_0  [key=0, style=bold, color=blue];
m49_33 -> m49_27  [key=0, style=bold, color=blue];
m49_71 -> m49_12  [key=2, style=dotted];
m49_71 -> m49_72  [key=0, style=solid];
m49_69 -> m49_7  [key=2, style=dotted];
m49_69 -> m49_8  [key=2, style=dotted];
m49_69 -> m49_70  [key=0, style=solid];
m49_16 -> m49_17  [key=0, style=solid, color=red];
m49_16 -> m49_7  [key=2, style=dotted];
m49_16 -> m49_10  [key=2, style=dotted];
m49_17 -> m49_18  [key=0, style=solid, color=red];
m49_17 -> m49_12  [key=2, style=dotted, color=red];
m49_17 -> m49_11  [key=2, style=dotted];
m49_18 -> m49_19  [key=0, style=solid];
m49_18 -> m49_20  [key=2, style=dotted];
m49_18 -> m49_21  [key=2, style=dotted];
m49_18 -> m49_12  [key=2, style=dotted];
m49_19 -> m49_16  [key=0, style=bold, color=blue];
m49_19 -> m49_13  [key=0, style=bold, color=blue];
m49_68 -> m49_12  [key=2, style=dotted];
m49_68 -> m49_69  [key=0, style=solid];
m49_94 -> m49_105  [key=0, style=solid];
m49_94 -> m49_107  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_105 -> m49_106  [key=0, style=solid];
m49_105 -> m49_65  [key=2, style=dotted];
m49_105 -> m49_110  [key=2, style=dotted];
m49_105 -> m49_111  [key=2, style=dotted];
m49_105 -> m49_112  [key=2, style=dotted];
m49_105 -> m49_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_105 -> m49_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_105 -> m49_108  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m49_107 -> m49_109  [key=0, style=solid];
m49_107 -> m49_70  [key=2, style=dotted];
m49_107 -> m49_113  [key=2, style=dotted];
m49_106 -> m49_107  [key=0, style=solid];
m49_106 -> m49_108  [key=0, style=solid];
m49_108 -> m49_109  [key=0, style=solid];
m49_109 -> m49_94  [key=0, style=bold, color=blue];
m49_70 -> m49_11  [key=2, style=dotted];
m49_70 -> m49_71  [key=0, style=solid];
m49_37 -> m49_38  [key=0, style=solid];
m49_37 -> m49_39  [key=0, style=solid];
m49_37 -> m49_33  [key=2, style=dotted];
m49_38 -> m49_11  [key=2, style=dotted];
m49_38 -> m49_39  [key=0, style=solid];
m49_38 -> m49_8  [key=2, style=dotted];
m49_39 -> m49_12  [key=2, style=dotted];
m49_39 -> m49_40  [key=0, style=solid];
m49_39 -> m49_36  [key=0, style=solid];
m49_39 -> m49_34  [key=2, style=dotted];
m49_40 -> m49_37  [key=0, style=bold, color=blue];
m49_40 -> m49_41  [key=0, style=solid];
m49_40 -> m49_42  [key=2, style=dotted];
m49_48 -> m49_49  [key=0, style=solid];
m49_48 -> m49_50  [key=2, style=dotted];
m49_48 -> m49_51  [key=2, style=dotted];
m49_49 -> m49_47  [key=0, style=bold, color=blue];
m49_49 -> m49_11  [key=2, style=dotted];
m49_49 -> m49_50  [key=0, style=solid];
m49_49 -> m49_51  [key=1, style=dashed, color=darkseagreen4, label=weapon];
m49_65 -> m49_66  [key=0, style=solid];
m49_77 -> m49_78  [key=0, style=solid];
m49_77 -> m49_72  [key=2, style=dotted];
m49_76 -> m49_77  [key=0, style=solid];
m49_76 -> m49_2  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_15  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_24  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_32  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_35  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_45  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_49  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_69  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_76 -> m49_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ConditionalBindingTests"];
m49_78 -> m49_76  [key=0, style=bold, color=blue];
m49_102 -> m49_103  [key=0, style=solid];
m49_103 -> m49_104  [key=0, style=solid];
m49_103 -> m49_46  [key=2, style=dotted];
m49_104 -> m49_102  [key=0, style=bold, color=blue];
m49_114 -> m49_115  [key=0, style=solid];
m49_117 -> m49_118  [key=0, style=solid];
m49_115 -> m49_116  [key=0, style=solid];
m49_116 -> m49_114  [key=0, style=bold, color=blue];
m49_118 -> m49_119  [key=0, style=solid];
m49_118 -> m49_120  [key=2, style=dotted];
m49_119 -> m49_117  [key=0, style=bold, color=blue];
m49_34 -> m49_35  [key=0, style=solid, color=green];
m49_36 -> m49_34  [key=0, style=bold, color=blue];
m49_36 -> m49_37  [key=0, style=solid];
m49_36 -> m49_40  [key=0, style=solid];
m49_36 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m49_36 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m49_66 -> m49_11  [key=2, style=dotted];
m49_66 -> m49_67  [key=0, style=solid];
m49_66 -> m49_68  [key=1, style=dashed, color=darkseagreen4, label=weapon];
m49_67 -> m49_68  [key=0, style=solid];
m49_67 -> m49_56  [key=2, style=dotted];
m49_67 -> m49_57  [key=2, style=dotted];
m49_72 -> m49_65  [key=0, style=bold, color=blue];
m49_72 -> m49_79  [key=0, style=solid];
m49_72 -> m49_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_24 -> m49_25  [key=0, style=solid, color=green];
m49_24 -> m49_11  [key=2, style=dotted, color=green];
m49_24 -> m49_22  [key=0, style=bold, color=blue];
m49_23 -> m49_24  [key=0, style=solid, color=green];
m49_23 -> m49_7  [key=2, style=dotted];
m49_23 -> m49_10  [key=2, style=dotted];
m49_23 -> m49_25  [key=2, style=dotted];
m49_25 -> m49_26  [key=0, style=solid];
m49_25 -> m49_12  [key=2, style=dotted];
m49_25 -> m49_36  [key=0, style=solid];
m49_25 -> m49_40  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m49_21 -> m49_7  [key=2, style=dotted];
m49_21 -> m49_8  [key=2, style=dotted];
m49_21 -> m49_22  [key=0, style=solid];
m49_22 -> m49_7  [key=2, style=dotted];
m49_22 -> m49_8  [key=2, style=dotted];
m49_22 -> m49_9  [key=2, style=dotted];
m49_22 -> m49_23  [key=0, style=solid];
m49_79 -> m49_80  [key=0, style=solid];
m49_80 -> m49_81  [key=0, style=solid];
m49_80 -> m49_33  [key=2, style=dotted];
m49_80 -> m49_82  [key=2, style=dotted];
m49_81 -> m49_72  [key=0, style=bold, color=blue];
m49_121 -> m49_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_17  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_48  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_60  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_73  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_77  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_79  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_80  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_84  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_103  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_86  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_87  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_121 -> m49_88  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m49_122 -> m49_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m50_6 -> m50_7  [key=0, style=solid];
m50_7 -> m50_8  [key=0, style=solid];
m50_7 -> m50_9  [key=2, style=dotted];
m50_8 -> m50_6  [key=0, style=bold, color=blue];
m50_22 -> m50_12  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Tests.Fakes.IWeapon weapon2"];
m50_10 -> m50_11  [key=0, style=solid, color=green];
m50_11 -> m50_12  [key=0, style=solid, color=green];
m50_11 -> m50_22  [key=2, style=dotted, color=green];
m50_11 -> m50_23  [key=2, style=dotted, color=green];
m50_11 -> m50_24  [key=2, style=dotted, color=green];
m50_12 -> m50_13  [key=0, style=solid];
m50_12 -> m50_12  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Tests.Fakes.IWeapon weapon1"];
m50_13 -> m50_14  [key=0, style=solid, color=green];
m50_14 -> m50_15  [key=0, style=solid, color=green];
m50_14 -> m50_14  [key=3, color=green, style=bold, label="Local variable System.Threading.ThreadStart callback"];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_25  [key=2, style=dotted];
m50_15 -> m50_17  [key=1, style=dashed, color=darkseagreen4, label=thread];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_26  [key=2, style=dotted];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_27  [key=2, style=dotted];
m50_18 -> m50_19  [key=0, style=solid];
m50_18 -> m50_28  [key=2, style=dotted];
m50_18 -> m50_29  [key=2, style=dotted];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_28  [key=2, style=dotted];
m50_19 -> m50_29  [key=2, style=dotted];
m50_20 -> m50_21  [key=0, style=solid];
m50_20 -> m50_28  [key=2, style=dotted];
m50_20 -> m50_30  [key=2, style=dotted];
m50_21 -> m50_10  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_4  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_5  [key=2, style=dotted];
m50_3 -> m50_0  [key=0, style=bold, color=blue];
m50_73 -> m50_74  [key=0, style=solid, color=red];
m50_73 -> m50_75  [key=0, style=solid, color=green];
m50_31 -> m50_32  [key=0, style=solid, color=green];
m50_32 -> m50_33  [key=0, style=solid, color=green];
m50_32 -> m50_35  [key=2, style=dotted, color=green];
m50_32 -> m50_18  [key=1, style=dashed, color=green, label=weapon1];
m50_32 -> m50_20  [key=1, style=dashed, color=green, label=weapon1];
m50_32 -> m50_34  [key=1, style=dashed, color=green, label=weapon1];
m50_33 -> m50_34  [key=0, style=solid, color=green];
m50_33 -> m50_35  [key=2, style=dotted, color=green];
m50_33 -> m50_19  [key=1, style=dashed, color=green, label=weapon2];
m50_33 -> m50_20  [key=1, style=dashed, color=green, label=weapon2];
m50_34 -> m50_31  [key=0, style=bold, color=blue];
m50_49 -> m50_50  [key=0, style=solid, color=green];
m50_50 -> m50_51  [key=0, style=solid, color=green];
m50_50 -> m50_35  [key=2, style=dotted, color=green];
m50_50 -> m50_45  [key=1, style=dashed, color=green, label=weapon2];
m50_50 -> m50_46  [key=1, style=dashed, color=green, label=weapon2];
m50_51 -> m50_49  [key=0, style=bold, color=blue];
m50_74 -> m50_75  [key=0, style=solid, color=red];
m50_74 -> m50_35  [key=2, style=dotted, color=red];
m50_74 -> m50_64  [key=1, style=dashed, color=red, label=instance];
m50_74 -> m50_65  [key=1, style=dashed, color=red, label=instance];
m50_75 -> m50_75  [key=0, style=solid, color=green];
m50_75 -> m50_35  [key=2, style=dotted, color=green];
m50_75 -> m50_64  [key=1, style=dashed, color=green, label=instance];
m50_75 -> m50_65  [key=1, style=dashed, color=green, label=instance];
m50_75 -> m50_73  [key=0, style=bold, color=blue];
m50_36 -> m50_37  [key=0, style=solid, color=green];
m50_37 -> m50_38  [key=0, style=solid, color=green];
m50_37 -> m50_22  [key=2, style=dotted, color=green];
m50_37 -> m50_23  [key=2, style=dotted, color=green];
m50_37 -> m50_24  [key=2, style=dotted, color=green];
m50_38 -> m50_39  [key=0, style=solid, color=green];
m50_38 -> m50_35  [key=2, style=dotted, color=green];
m50_38 -> m50_44  [key=1, style=dashed, color=green, label=weapon1];
m50_38 -> m50_46  [key=1, style=dashed, color=green, label=weapon1];
m50_39 -> m50_40  [key=0, style=solid, color=green];
m50_39 -> m50_12  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Tests.Fakes.IWeapon weapon2"];
m50_44 -> m50_45  [key=0, style=solid];
m50_44 -> m50_28  [key=2, style=dotted];
m50_44 -> m50_29  [key=2, style=dotted];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_28  [key=2, style=dotted];
m50_46 -> m50_48  [key=2, style=dotted];
m50_40 -> m50_41  [key=0, style=solid, color=green];
m50_40 -> m50_40  [key=3, color=green, style=bold, label="Local variable System.Threading.ThreadStart callback"];
m50_41 -> m50_42  [key=0, style=solid];
m50_41 -> m50_25  [key=2, style=dotted];
m50_41 -> m50_43  [key=1, style=dashed, color=darkseagreen4, label=thread];
m50_42 -> m50_43  [key=0, style=solid];
m50_42 -> m50_26  [key=2, style=dotted];
m50_43 -> m50_44  [key=0, style=solid];
m50_43 -> m50_27  [key=2, style=dotted];
m50_45 -> m50_46  [key=0, style=solid];
m50_45 -> m50_28  [key=2, style=dotted];
m50_45 -> m50_29  [key=2, style=dotted];
m50_47 -> m50_36  [key=0, style=bold, color=blue];
m50_52 -> m50_53  [key=0, style=solid, color=green];
m50_53 -> m50_54  [key=0, style=solid, color=green];
m50_53 -> m50_22  [key=2, style=dotted, color=green];
m50_53 -> m50_67  [key=2, style=dotted, color=green];
m50_53 -> m50_24  [key=2, style=dotted, color=green];
m50_54 -> m50_55  [key=0, style=solid, color=green];
m50_54 -> m50_68  [key=2, style=dotted, color=green];
m50_54 -> m50_63  [key=1, style=dashed, color=red, label=cache];
m50_54 -> m50_64  [key=1, style=dashed, color=green, label=cache];
m50_55 -> m50_56  [key=0, style=solid, color=green];
m50_55 -> m50_12  [key=3, color=darkorchid, style=bold, label="Local variable Ninject.Tests.Fakes.NotifiesWhenDisposed instance"];
m50_63 -> m50_64  [key=0, style=solid, color=green];
m50_63 -> m50_71  [key=2, style=dotted];
m50_63 -> m50_69  [key=2, style=dotted, color=green];
m50_56 -> m50_57  [key=0, style=solid, color=green];
m50_56 -> m50_56  [key=3, color=green, style=bold, label="Local variable System.Threading.ThreadStart callback"];
m50_57 -> m50_58  [key=0, style=solid];
m50_57 -> m50_25  [key=2, style=dotted];
m50_57 -> m50_59  [key=1, style=dashed, color=darkseagreen4, label=thread];
m50_58 -> m50_59  [key=0, style=solid];
m50_58 -> m50_26  [key=2, style=dotted];
m50_59 -> m50_60  [key=0, style=solid];
m50_59 -> m50_27  [key=2, style=dotted];
m50_60 -> m50_61  [key=0, style=solid];
m50_61 -> m50_62  [key=0, style=solid];
m50_61 -> m50_69  [key=2, style=dotted];
m50_62 -> m50_63  [key=0, style=solid, color=green];
m50_62 -> m50_70  [key=2, style=dotted];
m50_64 -> m50_65  [key=0, style=solid];
m50_64 -> m50_28  [key=2, style=dotted];
m50_64 -> m50_29  [key=2, style=dotted];
m50_64 -> m50_64  [key=0, style=solid];
m50_64 -> m50_71  [key=2, style=dotted];
m50_65 -> m50_66  [key=0, style=solid];
m50_65 -> m50_28  [key=2, style=dotted];
m50_65 -> m50_72  [key=2, style=dotted];
m50_66 -> m50_52  [key=0, style=bold, color=blue];
m50_76 -> m50_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext"];
m50_76 -> m50_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ThreadScopeTests.ThreadScopeContext"];
m50_77 -> m50_11  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_14  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_32  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_33  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_37  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_38  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_40  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_50  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_53  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_54  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_56  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_74  [key=1, style=dashed, color=red, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m50_77 -> m50_75  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.ThreadScopeTests.WhenServiceIsBoundWithThreadScope"];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_9  [key=1, style=dashed, color=red, label="Ninject.Planning.IPlan"];
m51_7 -> m51_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.IPlan"];
m51_8 -> m51_9  [key=0, style=solid, color=red];
m51_8 -> m51_6  [key=2, style=dotted];
m51_9 -> m51_10  [key=0, style=solid, color=red];
m51_9 -> m51_16  [key=2, style=dotted, color=red];
m51_9 -> m51_12  [key=1, style=dashed, color=red, label=constructors];
m51_14 -> m51_12  [key=0, style=solid];
m51_14 -> m51_18  [key=2, style=dotted];
m51_14 -> m51_19  [key=2, style=dotted];
m51_14 -> m51_20  [key=2, style=dotted];
m51_10 -> m51_11  [key=0, style=solid, color=red];
m51_10 -> m51_12  [key=0, style=solid];
m51_12 -> m51_13  [key=0, style=solid];
m51_12 -> m51_15  [key=0, style=solid];
m51_12 -> m51_14  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m51_11 -> m51_15  [key=0, style=solid, color=red];
m51_13 -> m51_14  [key=0, style=solid];
m51_13 -> m51_17  [key=2, style=dotted];
m51_15 -> m51_7  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Injection.IInjectorFactory"];
m51_0 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.ISelector"];
m51_0 -> m51_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Injection.IInjectorFactory"];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_6  [key=2, style=dotted];
m51_2 -> m51_3  [key=0, style=solid];
m51_2 -> m51_6  [key=2, style=dotted];
m51_3 -> m51_4  [key=0, style=solid];
m51_4 -> m51_5  [key=0, style=solid];
m51_5 -> m51_0  [key=0, style=bold, color=blue];
m51_21 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m51_21 -> m51_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m51_21 -> m51_9  [key=1, style=dashed, color=red, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m51_21 -> m51_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m51_21 -> m51_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Strategies.ConstructorReflectionStrategy"];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_5  [key=1, style=dashed, color=darkseagreen4, label=expectedModules];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_8  [key=2, style=dotted];
m52_5 -> m52_6  [key=0, style=solid];
m52_5 -> m52_12  [key=2, style=dotted];
m52_5 -> m52_13  [key=2, style=dotted];
m52_5 -> m52_14  [key=2, style=dotted];
m52_5 -> m52_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_3 -> m52_4  [key=0, style=solid];
m52_3 -> m52_9  [key=2, style=dotted];
m52_4 -> m52_5  [key=0, style=solid];
m52_4 -> m52_10  [key=2, style=dotted];
m52_4 -> m52_11  [key=2, style=dotted];
m52_4 -> m52_6  [key=1, style=dashed, color=darkseagreen4, label=modules];
m52_6 -> m52_7  [key=0, style=solid];
m52_6 -> m52_15  [key=2, style=dotted];
m52_6 -> m52_13  [key=2, style=dotted];
m52_6 -> m52_16  [key=2, style=dotted];
m52_6 -> m52_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_7 -> m52_0  [key=0, style=bold, color=blue];
m52_21 -> m52_22  [key=0, style=solid];
m52_17 -> m52_18  [key=0, style=solid];
m52_18 -> m52_19  [key=0, style=solid];
m52_18 -> m52_20  [key=2, style=dotted];
m52_19 -> m52_17  [key=0, style=bold, color=blue];
m52_22 -> m52_23  [key=0, style=solid];
m52_23 -> m52_21  [key=0, style=bold, color=blue];
m52_24 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies"];
m52_24 -> m52_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies"];
m52_24 -> m52_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies"];
m52_24 -> m52_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithAssemblies"];
m53_0 -> m53_1  [key=0, style=solid];
m53_1 -> m53_2  [key=0, style=solid];
m53_1 -> m53_6  [key=2, style=dotted];
m53_2 -> m53_3  [key=0, style=solid];
m53_2 -> m53_7  [key=2, style=dotted];
m53_2 -> m53_8  [key=2, style=dotted];
m53_2 -> m53_4  [key=1, style=dashed, color=darkseagreen4, label=modules];
m53_3 -> m53_4  [key=0, style=solid];
m53_3 -> m53_9  [key=2, style=dotted];
m53_3 -> m53_10  [key=2, style=dotted];
m53_3 -> m53_11  [key=2, style=dotted];
m53_3 -> m53_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m53_4 -> m53_5  [key=0, style=solid];
m53_4 -> m53_12  [key=2, style=dotted];
m53_4 -> m53_10  [key=2, style=dotted];
m53_4 -> m53_13  [key=2, style=dotted];
m53_4 -> m53_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m53_5 -> m53_0  [key=0, style=bold, color=blue];
m53_18 -> m53_19  [key=0, style=solid];
m53_14 -> m53_15  [key=0, style=solid];
m53_15 -> m53_16  [key=0, style=solid];
m53_15 -> m53_17  [key=2, style=dotted];
m53_16 -> m53_14  [key=0, style=bold, color=blue];
m53_19 -> m53_20  [key=0, style=solid];
m53_20 -> m53_18  [key=0, style=bold, color=blue];
m53_21 -> m53_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName"];
m53_21 -> m53_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName"];
m53_21 -> m53_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName"];
m53_21 -> m53_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithFileName"];
m54_4 -> m54_5  [key=0, style=solid];
m54_5 -> m54_6  [key=0, style=solid];
m54_5 -> m54_11  [key=2, style=dotted];
m54_5 -> m54_12  [key=2, style=dotted];
m54_6 -> m54_7  [key=0, style=solid];
m54_6 -> m54_13  [key=2, style=dotted];
m54_6 -> m54_8  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m54_6 -> m54_9  [key=1, style=dashed, color=darkseagreen4, label=warrior];
m54_7 -> m54_8  [key=0, style=solid];
m54_7 -> m54_14  [key=2, style=dotted];
m54_8 -> m54_9  [key=0, style=solid];
m54_8 -> m54_15  [key=2, style=dotted];
m54_9 -> m54_10  [key=0, style=solid];
m54_9 -> m54_16  [key=2, style=dotted];
m54_10 -> m54_4  [key=0, style=bold, color=blue];
m54_0 -> m54_1  [key=0, style=solid];
m54_1 -> m54_2  [key=0, style=solid];
m54_1 -> m54_3  [key=2, style=dotted];
m54_2 -> m54_0  [key=0, style=bold, color=blue];
m54_17 -> m54_18  [key=0, style=solid];
m54_18 -> m54_19  [key=0, style=solid];
m54_18 -> m54_23  [key=2, style=dotted];
m54_18 -> m54_21  [key=1, style=dashed, color=darkseagreen4, label=instance];
m54_19 -> m54_20  [key=0, style=solid];
m54_19 -> m54_14  [key=2, style=dotted];
m54_21 -> m54_22  [key=0, style=solid];
m54_21 -> m54_25  [key=2, style=dotted];
m54_20 -> m54_21  [key=0, style=solid];
m54_20 -> m54_24  [key=2, style=dotted];
m54_22 -> m54_17  [key=0, style=bold, color=blue];
m54_26 -> m54_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext"];
m54_27 -> m54_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m54_27 -> m54_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m54_27 -> m54_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m54_27 -> m54_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled"];
m55_30 -> m55_31  [key=0, style=solid];
m55_31 -> m55_32  [key=0, style=solid];
m55_32 -> m55_30  [key=0, style=bold, color=blue];
m55_15 -> m55_16  [key=0, style=solid];
m55_16 -> m55_17  [key=0, style=solid];
m55_16 -> m55_19  [key=2, style=dotted];
m55_17 -> m55_18  [key=0, style=solid];
m55_17 -> m55_20  [key=2, style=dotted];
m55_17 -> m55_21  [key=2, style=dotted];
m55_18 -> m55_15  [key=0, style=bold, color=blue];
m55_0 -> m55_1  [key=0, style=solid];
m55_1 -> m55_2  [key=0, style=solid];
m55_1 -> m55_6  [key=2, style=dotted];
m55_2 -> m55_3  [key=0, style=solid];
m55_2 -> m55_7  [key=2, style=dotted];
m55_2 -> m55_8  [key=2, style=dotted];
m55_2 -> m55_9  [key=2, style=dotted];
m55_3 -> m55_4  [key=0, style=solid];
m55_3 -> m55_7  [key=2, style=dotted];
m55_3 -> m55_8  [key=2, style=dotted];
m55_3 -> m55_10  [key=2, style=dotted];
m55_3 -> m55_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m55_4 -> m55_5  [key=0, style=solid];
m55_4 -> m55_11  [key=2, style=dotted];
m55_5 -> m55_0  [key=0, style=bold, color=blue];
m55_22 -> m55_23  [key=0, style=solid, color=green];
m55_23 -> m55_24  [key=0, style=solid, color=green];
m55_23 -> m55_11  [key=2, style=dotted, color=green];
m55_23 -> m55_25  [key=1, style=dashed, color=green, label=bar];
m55_24 -> m55_25  [key=0, style=solid];
m55_24 -> m55_19  [key=2, style=dotted];
m55_25 -> m55_26  [key=0, style=solid];
m55_25 -> m55_20  [key=2, style=dotted];
m55_25 -> m55_21  [key=2, style=dotted];
m55_26 -> m55_22  [key=0, style=bold, color=blue];
m55_12 -> m55_13  [key=0, style=solid];
m55_13 -> m55_14  [key=0, style=solid];
m55_14 -> m55_12  [key=0, style=bold, color=blue];
m55_27 -> m55_28  [key=0, style=solid];
m55_28 -> m55_29  [key=0, style=solid];
m55_29 -> m55_27  [key=0, style=bold, color=blue];
m55_33 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_23  [key=1, style=dashed, color=green, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_33 -> m55_24  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject"];
m55_34 -> m55_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject.Foo"];
m55_35 -> m55_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Integration.WhenReleasingAnObject.Bar"];
}
