digraph  {
n3 [label="Ninject.Planning.Directives.ConstructorInjectionDirective", span=""];
n0 [cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="33-33"];
n1 [cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", label="Constructor = constructor", span="36-36"];
n2 [cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", label="Exit Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="33-33"];
m0_16 [cluster="Mock<IPlan>.cstr", file="CircularDependenciesTests.cs", label="Entry Mock<IPlan>.cstr", span=""];
m0_83 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", span="109-109"];
m0_84 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", span="109-109"];
m0_3 [cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", file="CircularDependenciesTests.cs", label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", span="17-17"];
m0_85 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", span="110-110"];
m0_86 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", span="110-110"];
m0_15 [cluster="Mock<IContext>.cstr", file="CircularDependenciesTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m0_4 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42"];
m0_5 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="reference = new InstanceReference { Instance = instance }", span="44-44"];
m0_6 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="contextMock = new Mock<IContext>()", span="46-46"];
m0_7 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="planMock = new Mock<IPlan>()", span="47-47"];
m0_8 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="injector1 = (x, args) => { injector1WasCalled = true; }", span="48-48"];
m0_9 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="injector2 = (x, args) => { injector2WasCalled = true; }", span="49-49"];
m0_10 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="directives = new[]\r\n            {\r\n                new FakeMethodInjectionDirective(method1, injector1),\r\n                new FakeMethodInjectionDirective(method2, injector2)\r\n            }", span="51-55"];
m0_11 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="contextMock.SetupGet(x => x.Plan).Returns(planMock.Object)", span="57-57"];
m0_12 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="planMock.Setup(x => x.GetAll<MethodInjectionDirective>()).Returns(directives)", span="59-59"];
m0_13 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42"];
m0_66 [cluster="Unk.Should", file="CircularDependenciesTests.cs", label="Entry Unk.Should", span=""];
m0_33 [cluster="Unk.>", file="CircularDependenciesTests.cs", label="Entry Unk.>", span=""];
m0_50 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="CircularDependenciesTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8"];
m0_61 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85"];
m0_62 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="strategy.Activate(contextMock.Object, reference)", span="87-87"];
m0_63 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="injector1WasCalled.Should().BeTrue()", span="88-88"];
m0_64 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="injector2WasCalled.Should().BeTrue()", span="89-89"];
m0_65 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85"];
m0_43 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71"];
m0_44 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="strategy.Activate(contextMock.Object, reference)", span="73-73"];
m0_45 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71"];
m0_75 [cluster="Unk.ToArray", file="CircularDependenciesTests.cs", label="Entry Unk.ToArray", span=""];
m0_17 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97"];
m0_68 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97"];
m0_38 [cluster="Unk.Activate", file="CircularDependenciesTests.cs", label="Entry Unk.Activate", span=""];
m0_20 [cluster="Unk.Setup", file="CircularDependenciesTests.cs", label="Entry Unk.Setup", span=""];
m0_18 [cluster="Unk.SetupGet", file="CircularDependenciesTests.cs", label="Entry Unk.SetupGet", span=""];
m0_14 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CircularDependenciesTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m0_80 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="103-103"];
m0_27 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="57-57"];
m0_30 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="59-59"];
m0_21 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="48-48"];
m0_22 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="injector1WasCalled = true", span="48-48"];
m0_23 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="48-48"];
m0_24 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="49-49"];
m0_25 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="injector2WasCalled = true", span="49-49"];
m0_26 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="49-49"];
m0_28 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.Plan", span="57-57"];
m0_29 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="57-57"];
m0_31 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.GetAll<MethodInjectionDirective>()", span="59-59"];
m0_32 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="59-59"];
m0_40 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="67-67"];
m0_41 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.GetAll<MethodInjectionDirective>()", span="67-67"];
m0_42 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="67-67"];
m0_51 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="81-81"];
m0_52 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(contextMock.Object)))", span="81-81"];
m0_53 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="81-81"];
m0_54 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="81-81"];
m0_55 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="m.Verify(x => x.ResolveWithin(contextMock.Object))", span="81-81"];
m0_56 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="81-81"];
m0_57 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="81-81"];
m0_58 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="x.ResolveWithin(contextMock.Object)", span="81-81"];
m0_59 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="81-81"];
m0_76 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="102-102"];
m0_77 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="new Mock<ITarget>()", span="102-102"];
m0_78 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="102-102"];
m0_81 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="m.Object", span="103-103"];
m0_82 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="103-103"];
m0_74 [cluster="Unk.Select", file="CircularDependenciesTests.cs", label="Entry Unk.Select", span=""];
m0_79 [cluster="Mock<ITarget>.cstr", file="CircularDependenciesTests.cs", label="Entry Mock<ITarget>.cstr", span=""];
m0_34 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m0_35 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs", label="strategy.Activate(contextMock.Object, reference)", span="65-65"];
m0_36 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs", label="planMock.Verify(x => x.GetAll<MethodInjectionDirective>())", span="67-67"];
m0_37 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63"];
m0_67 [cluster="Unk.BeTrue", file="CircularDependenciesTests.cs", label="Entry Unk.BeTrue", span=""];
m0_46 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m0_47 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="strategy.Activate(contextMock.Object, reference)", span="79-79"];
m0_48 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="directives.Map(d => d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(contextMock.Object))))", span="81-81"];
m0_49 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77"];
m0_19 [cluster="Unk.Returns", file="CircularDependenciesTests.cs", label="Entry Unk.Returns", span=""];
m0_73 [cluster="System.Reflection.MethodBase.GetParameters()", file="CircularDependenciesTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_60 [cluster="Unk.ResolveWithin", file="CircularDependenciesTests.cs", label="Entry Unk.ResolveWithin", span=""];
m0_39 [cluster="Unk.Verify", file="CircularDependenciesTests.cs", label="Entry Unk.Verify", span=""];
m0_0 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m0_1 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs", label="strategy = new MethodInjectionStrategy()", span="24-24"];
m0_2 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22"];
m0_69 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs", label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100"];
m0_70 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs", label="TargetMocks = method.GetParameters().Select(p => new Mock<ITarget>()).ToArray()", span="102-102"];
m0_71 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs", label="return TargetMocks.Select(m => m.Object).ToArray();", span="103-103"];
m0_72 [cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs", label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100"];
m0_87 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span=""];
m0_88 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span=""];
m0_89 [file="CircularDependenciesTests.cs", label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", span=""];
m1_7 [cluster="Unk.AddExecutionAssembly", file="MainActivity.cs", label="Entry Unk.AddExecutionAssembly", span=""];
m1_0 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="Entry Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17"];
m1_1 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", color=green, community=0, file="MainActivity.cs", label="AddTestAssembly(Assembly.GetExecutingAssembly())", prediction=0, span="21-21"];
m1_3 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="base.OnCreate(bundle)", span="36-36"];
m1_2 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="AddExecutionAssembly(typeof(ExtensibilityPointFactory).Assembly)", span="22-22"];
m1_4 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="Exit Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17"];
m1_8 [cluster="Unk.OnCreate", file="MainActivity.cs", label="Entry Unk.OnCreate", span=""];
m1_5 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="MainActivity.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m1_6 [cluster="Unk.Add", file="MainActivity.cs", label="Entry Unk.Add", span=""];
m1_9 [file="MainActivity.cs", label="Ninject.Android.Tests.MainActivity", span=""];
m2_0 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", file="MainPage.xaml.cs", label="Entry Ninject.WindowsPhone8Tests.MainPage.MainPage()", span="18-18"];
m2_1 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", file="MainPage.xaml.cs", label="InitializeComponent()", span="20-20"];
m2_2 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", color=green, community=0, file="MainPage.xaml.cs", label="var mainPage = new MainPageControl()", prediction=1, span="23-23"];
m2_3 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", color=green, community=0, file="MainPage.xaml.cs", label="Exit Ninject.WindowsPhone8Tests.MainPage.MainPage()", prediction=2, span="18-18"];
m2_4 [cluster="Unk.InitializeComponent", color=green, community=0, file="MainPage.xaml.cs", label="Entry Unk.InitializeComponent", prediction=1, span=""];
m2_5 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", color=green, community=0, file="MainPage.xaml.cs", label="Entry Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", prediction=1, span="29-29"];
m2_11 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="MainPage.xaml.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m2_9 [cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", file="MainPage.xaml.cs", label="Exit Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", span="29-29"];
m2_10 [cluster="Unk.AddTestAssembly", file="MainPage.xaml.cs", label="Entry Unk.AddTestAssembly", span=""];
m2_12 [file="MainPage.xaml.cs", label="Ninject.WindowsPhone8Tests.MainPage", span=""];
m0_11 -> m0_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_48 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_71 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_47  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_48  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_58  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_62  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_63  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_88 -> m0_64  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", style=dashed];
m0_89 -> m0_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=Bundle, style=dashed];
m1_9 -> m1_3  [color=darkseagreen4, key=1, label="Ninject.Android.Tests.MainActivity", style=dashed];
m2_2 -> m2_4  [color=green, key=1, label=mainPage, style=dashed];
m2_2 -> m2_5  [color=green, key=1, label=mainPage, style=dashed];
m2_12 -> m2_4  [color=green, key=1, label="Ninject.WindowsPhone8Tests.MainPage", style=dashed];
}
