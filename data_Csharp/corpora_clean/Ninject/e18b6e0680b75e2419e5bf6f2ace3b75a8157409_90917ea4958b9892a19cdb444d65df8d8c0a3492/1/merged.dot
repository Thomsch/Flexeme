digraph  {
n3 [label="Ninject.Planning.Directives.ConstructorInjectionDirective", span=""];
n0 [label="Entry Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="33-33", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)"];
n1 [label="Constructor = constructor", span="36-36", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)"];
n2 [label="Exit Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)", span="33-33", cluster="Ninject.Planning.Directives.ConstructorInjectionDirective.ConstructorInjectionDirective(System.Reflection.ConstructorInfo, Ninject.Injection.ConstructorInjector)"];
m0_16 [label="Entry Mock<IPlan>.cstr", span="", cluster="Mock<IPlan>.cstr", file="CircularDependenciesTests.cs"];
m0_83 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", span="109-109", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", file="CircularDependenciesTests.cs"];
m0_84 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", span="109-109", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Foo(int, string)", file="CircularDependenciesTests.cs"];
m0_3 [label="Entry Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", span="17-17", cluster="Ninject.Activation.Strategies.MethodInjectionStrategy.MethodInjectionStrategy()", file="CircularDependenciesTests.cs"];
m0_85 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", span="110-110", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", file="CircularDependenciesTests.cs"];
m0_86 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", span="110-110", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.Dummy.Bar(Ninject.Tests.Fakes.IWeapon)", file="CircularDependenciesTests.cs"];
m0_15 [label="Entry Mock<IContext>.cstr", span="", cluster="Mock<IContext>.cstr", file="CircularDependenciesTests.cs"];
m0_4 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_5 [label="reference = new InstanceReference { Instance = instance }", span="44-44", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_6 [label="contextMock = new Mock<IContext>()", span="46-46", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_7 [label="planMock = new Mock<IPlan>()", span="47-47", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_8 [label="injector1 = (x, args) => { injector1WasCalled = true; }", span="48-48", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_9 [label="injector2 = (x, args) => { injector2WasCalled = true; }", span="49-49", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_10 [label="directives = new[]\r\n            {\r\n                new FakeMethodInjectionDirective(method1, injector1),\r\n                new FakeMethodInjectionDirective(method2, injector2)\r\n            }", span="51-55", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_11 [label="contextMock.SetupGet(x => x.Plan).Returns(planMock.Object)", span="57-57", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_12 [label="planMock.Setup(x => x.GetAll<MethodInjectionDirective>()).Returns(directives)", span="59-59", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_13 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", span="42-42", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.WhenActivateIsCalled()", file="CircularDependenciesTests.cs"];
m0_66 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CircularDependenciesTests.cs"];
m0_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="CircularDependenciesTests.cs"];
m0_50 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="8-8", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="CircularDependenciesTests.cs"];
m0_61 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_62 [label="strategy.Activate(contextMock.Object, reference)", span="87-87", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_63 [label="injector1WasCalled.Should().BeTrue()", span="88-88", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_64 [label="injector2WasCalled.Should().BeTrue()", span="89-89", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_65 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", span="85-85", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.InvokesInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_43 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_44 [label="strategy.Activate(contextMock.Object, reference)", span="73-73", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_45 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", span="71-71", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.CreatesMethodInjectorsForEachDirective()", file="CircularDependenciesTests.cs"];
m0_75 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="CircularDependenciesTests.cs"];
m0_17 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="CircularDependenciesTests.cs"];
m0_68 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", span="97-97", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.FakeMethodInjectionDirective(System.Reflection.MethodInfo, Ninject.Injection.MethodInjector)", file="CircularDependenciesTests.cs"];
m0_38 [label="Entry Unk.Activate", span="", cluster="Unk.Activate", file="CircularDependenciesTests.cs"];
m0_20 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CircularDependenciesTests.cs"];
m0_18 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="CircularDependenciesTests.cs"];
m0_14 [label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16", cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="CircularDependenciesTests.cs"];
m0_80 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_27 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_30 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_21 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_22 [label="injector1WasCalled = true", span="48-48", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_23 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_24 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_25 [label="injector2WasCalled = true", span="49-49", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_26 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_28 [label="x.Plan", span="57-57", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_29 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_31 [label="x.GetAll<MethodInjectionDirective>()", span="59-59", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_32 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_40 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_41 [label="x.GetAll<MethodInjectionDirective>()", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_42 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_51 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_52 [label="d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(contextMock.Object)))", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_53 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_54 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_55 [label="m.Verify(x => x.ResolveWithin(contextMock.Object))", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_56 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_57 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_58 [label="x.ResolveWithin(contextMock.Object)", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_59 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_76 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_77 [label="new Mock<ITarget>()", span="102-102", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_78 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_81 [label="m.Object", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_82 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="CircularDependenciesTests.cs"];
m0_74 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CircularDependenciesTests.cs"];
m0_79 [label="Entry Mock<ITarget>.cstr", span="", cluster="Mock<ITarget>.cstr", file="CircularDependenciesTests.cs"];
m0_34 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs"];
m0_35 [label="strategy.Activate(contextMock.Object, reference)", span="65-65", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs"];
m0_36 [label="planMock.Verify(x => x.GetAll<MethodInjectionDirective>())", span="67-67", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs"];
m0_37 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", span="63-63", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ReadsMethodInjectorsFromPlan()", file="CircularDependenciesTests.cs"];
m0_67 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="CircularDependenciesTests.cs"];
m0_46 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs"];
m0_47 [label="strategy.Activate(contextMock.Object, reference)", span="79-79", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs"];
m0_48 [label="directives.Map(d => d.TargetMocks.Map(m => m.Verify(x => x.ResolveWithin(contextMock.Object))))", span="81-81", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs"];
m0_49 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", span="77-77", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled.ResolvesValuesForEachTargetOfEachDirective()", file="CircularDependenciesTests.cs"];
m0_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CircularDependenciesTests.cs"];
m0_73 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="CircularDependenciesTests.cs"];
m0_60 [label="Entry Unk.ResolveWithin", span="", cluster="Unk.ResolveWithin", file="CircularDependenciesTests.cs"];
m0_39 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="CircularDependenciesTests.cs"];
m0_0 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs"];
m0_1 [label="strategy = new MethodInjectionStrategy()", span="24-24", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs"];
m0_2 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", span="22-22", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext.MethodInjectionStrategyContext()", file="CircularDependenciesTests.cs"];
m0_69 [label="Entry Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs"];
m0_70 [label="TargetMocks = method.GetParameters().Select(p => new Mock<ITarget>()).ToArray()", span="102-102", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs"];
m0_71 [label="return TargetMocks.Select(m => m.Object).ToArray();", span="103-103", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs"];
m0_72 [label="Exit Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", span="100-100", cluster="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective.CreateTargetsFromParameters(System.Reflection.MethodInfo)", file="CircularDependenciesTests.cs"];
m0_87 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext", span="", file="CircularDependenciesTests.cs"];
m0_88 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled", span="", file="CircularDependenciesTests.cs"];
m0_89 [label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective", span="", file="CircularDependenciesTests.cs"];
m1_7 [label="Entry Unk.AddExecutionAssembly", span="", cluster="Unk.AddExecutionAssembly", file="MainActivity.cs"];
m1_0 [label="Entry Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17", cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs"];
m1_1 [label="AddTestAssembly(Assembly.GetExecutingAssembly())", span="21-21", cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", color=green, community=0, file="MainActivity.cs"];
m1_3 [label="base.OnCreate(bundle)", span="36-36", cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs"];
m1_2 [label="AddExecutionAssembly(typeof(ExtensibilityPointFactory).Assembly)", span="22-22", cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs"];
m1_4 [label="Exit Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17", cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs"];
m1_8 [label="Entry Unk.OnCreate", span="", cluster="Unk.OnCreate", file="MainActivity.cs"];
m1_5 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="MainActivity.cs"];
m1_6 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="MainActivity.cs"];
m1_9 [label="Ninject.Android.Tests.MainActivity", span="", file="MainActivity.cs"];
m2_0 [label="Entry Ninject.WindowsPhone8Tests.MainPage.MainPage()", span="18-18", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", file="MainPage.xaml.cs"];
m2_1 [label="InitializeComponent()", span="20-20", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", file="MainPage.xaml.cs"];
m2_2 [label="var mainPage = new MainPageControl()", span="23-23", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", color=green, community=0, file="MainPage.xaml.cs"];
m2_3 [label="Exit Ninject.WindowsPhone8Tests.MainPage.MainPage()", span="18-18", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage()", color=green, community=0, file="MainPage.xaml.cs"];
m2_4 [label="Entry Unk.InitializeComponent", span="", cluster="Unk.InitializeComponent", color=green, community=0, file="MainPage.xaml.cs"];
m2_5 [label="Entry Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", span="29-29", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", color=green, community=0, file="MainPage.xaml.cs"];
m2_11 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="MainPage.xaml.cs"];
m2_6 [label="SystemTray.IsVisible = false", span="32-32", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", color=red, community=0, file="MainPage.xaml.cs"];
m2_7 [label="var testPage = new TestEngine(Assembly.GetExecutingAssembly())", span="34-34", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", color=red, community=0, file="MainPage.xaml.cs"];
m2_8 [label="Entry MainPageControl.cstr", span="", cluster="MainPageControl.cstr", color=red, community=0, file="MainPage.xaml.cs"];
m2_9 [label="Exit Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", span="29-29", cluster="Ninject.WindowsPhone8Tests.MainPage.MainPage_Loaded(object, RoutedEventArgs)", file="MainPage.xaml.cs"];
m2_10 [label="Entry Unk.AddTestAssembly", span="", cluster="Unk.AddTestAssembly", file="MainPage.xaml.cs"];
m2_12 [label="Ninject.WindowsPhone8Tests.MainPage", span="", file="MainPage.xaml.cs"];
n3 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Directives.ConstructorInjectionDirective"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_83  [key=0, style=bold, color=blue];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_85  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_18  [key=2, style=dotted];
m0_11 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_20  [key=2, style=dotted];
m0_12 -> m0_19  [key=2, style=dotted];
m0_12 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_13 -> m0_4  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_38  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_63 -> m0_67  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=2, style=dotted];
m0_64 -> m0_67  [key=2, style=dotted];
m0_65 -> m0_61  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_38  [key=2, style=dotted];
m0_45 -> m0_43  [key=0, style=bold, color=blue];
m0_17 -> m0_68  [key=0, style=solid];
m0_68 -> m0_17  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_32 -> m0_30  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_33  [key=2, style=dotted];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_50  [key=2, style=dotted];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_53 -> m0_51  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_39  [key=2, style=dotted];
m0_55 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_56 -> m0_54  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=2, style=dotted];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_78 -> m0_76  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_38  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=2, style=dotted];
m0_36 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_37 -> m0_34  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_38  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_48 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_49 -> m0_46  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_73  [key=2, style=dotted];
m0_70 -> m0_74  [key=2, style=dotted];
m0_70 -> m0_75  [key=2, style=dotted];
m0_70 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_74  [key=2, style=dotted];
m0_71 -> m0_75  [key=2, style=dotted];
m0_71 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_72 -> m0_69  [key=0, style=bold, color=blue];
m0_87 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.MethodInjectionStrategyContext"];
m0_88 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_88 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.WhenActivateIsCalled"];
m0_89 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective"];
m0_89 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.MethodInjectionStrategyTests.FakeMethodInjectionDirective"];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=Bundle];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_5  [key=2, style=dotted, color=green];
m1_1 -> m1_6  [key=2, style=dotted, color=green];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_9 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Android.Tests.MainActivity"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_8  [key=2, style=dotted, color=green];
m2_2 -> m2_4  [key=1, style=dashed, color=green, label=mainPage];
m2_2 -> m2_5  [key=1, style=dashed, color=green, label=mainPage];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_11  [key=2, style=dotted, color=green];
m2_3 -> m2_10  [key=2, style=dotted, color=green];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_11  [key=2, style=dotted, color=green];
m2_5 -> m2_3  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_10  [key=2, style=dotted, color=red];
m2_7 -> m2_11  [key=2, style=dotted, color=red];
m2_8 -> m2_9  [key=0, style=solid, color=red];
m2_9 -> m2_5  [key=0, style=bold, color=blue];
m2_12 -> m2_2  [key=1, style=dashed, color=red, label="Ninject.WindowsPhone8Tests.MainPage"];
m2_12 -> m2_4  [key=1, style=dashed, color=green, label="Ninject.WindowsPhone8Tests.MainPage"];
}
