digraph  {
m1_0 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m1_1 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="_kernel = new StandardKernel()", span="12-12"];
m1_2 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="_kernel.Bind<IWarrior>()\r\n                    .To<Ninja>()", span="13-14"];
m1_3 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="_kernel.Bind<IWeapon>()\r\n                    .To<Sword>()", span="15-16"];
m1_4 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="_kernel.Bind<IWeapon>()\r\n                    .To<Shuriken>()\r\n                    .WhenTargetHas<InjectAttribute>()", span="17-19"];
m1_5 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="InstanceReference.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m1_29 [cluster="Unk.NotNull", file="InstanceReference.cs", label="Entry Unk.NotNull", span=""];
m1_7 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="InstanceReference.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="26-26"];
m1_30 [cluster="Unk.>", file="InstanceReference.cs", label="Entry Unk.>", span=""];
m1_17 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="InstanceReference.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m1_10 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m1_11 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="disposing && !IsDisposed", span="24-24"];
m1_14 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="base.Dispose(disposing)", span="29-29"];
m1_12 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="_kernel.Dispose()", span="26-26"];
m1_13 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="_kernel = null", span="27-27"];
m1_15 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="InstanceReference.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m1_37 [cluster="Unk.Null", file="InstanceReference.cs", label="Entry Unk.Null", span=""];
m1_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="InstanceReference.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m1_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="InstanceReference.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="124-124"];
m1_28 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="InstanceReference.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m1_31 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="InstanceReference.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54"];
m1_32 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="InstanceReference.cs", label="var instance = _kernel.Get<Ninja>()", span="56-56"];
m1_33 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="InstanceReference.cs", label="Assert.NotNull(instance.Weapon)", span="58-58"];
m1_34 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="InstanceReference.cs", label="Assert.Null(instance.SecondaryWeapon)", span="59-59"];
m1_35 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", color=red, community=0, file="InstanceReference.cs", label="0: Assert.Null(instance.VerySecretWeaponAccessor)", span="60-60"];
m1_36 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="InstanceReference.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="54-54"];
m1_16 [cluster="System.IDisposable.Dispose()", file="InstanceReference.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="InstanceReference.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m1_18 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37"];
m1_19 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="_kernel.Settings.InjectNonPublic = true", span="39-39"];
m1_20 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="var instance = _kernel.Get<Ninja>()", span="40-40"];
m1_21 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.NotNull(instance.Weapon)", span="42-42"];
m1_22 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.IsType<Sword>(instance.Weapon)", span="43-43"];
m1_23 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.NotNull(instance.SecondaryWeapon)", span="45-45"];
m1_24 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.IsType<Shuriken>(instance.SecondaryWeapon)", span="46-46"];
m1_25 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.NotNull(instance.VerySecretWeaponAccessor)", span="48-48"];
m1_26 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Assert.IsType<Shuriken>(instance.VerySecretWeaponAccessor)", span="49-49"];
m1_27 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="InstanceReference.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="37-37"];
m1_38 [file="InstanceReference.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", span=""];
m1_39 [file="InstanceReference.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", span=""];
m3_9 [cluster="System.Console.ReadKey()", file="Program.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m3_0 [cluster="RemotingServer.Program.Main(string[])", file="Program.cs", label="Entry RemotingServer.Program.Main(string[])", span="13-13"];
m3_1 [cluster="RemotingServer.Program.Main(string[])", color=green, community=0, file="Program.cs", label="0: TcpServerChannel channel = new TcpServerChannel(33000)", span="15-15"];
m3_2 [cluster="RemotingServer.Program.Main(string[])", color=green, community=0, file="Program.cs", label="1: ChannelServices.RegisterChannel(channel, false)", span="16-16"];
m3_3 [cluster="RemotingServer.Program.Main(string[])", color=green, community=1, file="Program.cs", label="0: RemotingConfiguration.RegisterWellKnownServiceType(typeof(MyService),\r\n                    ''MyServiceUri'', WellKnownObjectMode.SingleCall)", span="17-18"];
m3_4 [cluster="RemotingServer.Program.Main(string[])", color=green, community=0, file="Program.cs", label="1: Console.ReadKey()", span="19-19"];
m3_5 [cluster="RemotingServer.Program.Main(string[])", file="Program.cs", label="Exit RemotingServer.Program.Main(string[])", span="13-13"];
m3_7 [cluster="Unk.RegisterChannel", file="Program.cs", label="Entry Unk.RegisterChannel", span=""];
m3_6 [cluster="TcpServerChannel.cstr", file="Program.cs", label="Entry TcpServerChannel.cstr", span=""];
m3_8 [cluster="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type, string, System.Runtime.Remoting.WellKnownObjectMode)", file="Program.cs", label="Entry System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type, string, System.Runtime.Remoting.WellKnownObjectMode)", span="0-0"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_14  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_15 -> m1_10  [color=blue, key=0, style=bold];
m1_28 -> m1_17  [color=darkorchid, key=3, label="method methodReturn bool Is", style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_28  [key=2, style=dotted];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_32 -> m1_35  [color=red, key=1, label=instance, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_29  [key=2, style=dotted];
m1_34 -> m1_35  [color=red, key=0, style=solid];
m1_34 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_36  [color=red, key=0, style=solid];
m1_35 -> m1_37  [color=red, key=2, style=dotted];
m1_36 -> m1_31  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_28  [key=2, style=dotted];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_20 -> m1_24  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_20 -> m1_25  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_20 -> m1_26  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_29  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_30  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_29  [key=2, style=dotted];
m1_25 -> m1_13  [color=darkorchid, key=3, label="method methodReturn T As", style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_18  [color=blue, key=0, style=bold];
m1_38 -> m1_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_38 -> m1_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m1_39 -> m1_19  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
m1_39 -> m1_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
m1_39 -> m1_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_6  [color=green, key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_7  [color=green, key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_8  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_9  [color=green, key=2, style=dotted];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
}
