digraph  {
m0_0 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object)", file="CircularDependenciesTests.cs", label="Entry Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object)", span="30-30"];
m0_1 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object)", file="CircularDependenciesTests.cs", label="Exit Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object)", span="30-30"];
m0_10 [cluster="Ninject.Parameters.WeakConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="CircularDependenciesTests.cs", label="Entry Ninject.Parameters.WeakConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="59-59"];
m0_11 [cluster="Ninject.Parameters.WeakConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="CircularDependenciesTests.cs", label="return string.Equals(this.Name, target.Name);", span="61-61"];
m0_12 [cluster="Ninject.Parameters.WeakConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="CircularDependenciesTests.cs", label="Exit Ninject.Parameters.WeakConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="59-59"];
m0_6 [cluster="System.WeakReference.WeakReference(object)", file="CircularDependenciesTests.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m0_13 [cluster="string.Equals(string, string)", file="CircularDependenciesTests.cs", label="Entry string.Equals(string, string)", span="0-0"];
m0_7 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Entry lambda expression", span="45-45"];
m0_8 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="this.weakReference.Target", span="45-45"];
m0_9 [cluster="lambda expression", file="CircularDependenciesTests.cs", label="Exit lambda expression", span="45-45"];
m0_2 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", file="CircularDependenciesTests.cs", label="Entry Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", span="41-41"];
m0_3 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", file="CircularDependenciesTests.cs", label="this.weakReference = new WeakReference(value)", span="44-44"];
m0_4 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", file="CircularDependenciesTests.cs", label="this.ValueCallback = (ctx, target) => this.weakReference.Target", span="45-45"];
m0_5 [cluster="Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", file="CircularDependenciesTests.cs", label="Exit Ninject.Parameters.WeakConstructorArgument.WeakConstructorArgument(string, object, bool)", span="41-41"];
m0_14 [file="CircularDependenciesTests.cs", label="Ninject.Parameters.WeakConstructorArgument", span=""];
m1_231 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="35-35"];
m1_80 [cluster="Ninject.Tests.Fakes.ShortSword.ShortSword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.ShortSword.ShortSword()", span="2-2"];
m1_207 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274"];
m1_208 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="276-276"];
m1_209 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", span="277-277"];
m1_210 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="278-279"];
m1_211 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="281-281"];
m1_212 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="282-282"];
m1_213 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<NinjaBarracks>().ToSelf()", span="283-283"];
m1_214 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="285-285"];
m1_215 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="286-286"];
m1_217 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="289-289"];
m1_216 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var ninja = this.kernel.Get<NinjaBarracks>()", span="287-287"];
m1_218 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="290-290"];
m1_219 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="ninja.Weapon.Should().BeOfType<Sword>()", span="291-291"];
m1_220 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOneOfMultipleServiceType()", span="274-274"];
m1_124 [cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="116-116"];
m1_136 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168"];
m1_137 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="170-170"];
m1_138 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()", span="171-171"];
m1_139 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()\r\n                .WhenInjectedExactlyInto(typeof(Samurai), typeof(Barracks))", span="172-173"];
m1_140 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="175-175"];
m1_141 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="176-176"];
m1_142 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<NinjaBarracks>().ToSelf()", span="177-177"];
m1_143 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="179-179"];
m1_144 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="180-180"];
m1_146 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="183-183"];
m1_145 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="var ninja = this.kernel.Get<NinjaBarracks>()", span="181-181"];
m1_147 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="barracks.Weapon.Should().BeOfType<Shuriken>()", span="184-184"];
m1_148 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="ninja.Weapon.Should().BeOfType<Sword>()", span="185-185"];
m1_149 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOneOfMultipleServiceType()", span="168-168"];
m1_300 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="117-117"];
m1_71 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89"];
m1_72 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="91-91"];
m1_73 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="92-92"];
m1_74 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", span="94-94"];
m1_77 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="97-97"];
m1_75 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).When(_ => true)", span="95-95"];
m1_78 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="98-98"];
m1_76 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", span="96-96"];
m1_79 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalBinding_AllBindingsWillResolve()", span="89-89"];
m1_293 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377"];
m1_294 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", span="379-379"];
m1_295 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="380-380"];
m1_296 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenTargetHas<WeakAttribute>()", span="381-381"];
m1_297 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", span="383-383"];
m1_298 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<ShortSword>()", span="384-384"];
m1_299 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenTargetHasDoesConsiderAttributeOnTarget()", span="377-377"];
m1_151 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189"];
m1_152 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="191-191"];
m1_153 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>))", span="192-192"];
m1_154 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="193-193"];
m1_155 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<ClosedGenericService>()", span="195-195"];
m1_156 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="197-197"];
m1_157 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="189-189"];
m1_126 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154"];
m1_127 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="156-156"];
m1_128 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(new[] { typeof(IGenericService<>) })", span="157-157"];
m1_129 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="158-158"];
m1_130 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", span="160-160"];
m1_131 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", span="161-161"];
m1_132 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="163-163"];
m1_133 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="164-164"];
m1_134 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="154-154"];
m1_232 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorNamed(string)", span="165-165"];
m1_111 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131"];
m1_112 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="133-133"];
m1_113 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<IWarrior>()", span="134-134"];
m1_114 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="136-136"];
m1_115 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="138-138"];
m1_116 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToBaseTypes()", span="131-131"];
m1_12 [cluster="Unk.Should", file="ConditionalBindingTests.cs", label="Entry Unk.Should", span=""];
m1_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto<TParent>()", span="46-46"];
m1_0 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m1_1 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="14-14"];
m1_2 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="15-15"];
m1_3 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="16-16"];
m1_4 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="17-17"];
m1_5 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="18-18"];
m1_6 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleSatisfiedConditional_ThenTheConditionalIsUsed()", span="12-12"];
m1_82 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="104-104"];
m1_197 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto<TParent>()", span="72-72"];
m1_8 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="45-45"];
m1_13 [cluster="Unk.>", file="ConditionalBindingTests.cs", label="Entry Unk.>", span=""];
m1_7 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="47-47"];
m1_88 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102"];
m1_89 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="104-104"];
m1_90 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var sword = new Sword()", span="105-105"];
m1_92 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword)", span="108-108"];
m1_96 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="112-112"];
m1_91 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="106-106"];
m1_93 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(sword)", span="109-109"];
m1_97 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(sword)", span="113-113"];
m1_94 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="110-110"];
m1_98 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().NotContain(shuriken)", span="114-114"];
m1_95 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", span="111-111"];
m1_99 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenAMixtureOfBindings_OnlyNonImplicitBindingsWillResolve()", span="102-102"];
m1_42 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m1_43 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="IWeapon weapon = this.kernel.Get<Sword>()", span="61-61"];
m1_44 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="62-62"];
m1_45 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>()", span="63-63"];
m1_46 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon = this.kernel.Get<Sword>()", span="64-64"];
m1_47 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="65-65"];
m1_48 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBindingIsMadeAfterImplicitBinding_ThenExplicitBindingWillResolve()", span="59-59"];
m1_125 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(System.Type)", span="54-54"];
m1_221 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295"];
m1_222 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="string Name = ''SomeName''", span="297-297"];
m1_223 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", span="298-298"];
m1_225 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorNamed(Name)", span="300-300"];
m1_224 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="299-299"];
m1_226 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>()", span="301-301"];
m1_227 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", span="303-303"];
m1_228 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Sword>()", span="305-305"];
m1_229 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="306-306"];
m1_230 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorNamedAppliesToGrandParentAndParent()", span="295-295"];
m1_253 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithMetadata(string, object)", span="144-144"];
m1_286 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366"];
m1_287 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", span="368-368"];
m1_288 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenMemberHas<StrongAttribute>()", span="369-369"];
m1_289 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>()", span="370-370"];
m1_290 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", span="372-372"];
m1_291 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<Sword>()", span="373-373"];
m1_292 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesConsiderAttributeOnMember()", span="366-366"];
m1_102 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118"];
m1_103 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shortSword = new ShortSword()", span="120-120"];
m1_104 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var shuriken = new Shuriken()", span="121-121"];
m1_105 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shortSword).BindingConfiguration.IsImplicit = true", span="123-123"];
m1_108 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shortSword)", span="126-126"];
m1_106 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().ToConstant(shuriken).BindingConfiguration.IsImplicit = true", span="124-124"];
m1_109 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="result.Should().Contain(shuriken)", span="127-127"];
m1_107 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="var result = this.kernel.GetAll<IWeapon>()", span="125-125"];
m1_110 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenOnlyImplicitBindings_AllBindingsWillResolve()", span="118-118"];
m1_301 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.ClosedGenericService.ClosedGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.ClosedGenericService.ClosedGenericService(Ninject.Tests.Fakes.IWarrior)", span="393-393"];
m1_302 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.ClosedGenericService.ClosedGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.ClosedGenericService.ClosedGenericService(Ninject.Tests.Fakes.IWarrior)", span="393-393"];
m1_101 [cluster="Unk.NotContain", file="ConditionalBindingTests.cs", label="Entry Unk.NotContain", span=""];
m1_285 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenMemberHas<TAttribute>()", span="108-108"];
m1_38 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m1_39 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", span="54-54"];
m1_40 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="55-55"];
m1_41 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenNoBinding_ThenASelfBindableTypeWillResolve()", span="52-52"];
m1_100 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m1_271 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="186-186"];
m1_262 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340"];
m1_263 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="342-342"];
m1_264 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="343-343"];
m1_265 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="345-345"];
m1_266 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenNoAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="346-346"];
m1_267 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", span="348-348"];
m1_268 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Dagger>()", span="350-350"];
m1_269 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="351-351"];
m1_270 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorMatchesAppliesToGrandParentAndParent()", span="340-340"];
m1_201 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263"];
m1_202 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="265-265"];
m1_203 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<Samurai>()", span="266-266"];
m1_204 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="268-268"];
m1_205 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="270-270"];
m1_206 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToServiceType()", span="263-263"];
m1_305 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>.GenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>.GenericService(Ninject.Tests.Fakes.IWarrior)", span="409-409"];
m1_306 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>.GenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="this.Warrior = warrior", span="411-411"];
m1_307 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>.GenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>.GenericService(Ninject.Tests.Fakes.IWarrior)", span="409-409"];
m1_81 [cluster="Ninject.Tests.Fakes.Shuriken.Shuriken()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Fakes.Shuriken.Shuriken()", span="4-4"];
m1_14 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m1_15 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="24-24"];
m1_16 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="25-25"];
m1_17 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="26-26"];
m1_18 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="27-27"];
m1_19 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="28-28"];
m1_20 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndSingleUnsatisfiedConditional_ThenTheDefaultIsUsed()", span="22-22"];
m1_150 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(params System.Type[])", span="91-91"];
m1_11 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="44-44"];
m1_191 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252"];
m1_192 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="254-254"];
m1_193 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedExactlyInto<IWarrior>()", span="255-255"];
m1_194 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Action getWarrior = () => this.kernel.Get<IWarrior>()", span="257-257"];
m1_195 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", color=red, community=0, file="ConditionalBindingTests.cs", label="0: getWarrior.ShouldThrow<ActivationException>()", span="259-259"];
m1_196 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesNotToBaseTypes()", span="252-252"];
m1_244 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326"];
m1_245 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().WithMetadata(''Id'', 1)", span="328-328"];
m1_246 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="329-329"];
m1_247 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 1)", span="330-330"];
m1_248 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>().WhenAnyAncestorMatches(ctx => ctx.Binding.Metadata.Get(''Id'', -1) == 2)", span="331-331"];
m1_249 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", span="333-333"];
m1_250 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Sword>()", span="335-335"];
m1_251 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Sword>()", span="336-336"];
m1_252 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenAnyAncestorMatchesAppliesToGrandParentAndParent()", span="326-326"];
m1_303 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.ClosedAnotherGenericService.ClosedAnotherGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.ClosedAnotherGenericService.ClosedAnotherGenericService(Ninject.Tests.Fakes.IWarrior)", span="401-401"];
m1_304 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.ClosedAnotherGenericService.ClosedAnotherGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.ClosedAnotherGenericService.ClosedAnotherGenericService(Ninject.Tests.Fakes.IWarrior)", span="401-401"];
m1_275 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="346-346"];
m1_35 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="48-48"];
m1_36 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="this.kernel.Get<Samurai>()", span="48-48"];
m1_37 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="48-48"];
m1_56 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="71-71"];
m1_59 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="72-72"];
m1_57 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="71-71"];
m1_58 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="71-71"];
m1_60 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="72-72"];
m1_61 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="72-72"];
m1_68 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="81-81"];
m1_69 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="81-81"];
m1_70 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="81-81"];
m1_85 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="95-95"];
m1_86 [cluster="lambda expression", file="ConditionalBindingTests.cs", label=true, span="95-95"];
m1_87 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="95-95"];
m1_198 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="257-257"];
m1_199 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="this.kernel.Get<IWarrior>()", span="257-257"];
m1_200 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="257-257"];
m1_255 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="330-330"];
m1_259 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="331-331"];
m1_256 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="330-330"];
m1_257 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="330-330"];
m1_260 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="331-331"];
m1_261 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="331-331"];
m1_272 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Entry lambda expression", span="345-345"];
m1_273 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 1", span="345-345"];
m1_274 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="345-345"];
m1_276 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="ctx.Binding.Metadata.Get(''Id'', -1) == 2", span="346-346"];
m1_277 [cluster="lambda expression", file="ConditionalBindingTests.cs", label="Exit lambda expression", span="346-346"];
m1_308 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>.AnotherGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>.AnotherGenericService(Ninject.Tests.Fakes.IWarrior)", span="419-419"];
m1_309 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>.AnotherGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="this.Warrior = warrior", span="421-421"];
m1_310 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>.AnotherGenericService(Ninject.Tests.Fakes.IWarrior)", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>.AnotherGenericService(Ninject.Tests.Fakes.IWarrior)", span="419-419"];
m1_167 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215"];
m1_168 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="218-218"];
m1_169 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto(new[] { typeof(Samurai) })", span="219-219"];
m1_170 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="220-220"];
m1_171 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="221-221"];
m1_172 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Shuriken>()", span="222-222"];
m1_173 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleDoesNotApplyForConcreteTypes()", span="215-215"];
m1_182 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238"];
m1_183 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="240-240"];
m1_184 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="241-241"];
m1_185 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="242-242"];
m1_186 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", span="244-244"];
m1_187 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<AnotherGenericService<int>>()", span="245-245"];
m1_188 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="247-247"];
m1_189 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="248-248"];
m1_190 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoOneOfMultipleTypesAppliesToOpenGenerics()", span="238-238"];
m1_10 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="38-38"];
m1_28 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m1_29 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="44-44"];
m1_30 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenInjectedInto<Samurai>()", span="45-45"];
m1_31 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Samurai>()", span="46-46"];
m1_32 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="47-47"];
m1_33 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<Samurai>())", span="48-48"];
m1_34 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnManySatisfiedConditionals_ThenAnExceptionIsThrown()", span="42-42"];
m1_135 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedInto(params System.Type[])", span="63-63"];
m1_254 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenAnyAncestorMatches(System.Predicate<Ninject.Activation.IContext>)", span="179-179"];
m1_62 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79"];
m1_63 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", span="81-81"];
m1_64 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>()", span="82-82"];
m1_65 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", span="84-84"];
m1_66 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<Sword>()", span="85-85"];
m1_67 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAConditionalImplicitBinding_ThenConditionalBindingWillResolve()", span="79-79"];
m1_258 [cluster="Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", file="ConditionalBindingTests.cs", label="Entry Ninject.Planning.Bindings.IBindingMetadata.Get<T>(string, T)", span="56-56"];
m1_21 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m1_22 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="34-34"];
m1_23 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>().WhenInjectedInto<Ninja>()", span="35-35"];
m1_24 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Samurai>().ToSelf()", span="36-36"];
m1_25 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="var warrior = this.kernel.Get<Samurai>()", span="37-37"];
m1_26 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="warrior.Weapon.Should().BeOfType<Sword>()", span="38-38"];
m1_27 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenADefaultAndAnUnSatisfiedConditional_ThenTheDefaultIsUsed()", span="32-32"];
m1_49 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m1_50 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().ToSelf().When(ctx => true).BindingConfiguration.IsImplicit = true", span="71-71"];
m1_51 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Sword>().To<ShortSword>().When(ctx => true)", span="72-72"];
m1_52 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="var weapon = this.kernel.Get<Sword>()", span="74-74"];
m1_53 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="weapon.Should().BeOfType<ShortSword>()", span="75-75"];
m1_54 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.GivenBothImplicitAndExplicitConditionalBindings_ThenExplicitBindingWillResolve()", span="69-69"];
m1_158 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201"];
m1_159 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="203-203"];
m1_160 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(GenericService<>), typeof(AnotherGenericService<>))", span="204-204"];
m1_161 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="205-205"];
m1_162 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<ClosedGenericService>()", span="207-207"];
m1_163 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="var anotherService = this.kernel.Get<ClosedAnotherGenericService>()", span="208-208"];
m1_164 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="210-210"];
m1_165 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="anotherService.Warrior.Should().BeOfType<Samurai>()", span="211-211"];
m1_166 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoOneOfMultipleTypesAppliesToOpenGenericsWhenClosedGenericIsRequested()", span="201-201"];
m1_83 [cluster="Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.GetAll<T>(params Ninject.Parameters.IParameter[])", span="158-158"];
m1_311 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.Knight.Knight(Ninject.Tests.Fakes.IWeapon)", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.Knight.Knight(Ninject.Tests.Fakes.IWeapon)", span="432-432"];
m1_312 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.Knight.Knight(Ninject.Tests.Fakes.IWeapon)", file="ConditionalBindingTests.cs", label="this.Weapon = weapon", span="434-434"];
m1_313 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.Knight.Knight(Ninject.Tests.Fakes.IWeapon)", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.Knight.Knight(Ninject.Tests.Fakes.IWeapon)", span="432-432"];
m1_84 [cluster="Unk.Contain", file="ConditionalBindingTests.cs", label="Entry Unk.Contain", span=""];
m1_278 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355"];
m1_279 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Knight>().ToSelf()", span="357-357"];
m1_280 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="358-358"];
m1_281 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<ShortSword>().WhenMemberHas<WeakAttribute>()", span="359-359"];
m1_282 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="var knight = this.kernel.Get<Knight>()", span="361-361"];
m1_283 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="knight.Weapon.Should().BeOfType<Sword>()", span="362-362"];
m1_284 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenMemberHasDoesNotConsiderAttributeOnTarget()", span="355-355"];
m1_55 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="38-38"];
m1_117 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142"];
m1_118 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="144-144"];
m1_119 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedInto(typeof(IGenericService<>))", span="145-145"];
m1_120 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="146-146"];
m1_121 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", span="148-148"];
m1_122 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="150-150"];
m1_123 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedIntoAppliesToOpenGenerics()", span="142-142"];
m1_174 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226"];
m1_175 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind(typeof(GenericService<>)).ToSelf()", span="228-228"];
m1_176 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().WhenInjectedExactlyInto(typeof(GenericService<>))", span="229-229"];
m1_177 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="230-230"];
m1_178 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="var service = this.kernel.Get<GenericService<int>>()", span="232-232"];
m1_179 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="service.Warrior.Should().BeOfType<Samurai>()", span="234-234"];
m1_180 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenInjectedExactlyIntoAppliesToOpenGenerics()", span="226-226"];
m1_233 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Entry Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310"];
m1_234 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="string Name = ''SomeName''", span="312-312"];
m1_235 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<Barracks>().ToSelf().Named(Name)", span="313-313"];
m1_237 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>().WhenNoAncestorNamed(Name)", span="316-316"];
m1_236 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="314-314"];
m1_238 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="this.kernel.Bind<IWeapon>().To<Dagger>()", span="317-317"];
m1_239 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="var barack = this.kernel.Get<Barracks>()", span="319-319"];
m1_240 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Weapon.Should().BeOfType<Dagger>()", span="321-321"];
m1_241 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="barack.Warrior.Weapon.Should().BeOfType<Dagger>()", span="322-322"];
m1_242 [cluster="Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", file="ConditionalBindingTests.cs", label="Exit Ninject.Tests.Integration.ConditionalBindingTests.WhenNoAncestorNamedAppliesToGrandParentAndParent()", span="310-310"];
m1_243 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenNoAncestorNamed(string)", span="172-172"];
m1_181 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", file="ConditionalBindingTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenInjectedExactlyInto(System.Type)", span="81-81"];
m1_314 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests", span=""];
m1_315 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>", span=""];
m1_316 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>", span=""];
m1_317 [file="ConditionalBindingTests.cs", label="Ninject.Tests.Integration.ConditionalBindingTests.Knight", span=""];
m2_5 [cluster="lambda expression", file="ConstructorArgumentTests.cs", label="Entry lambda expression", span="29-29"];
m2_6 [cluster="lambda expression", file="ConstructorArgumentTests.cs", label="this.weakReference.Target", span="29-29"];
m2_7 [cluster="lambda expression", file="ConstructorArgumentTests.cs", label="Exit lambda expression", span="29-29"];
m2_4 [cluster="System.WeakReference.WeakReference(object)", file="ConstructorArgumentTests.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m2_0 [cluster="Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", file="ConstructorArgumentTests.cs", label="Entry Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", span="25-25"];
m2_1 [cluster="Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", file="ConstructorArgumentTests.cs", label="this.weakReference = new WeakReference(value)", span="28-28"];
m2_2 [cluster="Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", file="ConstructorArgumentTests.cs", label="this.ValueCallback = (ctx, target) => this.weakReference.Target", span="29-29"];
m2_3 [cluster="Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", file="ConstructorArgumentTests.cs", label="Exit Ninject.Parameters.WeakPropertyValue.WeakPropertyValue(string, object)", span="25-25"];
m2_8 [file="ConstructorArgumentTests.cs", label="Ninject.Parameters.WeakPropertyValue", span=""];
m3_4 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21"];
m3_5 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="this.kernel.Dispose()", span="23-23"];
m3_6 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.Dispose()", span="21-21"];
m3_177 [cluster="Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingNamedSyntax<T>.Named(string)", span="35-35"];
m3_140 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="158-158"];
m3_145 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().BeSameAs(barracks2.Warrior)", span="166-166"];
m3_142 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(ninja))", span="161-161"];
m3_143 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var barracks1 = this.kernel.Get<Barracks>()", span="163-163"];
m3_144 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var barracks2 = this.kernel.Get<Barracks>()", span="164-164"];
m3_141 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var ninja = new Ninja(new Sword())", span="160-160"];
m3_146 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstantsCanBePassedToToConstructor()", span="158-158"];
m3_204 [cluster="Ninject.Syntax.BindingRoot.Bind(params System.Type[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind(params System.Type[])", span="116-116"];
m3_113 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior)", span="8-8"];
m3_33 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51"];
m3_37 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="57-57"];
m3_38 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="58-58"];
m3_39 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="59-59"];
m3_34 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="53-53"];
m3_35 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="54-54"];
m3_36 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="56-56"];
m3_40 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.FirstAvailableWithBindingAvailableIsUsed()", span="51-51"];
m3_163 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="186-186"];
m3_169 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="activationCount.Should().Be(0)", span="194-194"];
m3_175 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="activationCount.Should().Be(1)", span="201-201"];
m3_171 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="197-197"];
m3_172 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="198-198"];
m3_173 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Ninja>()", span="199-199"];
m3_174 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="200-200"];
m3_165 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Ninja>().ToSelf().Named(''1'').OnActivation(inst => activationCount++)", span="189-189"];
m3_166 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(ctorArg.Context.Kernel.Get<Ninja>(''1''), ctorArg.Inject<IWeapon>()))", span="190-190"];
m3_167 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="191-191"];
m3_168 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="192-192"];
m3_170 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="195-195"];
m3_164 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="int activationCount = 0", span="188-188"];
m3_176 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenLazyValuesArePassedToConstructorSelectionTheyAreEvaluatedAtResolve()", span="186-186"];
m3_206 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="232-232"];
m3_209 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="instance.Sword.Should().NotBeNull()", span="238-238"];
m3_207 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<ClassWithObsoleteContructor>().ToSelf()", span="234-234"];
m3_208 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="var instance = this.kernel.Get<ClassWithObsoleteContructor>()", span="236-236"];
m3_210 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DoNotChooseObsoleteConstructors()", span="232-232"];
m3_130 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147"];
m3_134 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="154-154"];
m3_131 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(new Ninja(new Sword())))", span="149-149"];
m3_132 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="var barracks1 = this.kernel.Get<Barracks>()", span="151-151"];
m3_133 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="var barracks2 = this.kernel.Get<Barracks>()", span="152-152"];
m3_135 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultValuesAreEvaluatedForEachRequest()", span="147-147"];
m3_100 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119"];
m3_105 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="126-126"];
m3_106 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="127-127"];
m3_107 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Samurai>()", span="128-128"];
m3_108 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="129-129"];
m3_101 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(ctorArg.Inject<IWarrior>()))", span="121-121"];
m3_102 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="122-122"];
m3_103 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="123-123"];
m3_104 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="125-125"];
m3_109 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclaredWithInjectedArgument()", span="119-119"];
m3_7 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="51-51"];
m3_215 [cluster="Unk.NotBe", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBe", span=""];
m3_8 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27"];
m3_11 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="32-32"];
m3_12 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="33-33"];
m3_13 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="34-34"];
m3_9 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="29-29"];
m3_10 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="31-31"];
m3_14 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.DefaultCtorIsUsedWhenNoBindingAreAvailable()", span="27-27"];
m3_18 [cluster="Unk.Should", file="ConstructorSelectionTests.cs", label="Entry Unk.Should", span=""];
m3_41 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="45-45"];
m3_75 [cluster="Unk.>", file="ConstructorSelectionTests.cs", label="Entry Unk.>", span=""];
m3_42 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63"];
m3_47 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="70-70"];
m3_48 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="71-71"];
m3_49 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="72-72"];
m3_43 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="65-65"];
m3_44 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="66-66"];
m3_45 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>().When(_ => false)", span="67-67"];
m3_46 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="69-69"];
m3_50 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.UnsatisfiedConditionalShouldBeIngored()", span="63-63"];
m3_20 [cluster="Unk.BeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.BeNull", span=""];
m3_136 [cluster="Unk.NotBeSameAs", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBeSameAs", span=""];
m3_179 [cluster="Unk.Be", file="ConstructorSelectionTests.cs", label="Entry Unk.Be", span=""];
m3_31 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m3_15 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="47-47"];
m3_151 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="169-169"];
m3_152 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="return new Ninja(new Sword());", span="171-171"];
m3_153 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreateNinja()", span="169-169"];
m3_154 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="175-175"];
m3_158 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="barracks1.Warrior.Should().NotBeSameAs(barracks2.Warrior)", span="182-182"];
m3_155 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(_ => new Barracks(CreateNinja()))", span="177-177"];
m3_156 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var barracks1 = this.kernel.Get<Barracks>()", span="179-179"];
m3_157 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="var barracks2 = this.kernel.Get<Barracks>()", span="180-180"];
m3_159 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ResultsFromNonGenericMethodCallsCanBePassedToToConstructor()", span="175-175"];
m3_99 [cluster="Ninject.Tests.Fakes.Barracks.Barracks()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks()", span="4-4"];
m3_30 [cluster="Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, object)", span="38-38"];
m3_55 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76"];
m3_60 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="83-83"];
m3_61 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="84-84"];
m3_62 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Weapon.Should().NotBeNull()", span="85-85"];
m3_63 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="86-86"];
m3_56 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="78-78"];
m3_57 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="79-79"];
m3_58 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="80-80"];
m3_59 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="82-82"];
m3_64 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorWithMostDependenciesIsUsedWhenBindingsAreAvailable()", span="76-76"];
m3_195 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="215-215"];
m3_197 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="instance.Sword.Should().BeNull()", span="219-219"];
m3_196 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="var instance = this.kernel.Get<ClassWithSelfBindableType>()", span="217-217"];
m3_198 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasSelfBindableTypeItDoesNotCountAsServedParameter()", span="215-215"];
m3_32 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m3_199 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="223-223"];
m3_202 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="instance.Generic.Should().NotBeNull()", span="228-228"];
m3_200 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind(typeof(IGeneric<>)).To(typeof(GenericService<>))", span="225-225"];
m3_201 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="var instance = this.kernel.Get<ClassWithGeneric>()", span="226-226"];
m3_203 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAnOpenGenericTypeItCountsAsServedParameterIfBindingExists()", span="223-223"];
m3_114 [cluster="Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IConstructorArgumentSyntax.Inject<T>()", span="41-41"];
m3_115 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133"];
m3_120 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="140-140"];
m3_121 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="141-141"];
m3_122 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeOfType<Ninja>()", span="142-142"];
m3_123 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().NotBeNull()", span="143-143"];
m3_116 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(ctorArg => new Barracks(new Ninja(new Sword()), ctorArg.Inject<IWeapon>()))", span="135-135"];
m3_117 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="136-136"];
m3_118 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="137-137"];
m3_119 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="139-139"];
m3_124 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenDefaultValuesArePassedToConstructorSelectionTheyAreUsed()", span="133-133"];
m3_95 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="113-113"];
m3_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="44-44"];
m3_17 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="44-44"];
m3_19 [cluster="Unk.NotBeNull", file="ConstructorSelectionTests.cs", label="Entry Unk.NotBeNull", span=""];
m3_76 [cluster="Ninject.Syntax.BindingRoot.Unbind<T>()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.BindingRoot.Unbind<T>()", span="139-139"];
m3_178 [cluster="Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingOnSyntax<T>.OnActivation(System.Action<T>)", span="38-38"];
m3_147 [cluster="Unk.BeSameAs", file="ConstructorSelectionTests.cs", label="Entry Unk.BeSameAs", span=""];
m3_192 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="209-209"];
m3_78 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="this.kernel.Get<NinjaBarracks>()", span="94-94"];
m3_81 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="this.kernel.Get<NinjaBarracks>()", span="97-97"];
m3_84 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="this.kernel.Get<NinjaBarracks>()", span="101-101"];
m3_193 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="this.kernel.Get<ClassWithTwoInjectAttributes>()", span="209-209"];
m3_77 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="94-94"];
m3_80 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="97-97"];
m3_83 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="101-101"];
m3_52 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="67-67"];
m3_79 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="94-94"];
m3_82 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="97-97"];
m3_85 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="101-101"];
m3_96 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="108-108"];
m3_110 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="121-121"];
m3_125 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="135-135"];
m3_137 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="149-149"];
m3_148 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="161-161"];
m3_160 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="177-177"];
m3_180 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="189-189"];
m3_181 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="activationCount++", span="189-189"];
m3_183 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Entry lambda expression", span="190-190"];
m3_194 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="209-209"];
m3_54 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="67-67"];
m3_53 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label=false, span="67-67"];
m3_98 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="108-108"];
m3_97 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks()", span="108-108"];
m3_112 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="121-121"];
m3_111 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(ctorArg.Inject<IWarrior>())", span="121-121"];
m3_127 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="135-135"];
m3_126 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(new Ninja(new Sword()), ctorArg.Inject<IWeapon>())", span="135-135"];
m3_139 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="149-149"];
m3_138 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(new Ninja(new Sword()))", span="149-149"];
m3_149 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(ninja)", span="161-161"];
m3_150 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="161-161"];
m3_162 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="177-177"];
m3_161 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(CreateNinja())", span="177-177"];
m3_182 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="189-189"];
m3_184 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="new Barracks(ctorArg.Context.Kernel.Get<Ninja>(''1''), ctorArg.Inject<IWeapon>())", span="190-190"];
m3_185 [cluster="lambda expression", file="ConstructorSelectionTests.cs", label="Exit lambda expression", span="190-190"];
m3_0 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16"];
m3_1 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="this.kernel = new StandardKernel()", span="18-18"];
m3_2 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.ConstructorSelectionTests()", span="16-16"];
m3_129 [cluster="Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Ninja.Ninja(Ninject.Tests.Fakes.IWeapon)", span="6-6"];
m3_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="38-38"];
m3_128 [cluster="Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Fakes.Barracks.Barracks(Ninject.Tests.Fakes.IWarrior, Ninject.Tests.Fakes.IWeapon)", span="18-18"];
m3_205 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="53-53"];
m3_65 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90"];
m3_67 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<NinjaBarracks>())", span="94-94"];
m3_69 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<NinjaBarracks>())", span="97-97"];
m3_72 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Assert.Throws<ActivationException>(() => this.kernel.Get<NinjaBarracks>())", span="101-101"];
m3_66 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<NinjaBarracks>().ToSelf()", span="92-92"];
m3_68 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="96-96"];
m3_70 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Unbind<IWeapon>()", span="98-98"];
m3_71 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="100-100"];
m3_73 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Unbind<IWarrior>()", span="102-102"];
m3_74 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CreationWillFailIfAllDependenciesAreMissingAndInjectAttributeIsApplied()", span="90-90"];
m3_51 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.When(System.Func<Ninject.Activation.IRequest, bool>)", span="38-38"];
m3_186 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", file="ConstructorSelectionTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(string, params Ninject.Parameters.IParameter[])", span="57-57"];
m3_211 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="242-242"];
m3_213 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="instance.X.Should().NotBe(0)", span="246-246"];
m3_212 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="var instance = this.kernel.Get<ClassWithDefaultValue>()", span="244-244"];
m3_214 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenConstructorHasAValueWithDefaultValueItCountsAsServedParameter()", span="242-242"];
m3_86 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106"];
m3_91 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="113-113"];
m3_92 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().BeNull()", span="114-114"];
m3_93 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="115-115"];
m3_87 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToConstructor(_ => new Barracks())", span="108-108"];
m3_88 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWeapon>().To<Sword>()", span="109-109"];
m3_89 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<IWarrior>().To<Samurai>()", span="110-110"];
m3_90 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>()", span="112-112"];
m3_94 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.SelectedCtorIsUsedIfDeclared()", span="106-106"];
m3_187 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="205-205"];
m3_190 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", color=green, community=0, file="ConstructorSelectionTests.cs", label="0: getClassWithTwoInjectAttributes.Should().Throw<ActivationException>()", span="211-211"];
m3_189 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="Action getClassWithTwoInjectAttributes = () => this.kernel.Get<ClassWithTwoInjectAttributes>()", span="209-209"];
m3_188 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<ClassWithTwoInjectAttributes>().ToSelf()", span="207-207"];
m3_191 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.WhenClassHasTwoConstructorsWithInjectAttributeThenAnActivationExceptionIsThrown()", span="205-205"];
m3_21 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="Entry Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38"];
m3_25 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Should().NotBeNull()", span="44-44"];
m3_26 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Should().NotBeNull()", span="45-45"];
m3_27 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Warrior.Weapon.Should().NotBeNull()", span="46-46"];
m3_28 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="barracks.Weapon.Should().BeNull()", span="47-47"];
m3_22 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="this.kernel.Bind<Barracks>().ToSelf()", span="40-40"];
m3_24 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="var barracks = this.kernel.Get<Barracks>(constructorArgument)", span="42-42"];
m3_23 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="var constructorArgument = new ConstructorArgument(''warrior'', new Samurai(new Sword()))", span="41-41"];
m3_29 [cluster="Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", file="ConstructorSelectionTests.cs", label="Exit Ninject.Tests.Integration.ConstructorSelectionTests.CtorIsUsedWhenParameterIsSupplied()", span="38-38"];
m3_240 [file="ConstructorSelectionTests.cs", label="Ninject.Tests.Integration.ConstructorSelectionTests", span=""];
m3_242 [file="ConstructorSelectionTests.cs", label=activationCount, span=""];
m3_241 [file="ConstructorSelectionTests.cs", label=ninja, span=""];
m6_3 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", span="12-12"];
m6_4 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.Fakes.TestModule.TestModule()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.Fakes.TestModule.TestModule()", span="4-4"];
m6_5 [cluster="Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.IKernel.Load(params Ninject.Modules.INinjectModule[])", span="50-50"];
m6_15 [cluster="Unk.Load", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Load", span=""];
m6_16 [cluster="Unk.Once", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Once", span=""];
m6_17 [cluster="Unk.Verify", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Verify", span=""];
m6_18 [cluster="Ninject.IKernel.GetModules()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.IKernel.GetModules()", span="53-53"];
m6_38 [cluster="Unk.OnUnload", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.OnUnload", span=""];
m6_107 [cluster="System.Text.StringBuilder.Append(string)", file="WhenLoadIsCalledWithModule.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_10 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module)", span="24-24"];
m6_29 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", color=green, community=0, file="WhenLoadIsCalledWithModule.cs", label="0: this.Kernel.Unload(module.Name)", span="37-37"];
m6_30 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock.Verify(x => x.OnUnload(this.Kernel), Times.Once())", span="39-39"];
m6_34 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="52-52"];
m6_49 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", span="54-54"];
m6_50 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="var module = this.CreateModule(string.Empty)", span="56-56"];
m6_51 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Action moduleLoadingAction = () => this.Kernel.Load(module)", span="58-58"];
m6_52 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", color=red, community=0, file="WhenLoadIsCalledWithModule.cs", label="0: moduleLoadingAction.ShouldThrow<NotSupportedException>()", span="60-60"];
m6_53 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithEmptyNameIsNotSupported()", span="54-54"];
m6_37 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="39-39"];
m6_7 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", span="19-19"];
m6_8 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="var moduleMock = this.CreateModuleMock(''SomeName'')", span="21-21"];
m6_9 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="var module = moduleMock.Object", span="22-22"];
m6_6 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.OtherFakes.TestModule.TestModule()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.OtherFakes.TestModule.TestModule()", span="4-4"];
m6_19 [cluster="Ninject.Web.Mvc.IControllerNamer.NormalizeControllerName(string)", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Web.Mvc.IControllerNamer.NormalizeControllerName(string)", span="7-7"];
m6_20 [cluster="Ninject.Web.Mvc.ControllerRegistry.GetController(RequestContext, string)", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Web.Mvc.ControllerRegistry.GetController(RequestContext, string)", span="37-37"];
m6_24 [cluster="Unk.OnLoad", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.OnLoad", span=""];
m6_45 [cluster="Unk.>", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.>", span=""];
m6_96 [cluster="System.Text.StringBuilder.StringBuilder()", file="WhenLoadIsCalledWithModule.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_68 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", span="77-77"];
m6_69 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="string ModuleName = ''SomeModuleName''", span="79-79"];
m6_70 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="var module1 = this.CreateModule(ModuleName)", span="80-80"];
m6_71 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="var module2 = this.CreateModule(ModuleName)", span="81-81"];
m6_72 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module1)", span="83-83"];
m6_73 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Unload(module1.Name)", span="84-84"];
m6_74 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module2)", span="85-85"];
m6_75 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.GetModules().Should().BeEquivalentTo(module2)", span="87-87"];
m6_76 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleWithSameNameCanBeLoadedAfterTheFirstIsUnloaded()", span="77-77"];
m6_100 [cluster="Unk.Be", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Be", span=""];
m6_25 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", span="31-31"];
m6_26 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", file="WhenLoadIsCalledWithModule.cs", label="var moduleMock = this.CreateModuleMock(''SomeName'')", span="33-33"];
m6_27 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", file="WhenLoadIsCalledWithModule.cs", label="var module = moduleMock.Object", span="34-34"];
m6_28 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.OnUnloadTheModuleIsUnloadedAndRemovedFormTheKernel()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module)", span="36-36"];
m6_31 [cluster="System.Reflection.Assembly.GetExportedTypes()", file="WhenLoadIsCalledWithModule.cs", label="Entry System.Reflection.Assembly.GetExportedTypes()", span="0-0"];
m6_32 [cluster="Unk.Where", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Where", span=""];
m6_99 [cluster="System.Text.StringBuilder.ToString()", file="WhenLoadIsCalledWithModule.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_11 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock.Verify(x => x.OnLoad(this.Kernel), Times.Once())", span="26-26"];
m6_21 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="26-26"];
m6_22 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="x.OnLoad(this.Kernel)", span="26-26"];
m6_23 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="26-26"];
m6_0 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", span="12-12"];
m6_1 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(new TestModule())", span="14-14"];
m6_2 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.IdenticalNamedModulesFromDifferenNamespacesCanBeLoadedTogether()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(new OtherFakes.TestModule())", span="15-15"];
m6_44 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModule(string)", span="34-34"];
m6_97 [cluster="Unk.Setup", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Setup", span=""];
m6_77 [cluster="Ninject.IKernel.Unload(string)", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.IKernel.Unload(string)", span="84-84"];
m6_12 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.GetModules().Should().BeEquivalentTo(module)", span="27-27"];
m6_35 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="new ControllerDefinition { Name = Namer.GetNameForController(type), Type = type }", span="52-52"];
m6_36 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="52-52"];
m6_47 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module)", span="48-48"];
m6_46 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="48-48"];
m6_48 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="48-48"];
m6_55 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module)", span="58-58"];
m6_54 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="58-58"];
m6_56 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="58-58"];
m6_66 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module2)", span="71-71"];
m6_65 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="71-71"];
m6_67 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="71-71"];
m6_82 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="93-93"];
m6_83 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Unload(''NotLoadedModule'')", span="93-93"];
m6_84 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="93-93"];
m6_105 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="orderStringBuilder.Append(''LoadModule1 '')", span="105-105"];
m6_112 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="orderStringBuilder.Append(''LoadModule2 '')", span="106-106"];
m6_119 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="orderStringBuilder.Append(''VerifyModule '')", span="107-107"];
m6_125 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="orderStringBuilder.Append(''VerifyModule '')", span="108-108"];
m6_101 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="105-105"];
m6_104 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="105-105"];
m6_108 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="106-106"];
m6_111 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="106-106"];
m6_114 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="107-107"];
m6_118 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="107-107"];
m6_121 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="108-108"];
m6_124 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Entry lambda expression", span="108-108"];
m6_102 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="m.OnLoad(this.Kernel)", span="105-105"];
m6_103 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="105-105"];
m6_106 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="105-105"];
m6_109 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="m.OnLoad(this.Kernel)", span="106-106"];
m6_110 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="106-106"];
m6_113 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="106-106"];
m6_115 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="m.OnVerifyRequiredModules()", span="107-107"];
m6_116 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="107-107"];
m6_120 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="107-107"];
m6_122 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="m.OnVerifyRequiredModules()", span="108-108"];
m6_123 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="108-108"];
m6_126 [cluster="lambda expression", file="WhenLoadIsCalledWithModule.cs", label="Exit lambda expression", span="108-108"];
m6_13 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.MockModulePassedToLoadIsLoadedAndCallsOnLoad()", span="19-19"];
m6_14 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="26-26"];
m6_33 [cluster="Unk.Unload", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Unload", span=""];
m6_39 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Ninject.Web.Mvc.ControllerRegistry", span=""];
m6_40 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="var module = this.CreateModule(null)", span="46-46"];
m6_41 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Action moduleLoadingAction = () => this.Kernel.Load(module)", span="48-48"];
m6_42 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", color=red, community=0, file="WhenLoadIsCalledWithModule.cs", label="0: moduleLoadingAction.ShouldThrow<NotSupportedException>()", span="50-50"];
m6_43 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModuleInstanceWithNullNameIsNotSupported()", span="44-44"];
m6_78 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", span="91-91"];
m6_79 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", file="WhenLoadIsCalledWithModule.cs", label="Action moduleUnloadingAction = () => this.Kernel.Unload(''NotLoadedModule'')", span="93-93"];
m6_80 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", color=red, community=0, file="WhenLoadIsCalledWithModule.cs", label="0: moduleUnloadingAction.ShouldThrow<NotSupportedException>()", span="95-95"];
m6_81 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.UnloadNotLoadedModuleFails()", span="91-91"];
m6_85 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", span="99-99"];
m6_86 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="var moduleMock1 = this.CreateModuleMock(''SomeName1'')", span="101-101"];
m6_87 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="var moduleMock2 = this.CreateModuleMock(''SomeName2'')", span="102-102"];
m6_89 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock1.Setup(m => m.OnLoad(this.Kernel)).Callback(() => orderStringBuilder.Append(''LoadModule1 ''))", span="105-105"];
m6_91 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock1.Setup(m => m.OnVerifyRequiredModules()).Callback(() => orderStringBuilder.Append(''VerifyModule ''))", span="107-107"];
m6_93 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(moduleMock1.Object, moduleMock2.Object)", span="110-110"];
m6_88 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="var orderStringBuilder = new StringBuilder()", span="103-103"];
m6_90 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock2.Setup(m => m.OnLoad(this.Kernel)).Callback(() => orderStringBuilder.Append(''LoadModule2 ''))", span="106-106"];
m6_92 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="moduleMock2.Setup(m => m.OnVerifyRequiredModules()).Callback(() => orderStringBuilder.Append(''VerifyModule ''))", span="108-108"];
m6_94 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="orderStringBuilder.ToString().Should().Be(''LoadModule1 LoadModule2 VerifyModule VerifyModule '')", span="112-112"];
m6_95 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.ModulesAreVerifiedAfterAllModulesAreLoaded()", span="99-99"];
m6_57 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", span="64-64"];
m6_58 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="string ModuleName = ''SomeModuleName''", span="66-66"];
m6_59 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="var module1 = this.CreateModule(ModuleName)", span="67-67"];
m6_60 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="var module2 = this.CreateModule(ModuleName)", span="68-68"];
m6_61 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="this.Kernel.Load(module1)", span="70-70"];
m6_62 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Action moduleLoadingAction = () => this.Kernel.Load(module2)", span="71-71"];
m6_63 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", color=red, community=0, file="WhenLoadIsCalledWithModule.cs", label="0: moduleLoadingAction.ShouldThrow<NotSupportedException>()", span="73-73"];
m6_64 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", file="WhenLoadIsCalledWithModule.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule.TwoModulesWithSameNamesAreNotSupported()", span="64-64"];
m6_98 [cluster="Unk.Callback", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.Callback", span=""];
m6_117 [cluster="Unk.OnVerifyRequiredModules", file="WhenLoadIsCalledWithModule.cs", label="Entry Unk.OnVerifyRequiredModules", span=""];
m6_127 [file="WhenLoadIsCalledWithModule.cs", label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", span=""];
m6_128 [file="WhenLoadIsCalledWithModule.cs", label=module, span=""];
m6_129 [file="WhenLoadIsCalledWithModule.cs", label=module, span=""];
m6_130 [file="WhenLoadIsCalledWithModule.cs", label=module2, span=""];
m6_131 [file="WhenLoadIsCalledWithModule.cs", label=orderStringBuilder, span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_2  [color=blue, key=0, style=bold];
m0_14 -> m0_3  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakConstructorArgument", style=dashed];
m0_14 -> m0_4  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakConstructorArgument", style=dashed];
m0_14 -> m0_8  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakConstructorArgument", style=dashed];
m0_14 -> m0_11  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakConstructorArgument", style=dashed];
m1_207 -> m1_208  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_7  [key=2, style=dotted];
m1_208 -> m1_8  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_7  [key=2, style=dotted];
m1_209 -> m1_8  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_7  [key=2, style=dotted];
m1_210 -> m1_8  [key=2, style=dotted];
m1_210 -> m1_150  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_7  [key=2, style=dotted];
m1_211 -> m1_10  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_7  [key=2, style=dotted];
m1_212 -> m1_10  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_7  [key=2, style=dotted];
m1_213 -> m1_10  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_11  [key=2, style=dotted];
m1_214 -> m1_217  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_11  [key=2, style=dotted];
m1_215 -> m1_218  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_12  [key=2, style=dotted];
m1_217 -> m1_13  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_11  [key=2, style=dotted];
m1_216 -> m1_219  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_12  [key=2, style=dotted];
m1_218 -> m1_13  [key=2, style=dotted];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_12  [key=2, style=dotted];
m1_219 -> m1_13  [key=2, style=dotted];
m1_220 -> m1_207  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_7  [key=2, style=dotted];
m1_137 -> m1_8  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_7  [key=2, style=dotted];
m1_138 -> m1_8  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_7  [key=2, style=dotted];
m1_139 -> m1_8  [key=2, style=dotted];
m1_139 -> m1_150  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_7  [key=2, style=dotted];
m1_140 -> m1_10  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_7  [key=2, style=dotted];
m1_141 -> m1_10  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_7  [key=2, style=dotted];
m1_142 -> m1_10  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_11  [key=2, style=dotted];
m1_143 -> m1_146  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_11  [key=2, style=dotted];
m1_144 -> m1_147  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_12  [key=2, style=dotted];
m1_146 -> m1_13  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_11  [key=2, style=dotted];
m1_145 -> m1_148  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_12  [key=2, style=dotted];
m1_147 -> m1_13  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_12  [key=2, style=dotted];
m1_148 -> m1_13  [key=2, style=dotted];
m1_149 -> m1_136  [color=blue, key=0, style=bold];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_80  [key=2, style=dotted];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_72 -> m1_77  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_81  [key=2, style=dotted];
m1_73 -> m1_75  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_73 -> m1_78  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_7  [key=2, style=dotted];
m1_74 -> m1_82  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_12  [key=2, style=dotted];
m1_77 -> m1_84  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_7  [key=2, style=dotted];
m1_75 -> m1_82  [key=2, style=dotted];
m1_75 -> m1_55  [key=2, style=dotted];
m1_75 -> m1_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_12  [key=2, style=dotted];
m1_78 -> m1_84  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_83  [key=2, style=dotted];
m1_76 -> m1_78  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_79 -> m1_71  [color=blue, key=0, style=bold];
m1_293 -> m1_294  [key=0, style=solid];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_7  [key=2, style=dotted];
m1_294 -> m1_10  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_7  [key=2, style=dotted];
m1_295 -> m1_8  [key=2, style=dotted];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_7  [key=2, style=dotted];
m1_296 -> m1_8  [key=2, style=dotted];
m1_296 -> m1_300  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_11  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_12  [key=2, style=dotted];
m1_298 -> m1_13  [key=2, style=dotted];
m1_299 -> m1_293  [color=blue, key=0, style=bold];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_124  [key=2, style=dotted];
m1_152 -> m1_10  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_7  [key=2, style=dotted];
m1_153 -> m1_8  [key=2, style=dotted];
m1_153 -> m1_125  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_7  [key=2, style=dotted];
m1_154 -> m1_8  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_11  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_12  [key=2, style=dotted];
m1_156 -> m1_13  [key=2, style=dotted];
m1_157 -> m1_151  [color=blue, key=0, style=bold];
m1_126 -> m1_127  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_124  [key=2, style=dotted];
m1_127 -> m1_10  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_7  [key=2, style=dotted];
m1_128 -> m1_8  [key=2, style=dotted];
m1_128 -> m1_135  [key=2, style=dotted];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_7  [key=2, style=dotted];
m1_129 -> m1_8  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_11  [key=2, style=dotted];
m1_130 -> m1_132  [color=darkseagreen4, key=1, label=service, style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_11  [key=2, style=dotted];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label=anotherService, style=dashed];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_12  [key=2, style=dotted];
m1_132 -> m1_13  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_12  [key=2, style=dotted];
m1_133 -> m1_13  [key=2, style=dotted];
m1_134 -> m1_126  [color=blue, key=0, style=bold];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_7  [key=2, style=dotted];
m1_112 -> m1_8  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_7  [key=2, style=dotted];
m1_113 -> m1_8  [key=2, style=dotted];
m1_113 -> m1_9  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_11  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_12  [key=2, style=dotted];
m1_115 -> m1_13  [key=2, style=dotted];
m1_116 -> m1_111  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_12  [key=2, style=dotted];
m1_5 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_80  [key=2, style=dotted];
m1_89 -> m1_92  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_89 -> m1_96  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_100  [key=2, style=dotted];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label=sword, style=dashed];
m1_90 -> m1_97  [color=darkseagreen4, key=1, label=sword, style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_7  [key=2, style=dotted];
m1_92 -> m1_82  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_12  [key=2, style=dotted];
m1_96 -> m1_84  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_81  [key=2, style=dotted];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_91 -> m1_98  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_7  [key=2, style=dotted];
m1_93 -> m1_82  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_12  [key=2, style=dotted];
m1_97 -> m1_84  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_7  [key=2, style=dotted];
m1_94 -> m1_82  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_12  [key=2, style=dotted];
m1_98 -> m1_101  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_83  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_99 -> m1_88  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_11  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_12  [key=2, style=dotted];
m1_44 -> m1_13  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_7  [key=2, style=dotted];
m1_45 -> m1_8  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_11  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_12  [key=2, style=dotted];
m1_47 -> m1_13  [key=2, style=dotted];
m1_48 -> m1_42  [color=blue, key=0, style=bold];
m1_221 -> m1_222  [key=0, style=solid];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_225  [color=darkseagreen4, key=1, label=Name, style=dashed];
m1_222 -> m1_222  [color=darkorchid, key=3, label="Local variable string Name", style=bold];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_7  [key=2, style=dotted];
m1_223 -> m1_10  [key=2, style=dotted];
m1_223 -> m1_231  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_7  [key=2, style=dotted];
m1_225 -> m1_8  [key=2, style=dotted];
m1_225 -> m1_232  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_7  [key=2, style=dotted];
m1_224 -> m1_8  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_7  [key=2, style=dotted];
m1_226 -> m1_8  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_11  [key=2, style=dotted];
m1_227 -> m1_229  [color=darkseagreen4, key=1, label=barack, style=dashed];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_12  [key=2, style=dotted];
m1_228 -> m1_13  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_12  [key=2, style=dotted];
m1_229 -> m1_13  [key=2, style=dotted];
m1_230 -> m1_221  [color=blue, key=0, style=bold];
m1_286 -> m1_287  [key=0, style=solid];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_7  [key=2, style=dotted];
m1_287 -> m1_10  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_7  [key=2, style=dotted];
m1_288 -> m1_8  [key=2, style=dotted];
m1_288 -> m1_285  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_7  [key=2, style=dotted];
m1_289 -> m1_8  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_11  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_12  [key=2, style=dotted];
m1_291 -> m1_13  [key=2, style=dotted];
m1_292 -> m1_286  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_80  [key=2, style=dotted];
m1_103 -> m1_105  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_103 -> m1_108  [color=darkseagreen4, key=1, label=shortSword, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_81  [key=2, style=dotted];
m1_104 -> m1_106  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_104 -> m1_109  [color=darkseagreen4, key=1, label=shuriken, style=dashed];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_7  [key=2, style=dotted];
m1_105 -> m1_82  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_12  [key=2, style=dotted];
m1_108 -> m1_84  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_7  [key=2, style=dotted];
m1_106 -> m1_82  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_12  [key=2, style=dotted];
m1_109 -> m1_84  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_83  [key=2, style=dotted];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_110 -> m1_102  [color=blue, key=0, style=bold];
m1_301 -> m1_302  [key=0, style=solid];
m1_302 -> m1_301  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_11  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_12  [key=2, style=dotted];
m1_40 -> m1_13  [key=2, style=dotted];
m1_41 -> m1_38  [color=blue, key=0, style=bold];
m1_262 -> m1_263  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_7  [key=2, style=dotted];
m1_263 -> m1_10  [key=2, style=dotted];
m1_263 -> m1_253  [key=2, style=dotted];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_7  [key=2, style=dotted];
m1_264 -> m1_8  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_7  [key=2, style=dotted];
m1_265 -> m1_8  [key=2, style=dotted];
m1_265 -> m1_271  [key=2, style=dotted];
m1_265 -> m1_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_7  [key=2, style=dotted];
m1_266 -> m1_8  [key=2, style=dotted];
m1_266 -> m1_271  [key=2, style=dotted];
m1_266 -> m1_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_11  [key=2, style=dotted];
m1_267 -> m1_269  [color=darkseagreen4, key=1, label=barack, style=dashed];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_12  [key=2, style=dotted];
m1_268 -> m1_13  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_12  [key=2, style=dotted];
m1_269 -> m1_13  [key=2, style=dotted];
m1_270 -> m1_262  [color=blue, key=0, style=bold];
m1_201 -> m1_202  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_7  [key=2, style=dotted];
m1_202 -> m1_8  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_7  [key=2, style=dotted];
m1_203 -> m1_8  [key=2, style=dotted];
m1_203 -> m1_197  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_11  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_12  [key=2, style=dotted];
m1_205 -> m1_13  [key=2, style=dotted];
m1_206 -> m1_201  [color=blue, key=0, style=bold];
m1_305 -> m1_306  [key=0, style=solid];
m1_306 -> m1_307  [key=0, style=solid];
m1_307 -> m1_305  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_7  [key=2, style=dotted];
m1_15 -> m1_8  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_8  [key=2, style=dotted];
m1_16 -> m1_9  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_7  [key=2, style=dotted];
m1_17 -> m1_10  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_11  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_12  [key=2, style=dotted];
m1_19 -> m1_13  [key=2, style=dotted];
m1_20 -> m1_14  [color=blue, key=0, style=bold];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_7  [key=2, style=dotted];
m1_192 -> m1_8  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_7  [key=2, style=dotted];
m1_193 -> m1_8  [key=2, style=dotted];
m1_193 -> m1_197  [key=2, style=dotted];
m1_194 -> m1_195  [color=red, key=0, style=solid];
m1_194 -> m1_194  [color=darkorchid, key=3, label="Local variable System.Action getWarrior", style=bold];
m1_195 -> m1_196  [color=red, key=0, style=solid];
m1_195 -> m1_13  [color=red, key=2, style=dotted];
m1_196 -> m1_191  [color=blue, key=0, style=bold];
m1_244 -> m1_245  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_7  [key=2, style=dotted];
m1_245 -> m1_10  [key=2, style=dotted];
m1_245 -> m1_253  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_7  [key=2, style=dotted];
m1_246 -> m1_8  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_7  [key=2, style=dotted];
m1_247 -> m1_8  [key=2, style=dotted];
m1_247 -> m1_254  [key=2, style=dotted];
m1_247 -> m1_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_7  [key=2, style=dotted];
m1_248 -> m1_8  [key=2, style=dotted];
m1_248 -> m1_254  [key=2, style=dotted];
m1_248 -> m1_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_11  [key=2, style=dotted];
m1_249 -> m1_251  [color=darkseagreen4, key=1, label=barack, style=dashed];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_12  [key=2, style=dotted];
m1_250 -> m1_13  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_12  [key=2, style=dotted];
m1_251 -> m1_13  [key=2, style=dotted];
m1_252 -> m1_244  [color=blue, key=0, style=bold];
m1_303 -> m1_304  [key=0, style=solid];
m1_304 -> m1_303  [color=blue, key=0, style=bold];
m1_275 -> m1_276  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_11  [key=2, style=dotted];
m1_37 -> m1_35  [color=blue, key=0, style=bold];
m1_56 -> m1_57  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_56  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_59  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_85  [color=blue, key=0, style=bold];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_11  [key=2, style=dotted];
m1_200 -> m1_198  [color=blue, key=0, style=bold];
m1_255 -> m1_256  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_258  [key=2, style=dotted];
m1_257 -> m1_255  [color=blue, key=0, style=bold];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_258  [key=2, style=dotted];
m1_261 -> m1_259  [color=blue, key=0, style=bold];
m1_272 -> m1_273  [key=0, style=solid];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_258  [key=2, style=dotted];
m1_274 -> m1_272  [color=blue, key=0, style=bold];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_258  [key=2, style=dotted];
m1_277 -> m1_275  [color=blue, key=0, style=bold];
m1_308 -> m1_309  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_310 -> m1_308  [color=blue, key=0, style=bold];
m1_167 -> m1_168  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_7  [key=2, style=dotted];
m1_168 -> m1_8  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_7  [key=2, style=dotted];
m1_169 -> m1_8  [key=2, style=dotted];
m1_169 -> m1_135  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_7  [key=2, style=dotted];
m1_170 -> m1_10  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_11  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_12  [key=2, style=dotted];
m1_172 -> m1_13  [key=2, style=dotted];
m1_173 -> m1_167  [color=blue, key=0, style=bold];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_124  [key=2, style=dotted];
m1_183 -> m1_10  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_7  [key=2, style=dotted];
m1_184 -> m1_8  [key=2, style=dotted];
m1_184 -> m1_150  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_7  [key=2, style=dotted];
m1_185 -> m1_8  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_11  [key=2, style=dotted];
m1_186 -> m1_188  [color=darkseagreen4, key=1, label=service, style=dashed];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_11  [key=2, style=dotted];
m1_187 -> m1_189  [color=darkseagreen4, key=1, label=anotherService, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_12  [key=2, style=dotted];
m1_188 -> m1_13  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_12  [key=2, style=dotted];
m1_189 -> m1_13  [key=2, style=dotted];
m1_190 -> m1_182  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_7  [key=2, style=dotted];
m1_29 -> m1_8  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_7  [key=2, style=dotted];
m1_30 -> m1_8  [key=2, style=dotted];
m1_30 -> m1_9  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_7  [key=2, style=dotted];
m1_31 -> m1_8  [key=2, style=dotted];
m1_31 -> m1_9  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_7  [key=2, style=dotted];
m1_32 -> m1_10  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_13  [key=2, style=dotted];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_28  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_7  [key=2, style=dotted];
m1_63 -> m1_10  [key=2, style=dotted];
m1_63 -> m1_55  [key=2, style=dotted];
m1_63 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_7  [key=2, style=dotted];
m1_64 -> m1_8  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_11  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_12  [key=2, style=dotted];
m1_66 -> m1_13  [key=2, style=dotted];
m1_67 -> m1_62  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_7  [key=2, style=dotted];
m1_22 -> m1_8  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_7  [key=2, style=dotted];
m1_23 -> m1_8  [key=2, style=dotted];
m1_23 -> m1_9  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_7  [key=2, style=dotted];
m1_24 -> m1_10  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_11  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_13  [key=2, style=dotted];
m1_27 -> m1_21  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_7  [key=2, style=dotted];
m1_50 -> m1_10  [key=2, style=dotted];
m1_50 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_7  [key=2, style=dotted];
m1_51 -> m1_8  [key=2, style=dotted];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_11  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_12  [key=2, style=dotted];
m1_53 -> m1_13  [key=2, style=dotted];
m1_54 -> m1_49  [color=blue, key=0, style=bold];
m1_158 -> m1_159  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_124  [key=2, style=dotted];
m1_159 -> m1_10  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_7  [key=2, style=dotted];
m1_160 -> m1_8  [key=2, style=dotted];
m1_160 -> m1_135  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_7  [key=2, style=dotted];
m1_161 -> m1_8  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_11  [key=2, style=dotted];
m1_162 -> m1_164  [color=darkseagreen4, key=1, label=service, style=dashed];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_11  [key=2, style=dotted];
m1_163 -> m1_165  [color=darkseagreen4, key=1, label=anotherService, style=dashed];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_12  [key=2, style=dotted];
m1_164 -> m1_13  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_12  [key=2, style=dotted];
m1_165 -> m1_13  [key=2, style=dotted];
m1_166 -> m1_158  [color=blue, key=0, style=bold];
m1_311 -> m1_312  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_313 -> m1_311  [color=blue, key=0, style=bold];
m1_278 -> m1_279  [key=0, style=solid];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_7  [key=2, style=dotted];
m1_279 -> m1_10  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_7  [key=2, style=dotted];
m1_280 -> m1_8  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_7  [key=2, style=dotted];
m1_281 -> m1_8  [key=2, style=dotted];
m1_281 -> m1_285  [key=2, style=dotted];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_11  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_12  [key=2, style=dotted];
m1_283 -> m1_13  [key=2, style=dotted];
m1_284 -> m1_278  [color=blue, key=0, style=bold];
m1_117 -> m1_118  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_124  [key=2, style=dotted];
m1_118 -> m1_10  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_7  [key=2, style=dotted];
m1_119 -> m1_8  [key=2, style=dotted];
m1_119 -> m1_125  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_7  [key=2, style=dotted];
m1_120 -> m1_8  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_11  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_12  [key=2, style=dotted];
m1_122 -> m1_13  [key=2, style=dotted];
m1_123 -> m1_117  [color=blue, key=0, style=bold];
m1_174 -> m1_175  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_124  [key=2, style=dotted];
m1_175 -> m1_10  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_7  [key=2, style=dotted];
m1_176 -> m1_8  [key=2, style=dotted];
m1_176 -> m1_181  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_7  [key=2, style=dotted];
m1_177 -> m1_8  [key=2, style=dotted];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_11  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_12  [key=2, style=dotted];
m1_179 -> m1_13  [key=2, style=dotted];
m1_180 -> m1_174  [color=blue, key=0, style=bold];
m1_233 -> m1_234  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_237  [color=darkseagreen4, key=1, label=Name, style=dashed];
m1_234 -> m1_222  [color=darkorchid, key=3, label="Local variable string Name", style=bold];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_7  [key=2, style=dotted];
m1_235 -> m1_10  [key=2, style=dotted];
m1_235 -> m1_231  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_7  [key=2, style=dotted];
m1_237 -> m1_8  [key=2, style=dotted];
m1_237 -> m1_243  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_7  [key=2, style=dotted];
m1_236 -> m1_8  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_7  [key=2, style=dotted];
m1_238 -> m1_8  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_11  [key=2, style=dotted];
m1_239 -> m1_241  [color=darkseagreen4, key=1, label=barack, style=dashed];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_12  [key=2, style=dotted];
m1_240 -> m1_13  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_12  [key=2, style=dotted];
m1_241 -> m1_13  [key=2, style=dotted];
m1_242 -> m1_233  [color=blue, key=0, style=bold];
m1_314 -> m1_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_17  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_18  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_24  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_25  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_31  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_33  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_39  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_46  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_50  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_51  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_63  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_64  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_65  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_74  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_75  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_92  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_93  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_94  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_95  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_105  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_106  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_107  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_112  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_113  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_114  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_120  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_121  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_127  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_128  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_129  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_130  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_131  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_137  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_138  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_139  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_140  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_141  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_142  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_143  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_144  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_145  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_152  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_153  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_154  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_155  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_159  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_160  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_161  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_162  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_163  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_168  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_169  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_170  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_171  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_175  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_176  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_177  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_178  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_183  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_184  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_185  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_186  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_187  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_192  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_193  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_194  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_199  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_202  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_203  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_204  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_208  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_209  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_210  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_211  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_212  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_213  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_214  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_215  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_216  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_223  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_224  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_225  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_226  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_227  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_235  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_236  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_237  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_238  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_239  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_245  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_246  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_247  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_248  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_249  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_263  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_264  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_265  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_266  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_267  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_279  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_280  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_281  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_282  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_287  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_288  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_289  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_290  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_294  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_295  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_296  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_314 -> m1_297  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests", style=dashed];
m1_315 -> m1_306  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests.GenericService<T>", style=dashed];
m1_316 -> m1_309  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests.AnotherGenericService<T>", style=dashed];
m1_317 -> m1_312  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConditionalBindingTests.Knight", style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_5  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_8 -> m2_1  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakPropertyValue", style=dashed];
m2_8 -> m2_2  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakPropertyValue", style=dashed];
m2_8 -> m2_6  [color=darkseagreen4, key=1, label="Ninject.Parameters.WeakPropertyValue", style=dashed];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [key=0, style=solid];
m3_145 -> m3_18  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_15  [key=2, style=dotted];
m3_142 -> m3_95  [key=2, style=dotted];
m3_142 -> m3_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_143 -> m3_145  [color=darkseagreen4, key=1, label=barracks1, style=dashed];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_17  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_17  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_129  [key=2, style=dotted];
m3_141 -> m3_32  [key=2, style=dotted];
m3_141 -> m3_149  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m3_146 -> m3_140  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_37 -> m3_18  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_19  [key=2, style=dotted];
m3_38 -> m3_18  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_20  [key=2, style=dotted];
m3_39 -> m3_18  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_19  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_15  [key=2, style=dotted];
m3_34 -> m3_16  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_15  [key=2, style=dotted];
m3_35 -> m3_41  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_36 -> m3_39  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_36 -> m3_17  [key=2, style=dotted];
m3_40 -> m3_33  [color=blue, key=0, style=bold];
m3_163 -> m3_164  [key=0, style=solid];
m3_169 -> m3_18  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_179  [key=2, style=dotted];
m3_175 -> m3_18  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_179  [key=2, style=dotted];
m3_171 -> m3_18  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_19  [key=2, style=dotted];
m3_172 -> m3_18  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_19  [key=2, style=dotted];
m3_173 -> m3_18  [key=2, style=dotted];
m3_173 -> m3_75  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_174 -> m3_18  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_19  [key=2, style=dotted];
m3_165 -> m3_169  [color=darkseagreen4, key=1, label=activationCount, style=dashed];
m3_165 -> m3_175  [color=darkseagreen4, key=1, label=activationCount, style=dashed];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_15  [key=2, style=dotted];
m3_165 -> m3_16  [key=2, style=dotted];
m3_165 -> m3_177  [key=2, style=dotted];
m3_165 -> m3_178  [key=2, style=dotted];
m3_165 -> m3_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_165 -> m3_181  [color=darkseagreen4, key=1, label=activationCount, style=dashed];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_15  [key=2, style=dotted];
m3_166 -> m3_95  [key=2, style=dotted];
m3_166 -> m3_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_15  [key=2, style=dotted];
m3_167 -> m3_41  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_15  [key=2, style=dotted];
m3_168 -> m3_41  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_172  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_170 -> m3_173  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_170 -> m3_174  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_170 -> m3_17  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_164  [color=darkorchid, key=3, label="Local variable int activationCount", style=bold];
m3_176 -> m3_163  [color=blue, key=0, style=bold];
m3_206 -> m3_207  [key=0, style=solid];
m3_209 -> m3_18  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_19  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_15  [key=2, style=dotted];
m3_207 -> m3_16  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_17  [key=2, style=dotted];
m3_210 -> m3_206  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_134 -> m3_18  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_136  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_15  [key=2, style=dotted];
m3_131 -> m3_95  [key=2, style=dotted];
m3_131 -> m3_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_134  [color=darkseagreen4, key=1, label=barracks1, style=dashed];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_17  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_17  [key=2, style=dotted];
m3_135 -> m3_130  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_105 -> m3_18  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_19  [key=2, style=dotted];
m3_106 -> m3_18  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_19  [key=2, style=dotted];
m3_107 -> m3_18  [key=2, style=dotted];
m3_107 -> m3_75  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_108 -> m3_18  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_20  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_15  [key=2, style=dotted];
m3_101 -> m3_95  [key=2, style=dotted];
m3_101 -> m3_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_15  [key=2, style=dotted];
m3_102 -> m3_41  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_15  [key=2, style=dotted];
m3_103 -> m3_41  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_104 -> m3_107  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_104 -> m3_108  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_104 -> m3_17  [key=2, style=dotted];
m3_109 -> m3_100  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_11 -> m3_18  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_19  [key=2, style=dotted];
m3_12 -> m3_18  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_20  [key=2, style=dotted];
m3_13 -> m3_18  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_20  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_15  [key=2, style=dotted];
m3_9 -> m3_16  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_10 -> m3_13  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_10 -> m3_17  [key=2, style=dotted];
m3_14 -> m3_8  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_47 -> m3_18  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_19  [key=2, style=dotted];
m3_48 -> m3_18  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_20  [key=2, style=dotted];
m3_49 -> m3_18  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_19  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_15  [key=2, style=dotted];
m3_43 -> m3_16  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_15  [key=2, style=dotted];
m3_44 -> m3_41  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_15  [key=2, style=dotted];
m3_45 -> m3_41  [key=2, style=dotted];
m3_45 -> m3_51  [key=2, style=dotted];
m3_45 -> m3_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_46 -> m3_49  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_46 -> m3_17  [key=2, style=dotted];
m3_50 -> m3_42  [color=blue, key=0, style=bold];
m3_151 -> m3_152  [key=0, style=solid];
m3_152 -> m3_32  [key=2, style=dotted];
m3_152 -> m3_129  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_153 -> m3_151  [color=blue, key=0, style=bold];
m3_154 -> m3_155  [key=0, style=solid];
m3_158 -> m3_18  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_136  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_15  [key=2, style=dotted];
m3_155 -> m3_95  [key=2, style=dotted];
m3_155 -> m3_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_156 -> m3_158  [color=darkseagreen4, key=1, label=barracks1, style=dashed];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_17  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_17  [key=2, style=dotted];
m3_159 -> m3_154  [color=blue, key=0, style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_60 -> m3_18  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_19  [key=2, style=dotted];
m3_61 -> m3_18  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_19  [key=2, style=dotted];
m3_62 -> m3_18  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_19  [key=2, style=dotted];
m3_63 -> m3_18  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_19  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_15  [key=2, style=dotted];
m3_56 -> m3_16  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_15  [key=2, style=dotted];
m3_57 -> m3_41  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_15  [key=2, style=dotted];
m3_58 -> m3_41  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_61  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_59 -> m3_62  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_59 -> m3_63  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_59 -> m3_17  [key=2, style=dotted];
m3_64 -> m3_55  [color=blue, key=0, style=bold];
m3_195 -> m3_196  [key=0, style=solid];
m3_197 -> m3_18  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_20  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_17  [key=2, style=dotted];
m3_198 -> m3_195  [color=blue, key=0, style=bold];
m3_199 -> m3_200  [key=0, style=solid];
m3_202 -> m3_18  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_19  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_204  [key=2, style=dotted];
m3_200 -> m3_205  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_17  [key=2, style=dotted];
m3_203 -> m3_199  [color=blue, key=0, style=bold];
m3_115 -> m3_116  [key=0, style=solid];
m3_120 -> m3_18  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_19  [key=2, style=dotted];
m3_121 -> m3_18  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_19  [key=2, style=dotted];
m3_122 -> m3_18  [key=2, style=dotted];
m3_122 -> m3_75  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_123 -> m3_18  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_19  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_15  [key=2, style=dotted];
m3_116 -> m3_95  [key=2, style=dotted];
m3_116 -> m3_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_15  [key=2, style=dotted];
m3_117 -> m3_41  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_15  [key=2, style=dotted];
m3_118 -> m3_41  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_121  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_119 -> m3_122  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_119 -> m3_123  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_119 -> m3_17  [key=2, style=dotted];
m3_124 -> m3_115  [color=blue, key=0, style=bold];
m3_192 -> m3_193  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_17  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_17  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_17  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_17  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_79 -> m3_77  [color=blue, key=0, style=bold];
m3_82 -> m3_80  [color=blue, key=0, style=bold];
m3_85 -> m3_83  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_181  [color=darkseagreen4, key=1, label=activationCount, style=dashed];
m3_181 -> m3_182  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_194 -> m3_192  [color=blue, key=0, style=bold];
m3_54 -> m3_52  [color=blue, key=0, style=bold];
m3_53 -> m3_54  [key=0, style=solid];
m3_98 -> m3_96  [color=blue, key=0, style=bold];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_99  [key=2, style=dotted];
m3_112 -> m3_110  [color=blue, key=0, style=bold];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [key=2, style=dotted];
m3_111 -> m3_114  [key=2, style=dotted];
m3_127 -> m3_125  [color=blue, key=0, style=bold];
m3_126 -> m3_32  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=2, style=dotted];
m3_126 -> m3_129  [key=2, style=dotted];
m3_126 -> m3_114  [key=2, style=dotted];
m3_139 -> m3_137  [color=blue, key=0, style=bold];
m3_138 -> m3_32  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_113  [key=2, style=dotted];
m3_138 -> m3_129  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_113  [key=2, style=dotted];
m3_150 -> m3_148  [color=blue, key=0, style=bold];
m3_162 -> m3_160  [color=blue, key=0, style=bold];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_113  [key=2, style=dotted];
m3_161 -> m3_151  [key=2, style=dotted];
m3_182 -> m3_180  [color=blue, key=0, style=bold];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_128  [key=2, style=dotted];
m3_184 -> m3_186  [key=2, style=dotted];
m3_184 -> m3_114  [key=2, style=dotted];
m3_185 -> m3_183  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_67 -> m3_75  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_69 -> m3_75  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_72 -> m3_75  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_15  [key=2, style=dotted];
m3_66 -> m3_16  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_15  [key=2, style=dotted];
m3_68 -> m3_41  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_76  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_15  [key=2, style=dotted];
m3_71 -> m3_41  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_76  [key=2, style=dotted];
m3_74 -> m3_65  [color=blue, key=0, style=bold];
m3_211 -> m3_212  [key=0, style=solid];
m3_213 -> m3_18  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_215  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_17  [key=2, style=dotted];
m3_214 -> m3_211  [color=blue, key=0, style=bold];
m3_86 -> m3_87  [key=0, style=solid];
m3_91 -> m3_18  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_19  [key=2, style=dotted];
m3_92 -> m3_18  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_20  [key=2, style=dotted];
m3_93 -> m3_18  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_20  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_15  [key=2, style=dotted];
m3_87 -> m3_95  [key=2, style=dotted];
m3_87 -> m3_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_15  [key=2, style=dotted];
m3_88 -> m3_41  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_15  [key=2, style=dotted];
m3_89 -> m3_41  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_92  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_90 -> m3_93  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_90 -> m3_17  [key=2, style=dotted];
m3_94 -> m3_86  [color=blue, key=0, style=bold];
m3_187 -> m3_188  [key=0, style=solid];
m3_190 -> m3_191  [color=green, key=0, style=solid];
m3_190 -> m3_18  [color=green, key=2, style=dotted];
m3_190 -> m3_75  [color=green, key=2, style=dotted];
m3_189 -> m3_190  [color=green, key=0, style=solid];
m3_189 -> m3_189  [color=darkorchid, key=3, label="Local variable System.Action getClassWithTwoInjectAttributes", style=bold];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_15  [key=2, style=dotted];
m3_188 -> m3_16  [key=2, style=dotted];
m3_191 -> m3_187  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_25 -> m3_18  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_19  [key=2, style=dotted];
m3_26 -> m3_18  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_19  [key=2, style=dotted];
m3_27 -> m3_18  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_19  [key=2, style=dotted];
m3_28 -> m3_18  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_20  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_15  [key=2, style=dotted];
m3_22 -> m3_16  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=barracks, style=dashed];
m3_24 -> m3_17  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_30  [key=2, style=dotted];
m3_23 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_32  [key=2, style=dotted];
m3_29 -> m3_21  [color=blue, key=0, style=bold];
m3_240 -> m3_189  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_9  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_10  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_24  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_43  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_44  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_46  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_56  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_58  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_59  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_78  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_68  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_69  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_81  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_70  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_72  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_84  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_73  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_87  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_88  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_89  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_90  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_101  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_102  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_103  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_104  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_116  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_117  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_131  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_132  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_133  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_142  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_143  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_144  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_155  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_156  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_157  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_165  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_166  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_167  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_168  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_170  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_188  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_193  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_196  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_200  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_201  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_207  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_208  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_240 -> m3_212  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ConstructorSelectionTests", style=dashed];
m3_242 -> m3_181  [color=darkseagreen4, key=1, label=activationCount, style=dashed];
m3_241 -> m3_149  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_15  [color=blue, key=0, style=bold];
m6_10 -> m6_29  [color=green, key=0, style=solid];
m6_10 -> m6_10  [color=darkorchid, key=3, label="Local variable System.Action moduleLoadingAction", style=bold];
m6_10 -> m6_7  [color=darkorchid, key=3, label="Parameter variable System.Reflection.Assembly assembly", style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_15  [key=2, style=dotted];
m6_29 -> m6_30  [color=green, key=0, style=solid];
m6_29 -> m6_31  [color=green, key=2, style=dotted];
m6_29 -> m6_32  [color=green, key=2, style=dotted];
m6_29 -> m6_33  [color=green, key=2, style=dotted];
m6_29 -> m6_34  [color=green, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_10  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_16  [key=2, style=dotted];
m6_30 -> m6_17  [key=2, style=dotted];
m6_30 -> m6_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_44  [key=2, style=dotted];
m6_50 -> m6_55  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_51 -> m6_52  [color=red, key=0, style=solid];
m6_51 -> m6_51  [color=darkorchid, key=3, label="Local variable System.Action moduleLoadingAction", style=bold];
m6_52 -> m6_53  [color=red, key=0, style=solid];
m6_52 -> m6_45  [color=red, key=2, style=dotted];
m6_53 -> m6_49  [color=blue, key=0, style=bold];
m6_37 -> m6_35  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_10  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_8 -> m6_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_8 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_20 -> m6_21  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [color=darkseagreen4, key=1, label=ModuleName, style=dashed];
m6_69 -> m6_58  [color=darkorchid, key=3, label="Local variable string ModuleName", style=bold];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_44  [key=2, style=dotted];
m6_70 -> m6_72  [color=darkseagreen4, key=1, label=module1, style=dashed];
m6_70 -> m6_73  [color=darkseagreen4, key=1, label=module1, style=dashed];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_44  [key=2, style=dotted];
m6_71 -> m6_74  [color=darkseagreen4, key=1, label=module2, style=dashed];
m6_71 -> m6_75  [color=darkseagreen4, key=1, label=module2, style=dashed];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_5  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_77  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_5  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_18  [key=2, style=dotted];
m6_75 -> m6_19  [key=2, style=dotted];
m6_75 -> m6_20  [key=2, style=dotted];
m6_76 -> m6_68  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_14  [key=2, style=dotted];
m6_26 -> m6_30  [color=darkseagreen4, key=1, label=moduleMock, style=dashed];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_15  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_18  [key=2, style=dotted];
m6_31 -> m6_19  [key=2, style=dotted];
m6_31 -> m6_34  [key=2, style=dotted];
m6_32 -> m6_25  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_17  [key=2, style=dotted];
m6_11 -> m6_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_19  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=2, style=dotted];
m6_23 -> m6_20  [color=blue, key=0, style=bold];
m6_23 -> m6_21  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=2, style=dotted];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_2 -> m6_5  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_18  [key=2, style=dotted];
m6_12 -> m6_19  [key=2, style=dotted];
m6_12 -> m6_20  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_35 -> m6_38  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=2, style=dotted];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_5  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_48 -> m6_46  [color=blue, key=0, style=bold];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_5  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_56 -> m6_54  [color=blue, key=0, style=bold];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_5  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_67 -> m6_65  [color=blue, key=0, style=bold];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_77  [key=2, style=dotted];
m6_84 -> m6_82  [color=blue, key=0, style=bold];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_107  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_107  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_107  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_24  [key=2, style=dotted];
m6_103 -> m6_101  [color=blue, key=0, style=bold];
m6_106 -> m6_104  [color=blue, key=0, style=bold];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_24  [key=2, style=dotted];
m6_110 -> m6_108  [color=blue, key=0, style=bold];
m6_113 -> m6_111  [color=blue, key=0, style=bold];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_117  [key=2, style=dotted];
m6_116 -> m6_114  [color=blue, key=0, style=bold];
m6_120 -> m6_118  [color=blue, key=0, style=bold];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_117  [key=2, style=dotted];
m6_123 -> m6_121  [color=blue, key=0, style=bold];
m6_126 -> m6_124  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_7  [color=blue, key=0, style=bold];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_29  [color=green, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_1  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_4  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_8  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_13  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_16  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_17  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_21  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_22  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_39 -> m6_35  [color=darkseagreen4, key=1, label="Ninject.Web.Mvc.ControllerRegistry", style=dashed];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_44  [key=2, style=dotted];
m6_40 -> m6_47  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_41 -> m6_42  [color=red, key=0, style=solid];
m6_41 -> m6_41  [color=darkorchid, key=3, label="Local variable System.Action moduleLoadingAction", style=bold];
m6_42 -> m6_43  [color=red, key=0, style=solid];
m6_42 -> m6_45  [color=red, key=2, style=dotted];
m6_43 -> m6_39  [color=blue, key=0, style=bold];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [color=red, key=0, style=solid];
m6_79 -> m6_79  [color=darkorchid, key=3, label="Local variable System.Action moduleUnloadingAction", style=bold];
m6_80 -> m6_81  [color=red, key=0, style=solid];
m6_80 -> m6_45  [color=red, key=2, style=dotted];
m6_81 -> m6_78  [color=blue, key=0, style=bold];
m6_85 -> m6_86  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_14  [key=2, style=dotted];
m6_86 -> m6_89  [color=darkseagreen4, key=1, label=moduleMock1, style=dashed];
m6_86 -> m6_91  [color=darkseagreen4, key=1, label=moduleMock1, style=dashed];
m6_86 -> m6_93  [color=darkseagreen4, key=1, label=moduleMock1, style=dashed];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_14  [key=2, style=dotted];
m6_87 -> m6_90  [color=darkseagreen4, key=1, label=moduleMock2, style=dashed];
m6_87 -> m6_92  [color=darkseagreen4, key=1, label=moduleMock2, style=dashed];
m6_87 -> m6_93  [color=darkseagreen4, key=1, label=moduleMock2, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_97  [key=2, style=dotted];
m6_89 -> m6_98  [key=2, style=dotted];
m6_89 -> m6_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_89 -> m6_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_97  [key=2, style=dotted];
m6_91 -> m6_98  [key=2, style=dotted];
m6_91 -> m6_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_91 -> m6_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_15  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_96  [key=2, style=dotted];
m6_88 -> m6_105  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_112  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_119  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_125  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_88 -> m6_94  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_97  [key=2, style=dotted];
m6_90 -> m6_98  [key=2, style=dotted];
m6_90 -> m6_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_90 -> m6_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_97  [key=2, style=dotted];
m6_92 -> m6_98  [key=2, style=dotted];
m6_92 -> m6_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_92 -> m6_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_99  [key=2, style=dotted];
m6_94 -> m6_19  [key=2, style=dotted];
m6_94 -> m6_100  [key=2, style=dotted];
m6_95 -> m6_85  [color=blue, key=0, style=bold];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_60  [color=darkseagreen4, key=1, label=ModuleName, style=dashed];
m6_58 -> m6_58  [color=darkorchid, key=3, label="Local variable string ModuleName", style=bold];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_44  [key=2, style=dotted];
m6_59 -> m6_61  [color=darkseagreen4, key=1, label=module1, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_44  [key=2, style=dotted];
m6_60 -> m6_62  [color=darkseagreen4, key=1, label=module2, style=dashed];
m6_60 -> m6_66  [color=darkseagreen4, key=1, label=module2, style=dashed];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_5  [key=2, style=dotted];
m6_62 -> m6_63  [color=red, key=0, style=solid];
m6_62 -> m6_62  [color=darkorchid, key=3, label="Local variable System.Action moduleLoadingAction", style=bold];
m6_63 -> m6_64  [color=red, key=0, style=solid];
m6_63 -> m6_45  [color=red, key=2, style=dotted];
m6_64 -> m6_57  [color=blue, key=0, style=bold];
m6_127 -> m6_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_8  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_10  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_28  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_29  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_31  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_40  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_41  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_47  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_50  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_51  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_59  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_60  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_61  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_62  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_70  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_72  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_73  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_74  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_75  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_79  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_83  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_86  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_87  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_89  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_102  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_90  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_109  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_127 -> m6_93  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.WhenLoadIsCalledWithModule", style=dashed];
m6_128 -> m6_47  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_129 -> m6_55  [color=darkseagreen4, key=1, label=module, style=dashed];
m6_130 -> m6_66  [color=darkseagreen4, key=1, label=module2, style=dashed];
m6_131 -> m6_105  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_131 -> m6_112  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_131 -> m6_119  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
m6_131 -> m6_125  [color=darkseagreen4, key=1, label=orderStringBuilder, style=dashed];
}
