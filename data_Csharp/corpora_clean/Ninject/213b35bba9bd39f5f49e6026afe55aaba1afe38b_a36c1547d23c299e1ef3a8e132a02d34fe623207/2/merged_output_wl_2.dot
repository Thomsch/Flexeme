digraph  {
m1_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m1_45 [cluster="System.IO.Path.GetFullPath(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.GetFullPath(string)", span="0-0"];
m1_23 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="84-84"];
m1_33 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: return NormalizePaths(Path.GetDirectoryName(pattern))\r\n                    .SelectMany(path => Directory.GetFiles(path, Path.GetFileName(pattern)));", span="86-87"];
m1_34 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="CompiledModuleLoaderPlugin.cs", label="Exit Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="84-84"];
m1_41 [cluster="System.IO.Directory.GetFiles(string, string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m1_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_40 [cluster="System.IO.Path.GetFileName(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m1_11 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: plugin != null", span="68-68"];
m1_0 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", span="52-52"];
m1_2 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="CompiledModuleLoaderPlugin.cs", label="Kernel = kernel", span="55-55"];
m1_1 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="CompiledModuleLoaderPlugin.cs", label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="54-54"];
m1_3 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", file="CompiledModuleLoaderPlugin.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernel)", span="52-52"];
m1_35 [cluster="System.IO.Path.GetDirectoryName(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m1_36 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="90-90"];
m1_42 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: return Path.IsPathRooted(path)\r\n                        ? new[] { Path.GetFullPath(path) }\r\n                        : GetBaseDirectories().Select(baseDirectory => Path.Combine(baseDirectory, path));", span="92-94"];
m1_43 [cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="CompiledModuleLoaderPlugin.cs", label="Exit Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="90-90"];
m1_27 [cluster="System.IO.Path.GetExtension(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m1_12 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: plugin.LoadModules(fileGroup)", span="72-72"];
m1_5 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="51-51"];
m1_6 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: var plugins = Kernel.Components.GetAll<IModuleLoaderPlugin>()", span="53-53"];
m1_7 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: var fileGroups = patterns\r\n#if !WINRT\r\n                .SelectMany(pattern => GetFilesMatchingPattern(pattern))\r\n                .GroupBy(filename => Path.GetExtension(filename).ToLowerInvariant())", span="55-58"];
m1_8 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="CompiledModuleLoaderPlugin.cs", label="1: fileGroups", span="63-63"];
m1_9 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="CompiledModuleLoaderPlugin.cs", label="string extension = fileGroup.Key", span="65-65"];
m1_17 [cluster="System.Type.GetConstructor(System.Type[])", file="CompiledModuleLoaderPlugin.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m1_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24"];
m1_10 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="0: IModuleLoaderPlugin plugin = plugins.Where(p => p.SupportedExtensions.Contains(extension)).FirstOrDefault()", span="66-66"];
m1_46 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="97-97"];
m1_52 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="1: var baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="99-99"];
m1_53 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="1: var searchPath = AppDomain.CurrentDomain.RelativeSearchPath", span="100-100"];
m1_54 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="CompiledModuleLoaderPlugin.cs", label="return String.IsNullOrEmpty(searchPath) \r\n                ? new[] {baseDirectory} \r\n                : searchPath.Split(new[] {Path.PathSeparator}, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(path => Path.Combine(baseDirectory, path));", span="102-105"];
m1_55 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="CompiledModuleLoaderPlugin.cs", label="Exit Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="97-97"];
m1_15 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.IsLoadableModule(System.Type)", file="CompiledModuleLoaderPlugin.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.IsLoadableModule(System.Type)", span="71-71"];
m1_14 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.IsLoadableModule(System.Type)", color=red, community=1, file="CompiledModuleLoaderPlugin.cs", label="1: return typeof(INinjectModule).IsAssignableFrom(type)\r\n				&& !type.IsAbstract\r\n				&& !type.IsInterface\r\n				&& type.GetConstructor(Type.EmptyTypes) != null;", span="73-76"];
m1_13 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.IsLoadableModule(System.Type)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.IsLoadableModule(System.Type)", span="71-71"];
m1_56 [cluster="string.IsNullOrEmpty(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_57 [cluster="string.Split(char[], System.StringSplitOptions)", file="CompiledModuleLoaderPlugin.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m1_24 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="58-58"];
m1_29 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="66-66"];
m1_30 [cluster="lambda expression", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="1: p.SupportedExtensions.Contains(extension)", span="66-66"];
m1_31 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="66-66"];
m1_37 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="87-87"];
m1_38 [cluster="lambda expression", color=green, community=0, file="CompiledModuleLoaderPlugin.cs", label="1: Directory.GetFiles(path, Path.GetFileName(pattern))", span="87-87"];
m1_39 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="87-87"];
m1_48 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="94-94"];
m1_59 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Path.Combine(baseDirectory, path)", span="105-105"];
m1_21 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="GetFilesMatchingPattern(pattern)", span="57-57"];
m1_49 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Path.Combine(baseDirectory, path)", span="94-94"];
m1_50 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="94-94"];
m1_58 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="105-105"];
m1_60 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="105-105"];
m1_20 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Entry lambda expression", span="57-57"];
m1_22 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="57-57"];
m1_25 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Path.GetExtension(filename).ToLowerInvariant()", span="58-58"];
m1_26 [cluster="lambda expression", file="CompiledModuleLoaderPlugin.cs", label="Exit lambda expression", span="58-58"];
m1_28 [cluster="string.ToLowerInvariant()", file="CompiledModuleLoaderPlugin.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_18 [cluster="Unk.FirstOrDefault", file="CompiledModuleLoaderPlugin.cs", label="Ninject.Modules.CompiledModuleLoaderPlugin", span=""];
m1_44 [cluster="System.IO.Path.IsPathRooted(string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.IsPathRooted(string)", span="0-0"];
m1_47 [cluster="Unk.Select", file="CompiledModuleLoaderPlugin.cs", label="Entry Unk.Select", span=""];
m1_51 [cluster="System.IO.Path.Combine(string, string)", file="CompiledModuleLoaderPlugin.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m1_19 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="CompiledModuleLoaderPlugin.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="37-37"];
m1_62 [file="CompiledModuleLoaderPlugin.cs", label=extension, span=""];
m1_63 [file="CompiledModuleLoaderPlugin.cs", label=string, span=""];
m1_61 [file="CompiledModuleLoaderPlugin.cs", label="Ninject.Modules.ModuleLoader", span=""];
m1_65 [file="CompiledModuleLoaderPlugin.cs", label=baseDirectory, span=""];
m1_64 [file="CompiledModuleLoaderPlugin.cs", label=string, span=""];
m2_8 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_66 [cluster="System.Collections.Generic.List<T>.List()", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_30 [cluster="object.GetType()", file="ExtensionsForAssembly.cs", label="Entry object.GetType()", span="0-0"];
m2_36 [cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", span="93-93"];
m2_37 [cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ExtensionsForAssembly.cs", label="registration.KernelLock.AcquireWriterLock(Timeout.Infinite)", span="95-95"];
m2_38 [cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ExtensionsForAssembly.cs", label="references.ToArray()", span="98-98"];
m2_39 [cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ExtensionsForAssembly.cs", label="registration.Kernels.Remove(reference)", span="100-100"];
m2_40 [cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", span="93-93"];
m2_0 [cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", span="37-37"];
m2_1 [cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", color=green, community=0, file="ExtensionsForAssembly.cs", label="1: var registration = GetRegistrationForType(type)", span="39-39"];
m2_2 [cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", color=green, community=0, file="ExtensionsForAssembly.cs", label="1: registration.KernelLock.AcquireWriterLock(Timeout.Infinite)", span="40-40"];
m2_3 [cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", color=green, community=0, file="ExtensionsForAssembly.cs", label="1: registration.Kernels.Add(new WeakReference(kernel))", span="43-43"];
m2_4 [cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IKernel, System.Type)", span="37-37"];
m2_50 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", span="128-128"];
m2_53 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="kernelRegistrations.TryGetValue(type, out registration)", span="134-134"];
m2_51 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="var lockCookie = kernelRegistrationsLock.UpgradeToWriterLock(Timeout.Infinite)", span="130-130"];
m2_56 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="kernelRegistrations.Add(type, registration)", span="140-140"];
m2_52 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="Registration registration", span="133-133"];
m2_54 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="return registration;", span="136-136"];
m2_55 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="registration = new Registration()", span="139-139"];
m2_57 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="return registration;", span="141-141"];
m2_58 [cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", span="128-128"];
m2_31 [cluster="System.Threading.ReaderWriterLock.AcquireReaderLock(int)", file="ExtensionsForAssembly.cs", label="Entry System.Threading.ReaderWriterLock.AcquireReaderLock(int)", span="0-0"];
m2_9 [cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", span="51-51"];
m2_10 [cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="var registration = GetRegistrationForType(type)", span="53-53"];
m2_11 [cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="RemoveKernels(registration, registration.Kernels.Where(reference => reference.Target == kernel || !reference.IsAlive))", span="54-54"];
m2_12 [cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IKernel, System.Type)", span="51-51"];
m2_59 [cluster="System.Threading.ReaderWriterLock.UpgradeToWriterLock(int)", file="ExtensionsForAssembly.cs", label="Entry System.Threading.ReaderWriterLock.UpgradeToWriterLock(int)", span="0-0"];
m2_32 [cluster="System.Action<T>.Invoke(T)", file="ExtensionsForAssembly.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_13 [cluster="Unk.Where", file="ExtensionsForAssembly.cs", label="Entry Unk.Where", span=""];
m2_60 [cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.Registration.Registration()", span="151-151"];
m2_62 [cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ExtensionsForAssembly.cs", label="this.KernelLock = new ReaderWriterLock()", span="153-153"];
m2_63 [cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ExtensionsForAssembly.cs", label="this.Kernels = new List<WeakReference>()", span="154-154"];
m2_64 [cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.Registration.Registration()", span="151-151"];
m2_14 [cluster="Unk.RemoveKernels", file="ExtensionsForAssembly.cs", label="Entry Unk.RemoveKernels", span=""];
m2_5 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", span="109-109"];
m2_43 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="kernelRegistrationsLock.AcquireReaderLock(Timeout.Infinite)", span="111-111"];
m2_45 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="kernelRegistrations.TryGetValue(type, out registration)", span="115-115"];
m2_47 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="return CreateNewRegistration(type);", span="120-120"];
m2_46 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="return registration;", span="117-117"];
m2_44 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="Registration registration", span="114-114"];
m2_48 [cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", span="109-109"];
m2_33 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Entry lambda expression", span="89-89"];
m2_16 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="reference.Target == kernel || !reference.IsAlive", span="54-54"];
m2_15 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Entry lambda expression", span="54-54"];
m2_17 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Exit lambda expression", span="54-54"];
m2_34 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="!reference.IsAlive", span="89-89"];
m2_35 [cluster="lambda expression", file="ExtensionsForAssembly.cs", label="Exit lambda expression", span="89-89"];
m2_49 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_42 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m2_7 [cluster="System.WeakReference.WeakReference(object)", file="ExtensionsForAssembly.cs", label="Entry System.WeakReference.WeakReference(object)", span="0-0"];
m2_65 [cluster="System.Threading.ReaderWriterLock.ReaderWriterLock()", file="ExtensionsForAssembly.cs", label="Entry System.Threading.ReaderWriterLock.ReaderWriterLock()", span="0-0"];
m2_18 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="Entry Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", span="61-61"];
m2_20 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="var registration = GetRegistrationForType(this.GetType())", span="64-64"];
m2_19 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="bool requiresCleanup = false", span="63-63"];
m2_21 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="registration.KernelLock.AcquireReaderLock(Timeout.Infinite)", span="65-65"];
m2_22 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="registration.Kernels", span="69-69"];
m2_28 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="RemoveKernels(registration, registration.Kernels.Where(reference => !reference.IsAlive))", span="89-89"];
m2_27 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label=requiresCleanup, span="87-87"];
m2_25 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="action(kernel)", span="74-74"];
m2_26 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="requiresCleanup = true", span="78-78"];
m2_23 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="var kernel = weakReference.Target as IKernel", span="71-71"];
m2_24 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="kernel != null", span="72-72"];
m2_29 [cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", file="ExtensionsForAssembly.cs", label="Exit Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IKernel>)", span="61-61"];
m2_61 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ExtensionsForAssembly.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_6 [cluster="System.Threading.ReaderWriterLock.AcquireWriterLock(int)", file="ExtensionsForAssembly.cs", label="Entry System.Threading.ReaderWriterLock.AcquireWriterLock(int)", span="0-0"];
m2_68 [file="ExtensionsForAssembly.cs", label="Ninject.GlobalKernelRegistration", span=""];
m2_67 [file="ExtensionsForAssembly.cs", label="Ninject.IKernel", span=""];
m2_69 [file="ExtensionsForAssembly.cs", label="Ninject.GlobalKernelRegistration.Registration", span=""];
m4_9 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="IKernel.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="41-41"];
m4_14 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="23-23"];
m4_15 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="IKernel kernel = new StandardKernel()", span="25-25"];
m4_16 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="kernel.Bind<Shield>().ToSelf()", span="27-27"];
m4_17 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="kernel.Bind<ShieldColor>().ToConstant(ShieldColor.Blue)", span="28-28"];
m4_18 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="var shield = kernel.Get<Shield>()", span="30-30"];
m4_19 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="shield.Should().NotBeNull()", span="31-31"];
m4_20 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="shield.Color.Should().Be(ShieldColor.Blue)", span="32-32"];
m4_21 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", file="IKernel.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenMapped()", span="23-23"];
m4_8 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="IKernel.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="38-38"];
m4_22 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="IKernel.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="107-107"];
m4_23 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="37-37"];
m4_24 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="IKernel kernel = new StandardKernel()", span="39-39"];
m4_25 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="kernel.Bind<Shield>().ToSelf().WithConstructorArgument(''color'', ShieldColor.Orange)", span="41-41"];
m4_26 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="var shield = kernel.Get<Shield>()", span="43-43"];
m4_27 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="shield.Should().NotBeNull()", span="44-44"];
m4_28 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="shield.Color.Should().Be(ShieldColor.Orange)", span="45-45"];
m4_29 [cluster="Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", file="IKernel.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.SpecificValueShouldBeUsedWhenSupplied()", span="37-37"];
m4_31 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", span="50-50"];
m4_32 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="IKernel kernel = new StandardKernel()", span="52-52"];
m4_33 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="kernel.Bind<Shield>().ToSelf()", span="54-54"];
m4_34 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="kernel.Bind<KiteShield>().ToSelf()", span="55-55"];
m4_35 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="var shield1 = kernel.Get<Shield>()", span="57-57"];
m4_36 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="var shield2 = kernel.Get<KiteShield>()", span="58-58"];
m4_37 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="shield1.Should().NotBeNull()", span="60-60"];
m4_38 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", color=red, community=0, file="IKernel.cs", label="1: shield1.Color.Should().Be(ShieldColor.Red)", span="61-61"];
m4_39 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="shield2.Should().NotBeNull()", span="63-63"];
m4_40 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="shield2.Color.Should().Be(ShieldColor.Orange)", span="64-64"];
m4_41 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", file="IKernel.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValuesShouldNotInflunceInjectionsToOtherTypes()", span="50-50"];
m4_13 [cluster="Unk.Be", file="IKernel.cs", label="Entry Unk.Be", span=""];
m4_30 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", file="IKernel.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithConstructorArgument(string, object)", span="43-43"];
m4_7 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="IKernel.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="45-45"];
m4_10 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="IKernel.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m4_12 [cluster="Unk.NotBeNull", file="IKernel.cs", label="Entry Unk.NotBeNull", span=""];
m4_0 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="Entry Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="10-10"];
m4_1 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="IKernel kernel = new StandardKernel()", span="12-12"];
m4_2 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="kernel.Bind<Shield>().ToSelf()", span="14-14"];
m4_3 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="var shield = kernel.Get<Shield>()", span="16-16"];
m4_4 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="shield.Should().NotBeNull()", span="17-17"];
m4_5 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="shield.Color.Should().Be(ShieldColor.Red)", span="18-18"];
m4_6 [cluster="Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", file="IKernel.cs", label="Exit Ninject.Tests.Integration.DefaultParameterTests.DefaultValueShouldBeUsedWhenNoneSupplied()", span="10-10"];
m4_11 [cluster="Unk.Should", file="IKernel.cs", label="Entry Unk.Should", span=""];
m5_11 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="28-28"];
m5_12 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="var request = new Request(typeof(TwoWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="30-30"];
m5_13 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="31-31"];
m5_14 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="28-28"];
m5_65 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="91-91"];
m5_66 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayPropertyFoo>().ToSelf().InSingletonScope()", span="93-93"];
m5_67 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayPropertyBar>().ToSelf().InSingletonScope()", span="94-94"];
m5_68 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayPropertyBaz>().ToSelf().InSingletonScope()", span="95-95"];
m5_69 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="91-91"];
m5_17 [cluster="Unk.DoesNotThrow", file="IModuleLoader.cs", label="Entry Unk.DoesNotThrow", span=""];
m5_21 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="IModuleLoader.cs", label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="317-317"];
m5_25 [cluster="Unk.>", file="IModuleLoader.cs", label="Entry Unk.>", span=""];
m5_30 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="43-43"];
m5_31 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", color=red, community=0, file="IModuleLoader.cs", label="1: kernel.Bind<TwoWayPropertyFoo>().ToSelf().InSingletonScope()", span="45-45"];
m5_32 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", color=red, community=0, file="IModuleLoader.cs", label="1: kernel.Bind<TwoWayPropertyBar>().ToSelf().InSingletonScope()", span="46-46"];
m5_33 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="43-43"];
m5_88 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", span="139-139"];
m5_89 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", span="139-139"];
m5_10 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="IModuleLoader.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="165-165"];
m5_8 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="IModuleLoader.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m5_15 [cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="IModuleLoader.cs", label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="93-93"];
m5_22 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="35-35"];
m5_23 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", color=red, community=0, file="IModuleLoader.cs", label="0: Assert.Throws<ActivationException>(() => kernel.Get<TwoWayConstructorFoo>())", span="37-37"];
m5_24 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="35-35"];
m5_40 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="56-56"];
m5_41 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="var foo = kernel.Get<TwoWayPropertyFoo>()", span="58-58"];
m5_42 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="var bar = kernel.Get<TwoWayPropertyBar>()", span="59-59"];
m5_43 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="foo.Bar.ShouldBeSameAs(bar)", span="61-61"];
m5_44 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="bar.Foo.ShouldBeSameAs(foo)", span="62-62"];
m5_45 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="56-56"];
m5_4 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="21-21"];
m5_5 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="kernel.Bind<TwoWayConstructorFoo>().ToSelf().InSingletonScope()", span="23-23"];
m5_6 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="kernel.Bind<TwoWayConstructorBar>().ToSelf().InSingletonScope()", span="24-24"];
m5_7 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="21-21"];
m5_0 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", span="13-13"];
m5_1 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="IModuleLoader.cs", label="kernel = new StandardKernel()", span="15-15"];
m5_2 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", span="13-13"];
m5_59 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="83-83"];
m5_60 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="IModuleLoader.cs", label="Assert.Throws<ActivationException>(() => kernel.Get<ThreeWayConstructorFoo>())", span="85-85"];
m5_61 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="83-83"];
m5_86 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="124-124"];
m5_87 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="124-124"];
m5_47 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="68-68"];
m5_48 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayConstructorFoo>().ToSelf().InSingletonScope()", span="70-70"];
m5_49 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayConstructorBar>().ToSelf().InSingletonScope()", span="71-71"];
m5_50 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="kernel.Bind<ThreeWayConstructorBaz>().ToSelf().InSingletonScope()", span="72-72"];
m5_51 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="68-68"];
m5_3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="IModuleLoader.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m5_29 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="IModuleLoader.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m5_46 [cluster="Unk.ShouldBeSameAs", file="IModuleLoader.cs", label="Entry Unk.ShouldBeSameAs", span=""];
m5_84 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", span="119-119"];
m5_85 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", span="119-119"];
m5_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="IModuleLoader.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m5_73 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="101-101"];
m5_19 [cluster="lambda expression", file="IModuleLoader.cs", label="kernel.Resolve(request)", span="31-31"];
m5_18 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="31-31"];
m5_20 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="31-31"];
m5_26 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="37-37"];
m5_27 [cluster="lambda expression", color=red, community=0, file="IModuleLoader.cs", label="1: kernel.Get<TwoWayConstructorFoo>()", span="37-37"];
m5_28 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="37-37"];
m5_37 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="52-52"];
m5_38 [cluster="lambda expression", file="IModuleLoader.cs", label="kernel.Get<TwoWayPropertyFoo>()", span="52-52"];
m5_39 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="52-52"];
m5_57 [cluster="lambda expression", file="IModuleLoader.cs", label="kernel.Resolve(request)", span="79-79"];
m5_56 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="79-79"];
m5_58 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="79-79"];
m5_62 [cluster="lambda expression", file="IModuleLoader.cs", label="Entry lambda expression", span="85-85"];
m5_63 [cluster="lambda expression", file="IModuleLoader.cs", label="kernel.Get<ThreeWayConstructorFoo>()", span="85-85"];
m5_64 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="85-85"];
m5_74 [cluster="lambda expression", file="IModuleLoader.cs", label="kernel.Get<ThreeWayPropertyFoo>()", span="101-101"];
m5_75 [cluster="lambda expression", file="IModuleLoader.cs", label="Exit lambda expression", span="101-101"];
m5_52 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="76-76"];
m5_53 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="var request = new Request(typeof(ThreeWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="78-78"];
m5_54 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="79-79"];
m5_55 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="76-76"];
m5_76 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="105-105"];
m5_77 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="var foo = kernel.Get<ThreeWayPropertyFoo>()", span="107-107"];
m5_78 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="var bar = kernel.Get<ThreeWayPropertyBar>()", span="108-108"];
m5_80 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="foo.Bar.ShouldBeSameAs(bar)", span="111-111"];
m5_82 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="baz.Foo.ShouldBeSameAs(foo)", span="113-113"];
m5_79 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="var baz = kernel.Get<ThreeWayPropertyBaz>()", span="109-109"];
m5_81 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="bar.Baz.ShouldBeSameAs(baz)", span="112-112"];
m5_83 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="105-105"];
m5_90 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", span="144-144"];
m5_91 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", span="144-144"];
m5_70 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="99-99"];
m5_71 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Assert.DoesNotThrow(() => kernel.Get<ThreeWayPropertyFoo>())", span="101-101"];
m5_72 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="99-99"];
m5_92 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="149-149"];
m5_93 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="149-149"];
m5_34 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="50-50"];
m5_35 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Assert.DoesNotThrow(() => kernel.Get<TwoWayPropertyFoo>())", span="52-52"];
m5_36 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="IModuleLoader.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="50-50"];
m5_16 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="IModuleLoader.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_94 [file="IModuleLoader.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext", span=""];
m5_95 [file="IModuleLoader.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", span=""];
m5_96 [file="IModuleLoader.cs", label=request, span=""];
m5_97 [file="IModuleLoader.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", span=""];
m5_98 [file="IModuleLoader.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", span=""];
m5_99 [file="IModuleLoader.cs", label=request, span=""];
m5_100 [file="IModuleLoader.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", span=""];
m6_0 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IModuleLoaderPlugin.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="38-38"];
m6_1 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="IModuleLoaderPlugin.cs", label="Exit Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="38-38"];
m8_0 [cluster="Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", file="INinjectModule.cs", label="Entry Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", span="27-27"];
m8_1 [cluster="Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", file="INinjectModule.cs", label="Exit Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", span="27-27"];
m10_19 [cluster="Unk.Any", file="KernelBase.cs", label="Entry Unk.Any", span=""];
m10_48 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveProperyForValueInjection(Ninject.Activation.IRequest, string)", file="KernelBase.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveProperyForValueInjection(Ninject.Activation.IRequest, string)", span="171-171"];
m10_44 [cluster="object.GetType()", file="KernelBase.cs", label="Entry object.GetType()", span="0-0"];
m10_47 [cluster="Ninject.ActivationException.ActivationException(string)", file="KernelBase.cs", label="Entry Ninject.ActivationException.ActivationException(string)", span="35-35"];
m10_21 [cluster="Ninject.Injection.PropertyInjector.Invoke(object, object)", file="KernelBase.cs", label="Entry Ninject.Injection.PropertyInjector.Invoke(object, object)", span="14-14"];
m10_0 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="KernelBase.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="53-53"];
m10_1 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="KernelBase.cs", label="InjectorFactory = injectorFactory", span="55-55"];
m10_2 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", file="KernelBase.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.PropertyInjectionStrategy(Ninject.Injection.IInjectorFactory)", span="53-53"];
m10_18 [cluster="Ninject.Planning.IPlan.GetAll<TDirective>()", file="KernelBase.cs", label="Entry Ninject.Planning.IPlan.GetAll<TDirective>()", span="52-52"];
m10_33 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="91-91"];
m10_34 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="var properties = reference.Instance.GetType().GetProperties( Flags )", span="93-93"];
m10_35 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label=propertyValues, span="94-94"];
m10_39 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="throw new ActivationException(ExceptionFormatter.CouldNotResolveProperyForValueInjection(context.Request, propertyName));", span="102-102"];
m10_41 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="object value = GetValue(context, target.Target)", span="105-105"];
m10_42 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="target.Injector(reference.Instance, value)", span="106-106"];
m10_37 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", color=green, community=0, file="KernelBase.cs", label="1: var propertyInfo = properties\r\n					.Where(property => string.Equals(property.Name, propertyName, StringComparison.Ordinal))\r\n					.FirstOrDefault()", span="97-99"];
m10_36 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", color=green, community=0, file="KernelBase.cs", label="1: string propertyName = propertyValue.Name", span="96-96"];
m10_38 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", color=green, community=0, file="KernelBase.cs", label="1: propertyInfo == null", span="101-101"];
m10_40 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="var target = new PropertyInjectionDirective( propertyInfo, InjectorFactory.Create( propertyInfo ) )", span="104-104"];
m10_43 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", file="KernelBase.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.AssignProperyOverrides(Ninject.Activation.IContext, Ninject.Activation.InstanceReference, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>)", span="91-91"];
m10_16 [cluster="Unk.Where", file="KernelBase.cs", label="Entry Unk.Where", span=""];
m10_15 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="KernelBase.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m10_3 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="64-64"];
m10_4 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=green, community=0, file="KernelBase.cs", label="1: Ensure.ArgumentNotNull(context, ''context'')", span="66-66"];
m10_5 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="Ensure.ArgumentNotNull(reference, ''reference'')", span="67-67"];
m10_6 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="var propertyValues = context.Parameters.Where(parameter => parameter is PropertyValue)", span="69-69"];
m10_8 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="context.Plan.GetAll<PropertyInjectionDirective>()", span="72-72"];
m10_11 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="object value = GetValue(context, directive.Target)", span="78-78"];
m10_12 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="directive.Injector(reference.Instance, value)", span="79-79"];
m10_13 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=red, community=0, file="KernelBase.cs", label="1: AssignProperyOverrides( context, reference, propertyValues )", span="82-82"];
m10_7 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="IEnumerable<string> parameterNames = propertyValues.Select(parameter => parameter.Name)", span="70-70"];
m10_10 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="parameterNames.Any(name => string.Equals(name, propertyInjectionDirective))", span="75-75"];
m10_9 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=green, community=0, file="KernelBase.cs", label="1: PropertyInjectionDirective propertyInjectionDirective = directive", span="74-74"];
m10_14 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="KernelBase.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="64-64"];
m10_49 [cluster="PropertyInjectionDirective.cstr", file="KernelBase.cs", label="Entry PropertyInjectionDirective.cstr", span=""];
m10_45 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="KernelBase.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m10_60 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="KernelBase.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m10_64 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="121-121"];
m10_23 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="69-69"];
m10_26 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="70-70"];
m10_30 [cluster="lambda expression", file="KernelBase.cs", label="string.Equals(name, propertyInjectionDirective)", span="75-75"];
m10_29 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="75-75"];
m10_24 [cluster="lambda expression", file="KernelBase.cs", label="parameter is PropertyValue", span="69-69"];
m10_25 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="69-69"];
m10_27 [cluster="lambda expression", file="KernelBase.cs", label="parameter.Name", span="70-70"];
m10_28 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="70-70"];
m10_31 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="75-75"];
m10_52 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="1: string.Equals(property.Name, propertyName, StringComparison.Ordinal)", span="98-98"];
m10_51 [cluster="lambda expression", file="KernelBase.cs", label="Entry lambda expression", span="98-98"];
m10_53 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="98-98"];
m10_65 [cluster="lambda expression", color=green, community=0, file="KernelBase.cs", label="2: p.Name == target.Name", span="121-121"];
m10_66 [cluster="lambda expression", file="KernelBase.cs", label="Exit lambda expression", span="121-121"];
m10_54 [cluster="string.Equals(string, string, System.StringComparison)", file="KernelBase.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m10_46 [cluster="Unk.FirstOrDefault", file="KernelBase.cs", label="Entry Unk.FirstOrDefault", span=""];
m10_20 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="KernelBase.cs", label="Entry Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="116-116"];
m10_55 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", color=green, community=0, file="KernelBase.cs", label="1: Ensure.ArgumentNotNull(context, ''context'')", span="118-118"];
m10_56 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", color=green, community=0, file="KernelBase.cs", label="1: Ensure.ArgumentNotNull(target, ''target'')", span="119-119"];
m10_57 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", color=green, community=0, file="KernelBase.cs", label="1: var parameter = context.Parameters.OfType<PropertyValue>().Where(p => p.Name == target.Name).SingleOrDefault()", span="121-121"];
m10_58 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", color=green, community=0, file="KernelBase.cs", label="1: return parameter != null ? parameter.GetValue(context) : target.ResolveWithin(context);", span="122-122"];
m10_59 [cluster="Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="KernelBase.cs", label="Exit Ninject.Activation.Strategies.PropertyInjectionStrategy.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="116-116"];
m10_17 [cluster="Unk.Select", file="KernelBase.cs", label="Entry Unk.Select", span=""];
m10_63 [cluster="Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", file="KernelBase.cs", label="Entry Ninject.Planning.Targets.ITarget.ResolveWithin(Ninject.Activation.IContext)", span="54-54"];
m10_62 [cluster="Unk.GetValue", file="KernelBase.cs", label="Entry Unk.GetValue", span=""];
m10_32 [cluster="object.Equals(object, object)", file="KernelBase.cs", label="Entry object.Equals(object, object)", span="0-0"];
m10_22 [cluster="Unk.AssignProperyOverrides", file="KernelBase.cs", label="Entry Unk.AssignProperyOverrides", span=""];
m10_50 [cluster="Unk.Create", file="KernelBase.cs", label="Entry Unk.Create", span=""];
m10_61 [cluster="Unk.SingleOrDefault", file="KernelBase.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_67 [file="KernelBase.cs", label="Ninject.Activation.Strategies.PropertyInjectionStrategy", span=""];
m10_68 [file="KernelBase.cs", label=propertyInjectionDirective, span=""];
m10_69 [file="KernelBase.cs", label=propertyName, span=""];
m10_70 [file="KernelBase.cs", label="Ninject.Planning.Targets.ITarget", span=""];
m11_24 [cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="81-81"];
m11_10 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="ModuleLoader.cs", label="1: fileGroups", span="71-71"];
m11_33 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", span="54-54"];
m11_39 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=red, community=0, file="ModuleLoader.cs", label="0: warrior.SecretWeapon.ShouldNotBeNull()", span="62-62"];
m11_42 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=red, community=0, file="ModuleLoader.cs", label="0: warrior.UltraSecretWeapon.ShouldBeInstanceOf(typeof(ShortSword))", span="65-65"];
m11_43 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", span="54-54"];
m11_44 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", color=green, community=0, file="ModuleLoader.cs", label="1: Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", span="70-70"];
m11_45 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", color=red, community=0, file="ModuleLoader.cs", label="0: var warrior = this.kernel.Get<UltraSpecialNinja>()", span="72-72"];
m11_49 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", color=red, community=0, file="ModuleLoader.cs", label="2: warrior.UltraSecretWeapon.ShouldBeNull()", span="77-77"];
m11_34 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: this.kernel.Settings.InjectNonPublic = true", span="56-56"];
m11_35 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: var warrior = this.kernel.Get<UltraSpecialNinja>()", span="57-57"];
m11_36 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: warrior.ShouldNotBeNull()", span="59-59"];
m11_37 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.Weapon.ShouldNotBeNull()", span="60-60"];
m11_41 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyExceptPrivateCanBeInjectedWhenEnabled()", color=red, community=0, file="ModuleLoader.cs", label="0: warrior.UltraSecretWeapon.ShouldNotBeNull()", span="64-64"];
m11_38 [cluster="System.IO.Path.GetDirectoryName(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m11_40 [cluster="System.IO.Path.GetFileName(string)", file="ModuleLoader.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m11_28 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="ModuleLoader.cs", label="warrior.Weapon.ShouldBeNull()", span="44-44"];
m11_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ModuleLoader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_0 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", span="52-52"];
m11_1 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Ensure.ArgumentNotNull(kernel, ''kernel'')", span="54-54"];
m11_2 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Ensure.ArgumentNotNull(plugins, ''plugins'')", span="55-55"];
m11_3 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Kernel = kernel", span="57-57"];
m11_4 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Plugins = plugins.ToList()", span="58-58"];
m11_5 [cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", file="ModuleLoader.cs", label="Exit Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernel, System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>)", span="52-52"];
m11_6 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ModuleLoader.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24"];
m11_23 [cluster="lambda expression", file="ModuleLoader.cs", label="Exit lambda expression", span="68-68"];
m11_8 [cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="65-65"];
m11_18 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.SecretWeapon.ShouldBeInstanceOf(typeof(Sword))", span="32-32"];
m11_47 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", color=red, community=0, file="ModuleLoader.cs", label="2: warrior.Weapon.ShouldBeNull()", span="75-75"];
m11_50 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", color=green, community=0, file="ModuleLoader.cs", label="0: Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy.NonPublicPropertiesWithMoreRestrictiveSetterInHierarchyCannotBeCreatedByDefault()", span="70-70"];
m11_51 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectory()", color=green, community=0, file="ModuleLoader.cs", label="0: Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", span=""];
m11_52 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectory()", color=green, community=0, file="ModuleLoader.cs", label="0: Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", span=""];
m11_53 [cluster="Ninject.Modules.ModuleLoader.GetBaseDirectory()", file="ModuleLoader.cs", label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", span=""];
m11_16 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.Weapon.ShouldBeInstanceOf(typeof(Shuriken))", span="30-30"];
m11_9 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", color=green, community=1, file="ModuleLoader.cs", label="0: Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m11_14 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: warrior.ShouldNotBeNull()", span="28-28"];
m11_13 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: var warrior = this.kernel.Get<SpecialNinja>()", span="26-26"];
m11_11 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", span="23-23"];
m11_12 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", color=green, community=0, file="ModuleLoader.cs", label="0: this.kernel.Settings.InjectNonPublic = true", span="25-25"];
m11_15 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.Weapon.ShouldNotBeNull()", span="29-29"];
m11_54 [cluster="string.IsNullOrEmpty(string)", file="ModuleLoader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_22 [cluster="lambda expression", color=green, community=0, file="ModuleLoader.cs", label="3: GetFilesMatchingPattern(pattern)", span="68-68"];
m11_30 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="ModuleLoader.cs", label="warrior.UltraSecretWeapon.ShouldBeNull()", span="46-46"];
m11_21 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", span="23-23"];
m11_25 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="ModuleLoader.cs", label="Entry Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", span="39-39"];
m11_31 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", color=green, community=0, file="ModuleLoader.cs", label="0: Exit Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", span="39-39"];
m11_32 [cluster="Unk.ShouldBeNull", file="ModuleLoader.cs", label="Entry Unk.ShouldBeNull", span=""];
m11_26 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", color=green, community=0, file="ModuleLoader.cs", label="1: var warrior = this.kernel.Get<SpecialNinja>()", span="41-41"];
m11_27 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="ModuleLoader.cs", label="warrior.ShouldNotBeNull()", span="43-43"];
m11_46 [cluster="System.IO.Path.IsPathRooted(string)", color=red, community=0, file="ModuleLoader.cs", label="0: Entry System.IO.Path.IsPathRooted(string)", span="0-0"];
m11_48 [cluster="System.IO.Path.Combine(string, string)", color=red, community=0, file="ModuleLoader.cs", label="2: Entry System.IO.Path.Combine(string, string)", span="0-0"];
m11_17 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.SecretWeapon.ShouldNotBeNull()", span="31-31"];
m11_19 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCanBeInjectedWhenEnabled()", file="ModuleLoader.cs", label="warrior.UltraSecretWeapon.ShouldNotBeNull()", span="33-33"];
m11_29 [cluster="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter.NonPublicPropertiesWithMoreRestrictiveSetterCannotBeCreatedByDefault()", file="ModuleLoader.cs", label="warrior.SecretWeapon.ShouldBeNull()", span="45-45"];
m11_20 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="ModuleLoader.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m11_55 [file="ModuleLoader.cs", label="Ninject.Modules.ModuleLoader", span=""];
m11_56 [file="ModuleLoader.cs", label=extension, span=""];
m12_0 [cluster="Ninject.Parameters.IParameter.GetValue(Ninject.Activation.IContext)", file="ModuleLoadExtensions.cs", label="Entry Ninject.Parameters.IParameter.GetValue(Ninject.Activation.IContext)", span="38-38"];
m12_1 [cluster="Ninject.Parameters.IParameter.GetValue(Ninject.Activation.IContext)", file="ModuleLoadExtensions.cs", label="Exit Ninject.Parameters.IParameter.GetValue(Ninject.Activation.IContext)", span="38-38"];
m15_3 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="NinjectSettings.cs", label="Exit Ninject.NinjectSettings.NinjectSettings()", span="40-40"];
m15_0 [cluster="Ninject.NinjectSettings.NinjectSettings()", file="NinjectSettings.cs", label="Entry Ninject.NinjectSettings.NinjectSettings()", span="40-40"];
m15_1 [cluster="Ninject.NinjectSettings.NinjectSettings()", color=red, community=0, file="NinjectSettings.cs", label="4: InjectAttribute = typeof(InjectAttribute)", span="42-42"];
m15_2 [cluster="Ninject.NinjectSettings.NinjectSettings()", color=red, community=0, file="NinjectSettings.cs", label="4: CachePruningIntervalMs = 1000", span="43-43"];
m15_4 [cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs", label="Ninject.NinjectSettings", span=""];
m15_5 [cluster="Ninject.NinjectSettings.Set(string, object)", color=green, community=0, file="NinjectSettings.cs", label="2: _values[key] = value", span="95-95"];
m15_6 [cluster="Ninject.NinjectSettings.Set(string, object)", file="NinjectSettings.cs", label="Exit Ninject.NinjectSettings.Set(string, object)", span="93-93"];
m16_7 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.PropertyInfo)", file="ReflectionInjectorFactory.cs", label="Entry Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.PropertyInfo)", span="44-44"];
m16_8 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.PropertyInfo)", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: return (target, value) => property.SetValue(target, value, null);", span="46-46"];
m16_9 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.PropertyInfo)", file="ReflectionInjectorFactory.cs", label="Exit Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.PropertyInfo)", span="44-44"];
m16_0 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="ReflectionInjectorFactory.cs", label="Entry Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="34-34"];
m16_1 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.ConstructorInfo)", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: return args => constructor.Invoke(args);", span="36-36"];
m16_2 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.ConstructorInfo)", file="ReflectionInjectorFactory.cs", label="Exit Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.ConstructorInfo)", span="34-34"];
m16_20 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="ReflectionInjectorFactory.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m16_6 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="ReflectionInjectorFactory.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m16_14 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.MethodInfo)", file="ReflectionInjectorFactory.cs", label="Entry Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.MethodInfo)", span="54-54"];
m16_15 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.MethodInfo)", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: return (target, args) => method.Invoke(target, args);", span="56-56"];
m16_16 [cluster="Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.MethodInfo)", file="ReflectionInjectorFactory.cs", label="Exit Ninject.Injection.ReflectionInjectorFactory.Create(System.Reflection.MethodInfo)", span="54-54"];
m16_17 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Entry lambda expression", span="56-56"];
m16_4 [cluster="lambda expression", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: constructor.Invoke(args)", span="36-36"];
m16_3 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Entry lambda expression", span="36-36"];
m16_5 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Exit lambda expression", span="36-36"];
m16_11 [cluster="lambda expression", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: property.SetValue(target, value, null)", span="46-46"];
m16_10 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Entry lambda expression", span="46-46"];
m16_12 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Exit lambda expression", span="46-46"];
m16_18 [cluster="lambda expression", color=green, community=0, file="ReflectionInjectorFactory.cs", label="1: method.Invoke(target, args)", span="56-56"];
m16_19 [cluster="lambda expression", file="ReflectionInjectorFactory.cs", label="Exit lambda expression", span="56-56"];
m16_13 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionInjectorFactory.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m16_21 [file="ReflectionInjectorFactory.cs", label="System.Reflection.ConstructorInfo", span=""];
m16_22 [file="ReflectionInjectorFactory.cs", label="System.Reflection.PropertyInfo", span=""];
m16_23 [file="ReflectionInjectorFactory.cs", label="System.Reflection.MethodInfo", span=""];
m17_6 [cluster="Ninject.Activation.Caching.ICache.Clear(object)", file="RequestScopeTests.cs", label="Entry Ninject.Activation.Caching.ICache.Clear(object)", span="50-50"];
m17_7 [cluster="Ninject.Activation.Caching.ICache.Clear(object)", file="RequestScopeTests.cs", label="Exit Ninject.Activation.Caching.ICache.Clear(object)", span="50-50"];
m17_2 [cluster="Ninject.Activation.Caching.ICache.TryGet(Ninject.Activation.IContext)", file="RequestScopeTests.cs", label="Entry Ninject.Activation.Caching.ICache.TryGet(Ninject.Activation.IContext)", span="38-38"];
m17_3 [cluster="Ninject.Activation.Caching.ICache.TryGet(Ninject.Activation.IContext)", file="RequestScopeTests.cs", label="Exit Ninject.Activation.Caching.ICache.TryGet(Ninject.Activation.IContext)", span="38-38"];
m17_0 [cluster="Ninject.Activation.Caching.ICache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="RequestScopeTests.cs", label="Entry Ninject.Activation.Caching.ICache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="31-31"];
m17_1 [cluster="Ninject.Activation.Caching.ICache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="RequestScopeTests.cs", label="Exit Ninject.Activation.Caching.ICache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="31-31"];
m17_4 [cluster="Ninject.Activation.Caching.ICache.Prune()", file="RequestScopeTests.cs", label="Entry Ninject.Activation.Caching.ICache.Prune()", span="43-43"];
m17_5 [cluster="Ninject.Activation.Caching.ICache.Prune()", file="RequestScopeTests.cs", label="Exit Ninject.Activation.Caching.ICache.Prune()", span="43-43"];
m17_8 [cluster="Ninject.Activation.Caching.ICache.Clear()", file="RequestScopeTests.cs", label="Entry Ninject.Activation.Caching.ICache.Clear()", span="55-55"];
m17_9 [cluster="Ninject.Activation.Caching.ICache.Clear()", file="RequestScopeTests.cs", label="Exit Ninject.Activation.Caching.ICache.Clear()", span="55-55"];
m20_0 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m20_1 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="_kernel = new StandardKernel()", span="12-12"];
m20_2 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="_kernel.Bind<IWarrior>()\r\n					.To<Ninja>()", span="13-14"];
m20_3 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="_kernel.Bind<IWeapon>()\r\n					.To<Sword>()", span="15-16"];
m20_4 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="_kernel.Bind<IWeapon>()\r\n					.To<Shuriken>()\r\n					.WhenTargetHas<InjectAttribute>()", span="17-19"];
m20_5 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", file="StandardScopeCallbacks.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.PropertyInjectionSelectorContext()", span="10-10"];
m20_29 [cluster="Unk.NotNull", file="StandardScopeCallbacks.cs", label="Entry Unk.NotNull", span=""];
m20_7 [cluster="Ninject.Syntax.IBindingRoot.Bind<T>()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Syntax.IBindingRoot.Bind<T>()", span="26-26"];
m20_30 [cluster="Unk.>", file="StandardScopeCallbacks.cs", label="Entry Unk.>", span=""];
m20_17 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="StandardScopeCallbacks.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m20_10 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="StandardScopeCallbacks.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m20_14 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=green, community=0, file="StandardScopeCallbacks.cs", label="1: base.Dispose(disposing)", span="29-29"];
m20_11 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="StandardScopeCallbacks.cs", label="disposing && !IsDisposed", span="24-24"];
m20_13 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=green, community=0, file="StandardScopeCallbacks.cs", label="1: _kernel = null", span="27-27"];
m20_12 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: _kernel.Dispose()", span="26-26"];
m20_15 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", file="StandardScopeCallbacks.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorContext.Dispose(bool)", span="22-22"];
m20_37 [cluster="Unk.Null", file="StandardScopeCallbacks.cs", label="Entry Unk.Null", span=""];
m20_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="StandardScopeCallbacks.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m20_9 [cluster="Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Syntax.IBindingWhenSyntax<T>.WhenTargetHas<TAttribute>()", span="124-124"];
m20_28 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="StandardScopeCallbacks.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m20_31 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="52-52"];
m20_32 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="var instance = _kernel.Get<Ninja>()", span="54-54"];
m20_33 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="Assert.NotNull(instance.Weapon)", span="56-56"];
m20_34 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="Assert.Null(instance.SecondaryWeapon)", span="57-57"];
m20_35 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="Assert.Null(instance.SecretWeaponAccessor)", span="58-58"];
m20_36 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", file="StandardScopeCallbacks.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCannotBeCreatedByDefault()", span="52-52"];
m20_16 [cluster="System.IDisposable.Dispose()", file="StandardScopeCallbacks.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m20_8 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
m20_18 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="StandardScopeCallbacks.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="36-36"];
m20_19 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: _kernel.Settings.InjectNonPublic = true", span="38-38"];
m20_20 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="StandardScopeCallbacks.cs", label="var instance = _kernel.Get<Ninja>()", span="39-39"];
m20_21 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: Assert.NotNull(instance.Weapon)", span="41-41"];
m20_22 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: Assert.IsType<Sword>(instance.Weapon)", span="42-42"];
m20_23 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="StandardScopeCallbacks.cs", label="Assert.NotNull(instance.SecondaryWeapon)", span="44-44"];
m20_24 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: Assert.IsType<Shuriken>(instance.SecondaryWeapon)", span="45-45"];
m20_25 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="1: Assert.NotNull(instance.SecretWeaponAccessor)", span="47-47"];
m20_26 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", color=green, community=0, file="StandardScopeCallbacks.cs", label="0: Assert.IsType<Shuriken>(instance.SecretWeaponAccessor)", span="48-48"];
m20_27 [cluster="Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", file="StandardScopeCallbacks.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionSelectorTests.NonPublicPropertiesCanBeInjectedWhenEnabled()", span="36-36"];
m20_38 [file="StandardScopeCallbacks.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", span=""];
m20_39 [file="StandardScopeCallbacks.cs", label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", span=""];
m1_23 -> m1_33  [color=green, key=0, style=solid];
m1_23 -> m1_38  [color=green, key=1, label=string, style=dashed];
m1_23 -> m1_7  [color=darkorchid, key=3, label="Parameter variable string pattern", style=bold];
m1_33 -> m1_34  [color=green, key=0, style=solid];
m1_33 -> m1_35  [color=green, key=2, style=dotted];
m1_33 -> m1_36  [color=green, key=2, style=dotted];
m1_33 -> m1_15  [color=green, key=2, style=dotted];
m1_33 -> m1_37  [color=green, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_23  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_8  [color=green, key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_36 -> m1_42  [color=green, key=0, style=solid];
m1_36 -> m1_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_42 -> m1_43  [color=green, key=0, style=solid];
m1_42 -> m1_44  [color=green, key=2, style=dotted];
m1_42 -> m1_45  [color=green, key=2, style=dotted];
m1_42 -> m1_46  [color=green, key=2, style=dotted];
m1_42 -> m1_47  [color=green, key=2, style=dotted];
m1_42 -> m1_48  [color=green, key=1, label="lambda expression", style=dashed];
m1_43 -> m1_36  [color=blue, key=0, style=bold];
m1_12 -> m1_8  [color=green, key=0, style=solid];
m1_12 -> m1_19  [color=green, key=2, style=dotted];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_6 -> m1_9  [color=red, key=0, style=solid];
m1_6 -> m1_10  [color=red, key=2, style=dotted];
m1_6 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_7 -> m1_11  [color=red, key=2, style=dotted];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_8 -> m1_6  [color=red, key=0, style=solid];
m1_8 -> m1_12  [color=red, key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=0, style=solid];
m1_9 -> m1_5  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_30  [color=green, key=1, label=extension, style=dashed];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_17  [color=green, key=2, style=dotted];
m1_10 -> m1_18  [color=green, key=2, style=dotted];
m1_10 -> m1_29  [color=green, key=1, label="lambda expression", style=dashed];
m1_10 -> m1_12  [color=green, key=1, label=plugin, style=dashed];
m1_46 -> m1_52  [color=green, key=0, style=solid];
m1_52 -> m1_53  [color=green, key=0, style=solid];
m1_52 -> m1_54  [color=green, key=1, label=baseDirectory, style=dashed];
m1_52 -> m1_59  [color=green, key=1, label=baseDirectory, style=dashed];
m1_53 -> m1_54  [color=green, key=0, style=solid];
m1_54 -> m1_47  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_54 -> m1_57  [key=2, style=dotted];
m1_54 -> m1_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_55 -> m1_46  [color=blue, key=0, style=bold];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [color=red, key=0, style=solid];
m1_14 -> m1_16  [color=red, key=2, style=dotted];
m1_14 -> m1_17  [color=red, key=2, style=dotted];
m1_13 -> m1_5  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [color=red, key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_30 -> m1_31  [color=green, key=0, style=solid];
m1_30 -> m1_32  [color=green, key=2, style=dotted];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [color=green, key=0, style=solid];
m1_38 -> m1_39  [color=green, key=0, style=solid];
m1_38 -> m1_40  [color=green, key=2, style=dotted];
m1_38 -> m1_41  [color=green, key=2, style=dotted];
m1_39 -> m1_37  [color=blue, key=0, style=bold];
m1_48 -> m1_49  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_51  [key=2, style=dotted];
m1_21 -> m1_23  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_50 -> m1_48  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_60 -> m1_58  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_25 -> m1_28  [key=2, style=dotted];
m1_26 -> m1_24  [color=blue, key=0, style=bold];
m1_18 -> m1_2  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m1_18 -> m1_8  [color=red, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m1_62 -> m1_30  [color=green, key=1, label=extension, style=dashed];
m1_63 -> m1_38  [color=green, key=1, label=string, style=dashed];
m1_61 -> m1_6  [color=darkseagreen4, key=1, label="Ninject.Modules.ModuleLoader", style=dashed];
m1_61 -> m1_2  [color=darkseagreen4, key=1, label="Ninject.Modules.ModuleLoader", style=dashed];
m1_65 -> m1_59  [color=darkseagreen4, key=1, label=baseDirectory, style=dashed];
m1_64 -> m1_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.WeakReference>", style=dashed];
m2_36 -> m2_39  [color=darkseagreen4, key=1, label="Ninject.GlobalKernelRegistration.Registration", style=dashed];
m2_37 -> m2_6  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_38 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_38  [key=0, style=solid];
m2_39 -> m2_42  [key=2, style=dotted];
m2_40 -> m2_36  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_3  [color=green, key=1, label="Ninject.IKernel", style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_5  [color=green, key=2, style=dotted];
m2_1 -> m2_3  [color=green, key=1, label=registration, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_6  [color=green, key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_7  [color=green, key=2, style=dotted];
m2_3 -> m2_8  [color=green, key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_53 -> m2_49  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_59  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_61  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_54 -> m2_58  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label=registration, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_50  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m2_9 -> m2_16  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m2_10 -> m2_5  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_12 -> m2_9  [color=blue, key=0, style=bold];
m2_60 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=2, style=dotted];
m2_64 -> m2_60  [color=blue, key=0, style=bold];
m2_5 -> m2_43  [key=0, style=solid];
m2_5 -> m2_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_5 -> m2_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_31  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=0, style=solid];
m2_45 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=2, style=dotted];
m2_46 -> m2_48  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_48 -> m2_5  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_33  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_25  [color=darkseagreen4, key=1, label="System.Action<Ninject.IKernel>", style=dashed];
m2_20 -> m2_5  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_30  [key=2, style=dotted];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label=registration, style=dashed];
m2_20 -> m2_28  [color=darkseagreen4, key=1, label=registration, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_27  [color=darkseagreen4, key=1, label=requiresCleanup, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_27  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_13  [key=2, style=dotted];
m2_28 -> m2_14  [key=2, style=dotted];
m2_28 -> m2_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_25 -> m2_22  [key=0, style=solid];
m2_25 -> m2_32  [key=2, style=dotted];
m2_26 -> m2_22  [key=0, style=solid];
m2_26 -> m2_27  [color=darkseagreen4, key=1, label=requiresCleanup, style=dashed];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_29 -> m2_18  [color=blue, key=0, style=bold];
m2_68 -> m2_20  [color=darkseagreen4, key=1, label="Ninject.GlobalKernelRegistration", style=dashed];
m2_68 -> m2_28  [color=darkseagreen4, key=1, label="Ninject.GlobalKernelRegistration", style=dashed];
m2_67 -> m2_16  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m2_69 -> m2_62  [color=darkseagreen4, key=1, label="Ninject.GlobalKernelRegistration.Registration", style=dashed];
m2_69 -> m2_63  [color=darkseagreen4, key=1, label="Ninject.GlobalKernelRegistration.Registration", style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_7  [key=2, style=dotted];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_15 -> m4_18  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_8  [key=2, style=dotted];
m4_16 -> m4_9  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_8  [key=2, style=dotted];
m4_17 -> m4_22  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_10  [key=2, style=dotted];
m4_18 -> m4_20  [color=darkseagreen4, key=1, label=shield, style=dashed];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_11  [key=2, style=dotted];
m4_19 -> m4_12  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_11  [key=2, style=dotted];
m4_20 -> m4_13  [key=2, style=dotted];
m4_21 -> m4_14  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_7  [key=2, style=dotted];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_8  [key=2, style=dotted];
m4_25 -> m4_9  [key=2, style=dotted];
m4_25 -> m4_30  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_10  [key=2, style=dotted];
m4_26 -> m4_28  [color=darkseagreen4, key=1, label=shield, style=dashed];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_11  [key=2, style=dotted];
m4_27 -> m4_12  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_11  [key=2, style=dotted];
m4_28 -> m4_13  [key=2, style=dotted];
m4_29 -> m4_23  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_7  [key=2, style=dotted];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_32 -> m4_36  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_8  [key=2, style=dotted];
m4_33 -> m4_9  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_8  [key=2, style=dotted];
m4_34 -> m4_9  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_10  [key=2, style=dotted];
m4_35 -> m4_37  [color=darkseagreen4, key=1, label=shield1, style=dashed];
m4_35 -> m4_38  [color=red, key=1, label=shield1, style=dashed];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_10  [key=2, style=dotted];
m4_36 -> m4_39  [color=darkseagreen4, key=1, label=shield2, style=dashed];
m4_36 -> m4_40  [color=darkseagreen4, key=1, label=shield2, style=dashed];
m4_37 -> m4_38  [color=red, key=0, style=solid];
m4_37 -> m4_11  [key=2, style=dotted];
m4_37 -> m4_12  [key=2, style=dotted];
m4_38 -> m4_39  [color=red, key=0, style=solid];
m4_38 -> m4_11  [color=red, key=2, style=dotted];
m4_38 -> m4_13  [color=red, key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_11  [key=2, style=dotted];
m4_39 -> m4_12  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_11  [key=2, style=dotted];
m4_40 -> m4_13  [key=2, style=dotted];
m4_41 -> m4_31  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_7  [key=2, style=dotted];
m4_1 -> m4_3  [color=darkseagreen4, key=1, label=kernel, style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_9  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_10  [key=2, style=dotted];
m4_3 -> m4_5  [color=darkseagreen4, key=1, label=shield, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_11  [key=2, style=dotted];
m4_4 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_13  [key=2, style=dotted];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_16  [key=2, style=dotted];
m5_12 -> m5_19  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_14 -> m5_11  [color=blue, key=0, style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_8  [key=2, style=dotted];
m5_66 -> m5_9  [key=2, style=dotted];
m5_66 -> m5_10  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_8  [key=2, style=dotted];
m5_67 -> m5_9  [key=2, style=dotted];
m5_67 -> m5_10  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_8  [key=2, style=dotted];
m5_68 -> m5_9  [key=2, style=dotted];
m5_68 -> m5_10  [key=2, style=dotted];
m5_69 -> m5_65  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [color=red, key=0, style=solid];
m5_31 -> m5_32  [color=red, key=0, style=solid];
m5_31 -> m5_8  [color=red, key=2, style=dotted];
m5_31 -> m5_9  [color=red, key=2, style=dotted];
m5_31 -> m5_10  [color=red, key=2, style=dotted];
m5_32 -> m5_33  [color=red, key=0, style=solid];
m5_32 -> m5_8  [color=red, key=2, style=dotted];
m5_32 -> m5_9  [color=red, key=2, style=dotted];
m5_32 -> m5_10  [color=red, key=2, style=dotted];
m5_33 -> m5_30  [color=blue, key=0, style=bold];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_88  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> m5_25  [color=red, key=2, style=dotted];
m5_23 -> m5_26  [color=red, key=1, label="lambda expression", style=dashed];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_29  [key=2, style=dotted];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label=foo, style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=foo, style=dashed];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_29  [key=2, style=dotted];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=bar, style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_46  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=2, style=dotted];
m5_45 -> m5_40  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_9  [key=2, style=dotted];
m5_6 -> m5_10  [key=2, style=dotted];
m5_7 -> m5_4  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_59 -> m5_60  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_25  [key=2, style=dotted];
m5_60 -> m5_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_61 -> m5_59  [color=blue, key=0, style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_86  [color=blue, key=0, style=bold];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_8  [key=2, style=dotted];
m5_48 -> m5_9  [key=2, style=dotted];
m5_48 -> m5_10  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_8  [key=2, style=dotted];
m5_49 -> m5_9  [key=2, style=dotted];
m5_49 -> m5_10  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_8  [key=2, style=dotted];
m5_50 -> m5_9  [key=2, style=dotted];
m5_50 -> m5_10  [key=2, style=dotted];
m5_51 -> m5_47  [color=blue, key=0, style=bold];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_84  [color=blue, key=0, style=bold];
m5_73 -> m5_74  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_29  [color=red, key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_29  [key=2, style=dotted];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_21  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_58 -> m5_56  [color=blue, key=0, style=bold];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_29  [key=2, style=dotted];
m5_64 -> m5_62  [color=blue, key=0, style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_29  [key=2, style=dotted];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_15  [key=2, style=dotted];
m5_53 -> m5_16  [key=2, style=dotted];
m5_53 -> m5_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_17  [key=2, style=dotted];
m5_54 -> m5_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_55 -> m5_52  [color=blue, key=0, style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_29  [key=2, style=dotted];
m5_77 -> m5_80  [color=darkseagreen4, key=1, label=foo, style=dashed];
m5_77 -> m5_82  [color=darkseagreen4, key=1, label=foo, style=dashed];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_29  [key=2, style=dotted];
m5_78 -> m5_80  [color=darkseagreen4, key=1, label=bar, style=dashed];
m5_78 -> m5_81  [color=darkseagreen4, key=1, label=bar, style=dashed];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_46  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_46  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_29  [key=2, style=dotted];
m5_79 -> m5_81  [color=darkseagreen4, key=1, label=baz, style=dashed];
m5_79 -> m5_82  [color=darkseagreen4, key=1, label=baz, style=dashed];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_46  [key=2, style=dotted];
m5_83 -> m5_76  [color=blue, key=0, style=bold];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_90  [color=blue, key=0, style=bold];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_17  [key=2, style=dotted];
m5_71 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_72 -> m5_70  [color=blue, key=0, style=bold];
m5_92 -> m5_93  [key=0, style=solid];
m5_93 -> m5_92  [color=blue, key=0, style=bold];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_17  [key=2, style=dotted];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_34  [color=blue, key=0, style=bold];
m5_94 -> m5_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext", style=dashed];
m5_95 -> m5_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_95 -> m5_6  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_95 -> m5_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_95 -> m5_19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_95 -> m5_23  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_95 -> m5_27  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m5_96 -> m5_19  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_97 -> m5_31  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_97 -> m5_32  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_97 -> m5_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_97 -> m5_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_97 -> m5_41  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_97 -> m5_42  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m5_98 -> m5_48  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_49  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_50  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_54  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_60  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_98 -> m5_63  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m5_99 -> m5_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m5_100 -> m5_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_67  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_68  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_74  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_77  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_78  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m5_100 -> m5_79  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>", style=dashed];
m10_33 -> m10_39  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_33 -> m10_41  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_33 -> m10_42  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_44  [key=2, style=dotted];
m10_34 -> m10_45  [key=2, style=dotted];
m10_34 -> m10_37  [color=green, key=1, label=properties, style=dashed];
m10_35 -> m10_36  [color=green, key=0, style=solid];
m10_35 -> m10_43  [key=0, style=solid];
m10_39 -> m10_43  [key=0, style=solid];
m10_39 -> m10_47  [key=2, style=dotted];
m10_39 -> m10_48  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_20  [key=2, style=dotted];
m10_42 -> m10_35  [key=0, style=solid];
m10_42 -> m10_21  [key=2, style=dotted];
m10_37 -> m10_38  [color=green, key=0, style=solid];
m10_37 -> m10_16  [color=green, key=2, style=dotted];
m10_37 -> m10_46  [color=green, key=2, style=dotted];
m10_37 -> m10_51  [color=green, key=1, label="lambda expression", style=dashed];
m10_37 -> m10_40  [color=green, key=1, label=propertyInfo, style=dashed];
m10_36 -> m10_37  [color=green, key=0, style=solid];
m10_36 -> m10_52  [color=green, key=1, label=propertyName, style=dashed];
m10_36 -> m10_39  [color=green, key=1, label=propertyName, style=dashed];
m10_38 -> m10_39  [color=green, key=0, style=solid];
m10_38 -> m10_40  [color=green, key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_49  [key=2, style=dotted];
m10_40 -> m10_50  [key=2, style=dotted];
m10_40 -> m10_42  [color=darkseagreen4, key=1, label=target, style=dashed];
m10_43 -> m10_33  [color=blue, key=0, style=bold];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> m10_5  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m10_3 -> m10_6  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_3 -> m10_8  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_3 -> m10_11  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_3 -> m10_12  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m10_3 -> m10_13  [color=red, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_15  [color=green, key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_15  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_16  [key=2, style=dotted];
m10_6 -> m10_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_6 -> m10_13  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_13  [color=red, key=0, style=solid];
m10_8 -> m10_18  [key=2, style=dotted];
m10_8 -> m10_11  [color=darkseagreen4, key=1, label=directive, style=dashed];
m10_8 -> m10_12  [color=darkseagreen4, key=1, label=directive, style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_20  [key=2, style=dotted];
m10_12 -> m10_8  [key=0, style=solid];
m10_12 -> m10_21  [key=2, style=dotted];
m10_13 -> m10_14  [color=red, key=0, style=solid];
m10_13 -> m10_22  [color=red, key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_17  [key=2, style=dotted];
m10_7 -> m10_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_7 -> m10_10  [color=darkseagreen4, key=1, label=parameterNames, style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_8  [key=0, style=solid];
m10_10 -> m10_19  [key=2, style=dotted];
m10_10 -> m10_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_30  [color=green, key=1, label=propertyInjectionDirective, style=dashed];
m10_9 -> m10_8  [color=darkorchid, key=3, label="Local variable Ninject.Planning.Directives.PropertyInjectionDirective propertyInjectionDirective", style=bold];
m10_14 -> m10_3  [color=blue, key=0, style=bold];
m10_64 -> m10_65  [color=green, key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_24 -> m10_25  [key=0, style=solid];
m10_25 -> m10_23  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [key=0, style=solid];
m10_28 -> m10_26  [color=blue, key=0, style=bold];
m10_31 -> m10_29  [color=blue, key=0, style=bold];
m10_52 -> m10_53  [color=green, key=0, style=solid];
m10_52 -> m10_54  [color=green, key=2, style=dotted];
m10_51 -> m10_52  [color=green, key=0, style=solid];
m10_53 -> m10_51  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [color=green, key=0, style=solid];
m10_66 -> m10_64  [color=blue, key=0, style=bold];
m10_20 -> m10_55  [color=green, key=0, style=solid];
m10_20 -> m10_56  [color=green, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m10_20 -> m10_57  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_20 -> m10_65  [color=green, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m10_20 -> m10_58  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m10_20 -> m10_3  [color=darkorchid, key=3, label="Parameter variable Ninject.Activation.IContext context", style=bold];
m10_20 -> m10_33  [color=darkorchid, key=3, label="Parameter variable Ninject.Activation.IContext context", style=bold];
m10_55 -> m10_56  [color=green, key=0, style=solid];
m10_55 -> m10_15  [color=green, key=2, style=dotted];
m10_56 -> m10_57  [color=green, key=0, style=solid];
m10_56 -> m10_15  [color=green, key=2, style=dotted];
m10_57 -> m10_58  [color=green, key=0, style=solid];
m10_57 -> m10_60  [color=green, key=2, style=dotted];
m10_57 -> m10_16  [color=green, key=2, style=dotted];
m10_57 -> m10_61  [color=green, key=2, style=dotted];
m10_57 -> m10_64  [color=green, key=1, label="lambda expression", style=dashed];
m10_58 -> m10_59  [color=green, key=0, style=solid];
m10_58 -> m10_62  [color=green, key=2, style=dotted];
m10_58 -> m10_63  [color=green, key=2, style=dotted];
m10_59 -> m10_20  [color=blue, key=0, style=bold];
m10_67 -> m10_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_67 -> m10_11  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_67 -> m10_13  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_67 -> m10_34  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_67 -> m10_40  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_67 -> m10_41  [color=darkseagreen4, key=1, label="Ninject.Activation.Strategies.PropertyInjectionStrategy", style=dashed];
m10_68 -> m10_30  [color=darkseagreen4, key=1, label=propertyInjectionDirective, style=dashed];
m10_69 -> m10_52  [color=green, key=1, label=propertyName, style=dashed];
m10_70 -> m10_65  [color=green, key=1, label="Ninject.Planning.Targets.ITarget", style=dashed];
m11_24 -> m11_9  [color=green, key=3, label="Parameter variable string pattern", style=bold];
m11_24 -> m11_34  [color=green, key=0, style=solid];
m11_24 -> m11_35  [color=green, key=1, label=string, style=dashed];
m11_10 -> m11_11  [color=green, key=0, style=solid];
m11_10 -> m11_15  [color=green, key=0, style=solid];
m11_10 -> m11_14  [color=green, key=1, label=fileGroup, style=dashed];
m11_33 -> m11_34  [key=0, style=solid];
m11_39 -> m11_42  [color=green, key=0, style=solid];
m11_39 -> m11_43  [color=green, key=1, label=string, style=dashed];
m11_39 -> m11_44  [color=green, key=1, label=string, style=dashed];
m11_39 -> m11_40  [color=red, key=0, style=solid];
m11_39 -> m11_23  [color=red, key=2, style=dotted];
m11_42 -> m11_43  [color=red, key=0, style=solid];
m11_42 -> m11_44  [color=green, key=0, style=solid];
m11_42 -> m11_46  [color=green, key=2, style=dotted];
m11_42 -> m11_24  [color=red, key=2, style=dotted];
m11_43 -> m11_43  [color=green, key=1, label=string, style=dashed];
m11_43 -> m11_44  [color=green, key=0, style=solid];
m11_43 -> m11_47  [color=green, key=2, style=dotted];
m11_43 -> m11_48  [color=green, key=2, style=dotted];
m11_43 -> m11_33  [color=blue, key=0, style=bold];
m11_44 -> m11_45  [color=red, key=0, style=solid];
m11_44 -> m11_49  [color=green, key=2, style=dotted];
m11_45 -> m11_39  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [color=red, key=0, style=solid];
m11_45 -> m11_22  [color=red, key=2, style=dotted];
m11_45 -> m11_47  [color=red, key=1, label=warrior, style=dashed];
m11_45 -> m11_48  [color=red, key=1, label=warrior, style=dashed];
m11_45 -> m11_49  [color=red, key=1, label=warrior, style=dashed];
m11_49 -> m11_50  [color=red, key=0, style=solid];
m11_49 -> m11_32  [color=red, key=2, style=dotted];
m11_34 -> m11_35  [color=green, key=0, style=solid];
m11_34 -> m11_38  [color=green, key=2, style=dotted];
m11_34 -> m11_39  [color=green, key=2, style=dotted];
m11_34 -> m11_36  [color=green, key=1, label=path, style=dashed];
m11_35 -> m11_36  [color=green, key=0, style=solid];
m11_35 -> m11_40  [color=green, key=2, style=dotted];
m11_35 -> m11_22  [key=2, style=dotted];
m11_35 -> m11_37  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_38  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_35 -> m11_39  [color=red, key=1, label=warrior, style=dashed];
m11_35 -> m11_41  [color=red, key=1, label=warrior, style=dashed];
m11_35 -> m11_42  [color=red, key=1, label=warrior, style=dashed];
m11_36 -> m11_37  [color=green, key=0, style=solid];
m11_36 -> m11_41  [color=green, key=2, style=dotted];
m11_36 -> m11_23  [key=2, style=dotted];
m11_37 -> m11_24  [color=blue, key=0, style=bold];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_23  [key=2, style=dotted];
m11_41 -> m11_42  [color=red, key=0, style=solid];
m11_41 -> m11_23  [color=red, key=2, style=dotted];
m11_38 -> m11_39  [color=red, key=0, style=solid];
m11_38 -> m11_24  [key=2, style=dotted];
m11_40 -> m11_41  [color=red, key=0, style=solid];
m11_40 -> m11_24  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_32  [key=2, style=dotted];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="Ninject.IKernel", style=dashed];
m11_0 -> m11_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>", style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Modules.IModuleLoaderPlugin>", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_7  [key=2, style=dotted];
m11_1 -> m11_8  [key=2, style=dotted];
m11_1 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_9  [key=2, style=dotted];
m11_2 -> m11_6  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_8  [key=2, style=dotted];
m11_3 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_5 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m11_6 -> m11_0  [color=blue, key=0, style=bold];
m11_23 -> m11_21  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_24  [key=2, style=dotted];
m11_47 -> m11_50  [color=green, key=0, style=solid];
m11_47 -> m11_48  [color=red, key=0, style=solid];
m11_47 -> m11_32  [color=red, key=2, style=dotted];
m11_50 -> m11_51  [color=green, key=0, style=solid];
m11_50 -> m11_52  [color=green, key=1, label=baseDirectory, style=dashed];
m11_50 -> m11_44  [color=blue, key=0, style=bold];
m11_51 -> m11_52  [color=green, key=0, style=solid];
m11_51 -> m11_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_51 -> m11_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PublicPropertyWithMoreRestrictiveSetterContext", style=dashed];
m11_52 -> m11_53  [color=green, key=0, style=solid];
m11_52 -> m11_54  [color=green, key=2, style=dotted];
m11_52 -> m11_48  [color=green, key=2, style=dotted];
m11_52 -> m11_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_52 -> m11_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_52 -> m11_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetter", style=dashed];
m11_53 -> m11_47  [color=blue, key=0, style=bold];
m11_53 -> m11_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m11_53 -> m11_35  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m11_53 -> m11_45  [color=red, key=1, label="Ninject.Tests.Integration.WhenInjectOnPublicPropertyWithMoreRestrictiveSetterInHierarchy", style=dashed];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_24  [key=2, style=dotted];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_9 -> m11_16  [color=green, key=2, style=dotted];
m11_9 -> m11_17  [color=green, key=2, style=dotted];
m11_9 -> m11_21  [color=green, key=1, label="lambda expression", style=dashed];
m11_9 -> m11_25  [color=green, key=1, label="lambda expression", style=dashed];
m11_14 -> m11_10  [color=green, key=0, style=solid];
m11_14 -> m11_20  [color=green, key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_23  [key=2, style=dotted];
m11_13 -> m11_10  [color=green, key=0, style=solid];
m11_13 -> m11_14  [color=green, key=0, style=solid];
m11_13 -> m11_22  [key=2, style=dotted];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_16  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_17  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_18  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_19  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_13 -> m11_20  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_11 -> m11_12  [color=green, key=0, style=solid];
m11_11 -> m11_31  [color=green, key=1, label=extension, style=dashed];
m11_12 -> m11_14  [color=green, key=1, label=plugin, style=dashed];
m11_12 -> m11_13  [color=green, key=0, style=solid];
m11_12 -> m11_18  [color=green, key=2, style=dotted];
m11_12 -> m11_19  [color=green, key=2, style=dotted];
m11_12 -> m11_30  [color=green, key=1, label="lambda expression", style=dashed];
m11_15 -> m11_8  [color=blue, key=0, style=bold];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_23  [key=2, style=dotted];
m11_22 -> m11_23  [color=green, key=0, style=solid];
m11_22 -> m11_24  [color=green, key=2, style=dotted];
m11_30 -> m11_31  [color=green, key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_21 -> m11_22  [color=green, key=0, style=solid];
m11_21 -> m11_11  [color=blue, key=0, style=bold];
m11_25 -> m11_26  [color=green, key=0, style=solid];
m11_31 -> m11_32  [color=green, key=0, style=solid];
m11_31 -> m11_33  [color=green, key=2, style=dotted];
m11_31 -> m11_25  [color=blue, key=0, style=bold];
m11_32 -> m11_30  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [color=green, key=0, style=solid];
m11_26 -> m11_28  [color=green, key=2, style=dotted];
m11_26 -> m11_29  [color=green, key=2, style=dotted];
m11_26 -> m11_22  [key=2, style=dotted];
m11_26 -> m11_30  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m11_27 -> m11_25  [color=blue, key=0, style=bold];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_23  [key=2, style=dotted];
m11_46 -> m11_47  [color=red, key=0, style=solid];
m11_46 -> m11_23  [color=red, key=2, style=dotted];
m11_48 -> m11_49  [color=red, key=0, style=solid];
m11_48 -> m11_32  [color=red, key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_23  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_23  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_32  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_24  [key=2, style=dotted];
m11_55 -> m11_12  [color=green, key=1, label="Ninject.Modules.ModuleLoader", style=dashed];
m11_55 -> m11_3  [color=darkseagreen4, key=1, label="Ninject.Modules.ModuleLoader", style=dashed];
m11_55 -> m11_4  [color=darkseagreen4, key=1, label="Ninject.Modules.ModuleLoader", style=dashed];
m11_56 -> m11_31  [color=green, key=1, label=extension, style=dashed];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m15_3 -> m15_0  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [color=red, key=0, style=solid];
m15_1 -> m15_2  [color=red, key=0, style=solid];
m15_1 -> m15_3  [color=green, key=2, style=dotted];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [color=red, key=0, style=solid];
m15_4 -> m15_5  [color=green, key=0, style=solid];
m15_4 -> m15_1  [color=green, key=1, label="Ninject.NinjectSettings", style=dashed];
m15_4 -> m15_2  [color=red, key=1, label="Ninject.NinjectSettings", style=dashed];
m15_5 -> m15_6  [color=green, key=0, style=solid];
m15_6 -> m15_4  [color=blue, key=0, style=bold];
m16_7 -> m16_8  [color=green, key=0, style=solid];
m16_7 -> m16_11  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_8 -> m16_9  [color=green, key=0, style=solid];
m16_8 -> m16_11  [color=green, key=1, label=object, style=dashed];
m16_9 -> m16_7  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [color=green, key=0, style=solid];
m16_0 -> m16_4  [color=green, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m16_1 -> m16_2  [color=green, key=0, style=solid];
m16_1 -> m16_4  [color=green, key=1, label="object[]", style=dashed];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_14 -> m16_15  [color=green, key=0, style=solid];
m16_14 -> m16_18  [color=green, key=1, label="System.Reflection.MethodInfo", style=dashed];
m16_15 -> m16_16  [color=green, key=0, style=solid];
m16_15 -> m16_18  [color=green, key=1, label=object, style=dashed];
m16_16 -> m16_14  [color=blue, key=0, style=bold];
m16_17 -> m16_18  [color=green, key=0, style=solid];
m16_4 -> m16_5  [color=green, key=0, style=solid];
m16_4 -> m16_6  [color=green, key=2, style=dotted];
m16_3 -> m16_4  [color=green, key=0, style=solid];
m16_5 -> m16_3  [color=blue, key=0, style=bold];
m16_11 -> m16_12  [color=green, key=0, style=solid];
m16_11 -> m16_13  [color=green, key=2, style=dotted];
m16_10 -> m16_11  [color=green, key=0, style=solid];
m16_12 -> m16_10  [color=blue, key=0, style=bold];
m16_18 -> m16_19  [color=green, key=0, style=solid];
m16_18 -> m16_20  [color=green, key=2, style=dotted];
m16_19 -> m16_17  [color=blue, key=0, style=bold];
m16_21 -> m16_4  [color=green, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m16_22 -> m16_11  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_23 -> m16_18  [color=green, key=1, label="System.Reflection.MethodInfo", style=dashed];
m17_6 -> m17_7  [key=0, style=solid];
m17_7 -> m17_6  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_4  [color=blue, key=0, style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_8  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_6  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_7  [key=2, style=dotted];
m20_2 -> m20_8  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_7  [key=2, style=dotted];
m20_3 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_7  [key=2, style=dotted];
m20_4 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_9  [key=2, style=dotted];
m20_5 -> m20_0  [color=blue, key=0, style=bold];
m20_10 -> m20_14  [color=green, key=1, label=bool, style=dashed];
m20_10 -> m20_11  [key=0, style=solid];
m20_14 -> m20_15  [color=green, key=0, style=solid];
m20_14 -> m20_17  [color=green, key=2, style=dotted];
m20_11 -> m20_14  [color=green, key=0, style=solid];
m20_11 -> m20_12  [color=green, key=0, style=solid];
m20_13 -> m20_14  [color=green, key=0, style=solid];
m20_12 -> m20_13  [color=green, key=0, style=solid];
m20_12 -> m20_16  [color=green, key=2, style=dotted];
m20_15 -> m20_10  [color=blue, key=0, style=bold];
m20_31 -> m20_32  [key=0, style=solid];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_28  [key=2, style=dotted];
m20_32 -> m20_34  [color=darkseagreen4, key=1, label=instance, style=dashed];
m20_32 -> m20_35  [color=darkseagreen4, key=1, label=instance, style=dashed];
m20_33 -> m20_29  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_37  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_37  [key=2, style=dotted];
m20_36 -> m20_31  [color=blue, key=0, style=bold];
m20_18 -> m20_19  [color=green, key=0, style=solid];
m20_19 -> m20_20  [color=green, key=0, style=solid];
m20_20 -> m20_21  [color=green, key=0, style=solid];
m20_20 -> m20_22  [color=green, key=1, label=instance, style=dashed];
m20_20 -> m20_24  [color=green, key=1, label=instance, style=dashed];
m20_20 -> m20_25  [color=green, key=1, label=instance, style=dashed];
m20_20 -> m20_26  [color=green, key=1, label=instance, style=dashed];
m20_20 -> m20_28  [key=2, style=dotted];
m20_20 -> m20_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m20_21 -> m20_22  [color=green, key=0, style=solid];
m20_21 -> m20_29  [color=green, key=2, style=dotted];
m20_22 -> m20_23  [color=green, key=0, style=solid];
m20_22 -> m20_30  [color=green, key=2, style=dotted];
m20_23 -> m20_24  [color=green, key=0, style=solid];
m20_23 -> m20_29  [key=2, style=dotted];
m20_24 -> m20_25  [color=green, key=0, style=solid];
m20_24 -> m20_30  [color=green, key=2, style=dotted];
m20_25 -> m20_26  [color=green, key=0, style=solid];
m20_25 -> m20_29  [color=green, key=2, style=dotted];
m20_26 -> m20_27  [color=green, key=0, style=solid];
m20_26 -> m20_30  [color=green, key=2, style=dotted];
m20_27 -> m20_18  [color=blue, key=0, style=bold];
m20_38 -> m20_14  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_12  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_13  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_38 -> m20_11  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorContext", style=dashed];
m20_39 -> m20_19  [color=green, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
m20_39 -> m20_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
m20_39 -> m20_32  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionSelectorTests", style=dashed];
}
