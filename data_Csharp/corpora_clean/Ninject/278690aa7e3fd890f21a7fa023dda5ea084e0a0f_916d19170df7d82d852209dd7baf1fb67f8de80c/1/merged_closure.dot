digraph  {
n0 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="Entry Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", span="23-23"];
n1 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="x == y", span="25-25"];
n4 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="var q = from func in funcs\r\n                    let xVal = func(x)\r\n                    where xVal != func(y)\r\n                    select xVal ? 1 : -1", span="39-42"];
n2 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="return 0;", span="27-27"];
n7 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n12 [cluster="lambda expression", label="b != null", span="33-33"];
n15 [cluster="lambda expression", label="b.IsConditional", span="34-34"];
n22 [cluster="lambda expression", label="!b.IsImplicit", span="36-36"];
n5 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="return q.FirstOrDefault();", span="46-46"];
n8 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n9 [cluster="Unk.func", label="Entry Unk.func", span=""];
n6 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", label="Exit Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", span="23-23"];
n10 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
n11 [cluster="lambda expression", label="Entry lambda expression", span="33-33"];
n13 [cluster="lambda expression", label="Exit lambda expression", span="33-33"];
n14 [cluster="lambda expression", label="Entry lambda expression", span="34-34"];
n16 [cluster="lambda expression", label="Exit lambda expression", span="34-34"];
n17 [cluster="lambda expression", label="Entry lambda expression", span="35-35"];
n19 [cluster="lambda expression", label="Exit lambda expression", span="35-35"];
n20 [cluster="System.Type.GetTypeInfo()", label="Entry System.Type.GetTypeInfo()", span="0-0"];
n21 [cluster="lambda expression", label="Entry lambda expression", span="36-36"];
n23 [cluster="lambda expression", label="Exit lambda expression", span="36-36"];
d3 [cluster="Ninject.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", color=green, community=0, label="var funcs = new List<Func<IBinding, bool>>\r\n                            {\r\n                                b => b != null,       // null bindings should never happen, but just in case\r\n                                b => b.IsConditional, // conditional bindings > unconditional\r\n                                b => !b.Service.GetTypeInfo().ContainsGenericParameters, // closed generics > open generics\r\n                                b => !b.IsImplicit,   // explicit bindings > implicit\r\n                            }", prediction=0, span="31-37"];
d18 [cluster="lambda expression", color=green, community=0, label="!b.Service.GetTypeInfo().ContainsGenericParameters", prediction=0, span="35-35"];
m0_10 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", span="32-32"];
m0_11 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", file="ExtensionsForMemberInfo.cs", label="var samurai = new Samurai(new Sword())", span="34-34"];
m0_12 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", file="ExtensionsForMemberInfo.cs", label="injector.Invoke(samurai, ''evildoer'')", span="35-35"];
m0_13 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", file="ExtensionsForMemberInfo.cs", label="Assert.True(samurai.IsBattleHardened)", span="36-36"];
m0_14 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", file="ExtensionsForMemberInfo.cs", label="Exit Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.CallsMethod()", span="32-32"];
m0_9 [cluster="Unk.NotNull", file="ExtensionsForMemberInfo.cs", label="Entry Unk.NotNull", span=""];
m0_5 [cluster="Ninject.Injection.Injectors.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Injection.Injectors.Linq.MethodInjector.MethodInjector(System.Reflection.MethodInfo)", span="7-7"];
m0_15 [cluster="Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Fakes.Samurai.Samurai(Ninject.Tests.Fakes.IWeapon)", span="23-23"];
m0_18 [cluster="Unk.True", file="ExtensionsForMemberInfo.cs", label="Entry Unk.True", span=""];
m0_24 [cluster="Unk.Equal", file="ExtensionsForMemberInfo.cs", label="Entry Unk.Equal", span=""];
m0_6 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated.CanGetCallback()", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated.CanGetCallback()", span="23-23"];
m0_7 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated.CanGetCallback()", file="ExtensionsForMemberInfo.cs", label="Assert.NotNull(injector.Callback)", span="25-25"];
m0_8 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated.CanGetCallback()", file="ExtensionsForMemberInfo.cs", label="Exit Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated.CanGetCallback()", span="23-23"];
m0_16 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m0_17 [cluster="Ninject.Injection.Injectors.Linq.MethodInjector.Invoke(object, params object[])", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Injection.Injectors.Linq.MethodInjector.Invoke(object, params object[])", span="9-9"];
m0_0 [cluster="Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", span="13-13"];
m0_1 [cluster="Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", file="ExtensionsForMemberInfo.cs", label="method = typeof(Samurai).GetMethod(''Attack'')", span="15-15"];
m0_2 [cluster="Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", file="ExtensionsForMemberInfo.cs", label="injector = new MethodInjector(method)", span="16-16"];
m0_3 [cluster="Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", file="ExtensionsForMemberInfo.cs", label="Exit Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext.MethodInjectorContext()", span="13-13"];
m0_4 [cluster="System.Type.GetMethod(string)", file="ExtensionsForMemberInfo.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m0_19 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", file="ExtensionsForMemberInfo.cs", label="Entry Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", span="40-40"];
m0_20 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", file="ExtensionsForMemberInfo.cs", label="var samurai = new Samurai(new Sword())", span="42-42"];
m0_21 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", file="ExtensionsForMemberInfo.cs", label="var result = injector.Invoke(samurai, ''evildoer'') as string", span="43-43"];
m0_22 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", file="ExtensionsForMemberInfo.cs", label="Assert.Equal(''Attacked evildoer with a sword'', result)", span="44-44"];
m0_23 [cluster="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", file="ExtensionsForMemberInfo.cs", label="Exit Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked.ReturnsValueFromMethod()", span="40-40"];
m0_25 [file="ExtensionsForMemberInfo.cs", label="Ninject.Tests.Unit.MethodInjectorTests.MethodInjectorContext", span=""];
m0_26 [file="ExtensionsForMemberInfo.cs", label="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated", span=""];
m0_27 [file="ExtensionsForMemberInfo.cs", label="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked", span=""];
m1_6 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="KernelBase.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m1_7 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="KernelBase.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m1_0 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="Entry Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", span="7-7"];
m1_1 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="Exception innerException = exception.InnerException", span="9-9"];
m1_2 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="FieldInfo stackTraceField = typeof(Exception).GetField(''_remoteStackTraceString'', BindingFlags.Instance | BindingFlags.NonPublic)", span="11-11"];
m1_3 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="stackTraceField.SetValue(innerException, innerException.StackTrace)", span="12-12"];
m1_4 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="throw innerException;", span="14-14"];
m1_5 [cluster="Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", file="KernelBase.cs", label="Exit Ninject.Syntax.ExtensionsForTargetInvocationException.RethrowInnerException(System.Reflection.TargetInvocationException)", span="7-7"];
d3 -> n12  [color=green, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
d3 -> n15  [color=green, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
d3 -> d18  [color=green, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
d3 -> n22  [color=green, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=samurai, style=dashed];
m0_26 -> m0_7  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsCreated", style=dashed];
m0_27 -> m0_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.MethodInjectorTests.WhenMethodInjectorIsInvoked", style=dashed];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=innerException, style=dashed];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=innerException, style=dashed];
}
