digraph  {
n0 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute<T>(System.Reflection.MemberInfo)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute<T>(System.Reflection.MemberInfo)", span="60-60"];
n1 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute<T>(System.Reflection.MemberInfo)", label="return member.HasAttribute(typeof(T));", span="62-62"];
n2 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute<T>(System.Reflection.MemberInfo)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute<T>(System.Reflection.MemberInfo)", span="60-60"];
n3 [cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="73-73"];
n4 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", span="73-73"];
n5 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="var propertyInfo = member as PropertyInfo", span="75-75"];
n7 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="return IsDefined(propertyInfo, type, true);", span="78-78"];
n8 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="return member.IsDefined(type, true);", span="89-89"];
n6 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="propertyInfo != null", span="76-76"];
n9 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.HasAttribute(System.Reflection.MemberInfo, System.Type)", span="73-73"];
n10 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", span="272-272"];
n11 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
n12 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetPropertyFromDeclaredType(System.Reflection.MemberInfo, System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetPropertyFromDeclaredType(System.Reflection.MemberInfo, System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", span="99-99"];
n13 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetPropertyFromDeclaredType(System.Reflection.MemberInfo, System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", label="return memberInfo.DeclaringType.GetProperty(\r\n                propertyDefinition.Name,\r\n                flags,\r\n                null,\r\n                propertyDefinition.PropertyType,\r\n                propertyDefinition.GetIndexParameters().Select(parameter => parameter.ParameterType).ToArray(),\r\n                null);", span="120-126"];
n14 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetPropertyFromDeclaredType(System.Reflection.MemberInfo, System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetPropertyFromDeclaredType(System.Reflection.MemberInfo, System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", span="99-99"];
n15 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
n16 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n17 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n18 [cluster="Unk.GetProperty", label="Entry Unk.GetProperty", span=""];
n19 [cluster="lambda expression", label="Entry lambda expression", span="125-125"];
n20 [cluster="lambda expression", label="parameter.ParameterType", span="125-125"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="125-125"];
n22 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", span="153-153"];
n23 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", label="var getMethod = propertyInfo.GetGetMethod(true)", span="156-156"];
n24 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", label="var setMethod = propertyInfo.GetSetMethod(true)", span="157-157"];
n27 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
n25 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", label="return (getMethod == null || getMethod.IsPrivate) && (setMethod == null || setMethod.IsPrivate);", span="162-162"];
n28 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
n26 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsPrivate(System.Reflection.PropertyInfo)", span="153-153"];
n29 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributesExtended(System.Reflection.MemberInfo, System.Type, bool)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributesExtended(System.Reflection.MemberInfo, System.Type, bool)", span="180-180"];
n30 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributesExtended(System.Reflection.MemberInfo, System.Type, bool)", label="return Attribute.GetCustomAttributes(member, attributeType, inherited);", span="183-183"];
n31 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributesExtended(System.Reflection.MemberInfo, System.Type, bool)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributesExtended(System.Reflection.MemberInfo, System.Type, bool)", span="180-180"];
n32 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n33 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", span="196-196"];
n34 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="var propertyMethod = property.GetGetMethod(true) ?? property.GetSetMethod(true)", span="200-200"];
n38 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="return propertyMethod.GetPropertyFromDeclaredType(property\r\n#if !WINRT\r\n                        , Flags\r\n#endif\r\n                        );", span="214-218"];
n35 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="propertyMethod != null", span="205-205"];
n36 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="propertyMethod = propertyMethod.GetParentDefinition(\r\n#if !WINRT\r\n                    Flags\r\n#endif\r\n                    )", span="207-211"];
n39 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="return null;", span="222-222"];
n37 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="propertyMethod != null", span="212-212"];
n41 [cluster="System.Reflection.MethodInfo.GetParentDefinition(System.Reflection.BindingFlags)", label="Entry System.Reflection.MethodInfo.GetParentDefinition(System.Reflection.BindingFlags)", span="225-225"];
n40 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.PropertyInfo)", span="196-196"];
n42 [cluster="System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", label="Entry System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", span="99-99"];
n43 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", span="225-225"];
n44 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", label="ParentDefinitionMethodInfo == null", span="261-261"];
n46 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", label="return (MethodInfo)ParentDefinitionMethodInfo.Invoke(method, flags, null, null, CultureInfo.InvariantCulture);", span="266-266"];
n45 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", label="return null;", span="263-263"];
n47 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetParentDefinition(System.Reflection.MethodInfo, System.Reflection.BindingFlags)", span="225-225"];
n48 [cluster="System.Reflection.MethodBase.Invoke(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", label="Entry System.Reflection.MethodBase.Invoke(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
n49 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="element.IsDefined(attributeType, false)", span="274-274"];
n51 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label=inherit, span="279-279"];
n52 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="!InternalGetAttributeUsage(attributeType).Inherited", span="281-281"];
n54 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="var info = GetParentDefinition(element)", span="286-286"];
n56 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="info.IsDefined(attributeType, false)", span="290-290"];
n50 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="return true;", span="276-276"];
n59 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="return false;", span="298-298"];
n53 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="return false;", span="283-283"];
n61 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", span="374-374"];
n55 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="info != null", span="287-287"];
n58 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="info = GetParentDefinition(info)", span="288-288"];
n57 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="return true;", span="292-292"];
n60 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.IsDefined(System.Reflection.PropertyInfo, System.Type, bool)", span="272-272"];
n62 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", span="307-307"];
n63 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label=inherit, span="309-309"];
n64 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="InternalGetAttributeUsage(attributeType).Inherited", span="311-311"];
n67 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="attributes.AddRange(propertyInfo.GetCustomAttributes(attributeType, false))", span="319-319"];
n68 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="var info = GetParentDefinition(propertyInfo)", span="320-320"];
n70 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="var customAttributes = info.GetCustomAttributes(attributeType, false)", span="324-324"];
n73 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="var result = Array.CreateInstance(attributeType, attributes.Count) as object[]", span="330-330"];
n76 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="return propertyInfo.GetCustomAttributes(attributeType, inherit);", span="340-340"];
n65 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="var attributes = new List<object>()", span="314-314"];
n66 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="var attributeUsages = new Dictionary<Type, bool>()", span="318-318"];
n78 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n71 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="AddAttributes(attributes, customAttributes, attributeUsages)", span="325-325"];
n74 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="Array.Copy(attributes.ToArray(), result, result.Length)", span="331-331"];
n79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n80 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
n81 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n69 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="info != null", span="321-321"];
n72 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="info = GetParentDefinition(info)", span="322-322"];
n82 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="Entry Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", span="344-344"];
n83 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n75 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="return result;", span="332-332"];
n84 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n85 [cluster="System.Array.Copy(System.Array, System.Array, int)", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
n77 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.GetCustomAttributes(System.Reflection.PropertyInfo, System.Type, bool)", span="307-307"];
n86 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label=customAttributes, span="359-359"];
n88 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="!attributeUsages.ContainsKey(type)", span="362-362"];
n89 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="attributeUsages[type] = InternalGetAttributeUsage(type).Inherited", span="364-364"];
n90 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="attributeUsages[type]", span="367-367"];
n91 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="attributes.Add(attribute)", span="369-369"];
n87 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="Type type = attribute.GetType()", span="361-361"];
n92 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.AddAttributes(System.Collections.Generic.List<object>, object[], System.Collections.Generic.Dictionary<System.Type, bool>)", span="344-344"];
n93 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n95 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n96 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", label="object[] customAttributes = type.GetCustomAttributes(typeof(AttributeUsageAttribute), true)", span="377-377"];
n97 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", label="return (AttributeUsageAttribute)customAttributes[0];", span="378-378"];
n98 [cluster="Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", label="Exit Ninject.Infrastructure.Language.ExtensionsForMemberInfo.InternalGetAttributeUsage(System.Type)", span="374-374"];
m0_7 [cluster="Unk.AddExecutionAssembly", file="MainActivity.cs", label="Entry Unk.AddExecutionAssembly", span=""];
m0_0 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="Entry Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17"];
m0_1 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="Add(Assembly.GetExecutingAssembly())", span="20-20"];
m0_3 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="base.OnCreate(bundle)", span="36-36"];
m0_2 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", color=red, community=0, file="MainActivity.cs", label="19: AddExecutionAssembly(typeof(ExceptionUtility).Assembly)", span="22-22"];
m0_4 [cluster="Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", file="MainActivity.cs", label="Exit Ninject.Android.Tests.MainActivity.OnCreate(Bundle)", span="17-17"];
m0_8 [cluster="Unk.OnCreate", file="MainActivity.cs", label="Entry Unk.OnCreate", span=""];
m0_5 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="MainActivity.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m0_6 [cluster="Unk.Add", file="MainActivity.cs", label="Entry Unk.Add", span=""];
m0_9 [file="MainActivity.cs", label="Ninject.Android.Tests.MainActivity", span=""];
m1_9 [cluster="Unk.ShouldBe", file="PropertyInjectionStrategy.cs", label="Entry Unk.ShouldBe", span=""];
m1_0 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="Entry Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="16-16"];
m1_1 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="var method = typeof(Dummy).GetProperty(''Foo'')", span="18-18"];
m1_2 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="PropertyInjector injector = delegate { }", span="19-19"];
m1_3 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="directive = new PropertyInjectionDirective(method, injector)", span="21-21"];
m1_4 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="directive.Target.Name.ShouldBe(''Foo'')", span="23-23"];
m1_5 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="directive.Target.Type.ShouldBe(typeof(int))", span="24-24"];
m1_6 [cluster="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", file="PropertyInjectionStrategy.cs", label="Exit Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated.CreatesTargetForProperty()", span="16-16"];
m1_7 [cluster="System.Type.GetProperty(string)", file="PropertyInjectionStrategy.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m1_10 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Entry lambda expression", span="19-19"];
m1_11 [cluster="lambda expression", file="PropertyInjectionStrategy.cs", label="Exit lambda expression", span="19-19"];
m1_8 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="PropertyInjectionStrategy.cs", label="Entry Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="38-38"];
m1_12 [file="PropertyInjectionStrategy.cs", label=object, span=""];
m1_13 [file="PropertyInjectionStrategy.cs", label=object, span=""];
m1_14 [file="PropertyInjectionStrategy.cs", label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", span=""];
m2_39 [cluster="Unk.Any", file="Selector.cs", label="Entry Unk.Any", span=""];
m2_35 [cluster="System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", file="Selector.cs", label="Entry System.Reflection.MemberInfo.GetPropertyFromDeclaredType(System.Reflection.PropertyInfo, System.Reflection.BindingFlags)", span="99-99"];
m2_49 [cluster="System.Reflection.PropertyInfo.IsPrivate()", file="Selector.cs", label="Entry System.Reflection.PropertyInfo.IsPrivate()", span="153-153"];
m2_43 [cluster="Unk.ShouldInject", file="Selector.cs", label="Entry Unk.ShouldInject", span=""];
m2_14 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="Entry Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", span="96-96"];
m2_15 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="Ensure.ArgumentNotNull(type, ''type'')", span="98-98"];
m2_17 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="properties.AddRange(\r\n                type.GetProperties(this.Flags)\r\n                       .Select(p => p.GetPropertyFromDeclaredType(p, this.Flags))\r\n                       .Where(p => this.InjectionHeuristics.Any(h => h.ShouldInject(p))))", span="102-105"];
m2_19 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="Type parentType = type\r\n#if WINRT\r\n                    .GetTypeInfo()\r\n#endif\r\n                    .BaseType", span="115-119"];
m2_21 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="properties.AddRange(this.GetPrivateProperties(type\r\n#if WINRT\r\n.GetTypeInfo()\r\n#endif\r\n                        .BaseType))", span="127-131"];
m2_16 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="List<PropertyInfo> properties = new List<PropertyInfo>()", span="99-99"];
m2_23 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="return properties;", span="136-136"];
m2_18 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="this.Settings.InjectParentPrivateProperties", span="113-113"];
m2_20 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="parentType != null", span="120-120"];
m2_22 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="parentType = parentType\r\n#if WINRT\r\n.GetTypeInfo()\r\n#endif\r\n                    .BaseType", span="121-125"];
m2_24 [cluster="Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", file="Selector.cs", label="Exit Ninject.Selection.Selector.SelectPropertiesForInjection(System.Type)", span="96-96"];
m2_29 [cluster="Unk.AddRange", file="Selector.cs", label="Entry Unk.AddRange", span=""];
m2_60 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="Selector.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m2_56 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="Selector.cs", label="Entry Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", span="157-157"];
m2_57 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="Selector.cs", label="Ensure.ArgumentNotNull(type, ''type'')", span="159-159"];
m2_58 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="Selector.cs", label="return type.GetMethods(Flags).Where(m => InjectionHeuristics.Any(h => h.ShouldInject(m)));", span="163-163"];
m2_59 [cluster="Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", file="Selector.cs", label="Exit Ninject.Selection.Selector.SelectMethodsForInjection(System.Type)", span="157-157"];
m2_28 [cluster="Unk.Where", file="Selector.cs", label="Entry Unk.Where", span=""];
m2_6 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="Selector.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m2_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Selector.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_26 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="Selector.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m2_30 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", file="Selector.cs", label="Entry Ninject.Selection.Selector.GetPrivateProperties(System.Type)", span="140-140"];
m2_44 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", file="Selector.cs", label="return type.GetProperties(this.Flags).Where(p => p.DeclaringType == type && p.IsPrivate())\r\n                .Where(p => this.InjectionHeuristics.Any(h => h.ShouldInject(p)));", span="143-144"];
m2_45 [cluster="Ninject.Selection.Selector.GetPrivateProperties(System.Type)", file="Selector.cs", label="Exit Ninject.Selection.Selector.GetPrivateProperties(System.Type)", span="140-140"];
m2_64 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="163-163"];
m2_32 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="104-104"];
m2_36 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="105-105"];
m2_33 [cluster="lambda expression", file="Selector.cs", label="p.GetPropertyFromDeclaredType(p, this.Flags)", span="104-104"];
m2_34 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="104-104"];
m2_37 [cluster="lambda expression", file="Selector.cs", label="this.InjectionHeuristics.Any(h => h.ShouldInject(p))", span="105-105"];
m2_41 [cluster="lambda expression", file="Selector.cs", label="h.ShouldInject(p)", span="105-105"];
m2_38 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="105-105"];
m2_40 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="105-105"];
m2_42 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="105-105"];
m2_47 [cluster="lambda expression", file="Selector.cs", label="p.DeclaringType == type && p.IsPrivate()", span="143-143"];
m2_46 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="143-143"];
m2_50 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="144-144"];
m2_48 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="143-143"];
m2_51 [cluster="lambda expression", file="Selector.cs", label="this.InjectionHeuristics.Any(h => h.ShouldInject(p))", span="144-144"];
m2_54 [cluster="lambda expression", file="Selector.cs", label="h.ShouldInject(p)", span="144-144"];
m2_52 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="144-144"];
m2_53 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="144-144"];
m2_55 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="144-144"];
m2_61 [cluster="lambda expression", file="Selector.cs", label="Entry lambda expression", span="163-163"];
m2_62 [cluster="lambda expression", file="Selector.cs", label="InjectionHeuristics.Any(h => h.ShouldInject(m))", span="163-163"];
m2_65 [cluster="lambda expression", file="Selector.cs", label="h.ShouldInject(m)", span="163-163"];
m2_63 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="163-163"];
m2_66 [cluster="lambda expression", file="Selector.cs", label="Exit lambda expression", span="163-163"];
m2_31 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Selector.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_27 [cluster="Unk.Select", file="Selector.cs", label="Entry Unk.Select", span=""];
m2_8 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="Selector.cs", label="Entry Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", span="76-76"];
m2_9 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="Selector.cs", label="Ensure.ArgumentNotNull(type, ''type'')", span="78-78"];
m2_10 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="Selector.cs", label="var constructors = type.GetConstructors( Flags )", span="81-81"];
m2_11 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="Selector.cs", label="return constructors.Length == 0 ? null : constructors;", span="82-82"];
m2_12 [cluster="Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", file="Selector.cs", label="Exit Ninject.Selection.Selector.SelectConstructorsForInjection(System.Type)", span="76-76"];
m2_67 [cluster="Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="Selector.cs", label="Entry Ninject.Selection.Heuristics.IInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", span="27-27"];
m2_13 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="Selector.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m2_0 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="Entry Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="62-62"];
m2_1 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="Ensure.ArgumentNotNull(constructorScorer, ''constructorScorer'')", span="64-64"];
m2_2 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="Ensure.ArgumentNotNull(injectionHeuristics, ''injectionHeuristics'')", span="65-65"];
m2_3 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="ConstructorScorer = constructorScorer", span="67-67"];
m2_4 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="InjectionHeuristics = injectionHeuristics.ToList()", span="68-68"];
m2_5 [cluster="Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", file="Selector.cs", label="Exit Ninject.Selection.Selector.Selector(Ninject.Selection.Heuristics.IConstructorScorer, System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>)", span="62-62"];
m2_68 [file="Selector.cs", label="Ninject.Selection.Selector", span=""];
m2_69 [file="Selector.cs", label="?", span=""];
m2_70 [file="Selector.cs", label="System.Type", span=""];
m2_71 [file="Selector.cs", label="?", span=""];
m2_72 [file="Selector.cs", label="System.Reflection.MethodInfo", span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkorchid, key=3, label="method methodReturn bool HasAttribute", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n10  [color=darkorchid, key=3, label="method methodReturn bool HasAttribute", style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n4 -> n8  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
n7 -> n9  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n9 -> n4  [color=blue, key=0, style=bold];
n10 -> n49  [key=0, style=solid];
n10 -> n51  [color=darkseagreen4, key=1, label=bool, style=dashed];
n10 -> n52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n10 -> n54  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n10 -> n56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n10 -> n5  [color=darkorchid, key=3, label="Parameter variable System.Reflection.PropertyInfo element", style=bold];
n10 -> n3  [color=darkorchid, key=3, label="Parameter variable System.Type attributeType", style=bold];
n10 -> n7  [color=darkorchid, key=3, label="method methodReturn bool IsDefined", style=bold];
n10 -> n53  [color=darkorchid, key=3, label="method methodReturn bool IsDefined", style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n13 -> n16  [key=2, style=dotted];
n13 -> n17  [key=2, style=dotted];
n13 -> n18  [key=2, style=dotted];
n13 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n12  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n19  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n23 -> n24  [key=0, style=solid];
n23 -> n27  [key=2, style=dotted];
n23 -> n25  [color=darkseagreen4, key=1, label=getMethod, style=dashed];
n24 -> n25  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n26 -> n22  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n33 -> n38  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n33 -> n12  [color=darkorchid, key=3, label="method methodReturn System.Reflection.PropertyInfo GetParentDefinition", style=bold];
n33 -> n39  [color=darkorchid, key=3, label="method methodReturn System.Reflection.PropertyInfo GetParentDefinition", style=bold];
n33 -> n10  [color=darkorchid, key=3, label="Parameter variable System.Reflection.PropertyInfo property", style=bold];
n33 -> n54  [color=darkorchid, key=3, label="Parameter variable System.Reflection.PropertyInfo property", style=bold];
n33 -> n62  [color=darkorchid, key=3, label="Parameter variable System.Reflection.PropertyInfo property", style=bold];
n33 -> n68  [color=darkorchid, key=3, label="Parameter variable System.Reflection.PropertyInfo property", style=bold];
n34 -> n35  [key=0, style=solid];
n34 -> n27  [key=2, style=dotted];
n34 -> n28  [key=2, style=dotted];
n34 -> n36  [color=darkseagreen4, key=1, label=propertyMethod, style=dashed];
n34 -> n41  [color=darkorchid, key=3, label="Local variable System.Reflection.MethodInfo propertyMethod", style=bold];
n38 -> n40  [key=0, style=solid];
n38 -> n42  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n41  [key=2, style=dotted];
n36 -> n36  [color=darkseagreen4, key=1, label=propertyMethod, style=dashed];
n36 -> n38  [color=darkseagreen4, key=1, label=propertyMethod, style=dashed];
n39 -> n40  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n41 -> n39  [color=darkorchid, key=3, label="method methodReturn System.Reflection.MethodInfo GetParentDefinition", style=bold];
n40 -> n33  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n45 -> n47  [key=0, style=solid];
n47 -> n43  [color=blue, key=0, style=bold];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n49 -> n11  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n59  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=0, style=solid];
n52 -> n61  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n33  [key=2, style=dotted];
n54 -> n56  [color=darkseagreen4, key=1, label=info, style=dashed];
n54 -> n58  [color=darkseagreen4, key=1, label=info, style=dashed];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=0, style=solid];
n56 -> n11  [key=2, style=dotted];
n50 -> n60  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n53 -> n60  [key=0, style=solid];
n61 -> n96  [key=0, style=solid];
n61 -> n10  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
n61 -> n62  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
n61 -> n87  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
n55 -> n56  [key=0, style=solid];
n55 -> n59  [key=0, style=solid];
n58 -> n55  [key=0, style=solid];
n58 -> n33  [key=2, style=dotted];
n58 -> n58  [color=darkseagreen4, key=1, label=info, style=dashed];
n57 -> n60  [key=0, style=solid];
n60 -> n10  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n62 -> n67  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n62 -> n68  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n62 -> n70  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n62 -> n73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n62 -> n76  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n76  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n76  [key=0, style=solid];
n64 -> n61  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n80  [key=2, style=dotted];
n67 -> n81  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n33  [key=2, style=dotted];
n68 -> n70  [color=darkseagreen4, key=1, label=info, style=dashed];
n68 -> n72  [color=darkseagreen4, key=1, label=info, style=dashed];
n70 -> n71  [key=0, style=solid];
n70 -> n80  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n83  [key=2, style=dotted];
n73 -> n75  [color=darkseagreen4, key=1, label=result, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n80  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n78  [key=2, style=dotted];
n65 -> n67  [color=darkseagreen4, key=1, label=attributes, style=dashed];
n65 -> n71  [color=darkseagreen4, key=1, label=attributes, style=dashed];
n65 -> n73  [color=darkseagreen4, key=1, label=attributes, style=dashed];
n65 -> n74  [color=darkseagreen4, key=1, label=attributes, style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n79  [key=2, style=dotted];
n66 -> n71  [color=darkseagreen4, key=1, label=attributeUsages, style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n82  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n84  [key=2, style=dotted];
n74 -> n85  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n73  [key=0, style=solid];
n72 -> n69  [key=0, style=solid];
n72 -> n33  [key=2, style=dotted];
n72 -> n72  [color=darkseagreen4, key=1, label=info, style=dashed];
n82 -> n86  [key=0, style=solid];
n82 -> n88  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, bool>", style=dashed];
n82 -> n89  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, bool>", style=dashed];
n82 -> n90  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, bool>", style=dashed];
n82 -> n91  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<object>", style=dashed];
n75 -> n77  [key=0, style=solid];
n77 -> n62  [color=blue, key=0, style=bold];
n86 -> n87  [key=0, style=solid];
n86 -> n92  [key=0, style=solid];
n86 -> n91  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=0, style=solid];
n88 -> n94  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n61  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n86  [key=0, style=solid];
n91 -> n86  [key=0, style=solid];
n91 -> n95  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n93  [key=2, style=dotted];
n87 -> n89  [color=darkseagreen4, key=1, label=type, style=dashed];
n87 -> n90  [color=darkseagreen4, key=1, label=type, style=dashed];
n92 -> n82  [color=blue, key=0, style=bold];
n96 -> n97  [key=0, style=solid];
n96 -> n80  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n98 -> n61  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=Bundle, style=dashed];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [color=red, key=0, style=solid];
m0_2 -> m0_7  [color=red, key=2, style=dotted];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_3  [color=darkseagreen4, key=1, label="Ninject.Android.Tests.MainActivity", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=method, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_12  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m1_2 -> m1_13  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m1_2 -> m1_2  [color=darkorchid, key=3, label="Local variable Ninject.Injection.PropertyInjector injector", style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_10  [color=blue, key=0, style=bold];
m1_14 -> m1_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m1_14 -> m1_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m1_14 -> m1_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.PropertyInjectionDirectiveTests.WhenDirectiveIsCreated", style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_14 -> m2_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_14 -> m2_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_14 -> m2_16  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> SelectPropertiesForInjection", style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_6  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_26  [key=2, style=dotted];
m2_17 -> m2_27  [key=2, style=dotted];
m2_17 -> m2_28  [key=2, style=dotted];
m2_17 -> m2_29  [key=2, style=dotted];
m2_17 -> m2_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_17 -> m2_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label=parentType, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_30  [key=2, style=dotted];
m2_21 -> m2_31  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> n78  [key=2, style=dotted];
m2_16 -> m2_21  [color=darkseagreen4, key=1, label=properties, style=dashed];
m2_16 -> m2_23  [color=darkseagreen4, key=1, label=properties, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_23  [key=0, style=solid];
m2_22 -> m2_20  [key=0, style=solid];
m2_22 -> m2_22  [color=darkseagreen4, key=1, label=parentType, style=dashed];
m2_24 -> m2_14  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_6  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=2, style=dotted];
m2_58 -> m2_28  [key=2, style=dotted];
m2_58 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_59 -> m2_56  [color=blue, key=0, style=bold];
m2_30 -> m2_44  [key=0, style=solid];
m2_30 -> m2_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_26  [key=2, style=dotted];
m2_44 -> m2_28  [key=2, style=dotted];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_44 -> m2_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_45 -> m2_30  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_41  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=2, style=dotted];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_48 -> m2_46  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_39  [key=2, style=dotted];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_43  [key=2, style=dotted];
m2_52 -> m2_50  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_39  [key=2, style=dotted];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=2, style=dotted];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_6  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_8  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="Ninject.Selection.Heuristics.IConstructorScorer", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Selection.Heuristics.IInjectionHeuristic>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_68 -> m2_3  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_4  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_10  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_17  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_33  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_37  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_18  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_21  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_44  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_51  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_58  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_68 -> m2_62  [color=darkseagreen4, key=1, label="Ninject.Selection.Selector", style=dashed];
m2_69 -> m2_41  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_70 -> m2_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_71 -> m2_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_72 -> m2_65  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
}
